(self["webpackChunkskote"] = self["webpackChunkskote"] || []).push([["src_app_pages_pages_module_ts"],{

/***/ 6861:
/*!*******************************************************!*\
  !*** ./src/app/core/services/all-services.service.ts ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AllServicesService: () => (/* binding */ AllServicesService)
/* harmony export */ });
/* harmony import */ var src_environments_environment__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/environments/environment */ 553);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ 1699);
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ 4860);
/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ngx-toastr */ 7548);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/common */ 6575);





class AllServicesService {
  constructor(http, toastr, datePipe) {
    this.http = http;
    this.toastr = toastr;
    this.datePipe = datePipe;
    this.checkboxStates = [];
    this.payload = {
      "token": "1a32e71a46317b9cc6feb7388238c95d"
    };
    this.apiUrl = src_environments_environment__WEBPACK_IMPORTED_MODULE_0__.environment_new.apiUrl;
    this.checkLists = src_environments_environment__WEBPACK_IMPORTED_MODULE_0__.environment_new.getCheckListData;
    this.checkBoxesKizin = src_environments_environment__WEBPACK_IMPORTED_MODULE_0__.environment_new.kiziCheckBoxesData;
    this.kiziCheckBoxesTimeLine = src_environments_environment__WEBPACK_IMPORTED_MODULE_0__.environment_new.kiziCheckBoxesTimeLine;
    this.materialdashboard = src_environments_environment__WEBPACK_IMPORTED_MODULE_0__.environment_new.materialdashboard;
  }
  updateCheckboxState(index, state, length) {
    this.checklist = length;
    if (this.checkboxStates.length !== length) {
      this.checkboxStates = new Array(length).fill(false);
    }
    this.checkboxStates[index] = state;
  }
  areAllChecked() {
    return this.checkboxStates.every(state => state) && this.checkboxStates.length == this.checklist;
  }
  clearCheckBoxes() {
    this.checkboxStates = [];
  }
  formatDate(date) {
    return this.datePipe.transform(date, 'yyyy-MM-dd');
  }
  AddTag(data) {
    let payload = {};
    payload["token"] = "1a32e71a46317b9cc6feb7388238c95d";
    payload["tag_name"] = data;
    payload["created_by"] = '1';
    return this.http.post(`${this.apiUrl}/tags/store`, payload);
  }
  UpdateTags(item_id, data) {
    let payload = {};
    payload["token"] = "1a32e71a46317b9cc6feb7388238c95d";
    payload["item_id"] = item_id;
    payload["tags"] = data.value.Tags;
    return this.http.post(`${this.apiUrl}/items/item_tags_update`, payload);
  }
  AddVendor(data, reasonValue) {
    let payload = {};
    payload["token"] = "1a32e71a46317b9cc6feb7388238c95d";
    payload["VendorName"] = data.value.VendorName;
    payload["VendorEmail"] = data.value.VendorEmail;
    payload["VendorContactNo"] = data.value.VendorContactNo;
    payload["VendorAddress"] = data.value.VendorAddress;
    // payload["status"] = data.value.Status.label;
    if (data.value.Status) {
      payload["status"] = data.value.Status;
    } else {
      payload["status"] = 'Active';
    }
    payload["ContactPerson"] = "";
    payload["Added_by"] = "1";
    payload["inactive_by"] = "1";
    payload["inactive_reason"] = reasonValue.reason2;
    console.log(payload);
    // return null;
    return this.http.post(`${this.apiUrl}/vendors/store`, payload);
  }
  AddCategoryfn(data, reasonValue) {
    let payload = {};
    console.log(reasonValue);
    payload["token"] = "1a32e71a46317b9cc6feb7388238c95d";
    payload["name"] = data.value.CategoryName;
    payload["category_shortcode"] = data.value.CategorySubCode;
    if (data.value.Status) {
      payload["status"] = data.value.Status;
    } else {
      payload["status"] = 'Active';
    }
    payload["added_by"] = "1";
    payload["inactive_by"] = "1";
    payload["inactive_reason"] = reasonValue.reason2;
    console.log(payload);
    // return null;
    return this.http.post(`${this.apiUrl}/categories/store`, payload);
  }
  AddSubCategoryfn(data, index, reasonValue) {
    let payload = {};
    payload["token"] = "1a32e71a46317b9cc6feb7388238c95d";
    payload["sub_category_name"] = data.value.SubCategoryName;
    payload["category_id"] = index;
    // payload["status"] = data.value.status;
    if (data.value.Status) {
      payload["status"] = data.value.status;
    } else {
      payload["status"] = 'Active';
    }
    payload["created_by"] = "1";
    payload["inactive_by"] = "1";
    payload["inactive_reason"] = reasonValue.reason2;
    console.log(payload);
    // return null;
    return this.http.post(`${this.apiUrl}/sub_categories/store`, payload);
  }
  Additemfn(data, image, reasonValue) {
    let formData = new FormData();
    let payload = {};
    console.log(data.value);
    console.log(image);
    payload["token"] = "1a32e71a46317b9cc6feb7388238c95d";
    payload["item_number"] = data.value.ItemNumber ? data.value.ItemNumber : '';
    payload["item_name"] = data.value.ItemName ? data.value.ItemName : '';
    payload["item_category_id"] = data.value.ItemCategory ? data.value.ItemCategory : '';
    payload["item_sub_category_id"] = data.value.subcategory ? data.value.subcategory : '';
    payload["item_barcode"] = data.value.Barcodes ? data.value.Barcodes : '';
    payload["item_procedure_id"] = data.value.procedure;
    payload["vendor_id"] = data.value.Vendor;
    payload["price"] = data.value.price;
    payload["size"] = data.value.size;
    payload["size_type"] = data.value.sizetype;
    payload["unit"] = data.value.Unit;
    payload["store_qty"] = data.value.storeqty;
    payload["cabinet_qty"] = data.value.CabinetQty;
    payload["expired_date"] = this.formatDate(data.value.ExpiryDate);
    payload["min_level"] = data.value.MinStoreQty;
    payload["cat_no"] = data.value.CatNo;
    payload["lot_no"] = data.value.LotNo;
    payload["item_description"] = data.value.Itemdescription;
    payload["item_notes"] = data.value.Itemnotes;
    payload["tag"] = data.value.Tags;
    // let x = data.value.item_image;
    // console.log(x);
    formData.append("token", "1a32e71a46317b9cc6feb7388238c95d");
    formData.append("item_number", data.value.ItemNumber ? data.value.ItemNumber : '');
    formData.append("item_name", data.value.ItemName ? data.value.ItemName : '');
    formData.append("item_category_id", data.value.ItemCategory ? data.value.ItemCategory : '');
    formData.append("item_sub_category_id", data.value.subcategory ? data.value.subcategory : '');
    formData.append("item_barcode", data.value.Barcodes ? data.value.Barcodes : '');
    let procedure = data.value.procedure;
    console.log('Procedure', procedure);
    console.log('TYpe of Procedure', typeof procedure);
    if (procedure != null) {
      procedure.forEach(item => formData.append("item_procedure_id[]", item));
    } else {
      formData.append("item_procedure_id", "");
    }
    // formData.append("item_procedure_id", stringArray);
    // payload["item_status"] = data.value.ItemStatus;
    if (data.value.ItemStatus) {
      payload["item_status"] = data.value.ItemStatus;
      formData.append("item_status", data.value.ItemStatus ? data.value.ItemStatus : '');
    } else {
      payload["item_status"] = 1;
      formData.append("item_status", "1");
    }
    formData.append("vendor_id", data.value.Vendor ? data.value.Vendor : '');
    formData.append("price", data.value.price ? data.value.price : '');
    formData.append("size", data.value.size ? data.value.size : '');
    formData.append("size_type", data.value.sizetype ? data.value.sizetype : '');
    formData.append("unit", data.value.Unit ? data.value.Unit : '');
    formData.append("store_qty", data.value.storeqty ? data.value.storeqty : '');
    formData.append("cabinet_qty", data.value.CabinetQty ? data.value.CabinetQty : '');
    formData.append("expired_date", data.value.ExpiryDate ? this.formatDate(data.value.ExpiryDate) : '');
    // formData.append("cabinet_qty",data.value.CabinetQty);
    formData.append("min_level", data.value.MinStoreQty ? data.value.MinStoreQty : '');
    formData.append("cat_no", data.value.CatNo ? data.value.CatNo : '');
    formData.append("lot_no", data.value.LotNo ? data.value.LotNo : '');
    formData.append("item_description", data.value.Itemdescription ? data.value.Itemdescription : '');
    formData.append("item_notes", data.value.Itemnotes ? data.value.Itemnotes : '');
    console.log('sub id', data.value.Tags);
    let tags = data.value.Tags;
    if (tags != null) {
      tags.forEach(element => {
        formData.append("tag[]", element);
      });
    } else {
      formData.append("tag", '');
    }
    formData.append("created_by", "1");
    formData.append("inactive_by", "1");
    formData.append("inactive_reason", reasonValue.reason2);
    // payload["expired_date"] = data.value.ExpiryDate;
    if (image) {
      formData.append("item_image", image, image.name);
    } else {
      formData.append("item_image", '');
    }
    // formData.append('item_image', x);
    payload["item_image"] = "";
    payload["created_by"] = '1';
    payload["image"] = formData;
    // console.log(payload);
    console.log(formData.get('item_image'));
    formData.forEach((value, key) => {
      const values = formData.getAll(key);
      console.log(`${key}: ${values}`);
      console.log('KEY', typeof key);
      console.log('VALUES', typeof values);
    });
    // return null;
    return this.http.post(`${this.apiUrl}/items/store`, formData);
  }
  UpdateItemfn(item_id, data, image, reasonValue) {
    let formData = new FormData();
    let payload = {};
    console.log("image", image);
    payload["token"] = "1a32e71a46317b9cc6feb7388238c95d";
    payload["item_number"] = data.value.ItemNumber;
    payload["item_name"] = data.value.ItemName;
    payload["item_id"] = item_id.id;
    payload["item_category_id"] = data.value.ItemCategory;
    payload["item_sub_category_id"] = data.value.subcategory;
    payload["item_barcode"] = data.value.Barcodes;
    payload["item_procedure_id"] = data.value.procedure;
    // payload["item_status"] = data.value.ItemStatus;
    if (data.value.ItemStatus) {
      payload["item_status"] = data.value.ItemStatus;
    } else {
      payload["item_status"] = 1;
    }
    payload["vendor_id"] = data.value.Vendor;
    payload["price"] = data.value.price;
    payload["size"] = data.value.size;
    payload["size_type"] = data.value.sizetype;
    payload["unit"] = data.value.Unit;
    payload["store_qty"] = data.value.storeqty;
    payload["cabinet_qty"] = data.value.CabinetQty;
    payload["expired_date"] = this.formatDate(data.value.ExpiryDate);
    // payload["expired_date"] = data.value.ExpiryDate;
    payload["min_level"] = data.value.MinStoreQty;
    payload["cat_no"] = data.value.CatNo;
    payload["lot_no"] = data.value.LotNo;
    payload["item_description"] = data.value.Itemdescription;
    payload["item_notes"] = data.value.Itemnotes;
    payload["tag"] = data.value.Tag;
    payload["image_url"] = '';
    payload["updated_by"] = '1';
    formData.append('token', '1a32e71a46317b9cc6feb7388238c95d');
    formData.append('item_number', data.value.ItemNumber ? data.value.ItemNumber : '');
    formData.append('item_name', data.value.ItemName ? data.value.ItemName : '');
    formData.append('item_id', item_id.id ? item_id.id : '');
    formData.append('item_category_id', data.value.ItemCategory ? data.value.ItemCategory : '');
    formData.append('item_sub_category_id', data.value.subcategory ? data.value.subcategory : '');
    formData.append('item_barcode', data.value.Barcodes ? data.value.Barcodes : '');
    let procedure = data.value.procedure;
    console.log('Procedure', procedure);
    console.log('TYpe of Procedure', typeof procedure);
    if (procedure != null) {
      procedure.forEach(item => formData.append("item_procedure_id[]", item));
    } else {
      formData.append("item_procedure_id", "");
    }
    if (data.value.ItemStatus) {
      formData.append('item_status', data.value.ItemStatus ? data.value.ItemStatus : '');
    } else {
      formData.append('item_status', '1');
    }
    formData.append('vendor_id', data.value.Vendor ? data.value.Vendor : '');
    formData.append('price', data.value.price ? data.value.price : '');
    formData.append('size', data.value.size ? data.value.size : '');
    formData.append('size_type', data.value.size_type ? data.value.size_type : '');
    formData.append('unit', data.value.Unit ? data.value.Unit : '');
    formData.append('store_qty', data.value.storeqty ? data.value.storeqty : '');
    formData.append('cabinet_qty', data.value.CabinetQty ? data.value.CabinetQty : '');
    formData.append('expired_date', data.value.ExpiryDate ? this.formatDate(data.value.ExpiryDate) : '');
    formData.append('min_level', data.value.MinStoreQty ? data.value.MinStoreQty : '');
    formData.append('cat_no', data.value.CatNo ? data.value.CatNo : '');
    formData.append('lot_no', data.value.LotNo ? data.value.LotNo : '');
    formData.append('item_description', data.value.Itemdescription ? data.value.Itemdescription : '');
    formData.append('item_notes', data.value.Itemnotes ? data.value.Itemnotes : '');
    let tags = data.value.Tags;
    console.log("Tags", tags);
    if (tags != null) {
      tags.forEach(element => {
        formData.append("tag[]", element);
      });
    } else {
      formData.append("tag", '');
    }
    if (image && image !== null) {
      if (image.name) {
        formData.append("item_image", image, image.name);
      } else {
        formData.append("item_image", image);
      }
    } else {
      // if(image){
      //   formData.append("item_image", image);
      // }
      // else{
      //   formData.append("item_image", '');
      // }
      formData.append("item_image", '');
    }
    formData.append('updated_by', "1");
    formData.append("inactive_by", "1");
    formData.append("inactive_reason", reasonValue.reason2);
    formData.forEach((value, key) => {
      const values = formData.getAll(key);
      console.log(`${key}: ${values}`);
      console.log('KEY', typeof key);
      console.log('VALUES', typeof values);
    });
    // return null;
    return this.http.post(`${this.apiUrl}/items/update`, formData);
  }
  BulkUpdate(Item_id, data) {
    let payload = {};
    payload["token"] = "1a32e71a46317b9cc6feb7388238c95d";
    payload["item_id"] = Item_id;
    payload["item_procedure_id"] = data.value.procedure;
    payload["tags"] = data.value.tags;
    payload["price"] = data.value.price;
    payload["store_qty"] = data.value.storeQuantity;
    payload["min_level"] = data.value.minLevel;
    payload["item_notes"] = data.value.notes;
    console.log(payload);
    // return null;
    return this.http.post(`${this.apiUrl}/items/item_bulk_edit`, payload);
  }
  ViewItem(data) {
    let payload = {};
    payload["token"] = "1a32e71a46317b9cc6feb7388238c95d";
    payload["item_id"] = data;
    return this.http.post(`${this.apiUrl}/items/show`, payload);
  }
  ViewVendor(data) {
    let payload = {};
    payload["token"] = "1a32e71a46317b9cc6feb7388238c95d";
    payload["vendor_id"] = data.id;
    return this.http.post(`${this.apiUrl}/vendors/show`, payload);
  }
  DeleteMultipleItem(data) {
    let payload = {};
    payload["token"] = "1a32e71a46317b9cc6feb7388238c95d";
    console.log(data);
    let indexArray = [];
    Object.keys(data).forEach(index => {
      console.log(data[index]);
      indexArray.push(data[index].id);
    });
    payload["item_id"] = indexArray;
    payload["deleted_by"] = "1";
    console.log(payload);
    return this.http.post(`${this.apiUrl}/items/destroy`, payload);
  }
  DeleteSingleItem(data, formData) {
    let payload = {};
    payload["token"] = "1a32e71a46317b9cc6feb7388238c95d";
    payload["item_id"] = [data];
    payload["deleted_by"] = "1";
    payload["deleted_reason"] = formData.value.reason2;
    return this.http.post(`${this.apiUrl}/items/destroy`, payload);
  }
  GetCategory(data) {
    let payload = {};
    payload["token"] = "1a32e71a46317b9cc6feb7388238c95d";
    payload["category_id"] = data.id;
    return this.http.post(`${this.apiUrl}/categories/show`, payload);
  }
  GetSubCategory(data) {
    let payload = {};
    payload["token"] = "1a32e71a46317b9cc6feb7388238c95d";
    payload["sub_category_id"] = data;
    return this.http.post(`${this.apiUrl}/sub_categories/show`, payload);
  }
  GetAllSubCategory() {
    let payload = {};
    payload["token"] = "1a32e71a46317b9cc6feb7388238c95d";
    return this.http.post(`${this.apiUrl}/sub_categories/index`, payload);
  }
  EditCategory(data, category_id, reasonValue) {
    let payload = {};
    payload["token"] = "1a32e71a46317b9cc6feb7388238c95d";
    console.log(data);
    console.log(category_id);
    payload["category_id"] = category_id;
    payload["name"] = data.value.CategoryName;
    payload["category_shortcode"] = data.value.CategorySubCode;
    // payload["status"] = data.value.Status;
    let Status = data.value.Status;
    if (Status.length > 0) {
      payload["status"] = data.value.Status;
    } else {
      payload["status"] = 'Active';
    }
    payload["updated_by"] = "1";
    payload["inactive_by"] = "1";
    payload["inactive_reason"] = reasonValue.reason2;
    // return null;
    return this.http.post(`${this.apiUrl}/categories/update`, payload);
  }
  EditSubCategory(data, category_id, sub_category_index, reasonValue) {
    let payload = {};
    payload["token"] = "1a32e71a46317b9cc6feb7388238c95d";
    payload["sub_category_id"] = sub_category_index;
    payload["sub_category_name"] = data.value.SubCategoryName;
    payload["category_id"] = category_id;
    payload["status"] = data.value.status;
    console.log('Statats', data.value.status);
    let Status = data.value.status;
    if (Status.length > 0) {
      payload["status"] = data.value.status;
    } else {
      payload["status"] = 'Active';
    }
    payload["updated_by"] = "1";
    payload["inactive_by"] = "1";
    payload["inactive_reason"] = reasonValue.reason2;
    return this.http.post(`${this.apiUrl}/sub_categories/update`, payload);
  }
  EditVendor(data, vendor_id, reasonValue) {
    let payload = {};
    payload["token"] = "1a32e71a46317b9cc6feb7388238c95d";
    console.log(data);
    payload["vendor_id"] = vendor_id;
    payload["VendorName"] = data.value.VendorName;
    payload["VendorEmail"] = data.value.VendorEmail;
    payload["VendorContactNo"] = data.value.VendorContactNo;
    payload["VendorAddress"] = data.value.VendorAddress;
    // payload["status"] = data.value.Status.label;
    if (data.value.Status) {
      payload["status"] = data.value.Status;
    } else {
      payload["status"] = 'Active';
    }
    payload["ContactPerson"] = "";
    payload["updated_by"] = "1";
    payload["inactive_by"] = "";
    payload["inactive_reason"] = reasonValue.reason2;
    console.log(payload);
    // return null;
    return this.http.post(`${this.apiUrl}/vendors/update`, payload);
  }
  DeleteCategory(data, formData) {
    let payload = {};
    console.log(formData);
    payload["token"] = "1a32e71a46317b9cc6feb7388238c95d";
    payload["category_id"] = data;
    payload["deleted_by"] = "1";
    payload["deleted_reason"] = formData.value.reason2;
    console.log(payload);
    // return null;
    return this.http.post(`${this.apiUrl}/categories/destroy`, payload);
  }
  DeleteVendor(data, formData) {
    let payload = {};
    payload["token"] = "1a32e71a46317b9cc6feb7388238c95d";
    payload["vendor_id"] = data;
    payload["deleted_by"] = "1";
    payload["deleted_reason"] = formData.value.reason2;
    return this.http.post(`${this.apiUrl}/vendors/destroy`, payload);
  }
  DeleteSubCategory(data, formData) {
    let payload = {};
    console.log(formData);
    payload["token"] = "1a32e71a46317b9cc6feb7388238c95d";
    payload["sub_category_id"] = data;
    payload["deleted_by"] = "1";
    payload["deleted_reason"] = formData.value.reason2;
    console.log(payload);
    // return null;
    return this.http.post(`${this.apiUrl}/sub_categories/destroy`, payload);
  }
  ItemCategoryOptions() {
    let payload = {};
    payload["token"] = "1a32e71a46317b9cc6feb7388238c95d";
    return this.http.post(`${this.apiUrl}/categories/item_category`, payload);
  }
  ItemSubCategoryOptions(data) {
    let payload = {};
    payload["token"] = "1a32e71a46317b9cc6feb7388238c95d";
    payload["item_category_id"] = data;
    return this.http.post(`${this.apiUrl}/categories/item_sub_category`, payload);
  }
  VendorOptions() {
    let payload = {};
    payload["token"] = "1a32e71a46317b9cc6feb7388238c95d";
    return this.http.post(`${this.apiUrl}/vendors/item_vendor`, payload);
  }
  TagsOptions() {
    let payload = {};
    payload["token"] = "1a32e71a46317b9cc6feb7388238c95d";
    return this.http.post(`${this.apiUrl}/tags/item_tags`, payload);
  }
  ProcedureOptions() {
    let payload = {};
    payload["token"] = "1a32e71a46317b9cc6feb7388238c95d";
    return this.http.post(`${this.apiUrl}/procedures/index`, payload);
  }
  GetOverAllList() {
    let payload = {};
    payload["token"] = "1a32e71a46317b9cc6feb7388238c95d";
    return this.http.post(`${this.apiUrl}/categories/index`, payload);
  }
  GetSearchOverAllList(data) {
    let payload = {};
    payload["token"] = "1a32e71a46317b9cc6feb7388238c95d";
    payload["category_search"] = data;
    return this.http.post(`${this.apiUrl}/categories/index`, payload);
  }
  GetAllItemsGrid() {
    let payload = {};
    payload["token"] = "1a32e71a46317b9cc6feb7388238c95d";
    return this.http.post(`${this.apiUrl}/items/index`, payload);
  }
  GetItemUniqueList() {
    let payload = {};
    payload["token"] = "1a32e71a46317b9cc6feb7388238c95d";
    return this.http.post(`${this.apiUrl}/procedures/item_unique_list`, payload);
  }
  GetVendorList() {
    let payload = {};
    payload["token"] = "1a32e71a46317b9cc6feb7388238c95d";
    return this.http.post(`${this.apiUrl}/vendors/index`, payload);
  }
  SearchAllItemsGrid(data) {
    let payload = {};
    payload["token"] = "1a32e71a46317b9cc6feb7388238c95d";
    payload["item_category_id"] = data.value.category;
    payload["item_name"] = data.value.ItemName;
    payload["item_procedure_id"] = data.value.ProcedureSearch;
    payload["cabinet_qty"] = data.value.CabinetQty;
    payload["price"] = data.value.Price;
    payload["min_level"] = data.value.MinLevel;
    payload["store_qty"] = data.value.StoreQty;
    // payload[""] = data.value.QuantityAlert;
    payload["tag"] = data.value.Tags;
    payload["item_barcode"] = data.value.Barcode;
    payload["item_notes"] = data.value.Notes;
    return this.http.post(`${this.apiUrl}/items/index`, payload);
  }
  CloneItem(data) {
    let payload = {};
    console.log(data);
    let Itemid = [];
    data.forEach(element => {
      Itemid.push(element.id);
    });
    const itemIdAsString = Itemid.map(String);
    payload["token"] = "1a32e71a46317b9cc6feb7388238c95d";
    payload["item_id"] = itemIdAsString;
    return this.http.post(`${this.apiUrl}/items/item_clone`, payload);
  }
  MoveItem(Item_id, category_id, subCategory_id) {
    let payload = {};
    const itemIdAsString = Item_id.map(String);
    payload["token"] = "1a32e71a46317b9cc6feb7388238c95d";
    payload["item_id"] = itemIdAsString;
    payload["item_category_id"] = category_id;
    payload["item_sub_category_id"] = subCategory_id;
    console.log(payload);
    // return null;
    return this.http.post(`${this.apiUrl}/items/item_move`, payload);
  }
  SetItemAlert(Item_id, data) {
    let payload = {};
    const itemIdAsString = Item_id.map(String);
    payload["token"] = "1a32e71a46317b9cc6feb7388238c95d";
    payload["item_id"] = itemIdAsString;
    payload["vendor_id"] = null;
    payload["set_alert_type_id"] = data.value.set_alert_type;
    payload["min_level"] = data.value.min_level;
    payload["created_by"] = "1";
    console.log(payload);
    return this.http.post(`${this.apiUrl}/items/item_set_alert`, payload);
  }
  getItemsRecall() {
    let payload = {};
    payload["token"] = "1a32e71a46317b9cc6feb7388238c95d";
    return this.http.post(`${this.apiUrl}/items/item_recall`, payload);
  }
  getTrashItems() {
    let payload = {};
    payload["token"] = '1a32e71a46317b9cc6feb7388238c95d';
    return this.http.post(`${this.apiUrl}/items/trashed_items`, payload);
  }
  RestoreItems(items, vendor, category, subcategory) {
    let payload = {};
    payload["token"] = '1a32e71a46317b9cc6feb7388238c95d';
    payload["item_id"] = items;
    payload["vendor_id"] = vendor;
    payload["category_id"] = category;
    payload["subcategory_id"] = subcategory;
    payload["procedure_id"] = null;
    console.log(payload);
    // return null;
    return this.http.post(`${this.apiUrl}/items/restored_items`, payload);
  }
  GetNearExpiredItems() {
    let payload = {};
    payload["token"] = '1a32e71a46317b9cc6feb7388238c95d';
    return this.http.post(`${this.apiUrl}/items/near_expired_items`, payload);
  }
  GetBackToCabinet() {
    let payload = {};
    payload["token"] = '1a32e71a46317b9cc6feb7388238c95d';
    return this.http.post(`${this.apiUrl}/procedures/back_to_cabinet`, payload);
  }
  GetRefilltoCabinet() {
    let payload = {};
    payload["token"] = '1a32e71a46317b9cc6feb7388238c95d';
    return this.http.post(`${this.apiUrl}/items/item_refill_to_cabinet`, payload);
  }
  SearchNearItemsByDate(data) {
    let payload = {};
    payload["token"] = '1a32e71a46317b9cc6feb7388238c95d';
    payload["expired_date"] = data;
    return this.http.post(`${this.apiUrl}/items/near_expired_items`, payload);
  }
  SearchItemByCategory(Category_id, SubCategory_id) {
    let payload = {};
    payload["token"] = '1a32e71a46317b9cc6feb7388238c95d';
    payload["item_category_id"] = Category_id;
    payload["item_sub_category_id"] = SubCategory_id;
    return this.http.post(`${this.apiUrl}/items/items_category_search`, payload);
  }
  GetInactiveItems() {
    let payload = {};
    payload["token"] = '1a32e71a46317b9cc6feb7388238c95d';
    return this.http.post(`${this.apiUrl}/items/inactive_items`, payload);
  }
  ActivateAllItems(items, category, subcategory, vendor, procedure) {
    let payload = {};
    payload["token"] = '1a32e71a46317b9cc6feb7388238c95d';
    payload["item_id"] = items;
    payload["category_id"] = category;
    payload["sub_category_id"] = subcategory;
    payload["vendor_id"] = vendor;
    payload["procedure_id"] = null;
    console.log(payload);
    // return null;
    return this.http.post(`${this.apiUrl}/items/restored_inactive_items`, payload);
  }
  GetDamagedItems() {
    let payload = {};
    payload["token"] = '1a32e71a46317b9cc6feb7388238c95d';
    return this.http.post(`${this.apiUrl}/procedures/item_damaged`, payload);
  }
  GetWastedItems() {
    let payload = {};
    payload["token"] = '1a32e71a46317b9cc6feb7388238c95d';
    return this.http.post(`${this.apiUrl}/procedures/item_wasted`, payload);
  }
  GetLowStockItems() {
    let payload = {};
    payload["token"] = '1a32e71a46317b9cc6feb7388238c95d';
    return this.http.post(`${this.apiUrl}/items/item_low_stock`, payload);
  }
  GetAllHistroyItems() {
    let payload = {};
    payload["token"] = '1a32e71a46317b9cc6feb7388238c95d';
    return this.http.post(`${this.apiUrl}/procedures/item_history`, payload);
  }
  BulkUpdateQuantity(itemid, quantity) {
    let payload = {};
    payload["token"] = '1a32e71a46317b9cc6feb7388238c95d';
    payload["item_id"] = itemid;
    payload["quantity"] = quantity;
    return this.http.post(`${this.apiUrl}/items/item_quantity_update`, payload);
  }
  GetAllProcedureList() {
    let payload = {};
    payload["token"] = '1a32e71a46317b9cc6feb7388238c95d';
    return this.http.post(`${this.apiUrl}/procedures/patient_list`, payload);
  }
  GetSpecificPatientDetails(data) {
    let payload = {};
    payload["token"] = '1a32e71a46317b9cc6feb7388238c95d';
    payload["patient_id"] = data;
    return this.http.post(`${this.apiUrl}/procedures/patient_details`, payload);
  }
  GetAllPatientProcedureList() {
    let payload = {};
    payload["token"] = '1a32e71a46317b9cc6feb7388238c95d';
    return this.http.post(`${this.apiUrl}/procedures/patient_procedure_list`, payload);
  }
  GetSpecificPatientProcedureDetails(data) {
    let payload = {};
    payload["token"] = '1a32e71a46317b9cc6feb7388238c95d';
    payload["patient_id"] = data;
    return this.http.post(`${this.apiUrl}/procedures/patient_procedure_details`, payload);
  }
  SendPatientRequest(data, type, reason) {
    console.log('patient Details', data);
    let payload = {};
    payload["token"] = '1a32e71a46317b9cc6feb7388238c95d';
    payload["mrn_number"] = data.mrn_no;
    payload["patient_id"] = data.id;
    payload["procedure"] = data.procedure;
    payload["status"] = type;
    payload["accept_by"] = "1";
    payload["created_by"] = "1";
    payload["reason_note"] = reason.reason2;
    payload["reason_type"] = reason.reason1;
    return this.http.post(`${this.apiUrl}/procedures/patient_request`, payload);
  }
  GetVettingTypes() {
    let payload = {};
    payload["token"] = '1a32e71a46317b9cc6feb7388238c95d';
    return this.http.post(`${this.apiUrl}/procedures/vetting_types`, payload);
  }
  GetProtocolTypes() {
    let payload = {};
    payload["token"] = '1a32e71a46317b9cc6feb7388238c95d';
    return this.http.post(`${this.apiUrl}/procedures/protocol_types`, payload);
  }
  GetAddProtocolList() {
    let payload = {};
    payload["token"] = '1a32e71a46317b9cc6feb7388238c95d';
    return this.http.post(`${this.apiUrl}/procedures/add_your_protocol`, payload);
  }
  SendVettingRequest(PatientDetails, vettingnotes, vetttingid) {
    let payload = {};
    payload["token"] = '1a32e71a46317b9cc6feb7388238c95d';
    payload["mrn_number"] = PatientDetails.mrn_no;
    payload["patient_id"] = PatientDetails.id;
    payload["vetting_type_id"] = vetttingid;
    payload["vetting_notes"] = vettingnotes.VettingNotes;
    payload["vetting_by"] = "1";
    payload["created_by"] = "1";
    return this.http.post(`${this.apiUrl}/procedures/store_vetting_request`, payload);
  }
  SendProtocolRequest(PatientDetails, protocoleNotes, protocoleId) {
    let payload = {};
    payload["token"] = '1a32e71a46317b9cc6feb7388238c95d';
    payload["mrn_number"] = PatientDetails.mrn_no;
    payload["patient_id"] = PatientDetails.id;
    payload["protocol_type_id"] = protocoleId;
    payload["protocol_details"] = protocoleNotes.ProtocolDetails;
    payload["add_your_protocol"] = protocoleNotes.AddedProtocol;
    payload["protocol_notes"] = protocoleNotes.ProtocolNotes;
    payload["protocolling_by"] = "1";
    payload["created_by"] = "1";
    return this.http.post(`${this.apiUrl}/procedures/store_protocol_request`, payload);
  }
  GetMyCartDetails(data) {
    let payload = {};
    payload["token"] = '1a32e71a46317b9cc6feb7388238c95d';
    payload["procedure"] = data;
    return this.http.post(`${this.apiUrl}/procedures/material_my_cart`, payload);
  }
  StoreShoppingCartSchedulling(PatientID, MRNNO, ProcedureName, itemID, Quantity, stage_type) {
    let payload = {};
    payload["token"] = '1a32e71a46317b9cc6feb7388238c95d';
    payload["mrn_number"] = MRNNO;
    payload["item_id"] = itemID;
    payload["patient_id"] = PatientID;
    payload["quantity"] = Quantity;
    payload["stage_type"] = stage_type;
    payload["created_by"] = '1';
    payload["purchased_by"] = '1';
    payload["procedure"] = ProcedureName;
    // return null;
    return this.http.post(`${this.apiUrl}/procedures/store_shopping_cart`, payload);
  }
  GetAllCheckList() {
    let payload = {};
    payload["token"] = '1a32e71a46317b9cc6feb7388238c95d';
    return this.http.post(`${this.apiUrl}/procedures/check_list_index`, payload);
  }
  GetSpecificItemHistory(data) {
    let payload = {};
    payload["token"] = '1a32e71a46317b9cc6feb7388238c95d';
    payload["item_id"] = data;
    return this.http.post(`${this.apiUrl}/items/item_history_details`, payload);
  }
  GetIntraProcedureList(data, mrnno, procedure) {
    let payload = {};
    payload["token"] = '1a32e71a46317b9cc6feb7388238c95d';
    payload["patient_id"] = data;
    payload["mrn_number"] = mrnno;
    payload["procedure"] = procedure;
    console.log(payload);
    return this.http.post(`${this.apiUrl}/procedures/intra_procedure_index`, payload);
  }
  ImportPatientExcel(data) {
    let formData = new FormData();
    formData.append("token", "1a32e71a46317b9cc6feb7388238c95d");
    formData.append("attachment", data);
    formData.forEach((value, key) => {
      const values = formData.getAll(key);
      console.log(`${key}: ${values}`);
      console.log('KEY', typeof key);
      console.log('VALUES', typeof values);
    });
    // return null;
    return this.http.post(`${this.apiUrl}/procedures/patient_import`, formData);
  }
  Registerpatient(PersonalDetails, ContactDetails, Address, healthDetails, Otherdetails, image) {
    let formData = new FormData();
    formData.append("token", "1a32e71a46317b9cc6feb7388238c95d");
    if (image && image !== null) {
      if (image.name) {
        formData.append("patient_image", image, image.name);
      } else {
        formData.append("patient_image", image);
      }
    } else {
      formData.append("patient_image", '');
    }
    //Personal Details
    formData.append('first_name', PersonalDetails.first_name);
    formData.append('middle_name', PersonalDetails.middle_name);
    formData.append('surname', PersonalDetails.last_name);
    formData.append('title', PersonalDetails.title);
    formData.append('name_of_partner', PersonalDetails.partner_name);
    formData.append('name_of_children ', PersonalDetails.children_name);
    formData.append('referred_by', PersonalDetails.referred_by);
    formData.append('occupation', PersonalDetails.occupation);
    formData.append('gender', PersonalDetails.gender);
    formData.append('dob', this.formatDate(PersonalDetails.dob));
    formData.append('age', PersonalDetails.age);
    formData.append('marital_status', PersonalDetails.martial_status);
    formData.append('language', PersonalDetails.language);
    //Contact Details
    formData.append('telephone', ContactDetails.telephone_number);
    formData.append('primary_email', ContactDetails.email);
    //Address
    formData.append('address_type', Address.addresstype);
    formData.append('flat_unit_no', Address.flatNo);
    formData.append('street_no', Address.StreetNo);
    formData.append('street_name', Address.StreetName);
    formData.append('suburb', Address.suburb);
    formData.append('town_city', Address.town);
    formData.append('state', Address.state);
    formData.append('post_code', Address.postcode);
    //health Details
    formData.append('blood_group', healthDetails.bloodgroup);
    formData.append('weight', healthDetails.weight);
    formData.append('height', healthDetails.height);
    formData.append('blood_pressure', healthDetails.bloodPressure);
    formData.append('heart_beat', healthDetails.heartBeat);
    formData.append('spo2', healthDetails.spo2);
    formData.append('respiratory_rate', healthDetails.respiratoryRate);
    formData.append('temperature', healthDetails.temperature);
    formData.append('priority', healthDetails.Priority);
    formData.append('specialty', healthDetails.Speciality);
    formData.append('procedure', healthDetails.Procedure);
    //Other Details
    formData.append('critical_information', Otherdetails.clientInformation);
    formData.append('notes', Otherdetails.notes);
    formData.append('created_by', "1");
    formData.forEach((value, key) => {
      const values = formData.getAll(key);
      console.log(`${key}: ${values}`);
    });
    // return null;
    return this.http.post(`${this.apiUrl}/procedures/store_patient_details`, formData);
  }
  UpdateRegisteredPatient(PersonalDetails, ContactDetails, Address, healthDetails, Otherdetails, image, Patient_ID) {
    let formData = new FormData();
    formData.append("token", "1a32e71a46317b9cc6feb7388238c95d");
    if (image && image !== null) {
      if (image.name) {
        formData.append("patient_image", image, image.name);
      } else {
        formData.append("patient_image", image);
      }
    } else {
      formData.append("patient_image", '');
    }
    //Personal Details
    formData.append('first_name', PersonalDetails.first_name);
    formData.append('middle_name', PersonalDetails.middle_name);
    formData.append('surname', PersonalDetails.last_name);
    formData.append('title', PersonalDetails.title);
    formData.append('name_of_partner', PersonalDetails.partner_name);
    formData.append('name_of_children ', PersonalDetails.children_name);
    formData.append('referred_by', PersonalDetails.referred_by);
    formData.append('occupation', PersonalDetails.occupation);
    formData.append('gender', PersonalDetails.gender);
    formData.append('dob', this.formatDate(PersonalDetails.dob));
    formData.append('age', PersonalDetails.age);
    formData.append('marital_status', PersonalDetails.martial_status);
    formData.append('language', PersonalDetails.language);
    //Contact Details
    formData.append('telephone', ContactDetails.telephone_number);
    formData.append('primary_email', ContactDetails.email);
    //Address
    formData.append('address_type', Address.addresstype);
    formData.append('flat_unit_no', Address.flatNo);
    formData.append('street_no', Address.StreetNo);
    formData.append('street_name', Address.StreetName);
    formData.append('suburb', Address.suburb);
    formData.append('town_city', Address.town);
    formData.append('state', Address.state);
    formData.append('post_code', Address.postcode);
    //health Details
    formData.append('blood_group', healthDetails.bloodgroup);
    formData.append('weight', healthDetails.weight);
    formData.append('height', healthDetails.height);
    formData.append('blood_pressure', healthDetails.bloodPressure);
    formData.append('heart_beat', healthDetails.heartBeat);
    formData.append('spo2', healthDetails.spo2);
    formData.append('respiratory_rate', healthDetails.respiratoryRate);
    formData.append('temperature', healthDetails.temperature);
    formData.append('priority', healthDetails.Priority);
    formData.append('specialty', healthDetails.Speciality);
    formData.append('procedure_id', healthDetails.Procedure);
    //Other Details
    formData.append('critical_information', Otherdetails.clientInformation);
    formData.append('notes', Otherdetails.notes);
    formData.append('updated_by', "1");
    formData.append('patient_id', Patient_ID);
    formData.forEach((value, key) => {
      const values = formData.getAll(key);
      console.log(`${key}: ${values}`);
    });
    // return null;
    return this.http.post(`${this.apiUrl}/procedures/patient_details_update`, formData);
  }
  GetPatientList() {
    let payload = {};
    payload["token"] = '1a32e71a46317b9cc6feb7388238c95d';
    return this.http.post(`${this.apiUrl}/procedures/patient_registration_list`, payload);
  }
  SendPatientProcedureRequest(ID) {
    let payload = {};
    payload["token"] = '1a32e71a46317b9cc6feb7388238c95d';
    payload["patient_id"] = ID;
    return this.http.post(`${this.apiUrl}/procedures/patient_procedure_request`, payload);
  }
  GetVettingRequestData(patientID, mrn_no) {
    let payload = {};
    payload["token"] = '1a32e71a46317b9cc6feb7388238c95d';
    payload["patient_id"] = patientID;
    payload["mrn_number"] = mrn_no;
    return this.http.post(`${this.apiUrl}/procedures/show_vetting_request`, payload);
  }
  GetProtocolingRequestData(patientID, mrn_no) {
    let payload = {};
    payload["token"] = '1a32e71a46317b9cc6feb7388238c95d';
    payload["patient_id"] = patientID;
    payload["mrn_number"] = mrn_no;
    return this.http.post(`${this.apiUrl}/procedures/show_protocol_request`, payload);
  }
  GetVettingandProtocolingData(patientID, mrn_no) {
    let payload = {};
    payload["token"] = '1a32e71a46317b9cc6feb7388238c95d';
    payload["patient_id"] = patientID;
    payload["mrn_number"] = mrn_no;
    return this.http.post(`${this.apiUrl}/procedures/show_vetting_protocol_request`, payload);
  }
  StoreIntraProcedure(ItemId, Qty, Type, Notes, Patientid, Procedurename, NRN_No, Accession_No) {
    let payload = {};
    payload["token"] = '1a32e71a46317b9cc6feb7388238c95d';
    payload["item_id"] = ItemId;
    payload["patient_id"] = Patientid;
    payload["mrn_no"] = NRN_No;
    payload["procedure"] = Procedurename;
    payload["accession_no"] = Accession_No;
    payload["type"] = Type;
    payload["no_of_qty"] = Qty.length > 0 ? Qty : [null, null];
    payload["notes"] = Notes.length > 0 ? Notes : [null, null];
    payload["created_by"] = 1;
    console.log(payload);
    // return null;
    return this.http.post(`${this.apiUrl}/procedures/store_intra_procedure`, payload);
  }
  GetPreProcedureUsedGridData(PatientId, ProcedureName) {
    let payload = {};
    payload["token"] = '1a32e71a46317b9cc6feb7388238c95d';
    payload["patient_id"] = PatientId;
    payload["procedure"] = ProcedureName;
    return this.http.post(`${this.apiUrl}/procedures/used_data`, payload);
  }
  GetProcedureDamagedGridData(PatientId, ProcedureName) {
    let payload = {};
    payload["token"] = '1a32e71a46317b9cc6feb7388238c95d';
    payload["patient_id"] = PatientId;
    payload["procedure"] = ProcedureName;
    return this.http.post(`${this.apiUrl}/procedures/damaged_data`, payload);
  }
  GetProcedureReturnedGridData(PatientId, ProcedureName) {
    let payload = {};
    payload["token"] = '1a32e71a46317b9cc6feb7388238c95d';
    payload["patient_id"] = PatientId;
    payload["procedure"] = ProcedureName;
    return this.http.post(`${this.apiUrl}/procedures/returned_data`, payload);
  }
  GetProcedureWastedGridData(PatientId, ProcedureName) {
    let payload = {};
    payload["token"] = '1a32e71a46317b9cc6feb7388238c95d';
    payload["patient_id"] = PatientId;
    payload["procedure"] = ProcedureName;
    return this.http.post(`${this.apiUrl}/procedures/wasted_data`, payload);
  }
  GetCheckListData(stageType) {
    let payloads = {};
    payloads["token"] = '1a32e71a46317b9cc6feb7388238c95d';
    payloads["stage_type"] = stageType;
    return this.http.post(`${this.apiUrl}${this.checkLists}`, payloads);
  }
  kizinCheckBoxesData(stageType, patientId, MRN_NO, checked, procedure, check_list_id, added_by, created_by) {
    let payLoads = {};
    payLoads["token"] = '1a32e71a46317b9cc6feb7388238c95d';
    payLoads["patient_id"] = patientId;
    payLoads["mrn_no"] = MRN_NO;
    payLoads["procedure"] = procedure;
    payLoads["stage_type"] = stageType;
    payLoads["checked"] = checked;
    payLoads["checklist_id"] = check_list_id;
    payLoads["added_by"] = added_by;
    payLoads["created_by"] = created_by;
    return this.http.post(`${this.apiUrl}${this.checkBoxesKizin}`, payLoads);
  }
  kizinTimeLineData() {
    let payLoads = {};
    payLoads["token"] = '1a32e71a46317b9cc6feb7388238c95d';
    return this.http.post(`${this.apiUrl}${this.kiziCheckBoxesTimeLine}`, payLoads);
  }
  formattedDate(date) {
    let month = date.getMonth() + 1;
    let day = date.getDate();
    let year = date.getFullYear();
    return `${month.toString().padStart(2, '0')}/${day.toString().padStart(2, '0')}/${year}`;
  }
  formatTime(date) {
    return date.toLocaleTimeString('en-US', {
      hour: '2-digit',
      minute: '2-digit',
      hour12: true
    });
  }
  MaterialDashboard() {
    let payLoads = {};
    payLoads["token"] = '1a32e71a46317b9cc6feb7388238c95d';
    return this.http.post(`${this.apiUrl}${this.materialdashboard}`, payLoads);
  }
  static #_ = this.ɵfac = function AllServicesService_Factory(t) {
    return new (t || AllServicesService)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_2__.HttpClient), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"](ngx_toastr__WEBPACK_IMPORTED_MODULE_3__.ToastrService), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"](_angular_common__WEBPACK_IMPORTED_MODULE_4__.DatePipe));
  };
  static #_2 = this.ɵprov = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjectable"]({
    token: AllServicesService,
    factory: AllServicesService.ɵfac,
    providedIn: 'root'
  });
}

/***/ }),

/***/ 3789:
/*!***************************************************************!*\
  !*** ./src/app/pages/dashboards/dashboards-routing.module.ts ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DashboardsRoutingModule: () => (/* binding */ DashboardsRoutingModule)
/* harmony export */ });
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ 7947);
/* harmony import */ var _default_default_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./default/default.component */ 6671);
/* harmony import */ var src_app_core_guards_auth_guard__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! src/app/core/guards/auth.guard */ 8036);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 1699);





const routes = [{
  path: '',
  component: _default_default_component__WEBPACK_IMPORTED_MODULE_0__.DefaultComponent,
  canActivate: [src_app_core_guards_auth_guard__WEBPACK_IMPORTED_MODULE_1__.AuthGuard]
}];
class DashboardsRoutingModule {
  static #_ = this.ɵfac = function DashboardsRoutingModule_Factory(t) {
    return new (t || DashboardsRoutingModule)();
  };
  static #_2 = this.ɵmod = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineNgModule"]({
    type: DashboardsRoutingModule
  });
  static #_3 = this.ɵinj = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineInjector"]({
    imports: [_angular_router__WEBPACK_IMPORTED_MODULE_3__.RouterModule.forChild(routes), _angular_router__WEBPACK_IMPORTED_MODULE_3__.RouterModule]
  });
}
(function () {
  (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵsetNgModuleScope"](DashboardsRoutingModule, {
    imports: [_angular_router__WEBPACK_IMPORTED_MODULE_3__.RouterModule],
    exports: [_angular_router__WEBPACK_IMPORTED_MODULE_3__.RouterModule]
  });
})();

/***/ }),

/***/ 4804:
/*!*******************************************************!*\
  !*** ./src/app/pages/dashboards/dashboards.module.ts ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DashboardsModule: () => (/* binding */ DashboardsModule)
/* harmony export */ });
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/common */ 6575);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/forms */ 8849);
/* harmony import */ var _dashboards_routing_module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dashboards-routing.module */ 3789);
/* harmony import */ var _shared_ui_ui_module__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../shared/ui/ui.module */ 2540);
/* harmony import */ var _shared_widget_widget_module__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../shared/widget/widget.module */ 7040);
/* harmony import */ var ng_apexcharts__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ng-apexcharts */ 7854);
/* harmony import */ var ngx_bootstrap_tooltip__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ngx-bootstrap/tooltip */ 3804);
/* harmony import */ var ngx_bootstrap_dropdown__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ngx-bootstrap/dropdown */ 6380);
/* harmony import */ var ngx_bootstrap_carousel__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ngx-bootstrap/carousel */ 8460);
/* harmony import */ var ngx_bootstrap_tabs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ngx-bootstrap/tabs */ 1469);
/* harmony import */ var ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ngx-bootstrap/modal */ 7269);
/* harmony import */ var simplebar_angular__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! simplebar-angular */ 7551);
/* harmony import */ var _default_default_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./default/default.component */ 6671);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 1699);



















class DashboardsModule {
  static #_ = this.ɵfac = function DashboardsModule_Factory(t) {
    return new (t || DashboardsModule)();
  };
  static #_2 = this.ɵmod = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdefineNgModule"]({
    type: DashboardsModule
  });
  static #_3 = this.ɵinj = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdefineInjector"]({
    providers: [ngx_bootstrap_dropdown__WEBPACK_IMPORTED_MODULE_5__.BsDropdownConfig],
    imports: [_angular_common__WEBPACK_IMPORTED_MODULE_6__.CommonModule, _angular_forms__WEBPACK_IMPORTED_MODULE_7__.FormsModule, _angular_forms__WEBPACK_IMPORTED_MODULE_7__.ReactiveFormsModule, _dashboards_routing_module__WEBPACK_IMPORTED_MODULE_0__.DashboardsRoutingModule, _shared_ui_ui_module__WEBPACK_IMPORTED_MODULE_1__.UIModule, ngx_bootstrap_dropdown__WEBPACK_IMPORTED_MODULE_5__.BsDropdownModule.forRoot(), ngx_bootstrap_tooltip__WEBPACK_IMPORTED_MODULE_8__.TooltipModule.forRoot(), ngx_bootstrap_tabs__WEBPACK_IMPORTED_MODULE_9__.TabsModule.forRoot(), ngx_bootstrap_carousel__WEBPACK_IMPORTED_MODULE_10__.CarouselModule.forRoot(), _shared_widget_widget_module__WEBPACK_IMPORTED_MODULE_2__.WidgetModule, ng_apexcharts__WEBPACK_IMPORTED_MODULE_11__.NgApexchartsModule, simplebar_angular__WEBPACK_IMPORTED_MODULE_12__.SimplebarAngularModule, ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_13__.ModalModule.forRoot()]
  });
}
(function () {
  (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵsetNgModuleScope"](DashboardsModule, {
    declarations: [_default_default_component__WEBPACK_IMPORTED_MODULE_3__.DefaultComponent],
    imports: [_angular_common__WEBPACK_IMPORTED_MODULE_6__.CommonModule, _angular_forms__WEBPACK_IMPORTED_MODULE_7__.FormsModule, _angular_forms__WEBPACK_IMPORTED_MODULE_7__.ReactiveFormsModule, _dashboards_routing_module__WEBPACK_IMPORTED_MODULE_0__.DashboardsRoutingModule, _shared_ui_ui_module__WEBPACK_IMPORTED_MODULE_1__.UIModule, ngx_bootstrap_dropdown__WEBPACK_IMPORTED_MODULE_5__.BsDropdownModule, ngx_bootstrap_tooltip__WEBPACK_IMPORTED_MODULE_8__.TooltipModule, ngx_bootstrap_tabs__WEBPACK_IMPORTED_MODULE_9__.TabsModule, ngx_bootstrap_carousel__WEBPACK_IMPORTED_MODULE_10__.CarouselModule, _shared_widget_widget_module__WEBPACK_IMPORTED_MODULE_2__.WidgetModule, ng_apexcharts__WEBPACK_IMPORTED_MODULE_11__.NgApexchartsModule, simplebar_angular__WEBPACK_IMPORTED_MODULE_12__.SimplebarAngularModule, ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_13__.ModalModule]
  });
})();

/***/ }),

/***/ 6671:
/*!***************************************************************!*\
  !*** ./src/app/pages/dashboards/default/default.component.ts ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DefaultComponent: () => (/* binding */ DefaultComponent)
/* harmony export */ });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ 1699);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/router */ 7947);


class DefaultComponent {
  constructor(router) {
    this.router = router;
  }
  ngOnInit() {}
  ngAfterViewInit() {}
  AddCSS() {
    document.body.classList.toggle('left-bar-enabled');
  }
  static #_ = this.ɵfac = function DefaultComponent_Factory(t) {
    return new (t || DefaultComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_1__.Router));
  };
  static #_2 = this.ɵcmp = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
    type: DefaultComponent,
    selectors: [["app-default"]],
    decls: 2,
    vars: 0,
    template: function DefaultComponent_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "h1");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, "Dashboards");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
    },
    styles: [".con[_ngcontent-%COMP%] {\n  width: 250px;\n  height: 200px;\n}\n\n.cle[_ngcontent-%COMP%] {\n  width: 200px;\n  height: 200px;\n}\n\n.vp[_ngcontent-%COMP%] {\n  width: 130px;\n  height: 130px;\n  position: absolute;\n  bottom: 10%;\n  left: 22%;\n}\n\n.header_2[_ngcontent-%COMP%] {\n  position: absolute;\n  top: 7%;\n  left: 25%;\n}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvZGFzaGJvYXJkcy9kZWZhdWx0L2RlZmF1bHQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFFRSxZQUFBO0VBQ0EsYUFBQTtBQUFGOztBQUdBO0VBQ0UsWUFBQTtFQUNBLGFBQUE7QUFBRjs7QUFFQTtFQUVFLFlBQUE7RUFDQSxhQUFBO0VBQ0Esa0JBQUE7RUFDQSxXQUFBO0VBQ0EsU0FBQTtBQUFGOztBQUVBO0VBRUUsa0JBQUE7RUFDQSxPQUFBO0VBQ0EsU0FBQTtBQUFGIiwic291cmNlc0NvbnRlbnQiOlsiLmNvblxyXG57XHJcbiAgd2lkdGg6IDI1MHB4O1xyXG4gIGhlaWdodDogMjAwcHg7XHJcbn1cclxuXHJcbi5jbGV7XHJcbiAgd2lkdGg6IDIwMHB4O1xyXG4gIGhlaWdodDogMjAwcHg7XHJcbn1cclxuLnZwXHJcbntcclxuICB3aWR0aDogMTMwcHg7XHJcbiAgaGVpZ2h0OiAxMzBweDtcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgYm90dG9tOiAxMCU7XHJcbiAgbGVmdDogMjIlO1xyXG59XHJcbi5oZWFkZXJfMlxyXG57XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHRvcDogNyU7XHJcbiAgbGVmdDogMjUlO1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */"]
  });
}

/***/ }),

/***/ 4701:
/*!***********************************************!*\
  !*** ./src/app/pages/pages-routing.module.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   PagesRoutingModule: () => (/* binding */ PagesRoutingModule)
/* harmony export */ });
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ 7947);
/* harmony import */ var _core_guards_auth_guard__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/guards/auth.guard */ 8036);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ 1699);




const routes = [
// { path: '', redirectTo: 'dashboard' },
// {
//   path: "",
//   component: DefaultComponent
// },
// { path: 'dashboard', component: DefaultComponent },
{
  path: 'dashboards',
  loadChildren: () => Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ./dashboards/dashboards.module */ 4804)).then(m => m.DashboardsModule),
  canActivate: [_core_guards_auth_guard__WEBPACK_IMPORTED_MODULE_0__.AuthGuard]
}, {
  path: 'whiteboard',
  loadChildren: () => __webpack_require__.e(/*! import() */ "src_app_pages_whiteboard_whiteboard_module_ts").then(__webpack_require__.bind(__webpack_require__, /*! ./whiteboard/whiteboard.module */ 8689)).then(m => m.WhiteboardModule),
  canActivate: [_core_guards_auth_guard__WEBPACK_IMPORTED_MODULE_0__.AuthGuard]
}, {
  path: 'procedure',
  loadChildren: () => Promise.all(/*! import() */[__webpack_require__.e("default-node_modules_ag-grid-angular_fesm2015_ag-grid-angular_js"), __webpack_require__.e("default-node_modules_ag-grid-enterprise_dist_ag-grid-enterprise_auto_esm_js"), __webpack_require__.e("src_app_pages_procedure_procedure_module_ts")]).then(__webpack_require__.bind(__webpack_require__, /*! ./procedure/procedure.module */ 3616)).then(m => m.ProcedureModule),
  canActivate: [_core_guards_auth_guard__WEBPACK_IMPORTED_MODULE_0__.AuthGuard]
}, {
  path: 'calender',
  loadChildren: () => __webpack_require__.e(/*! import() */ "src_app_pages_calender_calender_module_ts").then(__webpack_require__.bind(__webpack_require__, /*! ./calender/calender.module */ 2395)).then(m => m.CalenderModule),
  canActivate: [_core_guards_auth_guard__WEBPACK_IMPORTED_MODULE_0__.AuthGuard]
}, {
  path: 'chat',
  loadChildren: () => __webpack_require__.e(/*! import() */ "src_app_pages_chat_chat_module_ts").then(__webpack_require__.bind(__webpack_require__, /*! ./chat/chat.module */ 4803)).then(m => m.ChatModule),
  canActivate: [_core_guards_auth_guard__WEBPACK_IMPORTED_MODULE_0__.AuthGuard]
}, {
  path: 'checklist',
  loadChildren: () => __webpack_require__.e(/*! import() */ "src_app_pages_checklist_checklist_module_ts").then(__webpack_require__.bind(__webpack_require__, /*! ./checklist/checklist.module */ 8301)).then(m => m.ChecklistModule),
  canActivate: [_core_guards_auth_guard__WEBPACK_IMPORTED_MODULE_0__.AuthGuard]
}, {
  path: 'settings',
  loadChildren: () => __webpack_require__.e(/*! import() */ "src_app_pages_settings_settings_module_ts").then(__webpack_require__.bind(__webpack_require__, /*! ./settings/settings.module */ 2460)).then(m => m.SettingsModule),
  canActivate: [_core_guards_auth_guard__WEBPACK_IMPORTED_MODULE_0__.AuthGuard]
}, {
  path: 'workarea',
  loadChildren: () => Promise.all(/*! import() */[__webpack_require__.e("default-node_modules_ag-grid-angular_fesm2015_ag-grid-angular_js"), __webpack_require__.e("default-node_modules_ngx-slider-v2_fesm2022_ngx-slider-v2_mjs"), __webpack_require__.e("default-node_modules_angular-ng-stepper_fesm2020_angular-ng-stepper_mjs"), __webpack_require__.e("src_app_pages_procedure_procedure-work-area_procedure-work-area_module_ts")]).then(__webpack_require__.bind(__webpack_require__, /*! ./procedure/procedure-work-area/procedure-work-area.module */ 1371)).then(m => m.ProcedureWorkAreaModule),
  canActivate: [_core_guards_auth_guard__WEBPACK_IMPORTED_MODULE_0__.AuthGuard]
}, {
  path: 'staff-management',
  loadChildren: () => __webpack_require__.e(/*! import() */ "src_app_pages_staff-management_staff-management_module_ts").then(__webpack_require__.bind(__webpack_require__, /*! ./staff-management/staff-management.module */ 4867)).then(m => m.StaffManagementModule),
  canActivate: [_core_guards_auth_guard__WEBPACK_IMPORTED_MODULE_0__.AuthGuard]
}, {
  path: 'material-management',
  loadChildren: () => Promise.all(/*! import() */[__webpack_require__.e("default-node_modules_ag-grid-angular_fesm2015_ag-grid-angular_js"), __webpack_require__.e("default-node_modules_ag-grid-enterprise_dist_ag-grid-enterprise_auto_esm_js"), __webpack_require__.e("default-node_modules_ngx-slider-v2_fesm2022_ngx-slider-v2_mjs"), __webpack_require__.e("default-src_app_pages_material-management_material-management_module_ts")]).then(__webpack_require__.bind(__webpack_require__, /*! ./material-management/material-management.module */ 3287)).then(m => m.MaterialManagementModule),
  canActivate: [_core_guards_auth_guard__WEBPACK_IMPORTED_MODULE_0__.AuthGuard]
}, {
  path: 'patient-registration',
  loadChildren: () => Promise.all(/*! import() */[__webpack_require__.e("default-node_modules_ag-grid-angular_fesm2015_ag-grid-angular_js"), __webpack_require__.e("default-node_modules_ag-grid-enterprise_dist_ag-grid-enterprise_auto_esm_js"), __webpack_require__.e("default-node_modules_ngx-slider-v2_fesm2022_ngx-slider-v2_mjs"), __webpack_require__.e("default-src_app_pages_material-management_material-management_module_ts"), __webpack_require__.e("default-node_modules_angular-ng-stepper_fesm2020_angular-ng-stepper_mjs"), __webpack_require__.e("src_app_pages_patient-registration_patient-registration_module_ts")]).then(__webpack_require__.bind(__webpack_require__, /*! ./patient-registration/patient-registration.module */ 182)).then(m => m.PatientRegistrationModule),
  canActivate: [_core_guards_auth_guard__WEBPACK_IMPORTED_MODULE_0__.AuthGuard]
}];
class PagesRoutingModule {
  static #_ = this.ɵfac = function PagesRoutingModule_Factory(t) {
    return new (t || PagesRoutingModule)();
  };
  static #_2 = this.ɵmod = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineNgModule"]({
    type: PagesRoutingModule
  });
  static #_3 = this.ɵinj = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjector"]({
    imports: [_angular_router__WEBPACK_IMPORTED_MODULE_2__.RouterModule.forChild(routes), _angular_router__WEBPACK_IMPORTED_MODULE_2__.RouterModule]
  });
}
(function () {
  (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵsetNgModuleScope"](PagesRoutingModule, {
    imports: [_angular_router__WEBPACK_IMPORTED_MODULE_2__.RouterModule],
    exports: [_angular_router__WEBPACK_IMPORTED_MODULE_2__.RouterModule]
  });
})();

/***/ }),

/***/ 9238:
/*!***************************************!*\
  !*** ./src/app/pages/pages.module.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   PagesModule: () => (/* binding */ PagesModule)
/* harmony export */ });
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/common */ 6575);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/forms */ 8849);
/* harmony import */ var ngx_bootstrap_tabs__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ngx-bootstrap/tabs */ 1469);
/* harmony import */ var ngx_bootstrap_dropdown__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ngx-bootstrap/dropdown */ 6380);
/* harmony import */ var ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ngx-bootstrap/modal */ 7269);
/* harmony import */ var ngx_bootstrap_tooltip__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ngx-bootstrap/tooltip */ 3804);
/* harmony import */ var ngx_bootstrap_collapse__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ngx-bootstrap/collapse */ 9825);
/* harmony import */ var ng_apexcharts__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ng-apexcharts */ 7854);
/* harmony import */ var _fullcalendar_angular__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @fullcalendar/angular */ 6514);
/* harmony import */ var simplebar_angular__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! simplebar-angular */ 7551);
/* harmony import */ var ngx_lightbox__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ngx-lightbox */ 7104);
/* harmony import */ var _shared_widget_widget_module__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../shared/widget/widget.module */ 7040);
/* harmony import */ var _shared_ui_ui_module__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../shared/ui/ui.module */ 2540);
/* harmony import */ var _ctrl_ngx_emoji_mart__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @ctrl/ngx-emoji-mart */ 2605);
/* harmony import */ var _pages_routing_module__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages-routing.module */ 4701);
/* harmony import */ var _dashboards_dashboards_module__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./dashboards/dashboards.module */ 4804);
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/common/http */ 4860);
/* harmony import */ var _ng_select_ng_select__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @ng-select/ng-select */ 1788);
/* harmony import */ var _core_services_all_services_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../core/services/all-services.service */ 6861);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/core */ 1699);













// Emoji Picker












class PagesModule {
  static #_ = this.ɵfac = function PagesModule_Factory(t) {
    return new (t || PagesModule)();
  };
  static #_2 = this.ɵmod = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefineNgModule"]({
    type: PagesModule
  });
  static #_3 = this.ɵinj = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefineInjector"]({
    providers: [_core_services_all_services_service__WEBPACK_IMPORTED_MODULE_5__.AllServicesService, _angular_common__WEBPACK_IMPORTED_MODULE_7__.DatePipe],
    imports: [_angular_common__WEBPACK_IMPORTED_MODULE_7__.CommonModule, _angular_forms__WEBPACK_IMPORTED_MODULE_8__.FormsModule, ngx_bootstrap_dropdown__WEBPACK_IMPORTED_MODULE_9__.BsDropdownModule.forRoot(), ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_10__.ModalModule.forRoot(), _pages_routing_module__WEBPACK_IMPORTED_MODULE_3__.PagesRoutingModule, ng_apexcharts__WEBPACK_IMPORTED_MODULE_11__.NgApexchartsModule, _angular_forms__WEBPACK_IMPORTED_MODULE_8__.ReactiveFormsModule, _dashboards_dashboards_module__WEBPACK_IMPORTED_MODULE_4__.DashboardsModule, _angular_common_http__WEBPACK_IMPORTED_MODULE_12__.HttpClientModule, _shared_ui_ui_module__WEBPACK_IMPORTED_MODULE_2__.UIModule, _shared_widget_widget_module__WEBPACK_IMPORTED_MODULE_1__.WidgetModule, _fullcalendar_angular__WEBPACK_IMPORTED_MODULE_13__.FullCalendarModule, ngx_bootstrap_tabs__WEBPACK_IMPORTED_MODULE_14__.TabsModule.forRoot(), ngx_bootstrap_tooltip__WEBPACK_IMPORTED_MODULE_15__.TooltipModule.forRoot(), ngx_bootstrap_collapse__WEBPACK_IMPORTED_MODULE_16__.CollapseModule.forRoot(), simplebar_angular__WEBPACK_IMPORTED_MODULE_17__.SimplebarAngularModule, ngx_lightbox__WEBPACK_IMPORTED_MODULE_0__.LightboxModule, _ctrl_ngx_emoji_mart__WEBPACK_IMPORTED_MODULE_18__.PickerModule, _ng_select_ng_select__WEBPACK_IMPORTED_MODULE_19__.NgSelectModule]
  });
}
(function () {
  (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵsetNgModuleScope"](PagesModule, {
    imports: [_angular_common__WEBPACK_IMPORTED_MODULE_7__.CommonModule, _angular_forms__WEBPACK_IMPORTED_MODULE_8__.FormsModule, ngx_bootstrap_dropdown__WEBPACK_IMPORTED_MODULE_9__.BsDropdownModule, ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_10__.ModalModule, _pages_routing_module__WEBPACK_IMPORTED_MODULE_3__.PagesRoutingModule, ng_apexcharts__WEBPACK_IMPORTED_MODULE_11__.NgApexchartsModule, _angular_forms__WEBPACK_IMPORTED_MODULE_8__.ReactiveFormsModule, _dashboards_dashboards_module__WEBPACK_IMPORTED_MODULE_4__.DashboardsModule, _angular_common_http__WEBPACK_IMPORTED_MODULE_12__.HttpClientModule, _shared_ui_ui_module__WEBPACK_IMPORTED_MODULE_2__.UIModule, _shared_widget_widget_module__WEBPACK_IMPORTED_MODULE_1__.WidgetModule, _fullcalendar_angular__WEBPACK_IMPORTED_MODULE_13__.FullCalendarModule, ngx_bootstrap_tabs__WEBPACK_IMPORTED_MODULE_14__.TabsModule, ngx_bootstrap_tooltip__WEBPACK_IMPORTED_MODULE_15__.TooltipModule, ngx_bootstrap_collapse__WEBPACK_IMPORTED_MODULE_16__.CollapseModule, simplebar_angular__WEBPACK_IMPORTED_MODULE_17__.SimplebarAngularModule, ngx_lightbox__WEBPACK_IMPORTED_MODULE_0__.LightboxModule, _ctrl_ngx_emoji_mart__WEBPACK_IMPORTED_MODULE_18__.PickerModule, _ng_select_ng_select__WEBPACK_IMPORTED_MODULE_19__.NgSelectModule]
  });
})();

/***/ }),

/***/ 3051:
/*!******************************************************!*\
  !*** ./src/app/shared/widget/stat/stat.component.ts ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   StatComponent: () => (/* binding */ StatComponent)
/* harmony export */ });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ 1699);

class StatComponent {
  constructor() {}
  ngOnInit() {}
  static #_ = this.ɵfac = function StatComponent_Factory(t) {
    return new (t || StatComponent)();
  };
  static #_2 = this.ɵcmp = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
    type: StatComponent,
    selectors: [["app-stat"]],
    inputs: {
      title: "title",
      value: "value",
      icon: "icon"
    },
    decls: 12,
    vars: 5,
    consts: [[1, "card", "mini-stats-wid"], [1, "card-body"], [1, "d-flex"], [1, "flex-grow-1"], [1, "text-muted", "fw-medium"], [1, "mb-0"], [1, "flex-shrink-0", "align-self-center"], [1, "mini-stat-icon", "avatar-sm", "rounded-circle", "bg-primary"], [1, "avatar-title"]],
    template: function StatComponent_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 0)(1, "div", 1)(2, "div", 2)(3, "div", 3)(4, "p", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](6, "h4", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](7);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]()();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](8, "div", 6)(9, "div", 7)(10, "span", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](11, "i");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]()()()()()();
      }
      if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](ctx.title);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](ctx.value);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵclassMapInterpolate1"]("bx ", ctx.icon, " font-size-24");
      }
    },
    styles: ["/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */"]
  });
}

/***/ }),

/***/ 1341:
/*!********************************************************************!*\
  !*** ./src/app/shared/widget/transaction/transaction.component.ts ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   TransactionComponent: () => (/* binding */ TransactionComponent)
/* harmony export */ });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ 1699);
/* harmony import */ var ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ngx-bootstrap/modal */ 7269);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common */ 6575);



const _c0 = function (a0, a1) {
  return {
    "badge-soft-danger": a0,
    "badge-soft-warning": a1
  };
};
function TransactionComponent_tr_23_Template(rf, ctx) {
  if (rf & 1) {
    const _r4 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "tr")(1, "td")(2, "div", 31);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](3, "input", 32)(4, "label", 33);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]()();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](5, "td")(6, "a", 34);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](7);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]()();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](8, "td");
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](9);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](10, "td");
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](11);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](12, "td");
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](13);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](14, "td")(15, "span", 35);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](16);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]()();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](17, "td");
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](18, "i");
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](19);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](20, "td")(21, "button", 36);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function TransactionComponent_tr_23_Template_button_click_21_listener() {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r4);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
      const _r1 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](25);
      return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵresetView"](_r1.show());
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](22, "View Details");
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]()()();
  }
  if (rf & 2) {
    const data_r2 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpropertyInterpolate1"]("id", "transactionCheck", data_r2.index, "");
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpropertyInterpolate1"]("for", "transactionCheck", data_r2.index, "");
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](data_r2.id);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](data_r2.name);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](data_r2.date);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](data_r2.total);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpureFunction2"](12, _c0, data_r2.status === "Chargeback", data_r2.status === "Refund"));
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](data_r2.status);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵclassMapInterpolate1"]("fab ", data_r2.payment[0], " me-1");
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", data_r2.payment[1], " ");
  }
}
class TransactionComponent {
  constructor(modalService) {
    this.modalService = modalService;
  }
  ngOnInit() {}
  /**
   * Open modal
   * @param content modal content
   */
  openModal(content) {
    this.modalRef = this.modalService.show(content);
  }
  static #_ = this.ɵfac = function TransactionComponent_Factory(t) {
    return new (t || TransactionComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_1__.BsModalService));
  };
  static #_2 = this.ɵcmp = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
    type: TransactionComponent,
    selectors: [["app-transaction"]],
    inputs: {
      transactions: "transactions"
    },
    decls: 97,
    vars: 1,
    consts: [[1, "table-responsive", "mb-0"], [1, "table", "table-centered", "table-nowrap"], [1, "table-light"], [2, "width", "20px"], [1, "form-check", "font-size-16", "align-middle"], ["type", "checkbox", "id", "transactionCheck01", 1, "form-check-input"], ["for", "transactionCheck01", 1, "form-check-label"], [1, "align-middle"], [4, "ngFor", "ngForOf"], ["bsModal", "", "tabindex", "-1", 1, "modal", "fade"], ["content", "bs-modal"], [1, "modal-dialog", "modal-dialog-centered"], [1, "modal-content"], [1, "modal-header"], [1, "modal-title", "mt-0"], ["type", "button", "aria-hidden", "true", 1, "btn-close", 3, "click"], [1, "modal-body"], [1, "mb-2"], [1, "text-primary"], [1, "mb-4"], [1, "table-responsive"], ["scope", "col"], ["scope", "row"], ["src", "assets/images/product/img-7.png", "alt", "", 1, "avatar-sm"], [1, "text-truncate", "font-size-14"], [1, "text-muted", "mb-0"], ["src", "assets/images/product/img-4.png", "alt", "", 1, "avatar-sm"], ["colspan", "2"], [1, "m-0"], [1, "modal-footer"], [1, "btn", "btn-secondary", 3, "click"], [1, "form-check", "font-size-16"], ["type", "checkbox", 1, "form-check-input", 3, "id"], [1, "form-check-label", 3, "for"], ["href", "javascript: void(0);", 1, "text-body", "fw-bold"], [1, "badge", "badge-pill", "badge-soft-success", "font-size-11", 3, "ngClass"], ["type", "button", 1, "btn", "btn-primary", "btn-sm", "btn-rounded", 3, "click"]],
    template: function TransactionComponent_Template(rf, ctx) {
      if (rf & 1) {
        const _r5 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 0)(1, "table", 1)(2, "thead", 2)(3, "tr")(4, "th", 3)(5, "div", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](6, "input", 5)(7, "label", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]()();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](8, "th", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](9, "Order ID");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](10, "th", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](11, "Billing Name");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](12, "th", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](13, "Date");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](14, "th", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](15, "Total");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](16, "th", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](17, "Payment Status");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](18, "th", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](19, "Payment Method");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](20, "th", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](21, "View Details");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]()()();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](22, "tbody");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](23, TransactionComponent_tr_23_Template, 23, 15, "tr", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]()();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](24, "div", 9, 10)(26, "div", 11)(27, "div", 12)(28, "div", 13)(29, "h5", 14);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](30, "Order Details");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](31, "button", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function TransactionComponent_Template_button_click_31_listener() {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r5);
          const _r1 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](25);
          return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵresetView"](_r1 == null ? null : _r1.hide());
        });
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]()();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](32, "div", 16)(33, "p", 17);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](34, " Product id: ");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](35, "span", 18);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](36, "#SK2540");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]()();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](37, "p", 19);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](38, " Billing Name: ");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](39, "span", 18);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](40, "Neal Matthews");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]()();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](41, "div", 20)(42, "table", 1)(43, "thead")(44, "tr")(45, "th", 21);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](46, "Product");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](47, "th", 21);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](48, "Product Name");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](49, "th", 21);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](50, "Price");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]()()();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](51, "tbody")(52, "tr")(53, "th", 22)(54, "div");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](55, "img", 23);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]()();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](56, "td")(57, "div")(58, "h5", 24);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](59, "Wireless Headphone (Black)");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](60, "p", 25);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](61, "$ 225 x 1");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]()()();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](62, "td");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](63, "$ 255");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]()();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](64, "tr")(65, "th", 22)(66, "div");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](67, "img", 26);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]()();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](68, "td")(69, "div")(70, "h5", 24);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](71, "Phone patterned cases");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](72, "p", 25);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](73, "$ 145 x 1");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]()()();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](74, "td");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](75, "$ 145");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]()();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](76, "tr")(77, "td", 27)(78, "h6", 28);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](79, "Sub Total:");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]()();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](80, "td");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](81, "$ 400");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]()();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](82, "tr")(83, "td", 27)(84, "h6", 28);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](85, "Shipping:");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]()();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](86, "td");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](87, "Free");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]()();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](88, "tr")(89, "td", 27)(90, "h6", 28);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](91, "Total:");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]()();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](92, "td");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](93, "$ 400");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]()()()()()();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](94, "div", 29)(95, "button", 30);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function TransactionComponent_Template_button_click_95_listener() {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r5);
          const _r1 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](25);
          return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵresetView"](_r1.hide());
        });
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](96, "Close");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]()()()()()();
      }
      if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](23);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngForOf", ctx.transactions);
      }
    },
    dependencies: [_angular_common__WEBPACK_IMPORTED_MODULE_2__.NgClass, _angular_common__WEBPACK_IMPORTED_MODULE_2__.NgForOf, ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_1__.ModalDirective],
    styles: ["/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */"]
  });
}

/***/ }),

/***/ 7040:
/*!************************************************!*\
  !*** ./src/app/shared/widget/widget.module.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   WidgetModule: () => (/* binding */ WidgetModule)
/* harmony export */ });
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/common */ 6575);
/* harmony import */ var ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ngx-bootstrap/modal */ 7269);
/* harmony import */ var _stat_stat_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./stat/stat.component */ 3051);
/* harmony import */ var _transaction_transaction_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./transaction/transaction.component */ 1341);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 1699);






class WidgetModule {
  static #_ = this.ɵfac = function WidgetModule_Factory(t) {
    return new (t || WidgetModule)();
  };
  static #_2 = this.ɵmod = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineNgModule"]({
    type: WidgetModule
  });
  static #_3 = this.ɵinj = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineInjector"]({
    imports: [_angular_common__WEBPACK_IMPORTED_MODULE_3__.CommonModule, ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_4__.ModalModule.forRoot()]
  });
}
(function () {
  (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵsetNgModuleScope"](WidgetModule, {
    declarations: [_stat_stat_component__WEBPACK_IMPORTED_MODULE_0__.StatComponent, _transaction_transaction_component__WEBPACK_IMPORTED_MODULE_1__.TransactionComponent],
    imports: [_angular_common__WEBPACK_IMPORTED_MODULE_3__.CommonModule, ngx_bootstrap_modal__WEBPACK_IMPORTED_MODULE_4__.ModalModule],
    exports: [_stat_stat_component__WEBPACK_IMPORTED_MODULE_0__.StatComponent, _transaction_transaction_component__WEBPACK_IMPORTED_MODULE_1__.TransactionComponent]
  });
})();

/***/ }),

/***/ 3624:
/*!***********************************************************!*\
  !*** ./node_modules/apexcharts/dist/apexcharts.common.js ***!
  \***********************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
var __WEBPACK_AMD_DEFINE_RESULT__;/*!
 * ApexCharts v3.41.0
 * (c) 2018-2023 ApexCharts
 * Released under the MIT License.
 */


function t(t, e) {
  var i = Object.keys(t);
  if (Object.getOwnPropertySymbols) {
    var a = Object.getOwnPropertySymbols(t);
    e && (a = a.filter(function (e) {
      return Object.getOwnPropertyDescriptor(t, e).enumerable;
    })), i.push.apply(i, a);
  }
  return i;
}
function e(e) {
  for (var i = 1; i < arguments.length; i++) {
    var a = null != arguments[i] ? arguments[i] : {};
    i % 2 ? t(Object(a), !0).forEach(function (t) {
      o(e, t, a[t]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(a)) : t(Object(a)).forEach(function (t) {
      Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(a, t));
    });
  }
  return e;
}
function i(t) {
  return i = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (t) {
    return typeof t;
  } : function (t) {
    return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
  }, i(t);
}
function a(t, e) {
  if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
}
function s(t, e) {
  for (var i = 0; i < e.length; i++) {
    var a = e[i];
    a.enumerable = a.enumerable || !1, a.configurable = !0, "value" in a && (a.writable = !0), Object.defineProperty(t, a.key, a);
  }
}
function r(t, e, i) {
  return e && s(t.prototype, e), i && s(t, i), t;
}
function o(t, e, i) {
  return e in t ? Object.defineProperty(t, e, {
    value: i,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : t[e] = i, t;
}
function n(t, e) {
  if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
  t.prototype = Object.create(e && e.prototype, {
    constructor: {
      value: t,
      writable: !0,
      configurable: !0
    }
  }), e && h(t, e);
}
function l(t) {
  return l = Object.setPrototypeOf ? Object.getPrototypeOf : function (t) {
    return t.__proto__ || Object.getPrototypeOf(t);
  }, l(t);
}
function h(t, e) {
  return h = Object.setPrototypeOf || function (t, e) {
    return t.__proto__ = e, t;
  }, h(t, e);
}
function c(t, e) {
  if (e && ("object" == typeof e || "function" == typeof e)) return e;
  if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
  return function (t) {
    if (void 0 === t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return t;
  }(t);
}
function d(t) {
  var e = function () {
    if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
    if (Reflect.construct.sham) return !1;
    if ("function" == typeof Proxy) return !0;
    try {
      return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})), !0;
    } catch (t) {
      return !1;
    }
  }();
  return function () {
    var i,
      a = l(t);
    if (e) {
      var s = l(this).constructor;
      i = Reflect.construct(a, arguments, s);
    } else i = a.apply(this, arguments);
    return c(this, i);
  };
}
function g(t, e) {
  return function (t) {
    if (Array.isArray(t)) return t;
  }(t) || function (t, e) {
    var i = null == t ? null : "undefined" != typeof Symbol && t[Symbol.iterator] || t["@@iterator"];
    if (null == i) return;
    var a,
      s,
      r = [],
      o = !0,
      n = !1;
    try {
      for (i = i.call(t); !(o = (a = i.next()).done) && (r.push(a.value), !e || r.length !== e); o = !0);
    } catch (t) {
      n = !0, s = t;
    } finally {
      try {
        o || null == i.return || i.return();
      } finally {
        if (n) throw s;
      }
    }
    return r;
  }(t, e) || p(t, e) || function () {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }();
}
function u(t) {
  return function (t) {
    if (Array.isArray(t)) return f(t);
  }(t) || function (t) {
    if ("undefined" != typeof Symbol && null != t[Symbol.iterator] || null != t["@@iterator"]) return Array.from(t);
  }(t) || p(t) || function () {
    throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }();
}
function p(t, e) {
  if (t) {
    if ("string" == typeof t) return f(t, e);
    var i = Object.prototype.toString.call(t).slice(8, -1);
    return "Object" === i && t.constructor && (i = t.constructor.name), "Map" === i || "Set" === i ? Array.from(t) : "Arguments" === i || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i) ? f(t, e) : void 0;
  }
}
function f(t, e) {
  (null == e || e > t.length) && (e = t.length);
  for (var i = 0, a = new Array(e); i < e; i++) a[i] = t[i];
  return a;
}
var x = function () {
    function t() {
      a(this, t);
    }
    return r(t, [{
      key: "shadeRGBColor",
      value: function (t, e) {
        var i = e.split(","),
          a = t < 0 ? 0 : 255,
          s = t < 0 ? -1 * t : t,
          r = parseInt(i[0].slice(4), 10),
          o = parseInt(i[1], 10),
          n = parseInt(i[2], 10);
        return "rgb(" + (Math.round((a - r) * s) + r) + "," + (Math.round((a - o) * s) + o) + "," + (Math.round((a - n) * s) + n) + ")";
      }
    }, {
      key: "shadeHexColor",
      value: function (t, e) {
        var i = parseInt(e.slice(1), 16),
          a = t < 0 ? 0 : 255,
          s = t < 0 ? -1 * t : t,
          r = i >> 16,
          o = i >> 8 & 255,
          n = 255 & i;
        return "#" + (16777216 + 65536 * (Math.round((a - r) * s) + r) + 256 * (Math.round((a - o) * s) + o) + (Math.round((a - n) * s) + n)).toString(16).slice(1);
      }
    }, {
      key: "shadeColor",
      value: function (e, i) {
        return t.isColorHex(i) ? this.shadeHexColor(e, i) : this.shadeRGBColor(e, i);
      }
    }], [{
      key: "bind",
      value: function (t, e) {
        return function () {
          return t.apply(e, arguments);
        };
      }
    }, {
      key: "isObject",
      value: function (t) {
        return t && "object" === i(t) && !Array.isArray(t) && null != t;
      }
    }, {
      key: "is",
      value: function (t, e) {
        return Object.prototype.toString.call(e) === "[object " + t + "]";
      }
    }, {
      key: "listToArray",
      value: function (t) {
        var e,
          i = [];
        for (e = 0; e < t.length; e++) i[e] = t[e];
        return i;
      }
    }, {
      key: "extend",
      value: function (t, e) {
        var i = this;
        "function" != typeof Object.assign && (Object.assign = function (t) {
          if (null == t) throw new TypeError("Cannot convert undefined or null to object");
          for (var e = Object(t), i = 1; i < arguments.length; i++) {
            var a = arguments[i];
            if (null != a) for (var s in a) a.hasOwnProperty(s) && (e[s] = a[s]);
          }
          return e;
        });
        var a = Object.assign({}, t);
        return this.isObject(t) && this.isObject(e) && Object.keys(e).forEach(function (s) {
          i.isObject(e[s]) && s in t ? a[s] = i.extend(t[s], e[s]) : Object.assign(a, o({}, s, e[s]));
        }), a;
      }
    }, {
      key: "extendArray",
      value: function (e, i) {
        var a = [];
        return e.map(function (e) {
          a.push(t.extend(i, e));
        }), e = a;
      }
    }, {
      key: "monthMod",
      value: function (t) {
        return t % 12;
      }
    }, {
      key: "clone",
      value: function (e) {
        if (t.is("Array", e)) {
          for (var a = [], s = 0; s < e.length; s++) a[s] = this.clone(e[s]);
          return a;
        }
        if (t.is("Null", e)) return null;
        if (t.is("Date", e)) return e;
        if ("object" === i(e)) {
          var r = {};
          for (var o in e) e.hasOwnProperty(o) && (r[o] = this.clone(e[o]));
          return r;
        }
        return e;
      }
    }, {
      key: "log10",
      value: function (t) {
        return Math.log(t) / Math.LN10;
      }
    }, {
      key: "roundToBase10",
      value: function (t) {
        return Math.pow(10, Math.floor(Math.log10(t)));
      }
    }, {
      key: "roundToBase",
      value: function (t, e) {
        return Math.pow(e, Math.floor(Math.log(t) / Math.log(e)));
      }
    }, {
      key: "parseNumber",
      value: function (t) {
        return null === t ? t : parseFloat(t);
      }
    }, {
      key: "randomId",
      value: function () {
        return (Math.random() + 1).toString(36).substring(4);
      }
    }, {
      key: "noExponents",
      value: function (t) {
        var e = String(t).split(/[eE]/);
        if (1 === e.length) return e[0];
        var i = "",
          a = t < 0 ? "-" : "",
          s = e[0].replace(".", ""),
          r = Number(e[1]) + 1;
        if (r < 0) {
          for (i = a + "0."; r++;) i += "0";
          return i + s.replace(/^-/, "");
        }
        for (r -= s.length; r--;) i += "0";
        return s + i;
      }
    }, {
      key: "getDimensions",
      value: function (t) {
        var e = getComputedStyle(t, null),
          i = t.clientHeight,
          a = t.clientWidth;
        return i -= parseFloat(e.paddingTop) + parseFloat(e.paddingBottom), [a -= parseFloat(e.paddingLeft) + parseFloat(e.paddingRight), i];
      }
    }, {
      key: "getBoundingClientRect",
      value: function (t) {
        var e = t.getBoundingClientRect();
        return {
          top: e.top,
          right: e.right,
          bottom: e.bottom,
          left: e.left,
          width: t.clientWidth,
          height: t.clientHeight,
          x: e.left,
          y: e.top
        };
      }
    }, {
      key: "getLargestStringFromArr",
      value: function (t) {
        return t.reduce(function (t, e) {
          return Array.isArray(e) && (e = e.reduce(function (t, e) {
            return t.length > e.length ? t : e;
          })), t.length > e.length ? t : e;
        }, 0);
      }
    }, {
      key: "hexToRgba",
      value: function () {
        var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "#999999",
          e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : .6;
        "#" !== t.substring(0, 1) && (t = "#999999");
        var i = t.replace("#", "");
        i = i.match(new RegExp("(.{" + i.length / 3 + "})", "g"));
        for (var a = 0; a < i.length; a++) i[a] = parseInt(1 === i[a].length ? i[a] + i[a] : i[a], 16);
        return void 0 !== e && i.push(e), "rgba(" + i.join(",") + ")";
      }
    }, {
      key: "getOpacityFromRGBA",
      value: function (t) {
        return parseFloat(t.replace(/^.*,(.+)\)/, "$1"));
      }
    }, {
      key: "rgb2hex",
      value: function (t) {
        return (t = t.match(/^rgba?[\s+]?\([\s+]?(\d+)[\s+]?,[\s+]?(\d+)[\s+]?,[\s+]?(\d+)[\s+]?/i)) && 4 === t.length ? "#" + ("0" + parseInt(t[1], 10).toString(16)).slice(-2) + ("0" + parseInt(t[2], 10).toString(16)).slice(-2) + ("0" + parseInt(t[3], 10).toString(16)).slice(-2) : "";
      }
    }, {
      key: "isColorHex",
      value: function (t) {
        return /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)|(^#[0-9A-F]{8}$)/i.test(t);
      }
    }, {
      key: "getPolygonPos",
      value: function (t, e) {
        for (var i = [], a = 2 * Math.PI / e, s = 0; s < e; s++) {
          var r = {};
          r.x = t * Math.sin(s * a), r.y = -t * Math.cos(s * a), i.push(r);
        }
        return i;
      }
    }, {
      key: "polarToCartesian",
      value: function (t, e, i, a) {
        var s = (a - 90) * Math.PI / 180;
        return {
          x: t + i * Math.cos(s),
          y: e + i * Math.sin(s)
        };
      }
    }, {
      key: "escapeString",
      value: function (t) {
        var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "x",
          i = t.toString().slice();
        return i = i.replace(/[` ~!@#$%^&*()|+\=?;:'",.<>{}[\]\\/]/gi, e);
      }
    }, {
      key: "negToZero",
      value: function (t) {
        return t < 0 ? 0 : t;
      }
    }, {
      key: "moveIndexInArray",
      value: function (t, e, i) {
        if (i >= t.length) for (var a = i - t.length + 1; a--;) t.push(void 0);
        return t.splice(i, 0, t.splice(e, 1)[0]), t;
      }
    }, {
      key: "extractNumber",
      value: function (t) {
        return parseFloat(t.replace(/[^\d.]*/g, ""));
      }
    }, {
      key: "findAncestor",
      value: function (t, e) {
        for (; (t = t.parentElement) && !t.classList.contains(e););
        return t;
      }
    }, {
      key: "setELstyles",
      value: function (t, e) {
        for (var i in e) e.hasOwnProperty(i) && (t.style.key = e[i]);
      }
    }, {
      key: "isNumber",
      value: function (t) {
        return !isNaN(t) && parseFloat(Number(t)) === t && !isNaN(parseInt(t, 10));
      }
    }, {
      key: "isFloat",
      value: function (t) {
        return Number(t) === t && t % 1 != 0;
      }
    }, {
      key: "isSafari",
      value: function () {
        return /^((?!chrome|android).)*safari/i.test(navigator.userAgent);
      }
    }, {
      key: "isFirefox",
      value: function () {
        return navigator.userAgent.toLowerCase().indexOf("firefox") > -1;
      }
    }, {
      key: "isIE11",
      value: function () {
        if (-1 !== window.navigator.userAgent.indexOf("MSIE") || window.navigator.appVersion.indexOf("Trident/") > -1) return !0;
      }
    }, {
      key: "isIE",
      value: function () {
        var t = window.navigator.userAgent,
          e = t.indexOf("MSIE ");
        if (e > 0) return parseInt(t.substring(e + 5, t.indexOf(".", e)), 10);
        if (t.indexOf("Trident/") > 0) {
          var i = t.indexOf("rv:");
          return parseInt(t.substring(i + 3, t.indexOf(".", i)), 10);
        }
        var a = t.indexOf("Edge/");
        return a > 0 && parseInt(t.substring(a + 5, t.indexOf(".", a)), 10);
      }
    }]), t;
  }(),
  b = function () {
    function t(e) {
      a(this, t), this.ctx = e, this.w = e.w, this.setEasingFunctions();
    }
    return r(t, [{
      key: "setEasingFunctions",
      value: function () {
        var t;
        if (!this.w.globals.easing) {
          switch (this.w.config.chart.animations.easing) {
            case "linear":
              t = "-";
              break;
            case "easein":
              t = "<";
              break;
            case "easeout":
              t = ">";
              break;
            case "easeinout":
            default:
              t = "<>";
              break;
            case "swing":
              t = function (t) {
                var e = 1.70158;
                return (t -= 1) * t * ((e + 1) * t + e) + 1;
              };
              break;
            case "bounce":
              t = function (t) {
                return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;
              };
              break;
            case "elastic":
              t = function (t) {
                return t === !!t ? t : Math.pow(2, -10 * t) * Math.sin((t - .075) * (2 * Math.PI) / .3) + 1;
              };
          }
          this.w.globals.easing = t;
        }
      }
    }, {
      key: "animateLine",
      value: function (t, e, i, a) {
        t.attr(e).animate(a).attr(i);
      }
    }, {
      key: "animateMarker",
      value: function (t, e, i, a, s, r) {
        e || (e = 0), t.attr({
          r: e,
          width: e,
          height: e
        }).animate(a, s).attr({
          r: i,
          width: i.width,
          height: i.height
        }).afterAll(function () {
          r();
        });
      }
    }, {
      key: "animateCircle",
      value: function (t, e, i, a, s) {
        t.attr({
          r: e.r,
          cx: e.cx,
          cy: e.cy
        }).animate(a, s).attr({
          r: i.r,
          cx: i.cx,
          cy: i.cy
        });
      }
    }, {
      key: "animateRect",
      value: function (t, e, i, a, s) {
        t.attr(e).animate(a).attr(i).afterAll(function () {
          return s();
        });
      }
    }, {
      key: "animatePathsGradually",
      value: function (t) {
        var e = t.el,
          i = t.realIndex,
          a = t.j,
          s = t.fill,
          r = t.pathFrom,
          o = t.pathTo,
          n = t.speed,
          l = t.delay,
          h = this.w,
          c = 0;
        h.config.chart.animations.animateGradually.enabled && (c = h.config.chart.animations.animateGradually.delay), h.config.chart.animations.dynamicAnimation.enabled && h.globals.dataChanged && "bar" !== h.config.chart.type && (c = 0), this.morphSVG(e, i, a, "line" !== h.config.chart.type || h.globals.comboCharts ? s : "stroke", r, o, n, l * c);
      }
    }, {
      key: "showDelayedElements",
      value: function () {
        this.w.globals.delayedElements.forEach(function (t) {
          var e = t.el;
          e.classList.remove("apexcharts-element-hidden"), e.classList.add("apexcharts-hidden-element-shown");
        });
      }
    }, {
      key: "animationCompleted",
      value: function (t) {
        var e = this.w;
        e.globals.animationEnded || (e.globals.animationEnded = !0, this.showDelayedElements(), "function" == typeof e.config.chart.events.animationEnd && e.config.chart.events.animationEnd(this.ctx, {
          el: t,
          w: e
        }));
      }
    }, {
      key: "morphSVG",
      value: function (t, e, i, a, s, r, o, n) {
        var l = this,
          h = this.w;
        s || (s = t.attr("pathFrom")), r || (r = t.attr("pathTo"));
        var c = function (t) {
          return "radar" === h.config.chart.type && (o = 1), "M 0 ".concat(h.globals.gridHeight);
        };
        (!s || s.indexOf("undefined") > -1 || s.indexOf("NaN") > -1) && (s = c()), (!r || r.indexOf("undefined") > -1 || r.indexOf("NaN") > -1) && (r = c()), h.globals.shouldAnimate || (o = 1), t.plot(s).animate(1, h.globals.easing, n).plot(s).animate(o, h.globals.easing, n).plot(r).afterAll(function () {
          x.isNumber(i) ? i === h.globals.series[h.globals.maxValsInArrayIndex].length - 2 && h.globals.shouldAnimate && l.animationCompleted(t) : "none" !== a && h.globals.shouldAnimate && (!h.globals.comboCharts && e === h.globals.series.length - 1 || h.globals.comboCharts) && l.animationCompleted(t), l.showDelayedElements();
        });
      }
    }]), t;
  }(),
  v = function () {
    function t(e) {
      a(this, t), this.ctx = e, this.w = e.w;
    }
    return r(t, [{
      key: "getDefaultFilter",
      value: function (t, e) {
        var i = this.w;
        t.unfilter(!0), new window.SVG.Filter().size("120%", "180%", "-5%", "-40%"), "none" !== i.config.states.normal.filter ? this.applyFilter(t, e, i.config.states.normal.filter.type, i.config.states.normal.filter.value) : i.config.chart.dropShadow.enabled && this.dropShadow(t, i.config.chart.dropShadow, e);
      }
    }, {
      key: "addNormalFilter",
      value: function (t, e) {
        var i = this.w;
        i.config.chart.dropShadow.enabled && !t.node.classList.contains("apexcharts-marker") && this.dropShadow(t, i.config.chart.dropShadow, e);
      }
    }, {
      key: "addLightenFilter",
      value: function (t, e, i) {
        var a = this,
          s = this.w,
          r = i.intensity;
        t.unfilter(!0);
        new window.SVG.Filter();
        t.filter(function (t) {
          var i = s.config.chart.dropShadow;
          (i.enabled ? a.addShadow(t, e, i) : t).componentTransfer({
            rgb: {
              type: "linear",
              slope: 1.5,
              intercept: r
            }
          });
        }), t.filterer.node.setAttribute("filterUnits", "userSpaceOnUse"), this._scaleFilterSize(t.filterer.node);
      }
    }, {
      key: "addDarkenFilter",
      value: function (t, e, i) {
        var a = this,
          s = this.w,
          r = i.intensity;
        t.unfilter(!0);
        new window.SVG.Filter();
        t.filter(function (t) {
          var i = s.config.chart.dropShadow;
          (i.enabled ? a.addShadow(t, e, i) : t).componentTransfer({
            rgb: {
              type: "linear",
              slope: r
            }
          });
        }), t.filterer.node.setAttribute("filterUnits", "userSpaceOnUse"), this._scaleFilterSize(t.filterer.node);
      }
    }, {
      key: "applyFilter",
      value: function (t, e, i) {
        var a = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : .5;
        switch (i) {
          case "none":
            this.addNormalFilter(t, e);
            break;
          case "lighten":
            this.addLightenFilter(t, e, {
              intensity: a
            });
            break;
          case "darken":
            this.addDarkenFilter(t, e, {
              intensity: a
            });
        }
      }
    }, {
      key: "addShadow",
      value: function (t, e, i) {
        var a = i.blur,
          s = i.top,
          r = i.left,
          o = i.color,
          n = i.opacity,
          l = t.flood(Array.isArray(o) ? o[e] : o, n).composite(t.sourceAlpha, "in").offset(r, s).gaussianBlur(a).merge(t.source);
        return t.blend(t.source, l);
      }
    }, {
      key: "dropShadow",
      value: function (t, e) {
        var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0,
          a = e.top,
          s = e.left,
          r = e.blur,
          o = e.color,
          n = e.opacity,
          l = e.noUserSpaceOnUse,
          h = this.w;
        return t.unfilter(!0), x.isIE() && "radialBar" === h.config.chart.type || (o = Array.isArray(o) ? o[i] : o, t.filter(function (t) {
          var e = null;
          e = x.isSafari() || x.isFirefox() || x.isIE() ? t.flood(o, n).composite(t.sourceAlpha, "in").offset(s, a).gaussianBlur(r) : t.flood(o, n).composite(t.sourceAlpha, "in").offset(s, a).gaussianBlur(r).merge(t.source), t.blend(t.source, e);
        }), l || t.filterer.node.setAttribute("filterUnits", "userSpaceOnUse"), this._scaleFilterSize(t.filterer.node)), t;
      }
    }, {
      key: "setSelectionFilter",
      value: function (t, e, i) {
        var a = this.w;
        if (void 0 !== a.globals.selectedDataPoints[e] && a.globals.selectedDataPoints[e].indexOf(i) > -1) {
          t.node.setAttribute("selected", !0);
          var s = a.config.states.active.filter;
          "none" !== s && this.applyFilter(t, e, s.type, s.value);
        }
      }
    }, {
      key: "_scaleFilterSize",
      value: function (t) {
        !function (e) {
          for (var i in e) e.hasOwnProperty(i) && t.setAttribute(i, e[i]);
        }({
          width: "200%",
          height: "200%",
          x: "-50%",
          y: "-50%"
        });
      }
    }]), t;
  }(),
  m = function () {
    function t(e) {
      a(this, t), this.ctx = e, this.w = e.w;
    }
    return r(t, [{
      key: "roundPathCorners",
      value: function (t, e) {
        function i(t, e, i) {
          var s = e.x - t.x,
            r = e.y - t.y,
            o = Math.sqrt(s * s + r * r);
          return a(t, e, Math.min(1, i / o));
        }
        function a(t, e, i) {
          return {
            x: t.x + (e.x - t.x) * i,
            y: t.y + (e.y - t.y) * i
          };
        }
        function s(t, e) {
          t.length > 2 && (t[t.length - 2] = e.x, t[t.length - 1] = e.y);
        }
        function r(t) {
          return {
            x: parseFloat(t[t.length - 2]),
            y: parseFloat(t[t.length - 1])
          };
        }
        t.indexOf("NaN") > -1 && (t = "");
        var o = t.split(/[,\s]/).reduce(function (t, e) {
            var i = e.match("([a-zA-Z])(.+)");
            return i ? (t.push(i[1]), t.push(i[2])) : t.push(e), t;
          }, []).reduce(function (t, e) {
            return parseFloat(e) == e && t.length ? t[t.length - 1].push(e) : t.push([e]), t;
          }, []),
          n = [];
        if (o.length > 1) {
          var l = r(o[0]),
            h = null;
          "Z" == o[o.length - 1][0] && o[0].length > 2 && (h = ["L", l.x, l.y], o[o.length - 1] = h), n.push(o[0]);
          for (var c = 1; c < o.length; c++) {
            var d = n[n.length - 1],
              g = o[c],
              u = g == h ? o[1] : o[c + 1];
            if (u && d && d.length > 2 && "L" == g[0] && u.length > 2 && "L" == u[0]) {
              var p,
                f,
                x = r(d),
                b = r(g),
                v = r(u);
              p = i(b, x, e), f = i(b, v, e), s(g, p), g.origPoint = b, n.push(g);
              var m = a(p, b, .5),
                y = a(b, f, .5),
                w = ["C", m.x, m.y, y.x, y.y, f.x, f.y];
              w.origPoint = b, n.push(w);
            } else n.push(g);
          }
          if (h) {
            var k = r(n[n.length - 1]);
            n.push(["Z"]), s(n[0], k);
          }
        } else n = o;
        return n.reduce(function (t, e) {
          return t + e.join(" ") + " ";
        }, "");
      }
    }, {
      key: "drawLine",
      value: function (t, e, i, a) {
        var s = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : "#a8a8a8",
          r = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : 0,
          o = arguments.length > 6 && void 0 !== arguments[6] ? arguments[6] : null,
          n = arguments.length > 7 && void 0 !== arguments[7] ? arguments[7] : "butt";
        return this.w.globals.dom.Paper.line().attr({
          x1: t,
          y1: e,
          x2: i,
          y2: a,
          stroke: s,
          "stroke-dasharray": r,
          "stroke-width": o,
          "stroke-linecap": n
        });
      }
    }, {
      key: "drawRect",
      value: function () {
        var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0,
          e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0,
          i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0,
          a = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 0,
          s = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 0,
          r = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : "#fefefe",
          o = arguments.length > 6 && void 0 !== arguments[6] ? arguments[6] : 1,
          n = arguments.length > 7 && void 0 !== arguments[7] ? arguments[7] : null,
          l = arguments.length > 8 && void 0 !== arguments[8] ? arguments[8] : null,
          h = arguments.length > 9 && void 0 !== arguments[9] ? arguments[9] : 0,
          c = this.w.globals.dom.Paper.rect();
        return c.attr({
          x: t,
          y: e,
          width: i > 0 ? i : 0,
          height: a > 0 ? a : 0,
          rx: s,
          ry: s,
          opacity: o,
          "stroke-width": null !== n ? n : 0,
          stroke: null !== l ? l : "none",
          "stroke-dasharray": h
        }), c.node.setAttribute("fill", r), c;
      }
    }, {
      key: "drawPolygon",
      value: function (t) {
        var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "#e1e1e1",
          i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 1,
          a = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : "none";
        return this.w.globals.dom.Paper.polygon(t).attr({
          fill: a,
          stroke: e,
          "stroke-width": i
        });
      }
    }, {
      key: "drawCircle",
      value: function (t) {
        var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null;
        t < 0 && (t = 0);
        var i = this.w.globals.dom.Paper.circle(2 * t);
        return null !== e && i.attr(e), i;
      }
    }, {
      key: "drawPath",
      value: function (t) {
        var e = t.d,
          i = void 0 === e ? "" : e,
          a = t.stroke,
          s = void 0 === a ? "#a8a8a8" : a,
          r = t.strokeWidth,
          o = void 0 === r ? 1 : r,
          n = t.fill,
          l = t.fillOpacity,
          h = void 0 === l ? 1 : l,
          c = t.strokeOpacity,
          d = void 0 === c ? 1 : c,
          g = t.classes,
          u = t.strokeLinecap,
          p = void 0 === u ? null : u,
          f = t.strokeDashArray,
          x = void 0 === f ? 0 : f,
          b = this.w;
        return null === p && (p = b.config.stroke.lineCap), (i.indexOf("undefined") > -1 || i.indexOf("NaN") > -1) && (i = "M 0 ".concat(b.globals.gridHeight)), b.globals.dom.Paper.path(i).attr({
          fill: n,
          "fill-opacity": h,
          stroke: s,
          "stroke-opacity": d,
          "stroke-linecap": p,
          "stroke-width": o,
          "stroke-dasharray": x,
          class: g
        });
      }
    }, {
      key: "group",
      value: function () {
        var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null,
          e = this.w.globals.dom.Paper.group();
        return null !== t && e.attr(t), e;
      }
    }, {
      key: "move",
      value: function (t, e) {
        var i = ["M", t, e].join(" ");
        return i;
      }
    }, {
      key: "line",
      value: function (t, e) {
        var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null,
          a = null;
        return null === i ? a = [" L", t, e].join(" ") : "H" === i ? a = [" H", t].join(" ") : "V" === i && (a = [" V", e].join(" ")), a;
      }
    }, {
      key: "curve",
      value: function (t, e, i, a, s, r) {
        var o = ["C", t, e, i, a, s, r].join(" ");
        return o;
      }
    }, {
      key: "quadraticCurve",
      value: function (t, e, i, a) {
        return ["Q", t, e, i, a].join(" ");
      }
    }, {
      key: "arc",
      value: function (t, e, i, a, s, r, o) {
        var n = "A";
        arguments.length > 7 && void 0 !== arguments[7] && arguments[7] && (n = "a");
        var l = [n, t, e, i, a, s, r, o].join(" ");
        return l;
      }
    }, {
      key: "renderPaths",
      value: function (t) {
        var i,
          a = t.j,
          s = t.realIndex,
          r = t.pathFrom,
          o = t.pathTo,
          n = t.stroke,
          l = t.strokeWidth,
          h = t.strokeLinecap,
          c = t.fill,
          d = t.animationDelay,
          g = t.initialSpeed,
          u = t.dataChangeSpeed,
          p = t.className,
          f = t.shouldClipToGrid,
          x = void 0 === f || f,
          m = t.bindEventsOnPaths,
          y = void 0 === m || m,
          w = t.drawShadow,
          k = void 0 === w || w,
          A = this.w,
          S = new v(this.ctx),
          C = new b(this.ctx),
          L = this.w.config.chart.animations.enabled,
          P = L && this.w.config.chart.animations.dynamicAnimation.enabled,
          I = !!(L && !A.globals.resized || P && A.globals.dataChanged && A.globals.shouldAnimate);
        I ? i = r : (i = o, A.globals.animationEnded = !0);
        var T = A.config.stroke.dashArray,
          M = 0;
        M = Array.isArray(T) ? T[s] : A.config.stroke.dashArray;
        var X = this.drawPath({
          d: i,
          stroke: n,
          strokeWidth: l,
          fill: c,
          fillOpacity: 1,
          classes: p,
          strokeLinecap: h,
          strokeDashArray: M
        });
        if (X.attr("index", s), x && X.attr({
          "clip-path": "url(#gridRectMask".concat(A.globals.cuid, ")")
        }), "none" !== A.config.states.normal.filter.type) S.getDefaultFilter(X, s);else if (A.config.chart.dropShadow.enabled && k && (!A.config.chart.dropShadow.enabledOnSeries || A.config.chart.dropShadow.enabledOnSeries && -1 !== A.config.chart.dropShadow.enabledOnSeries.indexOf(s))) {
          var z = A.config.chart.dropShadow;
          S.dropShadow(X, z, s);
        }
        y && (X.node.addEventListener("mouseenter", this.pathMouseEnter.bind(this, X)), X.node.addEventListener("mouseleave", this.pathMouseLeave.bind(this, X)), X.node.addEventListener("mousedown", this.pathMouseDown.bind(this, X))), X.attr({
          pathTo: o,
          pathFrom: r
        });
        var E = {
          el: X,
          j: a,
          realIndex: s,
          pathFrom: r,
          pathTo: o,
          fill: c,
          strokeWidth: l,
          delay: d
        };
        return !L || A.globals.resized || A.globals.dataChanged ? !A.globals.resized && A.globals.dataChanged || C.showDelayedElements() : C.animatePathsGradually(e(e({}, E), {}, {
          speed: g
        })), A.globals.dataChanged && P && I && C.animatePathsGradually(e(e({}, E), {}, {
          speed: u
        })), X;
      }
    }, {
      key: "drawPattern",
      value: function (t, e, i) {
        var a = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : "#a8a8a8",
          s = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 0;
        return this.w.globals.dom.Paper.pattern(e, i, function (r) {
          "horizontalLines" === t ? r.line(0, 0, i, 0).stroke({
            color: a,
            width: s + 1
          }) : "verticalLines" === t ? r.line(0, 0, 0, e).stroke({
            color: a,
            width: s + 1
          }) : "slantedLines" === t ? r.line(0, 0, e, i).stroke({
            color: a,
            width: s
          }) : "squares" === t ? r.rect(e, i).fill("none").stroke({
            color: a,
            width: s
          }) : "circles" === t && r.circle(e).fill("none").stroke({
            color: a,
            width: s
          });
        });
      }
    }, {
      key: "drawGradient",
      value: function (t, e, i, a, s) {
        var r,
          o = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : null,
          n = arguments.length > 6 && void 0 !== arguments[6] ? arguments[6] : null,
          l = arguments.length > 7 && void 0 !== arguments[7] ? arguments[7] : null,
          h = arguments.length > 8 && void 0 !== arguments[8] ? arguments[8] : 0,
          c = this.w;
        e.length < 9 && 0 === e.indexOf("#") && (e = x.hexToRgba(e, a)), i.length < 9 && 0 === i.indexOf("#") && (i = x.hexToRgba(i, s));
        var d = 0,
          g = 1,
          u = 1,
          p = null;
        null !== n && (d = void 0 !== n[0] ? n[0] / 100 : 0, g = void 0 !== n[1] ? n[1] / 100 : 1, u = void 0 !== n[2] ? n[2] / 100 : 1, p = void 0 !== n[3] ? n[3] / 100 : null);
        var f = !("donut" !== c.config.chart.type && "pie" !== c.config.chart.type && "polarArea" !== c.config.chart.type && "bubble" !== c.config.chart.type);
        if (r = null === l || 0 === l.length ? c.globals.dom.Paper.gradient(f ? "radial" : "linear", function (t) {
          t.at(d, e, a), t.at(g, i, s), t.at(u, i, s), null !== p && t.at(p, e, a);
        }) : c.globals.dom.Paper.gradient(f ? "radial" : "linear", function (t) {
          (Array.isArray(l[h]) ? l[h] : l).forEach(function (e) {
            t.at(e.offset / 100, e.color, e.opacity);
          });
        }), f) {
          var b = c.globals.gridWidth / 2,
            v = c.globals.gridHeight / 2;
          "bubble" !== c.config.chart.type ? r.attr({
            gradientUnits: "userSpaceOnUse",
            cx: b,
            cy: v,
            r: o
          }) : r.attr({
            cx: .5,
            cy: .5,
            r: .8,
            fx: .2,
            fy: .2
          });
        } else "vertical" === t ? r.from(0, 0).to(0, 1) : "diagonal" === t ? r.from(0, 0).to(1, 1) : "horizontal" === t ? r.from(0, 1).to(1, 1) : "diagonal2" === t && r.from(1, 0).to(0, 1);
        return r;
      }
    }, {
      key: "getTextBasedOnMaxWidth",
      value: function (t) {
        var e = t.text,
          i = t.maxWidth,
          a = t.fontSize,
          s = t.fontFamily,
          r = this.getTextRects(e, a, s),
          o = r.width / e.length,
          n = Math.floor(i / o);
        return i < r.width ? e.slice(0, n - 3) + "..." : e;
      }
    }, {
      key: "drawText",
      value: function (t) {
        var i = this,
          a = t.x,
          s = t.y,
          r = t.text,
          o = t.textAnchor,
          n = t.fontSize,
          l = t.fontFamily,
          h = t.fontWeight,
          c = t.foreColor,
          d = t.opacity,
          g = t.maxWidth,
          u = t.cssClass,
          p = void 0 === u ? "" : u,
          f = t.isPlainText,
          x = void 0 === f || f,
          b = this.w;
        void 0 === r && (r = "");
        var v = r;
        o || (o = "start"), c && c.length || (c = b.config.chart.foreColor), l = l || b.config.chart.fontFamily, h = h || "regular";
        var m,
          y = {
            maxWidth: g,
            fontSize: n = n || "11px",
            fontFamily: l
          };
        return Array.isArray(r) ? m = b.globals.dom.Paper.text(function (t) {
          for (var a = 0; a < r.length; a++) v = r[a], g && (v = i.getTextBasedOnMaxWidth(e({
            text: r[a]
          }, y))), 0 === a ? t.tspan(v) : t.tspan(v).newLine();
        }) : (g && (v = this.getTextBasedOnMaxWidth(e({
          text: r
        }, y))), m = x ? b.globals.dom.Paper.plain(r) : b.globals.dom.Paper.text(function (t) {
          return t.tspan(v);
        })), m.attr({
          x: a,
          y: s,
          "text-anchor": o,
          "dominant-baseline": "auto",
          "font-size": n,
          "font-family": l,
          "font-weight": h,
          fill: c,
          class: "apexcharts-text " + p
        }), m.node.style.fontFamily = l, m.node.style.opacity = d, m;
      }
    }, {
      key: "drawMarker",
      value: function (t, e, i) {
        t = t || 0;
        var a = i.pSize || 0,
          s = null;
        if ("square" === i.shape || "rect" === i.shape) {
          var r = void 0 === i.pRadius ? a / 2 : i.pRadius;
          null !== e && a || (a = 0, r = 0);
          var o = 1.2 * a + r,
            n = this.drawRect(o, o, o, o, r);
          n.attr({
            x: t - o / 2,
            y: e - o / 2,
            cx: t,
            cy: e,
            class: i.class ? i.class : "",
            fill: i.pointFillColor,
            "fill-opacity": i.pointFillOpacity ? i.pointFillOpacity : 1,
            stroke: i.pointStrokeColor,
            "stroke-width": i.pointStrokeWidth ? i.pointStrokeWidth : 0,
            "stroke-opacity": i.pointStrokeOpacity ? i.pointStrokeOpacity : 1
          }), s = n;
        } else "circle" !== i.shape && i.shape || (x.isNumber(e) || (a = 0, e = 0), s = this.drawCircle(a, {
          cx: t,
          cy: e,
          class: i.class ? i.class : "",
          stroke: i.pointStrokeColor,
          fill: i.pointFillColor,
          "fill-opacity": i.pointFillOpacity ? i.pointFillOpacity : 1,
          "stroke-width": i.pointStrokeWidth ? i.pointStrokeWidth : 0,
          "stroke-opacity": i.pointStrokeOpacity ? i.pointStrokeOpacity : 1
        }));
        return s;
      }
    }, {
      key: "pathMouseEnter",
      value: function (t, e) {
        var i = this.w,
          a = new v(this.ctx),
          s = parseInt(t.node.getAttribute("index"), 10),
          r = parseInt(t.node.getAttribute("j"), 10);
        if ("function" == typeof i.config.chart.events.dataPointMouseEnter && i.config.chart.events.dataPointMouseEnter(e, this.ctx, {
          seriesIndex: s,
          dataPointIndex: r,
          w: i
        }), this.ctx.events.fireEvent("dataPointMouseEnter", [e, this.ctx, {
          seriesIndex: s,
          dataPointIndex: r,
          w: i
        }]), ("none" === i.config.states.active.filter.type || "true" !== t.node.getAttribute("selected")) && "none" !== i.config.states.hover.filter.type && !i.globals.isTouchDevice) {
          var o = i.config.states.hover.filter;
          a.applyFilter(t, s, o.type, o.value);
        }
      }
    }, {
      key: "pathMouseLeave",
      value: function (t, e) {
        var i = this.w,
          a = new v(this.ctx),
          s = parseInt(t.node.getAttribute("index"), 10),
          r = parseInt(t.node.getAttribute("j"), 10);
        "function" == typeof i.config.chart.events.dataPointMouseLeave && i.config.chart.events.dataPointMouseLeave(e, this.ctx, {
          seriesIndex: s,
          dataPointIndex: r,
          w: i
        }), this.ctx.events.fireEvent("dataPointMouseLeave", [e, this.ctx, {
          seriesIndex: s,
          dataPointIndex: r,
          w: i
        }]), "none" !== i.config.states.active.filter.type && "true" === t.node.getAttribute("selected") || "none" !== i.config.states.hover.filter.type && a.getDefaultFilter(t, s);
      }
    }, {
      key: "pathMouseDown",
      value: function (t, e) {
        var i = this.w,
          a = new v(this.ctx),
          s = parseInt(t.node.getAttribute("index"), 10),
          r = parseInt(t.node.getAttribute("j"), 10),
          o = "false";
        if ("true" === t.node.getAttribute("selected")) {
          if (t.node.setAttribute("selected", "false"), i.globals.selectedDataPoints[s].indexOf(r) > -1) {
            var n = i.globals.selectedDataPoints[s].indexOf(r);
            i.globals.selectedDataPoints[s].splice(n, 1);
          }
        } else {
          if (!i.config.states.active.allowMultipleDataPointsSelection && i.globals.selectedDataPoints.length > 0) {
            i.globals.selectedDataPoints = [];
            var l = i.globals.dom.Paper.select(".apexcharts-series path").members,
              h = i.globals.dom.Paper.select(".apexcharts-series circle, .apexcharts-series rect").members,
              c = function (t) {
                Array.prototype.forEach.call(t, function (t) {
                  t.node.setAttribute("selected", "false"), a.getDefaultFilter(t, s);
                });
              };
            c(l), c(h);
          }
          t.node.setAttribute("selected", "true"), o = "true", void 0 === i.globals.selectedDataPoints[s] && (i.globals.selectedDataPoints[s] = []), i.globals.selectedDataPoints[s].push(r);
        }
        if ("true" === o) {
          var d = i.config.states.active.filter;
          if ("none" !== d) a.applyFilter(t, s, d.type, d.value);else if ("none" !== i.config.states.hover.filter && !i.globals.isTouchDevice) {
            var g = i.config.states.hover.filter;
            a.applyFilter(t, s, g.type, g.value);
          }
        } else if ("none" !== i.config.states.active.filter.type) if ("none" === i.config.states.hover.filter.type || i.globals.isTouchDevice) a.getDefaultFilter(t, s);else {
          g = i.config.states.hover.filter;
          a.applyFilter(t, s, g.type, g.value);
        }
        "function" == typeof i.config.chart.events.dataPointSelection && i.config.chart.events.dataPointSelection(e, this.ctx, {
          selectedDataPoints: i.globals.selectedDataPoints,
          seriesIndex: s,
          dataPointIndex: r,
          w: i
        }), e && this.ctx.events.fireEvent("dataPointSelection", [e, this.ctx, {
          selectedDataPoints: i.globals.selectedDataPoints,
          seriesIndex: s,
          dataPointIndex: r,
          w: i
        }]);
      }
    }, {
      key: "rotateAroundCenter",
      value: function (t) {
        var e = {};
        return t && "function" == typeof t.getBBox && (e = t.getBBox()), {
          x: e.x + e.width / 2,
          y: e.y + e.height / 2
        };
      }
    }, {
      key: "getTextRects",
      value: function (t, e, i, a) {
        var s = !(arguments.length > 4 && void 0 !== arguments[4]) || arguments[4],
          r = this.w,
          o = this.drawText({
            x: -200,
            y: -200,
            text: t,
            textAnchor: "start",
            fontSize: e,
            fontFamily: i,
            foreColor: "#fff",
            opacity: 0
          });
        a && o.attr("transform", a), r.globals.dom.Paper.add(o);
        var n = o.bbox();
        return s || (n = o.node.getBoundingClientRect()), o.remove(), {
          width: n.width,
          height: n.height
        };
      }
    }, {
      key: "placeTextWithEllipsis",
      value: function (t, e, i) {
        if ("function" == typeof t.getComputedTextLength && (t.textContent = e, e.length > 0 && t.getComputedTextLength() >= i / 1.1)) {
          for (var a = e.length - 3; a > 0; a -= 3) if (t.getSubStringLength(0, a) <= i / 1.1) return void (t.textContent = e.substring(0, a) + "...");
          t.textContent = ".";
        }
      }
    }], [{
      key: "setAttrs",
      value: function (t, e) {
        for (var i in e) e.hasOwnProperty(i) && t.setAttribute(i, e[i]);
      }
    }]), t;
  }(),
  y = function () {
    function t(e) {
      a(this, t), this.ctx = e, this.w = e.w;
    }
    return r(t, [{
      key: "getStackedSeriesTotals",
      value: function () {
        var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [],
          e = this.w,
          i = [];
        if (0 === e.globals.series.length) return i;
        for (var a = 0; a < e.globals.series[e.globals.maxValsInArrayIndex].length; a++) {
          for (var s = 0, r = 0; r < e.globals.series.length; r++) void 0 !== e.globals.series[r][a] && -1 === t.indexOf(r) && (s += e.globals.series[r][a]);
          i.push(s);
        }
        return i;
      }
    }, {
      key: "getSeriesTotalByIndex",
      value: function () {
        var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null;
        return null === t ? this.w.config.series.reduce(function (t, e) {
          return t + e;
        }, 0) : this.w.globals.series[t].reduce(function (t, e) {
          return t + e;
        }, 0);
      }
    }, {
      key: "isSeriesNull",
      value: function () {
        var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null;
        return 0 === (null === t ? this.w.config.series.filter(function (t) {
          return null !== t;
        }) : this.w.config.series[t].data.filter(function (t) {
          return null !== t;
        })).length;
      }
    }, {
      key: "seriesHaveSameValues",
      value: function (t) {
        return this.w.globals.series[t].every(function (t, e, i) {
          return t === i[0];
        });
      }
    }, {
      key: "getCategoryLabels",
      value: function (t) {
        var e = this.w,
          i = t.slice();
        return e.config.xaxis.convertedCatToNumeric && (i = t.map(function (t, i) {
          return e.config.xaxis.labels.formatter(t - e.globals.minX + 1);
        })), i;
      }
    }, {
      key: "getLargestSeries",
      value: function () {
        var t = this.w;
        t.globals.maxValsInArrayIndex = t.globals.series.map(function (t) {
          return t.length;
        }).indexOf(Math.max.apply(Math, t.globals.series.map(function (t) {
          return t.length;
        })));
      }
    }, {
      key: "getLargestMarkerSize",
      value: function () {
        var t = this.w,
          e = 0;
        return t.globals.markers.size.forEach(function (t) {
          e = Math.max(e, t);
        }), t.config.markers.discrete && t.config.markers.discrete.length && t.config.markers.discrete.forEach(function (t) {
          e = Math.max(e, t.size);
        }), e > 0 && (e += t.config.markers.hover.sizeOffset + 1), t.globals.markers.largestSize = e, e;
      }
    }, {
      key: "getSeriesTotals",
      value: function () {
        var t = this.w;
        t.globals.seriesTotals = t.globals.series.map(function (t, e) {
          var i = 0;
          if (Array.isArray(t)) for (var a = 0; a < t.length; a++) i += t[a];else i += t;
          return i;
        });
      }
    }, {
      key: "getSeriesTotalsXRange",
      value: function (t, e) {
        var i = this.w;
        return i.globals.series.map(function (a, s) {
          for (var r = 0, o = 0; o < a.length; o++) i.globals.seriesX[s][o] > t && i.globals.seriesX[s][o] < e && (r += a[o]);
          return r;
        });
      }
    }, {
      key: "getPercentSeries",
      value: function () {
        var t = this.w;
        t.globals.seriesPercent = t.globals.series.map(function (e, i) {
          var a = [];
          if (Array.isArray(e)) for (var s = 0; s < e.length; s++) {
            var r = t.globals.stackedSeriesTotals[s],
              o = 0;
            r && (o = 100 * e[s] / r), a.push(o);
          } else {
            var n = 100 * e / t.globals.seriesTotals.reduce(function (t, e) {
              return t + e;
            }, 0);
            a.push(n);
          }
          return a;
        });
      }
    }, {
      key: "getCalculatedRatios",
      value: function () {
        var t,
          e,
          i,
          a,
          s = this.w.globals,
          r = [],
          o = 0,
          n = [],
          l = .1,
          h = 0;
        if (s.yRange = [], s.isMultipleYAxis) for (var c = 0; c < s.minYArr.length; c++) s.yRange.push(Math.abs(s.minYArr[c] - s.maxYArr[c])), n.push(0);else s.yRange.push(Math.abs(s.minY - s.maxY));
        s.xRange = Math.abs(s.maxX - s.minX), s.zRange = Math.abs(s.maxZ - s.minZ);
        for (var d = 0; d < s.yRange.length; d++) r.push(s.yRange[d] / s.gridHeight);
        if (e = s.xRange / s.gridWidth, i = Math.abs(s.initialMaxX - s.initialMinX) / s.gridWidth, t = s.yRange / s.gridWidth, a = s.xRange / s.gridHeight, (o = s.zRange / s.gridHeight * 16) || (o = 1), s.minY !== Number.MIN_VALUE && 0 !== Math.abs(s.minY) && (s.hasNegs = !0), s.isMultipleYAxis) {
          n = [];
          for (var g = 0; g < r.length; g++) n.push(-s.minYArr[g] / r[g]);
        } else n.push(-s.minY / r[0]), s.minY !== Number.MIN_VALUE && 0 !== Math.abs(s.minY) && (l = -s.minY / t, h = s.minX / e);
        return {
          yRatio: r,
          invertedYRatio: t,
          zRatio: o,
          xRatio: e,
          initialXRatio: i,
          invertedXRatio: a,
          baseLineInvertedY: l,
          baseLineY: n,
          baseLineX: h
        };
      }
    }, {
      key: "getLogSeries",
      value: function (t) {
        var e = this,
          i = this.w;
        return i.globals.seriesLog = t.map(function (t, a) {
          return i.config.yaxis[a] && i.config.yaxis[a].logarithmic ? t.map(function (t) {
            return null === t ? null : e.getLogVal(i.config.yaxis[a].logBase, t, a);
          }) : t;
        }), i.globals.invalidLogScale ? t : i.globals.seriesLog;
      }
    }, {
      key: "getBaseLog",
      value: function (t, e) {
        return Math.log(e) / Math.log(t);
      }
    }, {
      key: "getLogVal",
      value: function (t, e, i) {
        if (0 === e) return 0;
        var a = this.w,
          s = 0 === a.globals.minYArr[i] ? -1 : this.getBaseLog(t, a.globals.minYArr[i]),
          r = (0 === a.globals.maxYArr[i] ? 0 : this.getBaseLog(t, a.globals.maxYArr[i])) - s;
        return e < 1 ? e / r : (this.getBaseLog(t, e) - s) / r;
      }
    }, {
      key: "getLogYRatios",
      value: function (t) {
        var e = this,
          i = this.w,
          a = this.w.globals;
        return a.yLogRatio = t.slice(), a.logYRange = a.yRange.map(function (t, s) {
          if (i.config.yaxis[s] && e.w.config.yaxis[s].logarithmic) {
            var r,
              o = -Number.MAX_VALUE,
              n = Number.MIN_VALUE;
            return a.seriesLog.forEach(function (t, e) {
              t.forEach(function (t) {
                i.config.yaxis[e] && i.config.yaxis[e].logarithmic && (o = Math.max(t, o), n = Math.min(t, n));
              });
            }), r = Math.pow(a.yRange[s], Math.abs(n - o) / a.yRange[s]), a.yLogRatio[s] = r / a.gridHeight, r;
          }
        }), a.invalidLogScale ? t.slice() : a.yLogRatio;
      }
    }], [{
      key: "checkComboSeries",
      value: function (t) {
        var e = !1,
          i = 0,
          a = 0;
        return t.length && void 0 !== t[0].type && t.forEach(function (t) {
          "bar" !== t.type && "column" !== t.type && "candlestick" !== t.type && "boxPlot" !== t.type || i++, void 0 !== t.type && a++;
        }), a > 0 && (e = !0), {
          comboBarCount: i,
          comboCharts: e
        };
      }
    }, {
      key: "extendArrayProps",
      value: function (t, e, i) {
        return e.yaxis && (e = t.extendYAxis(e, i)), e.annotations && (e.annotations.yaxis && (e = t.extendYAxisAnnotations(e)), e.annotations.xaxis && (e = t.extendXAxisAnnotations(e)), e.annotations.points && (e = t.extendPointAnnotations(e))), e;
      }
    }]), t;
  }(),
  w = function () {
    function t(e) {
      a(this, t), this.w = e.w, this.annoCtx = e;
    }
    return r(t, [{
      key: "setOrientations",
      value: function (t) {
        var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null,
          i = this.w;
        if ("vertical" === t.label.orientation) {
          var a = null !== e ? e : 0,
            s = i.globals.dom.baseEl.querySelector(".apexcharts-xaxis-annotations .apexcharts-xaxis-annotation-label[rel='".concat(a, "']"));
          if (null !== s) {
            var r = s.getBoundingClientRect();
            s.setAttribute("x", parseFloat(s.getAttribute("x")) - r.height + 4), "top" === t.label.position ? s.setAttribute("y", parseFloat(s.getAttribute("y")) + r.width) : s.setAttribute("y", parseFloat(s.getAttribute("y")) - r.width);
            var o = this.annoCtx.graphics.rotateAroundCenter(s),
              n = o.x,
              l = o.y;
            s.setAttribute("transform", "rotate(-90 ".concat(n, " ").concat(l, ")"));
          }
        }
      }
    }, {
      key: "addBackgroundToAnno",
      value: function (t, e) {
        var i = this.w;
        if (!t || void 0 === e.label.text || void 0 !== e.label.text && !String(e.label.text).trim()) return null;
        var a = i.globals.dom.baseEl.querySelector(".apexcharts-grid").getBoundingClientRect(),
          s = t.getBoundingClientRect(),
          r = e.label.style.padding.left,
          o = e.label.style.padding.right,
          n = e.label.style.padding.top,
          l = e.label.style.padding.bottom;
        "vertical" === e.label.orientation && (n = e.label.style.padding.left, l = e.label.style.padding.right, r = e.label.style.padding.top, o = e.label.style.padding.bottom);
        var h = s.left - a.left - r,
          c = s.top - a.top - n,
          d = this.annoCtx.graphics.drawRect(h - i.globals.barPadForNumericAxis, c, s.width + r + o, s.height + n + l, e.label.borderRadius, e.label.style.background, 1, e.label.borderWidth, e.label.borderColor, 0);
        return e.id && d.node.classList.add(e.id), d;
      }
    }, {
      key: "annotationsBackground",
      value: function () {
        var t = this,
          e = this.w,
          i = function (i, a, s) {
            var r = e.globals.dom.baseEl.querySelector(".apexcharts-".concat(s, "-annotations .apexcharts-").concat(s, "-annotation-label[rel='").concat(a, "']"));
            if (r) {
              var o = r.parentNode,
                n = t.addBackgroundToAnno(r, i);
              n && (o.insertBefore(n.node, r), i.label.mouseEnter && n.node.addEventListener("mouseenter", i.label.mouseEnter.bind(t, i)), i.label.mouseLeave && n.node.addEventListener("mouseleave", i.label.mouseLeave.bind(t, i)), i.label.click && n.node.addEventListener("click", i.label.click.bind(t, i)));
            }
          };
        e.config.annotations.xaxis.map(function (t, e) {
          i(t, e, "xaxis");
        }), e.config.annotations.yaxis.map(function (t, e) {
          i(t, e, "yaxis");
        }), e.config.annotations.points.map(function (t, e) {
          i(t, e, "point");
        });
      }
    }, {
      key: "getY1Y2",
      value: function (t, e) {
        var i,
          a = "y1" === t ? e.y : e.y2,
          s = this.w;
        if (this.annoCtx.invertAxis) {
          var r = s.globals.labels.indexOf(a);
          s.config.xaxis.convertedCatToNumeric && (r = s.globals.categoryLabels.indexOf(a));
          var o = s.globals.dom.baseEl.querySelector(".apexcharts-yaxis-texts-g text:nth-child(" + (r + 1) + ")");
          o && (i = parseFloat(o.getAttribute("y")));
        } else {
          var n;
          if (s.config.yaxis[e.yAxisIndex].logarithmic) n = (a = new y(this.annoCtx.ctx).getLogVal(a, e.yAxisIndex)) / s.globals.yLogRatio[e.yAxisIndex];else n = (a - s.globals.minYArr[e.yAxisIndex]) / (s.globals.yRange[e.yAxisIndex] / s.globals.gridHeight);
          i = s.globals.gridHeight - n, !e.marker || void 0 !== e.y && null !== e.y || (i = 0), s.config.yaxis[e.yAxisIndex] && s.config.yaxis[e.yAxisIndex].reversed && (i = n);
        }
        return "string" == typeof a && a.indexOf("px") > -1 && (i = parseFloat(a)), i;
      }
    }, {
      key: "getX1X2",
      value: function (t, e) {
        var i = this.w,
          a = this.annoCtx.invertAxis ? i.globals.minY : i.globals.minX,
          s = this.annoCtx.invertAxis ? i.globals.maxY : i.globals.maxX,
          r = this.annoCtx.invertAxis ? i.globals.yRange[0] : i.globals.xRange,
          o = (e.x - a) / (r / i.globals.gridWidth);
        this.annoCtx.inversedReversedAxis && (o = (s - e.x) / (r / i.globals.gridWidth)), "category" !== i.config.xaxis.type && !i.config.xaxis.convertedCatToNumeric || this.annoCtx.invertAxis || i.globals.dataFormatXNumeric || (o = this.getStringX(e.x));
        var n = (e.x2 - a) / (r / i.globals.gridWidth);
        return this.annoCtx.inversedReversedAxis && (n = (s - e.x2) / (r / i.globals.gridWidth)), "category" !== i.config.xaxis.type && !i.config.xaxis.convertedCatToNumeric || this.annoCtx.invertAxis || i.globals.dataFormatXNumeric || (n = this.getStringX(e.x2)), void 0 !== e.x && null !== e.x || !e.marker || (o = i.globals.gridWidth), "x1" === t && "string" == typeof e.x && e.x.indexOf("px") > -1 && (o = parseFloat(e.x)), "x2" === t && "string" == typeof e.x2 && e.x2.indexOf("px") > -1 && (n = parseFloat(e.x2)), "x1" === t ? o : n;
      }
    }, {
      key: "getStringX",
      value: function (t) {
        var e = this.w,
          i = t;
        e.config.xaxis.convertedCatToNumeric && e.globals.categoryLabels.length && (t = e.globals.categoryLabels.indexOf(t) + 1);
        var a = e.globals.labels.indexOf(t),
          s = e.globals.dom.baseEl.querySelector(".apexcharts-xaxis-texts-g text:nth-child(" + (a + 1) + ")");
        return s && (i = parseFloat(s.getAttribute("x"))), i;
      }
    }]), t;
  }(),
  k = function () {
    function t(e) {
      a(this, t), this.w = e.w, this.annoCtx = e, this.invertAxis = this.annoCtx.invertAxis, this.helpers = new w(this.annoCtx);
    }
    return r(t, [{
      key: "addXaxisAnnotation",
      value: function (t, e, i) {
        var a,
          s = this.w,
          r = this.helpers.getX1X2("x1", t),
          o = t.label.text,
          n = t.strokeDashArray;
        if (x.isNumber(r)) {
          if (null === t.x2 || void 0 === t.x2) {
            var l = this.annoCtx.graphics.drawLine(r + t.offsetX, 0 + t.offsetY, r + t.offsetX, s.globals.gridHeight + t.offsetY, t.borderColor, n, t.borderWidth);
            e.appendChild(l.node), t.id && l.node.classList.add(t.id);
          } else {
            if ((a = this.helpers.getX1X2("x2", t)) < r) {
              var h = r;
              r = a, a = h;
            }
            var c = this.annoCtx.graphics.drawRect(r + t.offsetX, 0 + t.offsetY, a - r, s.globals.gridHeight + t.offsetY, 0, t.fillColor, t.opacity, 1, t.borderColor, n);
            c.node.classList.add("apexcharts-annotation-rect"), c.attr("clip-path", "url(#gridRectMask".concat(s.globals.cuid, ")")), e.appendChild(c.node), t.id && c.node.classList.add(t.id);
          }
          var d = this.annoCtx.graphics.getTextRects(o, parseFloat(t.label.style.fontSize)),
            g = "top" === t.label.position ? 4 : "center" === t.label.position ? s.globals.gridHeight / 2 + ("vertical" === t.label.orientation ? d.width / 2 : 0) : s.globals.gridHeight,
            u = this.annoCtx.graphics.drawText({
              x: r + t.label.offsetX,
              y: g + t.label.offsetY - ("vertical" === t.label.orientation ? "top" === t.label.position ? d.width / 2 - 12 : -d.width / 2 : 0),
              text: o,
              textAnchor: t.label.textAnchor,
              fontSize: t.label.style.fontSize,
              fontFamily: t.label.style.fontFamily,
              fontWeight: t.label.style.fontWeight,
              foreColor: t.label.style.color,
              cssClass: "apexcharts-xaxis-annotation-label ".concat(t.label.style.cssClass, " ").concat(t.id ? t.id : "")
            });
          u.attr({
            rel: i
          }), e.appendChild(u.node), this.annoCtx.helpers.setOrientations(t, i);
        }
      }
    }, {
      key: "drawXAxisAnnotations",
      value: function () {
        var t = this,
          e = this.w,
          i = this.annoCtx.graphics.group({
            class: "apexcharts-xaxis-annotations"
          });
        return e.config.annotations.xaxis.map(function (e, a) {
          t.addXaxisAnnotation(e, i.node, a);
        }), i;
      }
    }]), t;
  }(),
  A = function () {
    function t(e) {
      a(this, t), this.w = e.w, this.annoCtx = e, this.helpers = new w(this.annoCtx);
    }
    return r(t, [{
      key: "addYaxisAnnotation",
      value: function (t, e, i) {
        var a,
          s = this.w,
          r = t.strokeDashArray,
          o = this.helpers.getY1Y2("y1", t),
          n = t.label.text;
        if (null === t.y2 || void 0 === t.y2) {
          var l = this.annoCtx.graphics.drawLine(0 + t.offsetX, o + t.offsetY, this._getYAxisAnnotationWidth(t), o + t.offsetY, t.borderColor, r, t.borderWidth);
          e.appendChild(l.node), t.id && l.node.classList.add(t.id);
        } else {
          if ((a = this.helpers.getY1Y2("y2", t)) > o) {
            var h = o;
            o = a, a = h;
          }
          var c = this.annoCtx.graphics.drawRect(0 + t.offsetX, a + t.offsetY, this._getYAxisAnnotationWidth(t), o - a, 0, t.fillColor, t.opacity, 1, t.borderColor, r);
          c.node.classList.add("apexcharts-annotation-rect"), c.attr("clip-path", "url(#gridRectMask".concat(s.globals.cuid, ")")), e.appendChild(c.node), t.id && c.node.classList.add(t.id);
        }
        var d = "right" === t.label.position ? s.globals.gridWidth : "center" === t.label.position ? s.globals.gridWidth / 2 : 0,
          g = this.annoCtx.graphics.drawText({
            x: d + t.label.offsetX,
            y: (null != a ? a : o) + t.label.offsetY - 3,
            text: n,
            textAnchor: t.label.textAnchor,
            fontSize: t.label.style.fontSize,
            fontFamily: t.label.style.fontFamily,
            fontWeight: t.label.style.fontWeight,
            foreColor: t.label.style.color,
            cssClass: "apexcharts-yaxis-annotation-label ".concat(t.label.style.cssClass, " ").concat(t.id ? t.id : "")
          });
        g.attr({
          rel: i
        }), e.appendChild(g.node);
      }
    }, {
      key: "_getYAxisAnnotationWidth",
      value: function (t) {
        var e = this.w;
        e.globals.gridWidth;
        return (t.width.indexOf("%") > -1 ? e.globals.gridWidth * parseInt(t.width, 10) / 100 : parseInt(t.width, 10)) + t.offsetX;
      }
    }, {
      key: "drawYAxisAnnotations",
      value: function () {
        var t = this,
          e = this.w,
          i = this.annoCtx.graphics.group({
            class: "apexcharts-yaxis-annotations"
          });
        return e.config.annotations.yaxis.map(function (e, a) {
          t.addYaxisAnnotation(e, i.node, a);
        }), i;
      }
    }]), t;
  }(),
  S = function () {
    function t(e) {
      a(this, t), this.w = e.w, this.annoCtx = e, this.helpers = new w(this.annoCtx);
    }
    return r(t, [{
      key: "addPointAnnotation",
      value: function (t, e, i) {
        this.w;
        var a = this.helpers.getX1X2("x1", t),
          s = this.helpers.getY1Y2("y1", t);
        if (x.isNumber(a)) {
          var r = {
              pSize: t.marker.size,
              pointStrokeWidth: t.marker.strokeWidth,
              pointFillColor: t.marker.fillColor,
              pointStrokeColor: t.marker.strokeColor,
              shape: t.marker.shape,
              pRadius: t.marker.radius,
              class: "apexcharts-point-annotation-marker ".concat(t.marker.cssClass, " ").concat(t.id ? t.id : "")
            },
            o = this.annoCtx.graphics.drawMarker(a + t.marker.offsetX, s + t.marker.offsetY, r);
          e.appendChild(o.node);
          var n = t.label.text ? t.label.text : "",
            l = this.annoCtx.graphics.drawText({
              x: a + t.label.offsetX,
              y: s + t.label.offsetY - t.marker.size - parseFloat(t.label.style.fontSize) / 1.6,
              text: n,
              textAnchor: t.label.textAnchor,
              fontSize: t.label.style.fontSize,
              fontFamily: t.label.style.fontFamily,
              fontWeight: t.label.style.fontWeight,
              foreColor: t.label.style.color,
              cssClass: "apexcharts-point-annotation-label ".concat(t.label.style.cssClass, " ").concat(t.id ? t.id : "")
            });
          if (l.attr({
            rel: i
          }), e.appendChild(l.node), t.customSVG.SVG) {
            var h = this.annoCtx.graphics.group({
              class: "apexcharts-point-annotations-custom-svg " + t.customSVG.cssClass
            });
            h.attr({
              transform: "translate(".concat(a + t.customSVG.offsetX, ", ").concat(s + t.customSVG.offsetY, ")")
            }), h.node.innerHTML = t.customSVG.SVG, e.appendChild(h.node);
          }
          if (t.image.path) {
            var c = t.image.width ? t.image.width : 20,
              d = t.image.height ? t.image.height : 20;
            o = this.annoCtx.addImage({
              x: a + t.image.offsetX - c / 2,
              y: s + t.image.offsetY - d / 2,
              width: c,
              height: d,
              path: t.image.path,
              appendTo: ".apexcharts-point-annotations"
            });
          }
          t.mouseEnter && o.node.addEventListener("mouseenter", t.mouseEnter.bind(this, t)), t.mouseLeave && o.node.addEventListener("mouseleave", t.mouseLeave.bind(this, t)), t.click && o.node.addEventListener("click", t.click.bind(this, t));
        }
      }
    }, {
      key: "drawPointAnnotations",
      value: function () {
        var t = this,
          e = this.w,
          i = this.annoCtx.graphics.group({
            class: "apexcharts-point-annotations"
          });
        return e.config.annotations.points.map(function (e, a) {
          t.addPointAnnotation(e, i.node, a);
        }), i;
      }
    }]), t;
  }();
var C = {
    name: "en",
    options: {
      months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
      shortMonths: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
      days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
      shortDays: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
      toolbar: {
        exportToSVG: "Download SVG",
        exportToPNG: "Download PNG",
        exportToCSV: "Download CSV",
        menu: "Menu",
        selection: "Selection",
        selectionZoom: "Selection Zoom",
        zoomIn: "Zoom In",
        zoomOut: "Zoom Out",
        pan: "Panning",
        reset: "Reset Zoom"
      }
    }
  },
  L = function () {
    function t() {
      a(this, t), this.yAxis = {
        show: !0,
        showAlways: !1,
        showForNullSeries: !0,
        seriesName: void 0,
        opposite: !1,
        reversed: !1,
        logarithmic: !1,
        logBase: 10,
        tickAmount: void 0,
        forceNiceScale: !1,
        max: void 0,
        min: void 0,
        floating: !1,
        decimalsInFloat: void 0,
        labels: {
          show: !0,
          minWidth: 0,
          maxWidth: 160,
          offsetX: 0,
          offsetY: 0,
          align: void 0,
          rotate: 0,
          padding: 20,
          style: {
            colors: [],
            fontSize: "11px",
            fontWeight: 400,
            fontFamily: void 0,
            cssClass: ""
          },
          formatter: void 0
        },
        axisBorder: {
          show: !1,
          color: "#e0e0e0",
          width: 1,
          offsetX: 0,
          offsetY: 0
        },
        axisTicks: {
          show: !1,
          color: "#e0e0e0",
          width: 6,
          offsetX: 0,
          offsetY: 0
        },
        title: {
          text: void 0,
          rotate: -90,
          offsetY: 0,
          offsetX: 0,
          style: {
            color: void 0,
            fontSize: "11px",
            fontWeight: 900,
            fontFamily: void 0,
            cssClass: ""
          }
        },
        tooltip: {
          enabled: !1,
          offsetX: 0
        },
        crosshairs: {
          show: !0,
          position: "front",
          stroke: {
            color: "#b6b6b6",
            width: 1,
            dashArray: 0
          }
        }
      }, this.pointAnnotation = {
        id: void 0,
        x: 0,
        y: null,
        yAxisIndex: 0,
        seriesIndex: 0,
        mouseEnter: void 0,
        mouseLeave: void 0,
        click: void 0,
        marker: {
          size: 4,
          fillColor: "#fff",
          strokeWidth: 2,
          strokeColor: "#333",
          shape: "circle",
          offsetX: 0,
          offsetY: 0,
          radius: 2,
          cssClass: ""
        },
        label: {
          borderColor: "#c2c2c2",
          borderWidth: 1,
          borderRadius: 2,
          text: void 0,
          textAnchor: "middle",
          offsetX: 0,
          offsetY: 0,
          mouseEnter: void 0,
          mouseLeave: void 0,
          click: void 0,
          style: {
            background: "#fff",
            color: void 0,
            fontSize: "11px",
            fontFamily: void 0,
            fontWeight: 400,
            cssClass: "",
            padding: {
              left: 5,
              right: 5,
              top: 2,
              bottom: 2
            }
          }
        },
        customSVG: {
          SVG: void 0,
          cssClass: void 0,
          offsetX: 0,
          offsetY: 0
        },
        image: {
          path: void 0,
          width: 20,
          height: 20,
          offsetX: 0,
          offsetY: 0
        }
      }, this.yAxisAnnotation = {
        id: void 0,
        y: 0,
        y2: null,
        strokeDashArray: 1,
        fillColor: "#c2c2c2",
        borderColor: "#c2c2c2",
        borderWidth: 1,
        opacity: .3,
        offsetX: 0,
        offsetY: 0,
        width: "100%",
        yAxisIndex: 0,
        label: {
          borderColor: "#c2c2c2",
          borderWidth: 1,
          borderRadius: 2,
          text: void 0,
          textAnchor: "end",
          position: "right",
          offsetX: 0,
          offsetY: -3,
          mouseEnter: void 0,
          mouseLeave: void 0,
          click: void 0,
          style: {
            background: "#fff",
            color: void 0,
            fontSize: "11px",
            fontFamily: void 0,
            fontWeight: 400,
            cssClass: "",
            padding: {
              left: 5,
              right: 5,
              top: 2,
              bottom: 2
            }
          }
        }
      }, this.xAxisAnnotation = {
        id: void 0,
        x: 0,
        x2: null,
        strokeDashArray: 1,
        fillColor: "#c2c2c2",
        borderColor: "#c2c2c2",
        borderWidth: 1,
        opacity: .3,
        offsetX: 0,
        offsetY: 0,
        label: {
          borderColor: "#c2c2c2",
          borderWidth: 1,
          borderRadius: 2,
          text: void 0,
          textAnchor: "middle",
          orientation: "vertical",
          position: "top",
          offsetX: 0,
          offsetY: 0,
          mouseEnter: void 0,
          mouseLeave: void 0,
          click: void 0,
          style: {
            background: "#fff",
            color: void 0,
            fontSize: "11px",
            fontFamily: void 0,
            fontWeight: 400,
            cssClass: "",
            padding: {
              left: 5,
              right: 5,
              top: 2,
              bottom: 2
            }
          }
        }
      }, this.text = {
        x: 0,
        y: 0,
        text: "",
        textAnchor: "start",
        foreColor: void 0,
        fontSize: "13px",
        fontFamily: void 0,
        fontWeight: 400,
        appendTo: ".apexcharts-annotations",
        backgroundColor: "transparent",
        borderColor: "#c2c2c2",
        borderRadius: 0,
        borderWidth: 0,
        paddingLeft: 4,
        paddingRight: 4,
        paddingTop: 2,
        paddingBottom: 2
      };
    }
    return r(t, [{
      key: "init",
      value: function () {
        return {
          annotations: {
            yaxis: [this.yAxisAnnotation],
            xaxis: [this.xAxisAnnotation],
            points: [this.pointAnnotation],
            texts: [],
            images: [],
            shapes: []
          },
          chart: {
            animations: {
              enabled: !0,
              easing: "easeinout",
              speed: 800,
              animateGradually: {
                delay: 150,
                enabled: !0
              },
              dynamicAnimation: {
                enabled: !0,
                speed: 350
              }
            },
            background: "transparent",
            locales: [C],
            defaultLocale: "en",
            dropShadow: {
              enabled: !1,
              enabledOnSeries: void 0,
              top: 2,
              left: 2,
              blur: 4,
              color: "#000",
              opacity: .35
            },
            events: {
              animationEnd: void 0,
              beforeMount: void 0,
              mounted: void 0,
              updated: void 0,
              click: void 0,
              mouseMove: void 0,
              mouseLeave: void 0,
              xAxisLabelClick: void 0,
              legendClick: void 0,
              markerClick: void 0,
              selection: void 0,
              dataPointSelection: void 0,
              dataPointMouseEnter: void 0,
              dataPointMouseLeave: void 0,
              beforeZoom: void 0,
              beforeResetZoom: void 0,
              zoomed: void 0,
              scrolled: void 0,
              brushScrolled: void 0
            },
            foreColor: "#373d3f",
            fontFamily: "Helvetica, Arial, sans-serif",
            height: "auto",
            parentHeightOffset: 15,
            redrawOnParentResize: !0,
            redrawOnWindowResize: !0,
            id: void 0,
            group: void 0,
            offsetX: 0,
            offsetY: 0,
            selection: {
              enabled: !1,
              type: "x",
              fill: {
                color: "#24292e",
                opacity: .1
              },
              stroke: {
                width: 1,
                color: "#24292e",
                opacity: .4,
                dashArray: 3
              },
              xaxis: {
                min: void 0,
                max: void 0
              },
              yaxis: {
                min: void 0,
                max: void 0
              }
            },
            sparkline: {
              enabled: !1
            },
            brush: {
              enabled: !1,
              autoScaleYaxis: !0,
              target: void 0
            },
            stacked: !1,
            stackType: "normal",
            toolbar: {
              show: !0,
              offsetX: 0,
              offsetY: 0,
              tools: {
                download: !0,
                selection: !0,
                zoom: !0,
                zoomin: !0,
                zoomout: !0,
                pan: !0,
                reset: !0,
                customIcons: []
              },
              export: {
                csv: {
                  filename: void 0,
                  columnDelimiter: ",",
                  headerCategory: "category",
                  headerValue: "value",
                  dateFormatter: function (t) {
                    return new Date(t).toDateString();
                  }
                },
                png: {
                  filename: void 0
                },
                svg: {
                  filename: void 0
                }
              },
              autoSelected: "zoom"
            },
            type: "line",
            width: "100%",
            zoom: {
              enabled: !0,
              type: "x",
              autoScaleYaxis: !1,
              zoomedArea: {
                fill: {
                  color: "#90CAF9",
                  opacity: .4
                },
                stroke: {
                  color: "#0D47A1",
                  opacity: .4,
                  width: 1
                }
              }
            }
          },
          plotOptions: {
            area: {
              fillTo: "origin"
            },
            bar: {
              horizontal: !1,
              columnWidth: "70%",
              barHeight: "70%",
              distributed: !1,
              borderRadius: 0,
              borderRadiusApplication: "around",
              borderRadiusWhenStacked: "last",
              rangeBarOverlap: !0,
              rangeBarGroupRows: !1,
              hideZeroBarsWhenGrouped: !1,
              isDumbbell: !1,
              dumbbellColors: void 0,
              isFunnel: !1,
              isFunnel3d: !0,
              colors: {
                ranges: [],
                backgroundBarColors: [],
                backgroundBarOpacity: 1,
                backgroundBarRadius: 0
              },
              dataLabels: {
                position: "top",
                maxItems: 100,
                hideOverflowingLabels: !0,
                orientation: "horizontal",
                total: {
                  enabled: !1,
                  formatter: void 0,
                  offsetX: 0,
                  offsetY: 0,
                  style: {
                    color: "#373d3f",
                    fontSize: "12px",
                    fontFamily: void 0,
                    fontWeight: 600
                  }
                }
              }
            },
            bubble: {
              zScaling: !0,
              minBubbleRadius: void 0,
              maxBubbleRadius: void 0
            },
            candlestick: {
              colors: {
                upward: "#00B746",
                downward: "#EF403C"
              },
              wick: {
                useFillColor: !0
              }
            },
            boxPlot: {
              colors: {
                upper: "#00E396",
                lower: "#008FFB"
              }
            },
            heatmap: {
              radius: 2,
              enableShades: !0,
              shadeIntensity: .5,
              reverseNegativeShade: !1,
              distributed: !1,
              useFillColorAsStroke: !1,
              colorScale: {
                inverse: !1,
                ranges: [],
                min: void 0,
                max: void 0
              }
            },
            treemap: {
              enableShades: !0,
              shadeIntensity: .5,
              distributed: !1,
              reverseNegativeShade: !1,
              useFillColorAsStroke: !1,
              colorScale: {
                inverse: !1,
                ranges: [],
                min: void 0,
                max: void 0
              }
            },
            radialBar: {
              inverseOrder: !1,
              startAngle: 0,
              endAngle: 360,
              offsetX: 0,
              offsetY: 0,
              hollow: {
                margin: 5,
                size: "50%",
                background: "transparent",
                image: void 0,
                imageWidth: 150,
                imageHeight: 150,
                imageOffsetX: 0,
                imageOffsetY: 0,
                imageClipped: !0,
                position: "front",
                dropShadow: {
                  enabled: !1,
                  top: 0,
                  left: 0,
                  blur: 3,
                  color: "#000",
                  opacity: .5
                }
              },
              track: {
                show: !0,
                startAngle: void 0,
                endAngle: void 0,
                background: "#f2f2f2",
                strokeWidth: "97%",
                opacity: 1,
                margin: 5,
                dropShadow: {
                  enabled: !1,
                  top: 0,
                  left: 0,
                  blur: 3,
                  color: "#000",
                  opacity: .5
                }
              },
              dataLabels: {
                show: !0,
                name: {
                  show: !0,
                  fontSize: "16px",
                  fontFamily: void 0,
                  fontWeight: 600,
                  color: void 0,
                  offsetY: 0,
                  formatter: function (t) {
                    return t;
                  }
                },
                value: {
                  show: !0,
                  fontSize: "14px",
                  fontFamily: void 0,
                  fontWeight: 400,
                  color: void 0,
                  offsetY: 16,
                  formatter: function (t) {
                    return t + "%";
                  }
                },
                total: {
                  show: !1,
                  label: "Total",
                  fontSize: "16px",
                  fontWeight: 600,
                  fontFamily: void 0,
                  color: void 0,
                  formatter: function (t) {
                    return t.globals.seriesTotals.reduce(function (t, e) {
                      return t + e;
                    }, 0) / t.globals.series.length + "%";
                  }
                }
              }
            },
            pie: {
              customScale: 1,
              offsetX: 0,
              offsetY: 0,
              startAngle: 0,
              endAngle: 360,
              expandOnClick: !0,
              dataLabels: {
                offset: 0,
                minAngleToShowLabel: 10
              },
              donut: {
                size: "65%",
                background: "transparent",
                labels: {
                  show: !1,
                  name: {
                    show: !0,
                    fontSize: "16px",
                    fontFamily: void 0,
                    fontWeight: 600,
                    color: void 0,
                    offsetY: -10,
                    formatter: function (t) {
                      return t;
                    }
                  },
                  value: {
                    show: !0,
                    fontSize: "20px",
                    fontFamily: void 0,
                    fontWeight: 400,
                    color: void 0,
                    offsetY: 10,
                    formatter: function (t) {
                      return t;
                    }
                  },
                  total: {
                    show: !1,
                    showAlways: !1,
                    label: "Total",
                    fontSize: "16px",
                    fontWeight: 400,
                    fontFamily: void 0,
                    color: void 0,
                    formatter: function (t) {
                      return t.globals.seriesTotals.reduce(function (t, e) {
                        return t + e;
                      }, 0);
                    }
                  }
                }
              }
            },
            polarArea: {
              rings: {
                strokeWidth: 1,
                strokeColor: "#e8e8e8"
              },
              spokes: {
                strokeWidth: 1,
                connectorColors: "#e8e8e8"
              }
            },
            radar: {
              size: void 0,
              offsetX: 0,
              offsetY: 0,
              polygons: {
                strokeWidth: 1,
                strokeColors: "#e8e8e8",
                connectorColors: "#e8e8e8",
                fill: {
                  colors: void 0
                }
              }
            }
          },
          colors: void 0,
          dataLabels: {
            enabled: !0,
            enabledOnSeries: void 0,
            formatter: function (t) {
              return null !== t ? t : "";
            },
            textAnchor: "middle",
            distributed: !1,
            offsetX: 0,
            offsetY: 0,
            style: {
              fontSize: "12px",
              fontFamily: void 0,
              fontWeight: 600,
              colors: void 0
            },
            background: {
              enabled: !0,
              foreColor: "#fff",
              borderRadius: 2,
              padding: 4,
              opacity: .9,
              borderWidth: 1,
              borderColor: "#fff",
              dropShadow: {
                enabled: !1,
                top: 1,
                left: 1,
                blur: 1,
                color: "#000",
                opacity: .45
              }
            },
            dropShadow: {
              enabled: !1,
              top: 1,
              left: 1,
              blur: 1,
              color: "#000",
              opacity: .45
            }
          },
          fill: {
            type: "solid",
            colors: void 0,
            opacity: .85,
            gradient: {
              shade: "dark",
              type: "horizontal",
              shadeIntensity: .5,
              gradientToColors: void 0,
              inverseColors: !0,
              opacityFrom: 1,
              opacityTo: 1,
              stops: [0, 50, 100],
              colorStops: []
            },
            image: {
              src: [],
              width: void 0,
              height: void 0
            },
            pattern: {
              style: "squares",
              width: 6,
              height: 6,
              strokeWidth: 2
            }
          },
          forecastDataPoints: {
            count: 0,
            fillOpacity: .5,
            strokeWidth: void 0,
            dashArray: 4
          },
          grid: {
            show: !0,
            borderColor: "#e0e0e0",
            strokeDashArray: 0,
            position: "back",
            xaxis: {
              lines: {
                show: !1
              }
            },
            yaxis: {
              lines: {
                show: !0
              }
            },
            row: {
              colors: void 0,
              opacity: .5
            },
            column: {
              colors: void 0,
              opacity: .5
            },
            padding: {
              top: 0,
              right: 10,
              bottom: 0,
              left: 12
            }
          },
          labels: [],
          legend: {
            show: !0,
            showForSingleSeries: !1,
            showForNullSeries: !0,
            showForZeroSeries: !0,
            floating: !1,
            position: "bottom",
            horizontalAlign: "center",
            inverseOrder: !1,
            fontSize: "12px",
            fontFamily: void 0,
            fontWeight: 400,
            width: void 0,
            height: void 0,
            formatter: void 0,
            tooltipHoverFormatter: void 0,
            offsetX: -20,
            offsetY: 4,
            customLegendItems: [],
            labels: {
              colors: void 0,
              useSeriesColors: !1
            },
            markers: {
              width: 12,
              height: 12,
              strokeWidth: 0,
              fillColors: void 0,
              strokeColor: "#fff",
              radius: 12,
              customHTML: void 0,
              offsetX: 0,
              offsetY: 0,
              onClick: void 0
            },
            itemMargin: {
              horizontal: 5,
              vertical: 2
            },
            onItemClick: {
              toggleDataSeries: !0
            },
            onItemHover: {
              highlightDataSeries: !0
            }
          },
          markers: {
            discrete: [],
            size: 0,
            colors: void 0,
            strokeColors: "#fff",
            strokeWidth: 2,
            strokeOpacity: .9,
            strokeDashArray: 0,
            fillOpacity: 1,
            shape: "circle",
            width: 8,
            height: 8,
            radius: 2,
            offsetX: 0,
            offsetY: 0,
            onClick: void 0,
            onDblClick: void 0,
            showNullDataPoints: !0,
            hover: {
              size: void 0,
              sizeOffset: 3
            }
          },
          noData: {
            text: void 0,
            align: "center",
            verticalAlign: "middle",
            offsetX: 0,
            offsetY: 0,
            style: {
              color: void 0,
              fontSize: "14px",
              fontFamily: void 0
            }
          },
          responsive: [],
          series: void 0,
          states: {
            normal: {
              filter: {
                type: "none",
                value: 0
              }
            },
            hover: {
              filter: {
                type: "lighten",
                value: .1
              }
            },
            active: {
              allowMultipleDataPointsSelection: !1,
              filter: {
                type: "darken",
                value: .5
              }
            }
          },
          title: {
            text: void 0,
            align: "left",
            margin: 5,
            offsetX: 0,
            offsetY: 0,
            floating: !1,
            style: {
              fontSize: "14px",
              fontWeight: 900,
              fontFamily: void 0,
              color: void 0
            }
          },
          subtitle: {
            text: void 0,
            align: "left",
            margin: 5,
            offsetX: 0,
            offsetY: 30,
            floating: !1,
            style: {
              fontSize: "12px",
              fontWeight: 400,
              fontFamily: void 0,
              color: void 0
            }
          },
          stroke: {
            show: !0,
            curve: "smooth",
            lineCap: "butt",
            width: 2,
            colors: void 0,
            dashArray: 0,
            fill: {
              type: "solid",
              colors: void 0,
              opacity: .85,
              gradient: {
                shade: "dark",
                type: "horizontal",
                shadeIntensity: .5,
                gradientToColors: void 0,
                inverseColors: !0,
                opacityFrom: 1,
                opacityTo: 1,
                stops: [0, 50, 100],
                colorStops: []
              }
            }
          },
          tooltip: {
            enabled: !0,
            enabledOnSeries: void 0,
            shared: !0,
            followCursor: !1,
            intersect: !1,
            inverseOrder: !1,
            custom: void 0,
            fillSeriesColor: !1,
            theme: "light",
            cssClass: "",
            style: {
              fontSize: "12px",
              fontFamily: void 0
            },
            onDatasetHover: {
              highlightDataSeries: !1
            },
            x: {
              show: !0,
              format: "dd MMM",
              formatter: void 0
            },
            y: {
              formatter: void 0,
              title: {
                formatter: function (t) {
                  return t ? t + ": " : "";
                }
              }
            },
            z: {
              formatter: void 0,
              title: "Size: "
            },
            marker: {
              show: !0,
              fillColors: void 0
            },
            items: {
              display: "flex"
            },
            fixed: {
              enabled: !1,
              position: "topRight",
              offsetX: 0,
              offsetY: 0
            }
          },
          xaxis: {
            type: "category",
            categories: [],
            convertedCatToNumeric: !1,
            offsetX: 0,
            offsetY: 0,
            overwriteCategories: void 0,
            labels: {
              show: !0,
              rotate: -45,
              rotateAlways: !1,
              hideOverlappingLabels: !0,
              trim: !1,
              minHeight: void 0,
              maxHeight: 120,
              showDuplicates: !0,
              style: {
                colors: [],
                fontSize: "12px",
                fontWeight: 400,
                fontFamily: void 0,
                cssClass: ""
              },
              offsetX: 0,
              offsetY: 0,
              format: void 0,
              formatter: void 0,
              datetimeUTC: !0,
              datetimeFormatter: {
                year: "yyyy",
                month: "MMM 'yy",
                day: "dd MMM",
                hour: "HH:mm",
                minute: "HH:mm:ss",
                second: "HH:mm:ss"
              }
            },
            group: {
              groups: [],
              style: {
                colors: [],
                fontSize: "12px",
                fontWeight: 400,
                fontFamily: void 0,
                cssClass: ""
              }
            },
            axisBorder: {
              show: !0,
              color: "#e0e0e0",
              width: "100%",
              height: 1,
              offsetX: 0,
              offsetY: 0
            },
            axisTicks: {
              show: !0,
              color: "#e0e0e0",
              height: 6,
              offsetX: 0,
              offsetY: 0
            },
            tickAmount: void 0,
            tickPlacement: "on",
            min: void 0,
            max: void 0,
            range: void 0,
            floating: !1,
            decimalsInFloat: void 0,
            position: "bottom",
            title: {
              text: void 0,
              offsetX: 0,
              offsetY: 0,
              style: {
                color: void 0,
                fontSize: "12px",
                fontWeight: 900,
                fontFamily: void 0,
                cssClass: ""
              }
            },
            crosshairs: {
              show: !0,
              width: 1,
              position: "back",
              opacity: .9,
              stroke: {
                color: "#b6b6b6",
                width: 1,
                dashArray: 3
              },
              fill: {
                type: "solid",
                color: "#B1B9C4",
                gradient: {
                  colorFrom: "#D8E3F0",
                  colorTo: "#BED1E6",
                  stops: [0, 100],
                  opacityFrom: .4,
                  opacityTo: .5
                }
              },
              dropShadow: {
                enabled: !1,
                left: 0,
                top: 0,
                blur: 1,
                opacity: .4
              }
            },
            tooltip: {
              enabled: !0,
              offsetY: 0,
              formatter: void 0,
              style: {
                fontSize: "12px",
                fontFamily: void 0
              }
            }
          },
          yaxis: this.yAxis,
          theme: {
            mode: "light",
            palette: "palette1",
            monochrome: {
              enabled: !1,
              color: "#008FFB",
              shadeTo: "light",
              shadeIntensity: .65
            }
          }
        };
      }
    }]), t;
  }(),
  P = function () {
    function t(e) {
      a(this, t), this.ctx = e, this.w = e.w, this.graphics = new m(this.ctx), this.w.globals.isBarHorizontal && (this.invertAxis = !0), this.helpers = new w(this), this.xAxisAnnotations = new k(this), this.yAxisAnnotations = new A(this), this.pointsAnnotations = new S(this), this.w.globals.isBarHorizontal && this.w.config.yaxis[0].reversed && (this.inversedReversedAxis = !0), this.xDivision = this.w.globals.gridWidth / this.w.globals.dataPoints;
    }
    return r(t, [{
      key: "drawAxesAnnotations",
      value: function () {
        var t = this.w;
        if (t.globals.axisCharts) {
          for (var e = this.yAxisAnnotations.drawYAxisAnnotations(), i = this.xAxisAnnotations.drawXAxisAnnotations(), a = this.pointsAnnotations.drawPointAnnotations(), s = t.config.chart.animations.enabled, r = [e, i, a], o = [i.node, e.node, a.node], n = 0; n < 3; n++) t.globals.dom.elGraphical.add(r[n]), !s || t.globals.resized || t.globals.dataChanged || "scatter" !== t.config.chart.type && "bubble" !== t.config.chart.type && t.globals.dataPoints > 1 && o[n].classList.add("apexcharts-element-hidden"), t.globals.delayedElements.push({
            el: o[n],
            index: 0
          });
          this.helpers.annotationsBackground();
        }
      }
    }, {
      key: "drawImageAnnos",
      value: function () {
        var t = this;
        this.w.config.annotations.images.map(function (e, i) {
          t.addImage(e, i);
        });
      }
    }, {
      key: "drawTextAnnos",
      value: function () {
        var t = this;
        this.w.config.annotations.texts.map(function (e, i) {
          t.addText(e, i);
        });
      }
    }, {
      key: "addXaxisAnnotation",
      value: function (t, e, i) {
        this.xAxisAnnotations.addXaxisAnnotation(t, e, i);
      }
    }, {
      key: "addYaxisAnnotation",
      value: function (t, e, i) {
        this.yAxisAnnotations.addYaxisAnnotation(t, e, i);
      }
    }, {
      key: "addPointAnnotation",
      value: function (t, e, i) {
        this.pointsAnnotations.addPointAnnotation(t, e, i);
      }
    }, {
      key: "addText",
      value: function (t, e) {
        var i = t.x,
          a = t.y,
          s = t.text,
          r = t.textAnchor,
          o = t.foreColor,
          n = t.fontSize,
          l = t.fontFamily,
          h = t.fontWeight,
          c = t.cssClass,
          d = t.backgroundColor,
          g = t.borderWidth,
          u = t.strokeDashArray,
          p = t.borderRadius,
          f = t.borderColor,
          x = t.appendTo,
          b = void 0 === x ? ".apexcharts-annotations" : x,
          v = t.paddingLeft,
          m = void 0 === v ? 4 : v,
          y = t.paddingRight,
          w = void 0 === y ? 4 : y,
          k = t.paddingBottom,
          A = void 0 === k ? 2 : k,
          S = t.paddingTop,
          C = void 0 === S ? 2 : S,
          L = this.w,
          P = this.graphics.drawText({
            x: i,
            y: a,
            text: s,
            textAnchor: r || "start",
            fontSize: n || "12px",
            fontWeight: h || "regular",
            fontFamily: l || L.config.chart.fontFamily,
            foreColor: o || L.config.chart.foreColor,
            cssClass: c
          }),
          I = L.globals.dom.baseEl.querySelector(b);
        I && I.appendChild(P.node);
        var T = P.bbox();
        if (s) {
          var M = this.graphics.drawRect(T.x - m, T.y - C, T.width + m + w, T.height + A + C, p, d || "transparent", 1, g, f, u);
          I.insertBefore(M.node, P.node);
        }
      }
    }, {
      key: "addImage",
      value: function (t, e) {
        var i = this.w,
          a = t.path,
          s = t.x,
          r = void 0 === s ? 0 : s,
          o = t.y,
          n = void 0 === o ? 0 : o,
          l = t.width,
          h = void 0 === l ? 20 : l,
          c = t.height,
          d = void 0 === c ? 20 : c,
          g = t.appendTo,
          u = void 0 === g ? ".apexcharts-annotations" : g,
          p = i.globals.dom.Paper.image(a);
        p.size(h, d).move(r, n);
        var f = i.globals.dom.baseEl.querySelector(u);
        return f && f.appendChild(p.node), p;
      }
    }, {
      key: "addXaxisAnnotationExternal",
      value: function (t, e, i) {
        return this.addAnnotationExternal({
          params: t,
          pushToMemory: e,
          context: i,
          type: "xaxis",
          contextMethod: i.addXaxisAnnotation
        }), i;
      }
    }, {
      key: "addYaxisAnnotationExternal",
      value: function (t, e, i) {
        return this.addAnnotationExternal({
          params: t,
          pushToMemory: e,
          context: i,
          type: "yaxis",
          contextMethod: i.addYaxisAnnotation
        }), i;
      }
    }, {
      key: "addPointAnnotationExternal",
      value: function (t, e, i) {
        return void 0 === this.invertAxis && (this.invertAxis = i.w.globals.isBarHorizontal), this.addAnnotationExternal({
          params: t,
          pushToMemory: e,
          context: i,
          type: "point",
          contextMethod: i.addPointAnnotation
        }), i;
      }
    }, {
      key: "addAnnotationExternal",
      value: function (t) {
        var e = t.params,
          i = t.pushToMemory,
          a = t.context,
          s = t.type,
          r = t.contextMethod,
          o = a,
          n = o.w,
          l = n.globals.dom.baseEl.querySelector(".apexcharts-".concat(s, "-annotations")),
          h = l.childNodes.length + 1,
          c = new L(),
          d = Object.assign({}, "xaxis" === s ? c.xAxisAnnotation : "yaxis" === s ? c.yAxisAnnotation : c.pointAnnotation),
          g = x.extend(d, e);
        switch (s) {
          case "xaxis":
            this.addXaxisAnnotation(g, l, h);
            break;
          case "yaxis":
            this.addYaxisAnnotation(g, l, h);
            break;
          case "point":
            this.addPointAnnotation(g, l, h);
        }
        var u = n.globals.dom.baseEl.querySelector(".apexcharts-".concat(s, "-annotations .apexcharts-").concat(s, "-annotation-label[rel='").concat(h, "']")),
          p = this.helpers.addBackgroundToAnno(u, g);
        return p && l.insertBefore(p.node, u), i && n.globals.memory.methodsToExec.push({
          context: o,
          id: g.id ? g.id : x.randomId(),
          method: r,
          label: "addAnnotation",
          params: e
        }), a;
      }
    }, {
      key: "clearAnnotations",
      value: function (t) {
        var e = t.w,
          i = e.globals.dom.baseEl.querySelectorAll(".apexcharts-yaxis-annotations, .apexcharts-xaxis-annotations, .apexcharts-point-annotations");
        e.globals.memory.methodsToExec.map(function (t, i) {
          "addText" !== t.label && "addAnnotation" !== t.label || e.globals.memory.methodsToExec.splice(i, 1);
        }), i = x.listToArray(i), Array.prototype.forEach.call(i, function (t) {
          for (; t.firstChild;) t.removeChild(t.firstChild);
        });
      }
    }, {
      key: "removeAnnotation",
      value: function (t, e) {
        var i = t.w,
          a = i.globals.dom.baseEl.querySelectorAll(".".concat(e));
        a && (i.globals.memory.methodsToExec.map(function (t, a) {
          t.id === e && i.globals.memory.methodsToExec.splice(a, 1);
        }), Array.prototype.forEach.call(a, function (t) {
          t.parentElement.removeChild(t);
        }));
      }
    }]), t;
  }(),
  I = function () {
    function t(e) {
      a(this, t), this.ctx = e, this.w = e.w, this.months31 = [1, 3, 5, 7, 8, 10, 12], this.months30 = [2, 4, 6, 9, 11], this.daysCntOfYear = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];
    }
    return r(t, [{
      key: "isValidDate",
      value: function (t) {
        return !isNaN(this.parseDate(t));
      }
    }, {
      key: "getTimeStamp",
      value: function (t) {
        return Date.parse(t) ? this.w.config.xaxis.labels.datetimeUTC ? new Date(new Date(t).toISOString().substr(0, 25)).getTime() : new Date(t).getTime() : t;
      }
    }, {
      key: "getDate",
      value: function (t) {
        return this.w.config.xaxis.labels.datetimeUTC ? new Date(new Date(t).toUTCString()) : new Date(t);
      }
    }, {
      key: "parseDate",
      value: function (t) {
        var e = Date.parse(t);
        if (!isNaN(e)) return this.getTimeStamp(t);
        var i = Date.parse(t.replace(/-/g, "/").replace(/[a-z]+/gi, " "));
        return i = this.getTimeStamp(i);
      }
    }, {
      key: "parseDateWithTimezone",
      value: function (t) {
        return Date.parse(t.replace(/-/g, "/").replace(/[a-z]+/gi, " "));
      }
    }, {
      key: "formatDate",
      value: function (t, e) {
        var i = this.w.globals.locale,
          a = this.w.config.xaxis.labels.datetimeUTC,
          s = ["\0"].concat(u(i.months)),
          r = ["\x01"].concat(u(i.shortMonths)),
          o = ["\x02"].concat(u(i.days)),
          n = ["\x03"].concat(u(i.shortDays));
        function l(t, e) {
          var i = t + "";
          for (e = e || 2; i.length < e;) i = "0" + i;
          return i;
        }
        var h = a ? t.getUTCFullYear() : t.getFullYear();
        e = (e = (e = e.replace(/(^|[^\\])yyyy+/g, "$1" + h)).replace(/(^|[^\\])yy/g, "$1" + h.toString().substr(2, 2))).replace(/(^|[^\\])y/g, "$1" + h);
        var c = (a ? t.getUTCMonth() : t.getMonth()) + 1;
        e = (e = (e = (e = e.replace(/(^|[^\\])MMMM+/g, "$1" + s[0])).replace(/(^|[^\\])MMM/g, "$1" + r[0])).replace(/(^|[^\\])MM/g, "$1" + l(c))).replace(/(^|[^\\])M/g, "$1" + c);
        var d = a ? t.getUTCDate() : t.getDate();
        e = (e = (e = (e = e.replace(/(^|[^\\])dddd+/g, "$1" + o[0])).replace(/(^|[^\\])ddd/g, "$1" + n[0])).replace(/(^|[^\\])dd/g, "$1" + l(d))).replace(/(^|[^\\])d/g, "$1" + d);
        var g = a ? t.getUTCHours() : t.getHours(),
          p = g > 12 ? g - 12 : 0 === g ? 12 : g;
        e = (e = (e = (e = e.replace(/(^|[^\\])HH+/g, "$1" + l(g))).replace(/(^|[^\\])H/g, "$1" + g)).replace(/(^|[^\\])hh+/g, "$1" + l(p))).replace(/(^|[^\\])h/g, "$1" + p);
        var f = a ? t.getUTCMinutes() : t.getMinutes();
        e = (e = e.replace(/(^|[^\\])mm+/g, "$1" + l(f))).replace(/(^|[^\\])m/g, "$1" + f);
        var x = a ? t.getUTCSeconds() : t.getSeconds();
        e = (e = e.replace(/(^|[^\\])ss+/g, "$1" + l(x))).replace(/(^|[^\\])s/g, "$1" + x);
        var b = a ? t.getUTCMilliseconds() : t.getMilliseconds();
        e = e.replace(/(^|[^\\])fff+/g, "$1" + l(b, 3)), b = Math.round(b / 10), e = e.replace(/(^|[^\\])ff/g, "$1" + l(b)), b = Math.round(b / 10);
        var v = g < 12 ? "AM" : "PM";
        e = (e = (e = e.replace(/(^|[^\\])f/g, "$1" + b)).replace(/(^|[^\\])TT+/g, "$1" + v)).replace(/(^|[^\\])T/g, "$1" + v.charAt(0));
        var m = v.toLowerCase();
        e = (e = e.replace(/(^|[^\\])tt+/g, "$1" + m)).replace(/(^|[^\\])t/g, "$1" + m.charAt(0));
        var y = -t.getTimezoneOffset(),
          w = a || !y ? "Z" : y > 0 ? "+" : "-";
        if (!a) {
          var k = (y = Math.abs(y)) % 60;
          w += l(Math.floor(y / 60)) + ":" + l(k);
        }
        e = e.replace(/(^|[^\\])K/g, "$1" + w);
        var A = (a ? t.getUTCDay() : t.getDay()) + 1;
        return e = (e = (e = (e = (e = e.replace(new RegExp(o[0], "g"), o[A])).replace(new RegExp(n[0], "g"), n[A])).replace(new RegExp(s[0], "g"), s[c])).replace(new RegExp(r[0], "g"), r[c])).replace(/\\(.)/g, "$1");
      }
    }, {
      key: "getTimeUnitsfromTimestamp",
      value: function (t, e, i) {
        var a = this.w;
        void 0 !== a.config.xaxis.min && (t = a.config.xaxis.min), void 0 !== a.config.xaxis.max && (e = a.config.xaxis.max);
        var s = this.getDate(t),
          r = this.getDate(e),
          o = this.formatDate(s, "yyyy MM dd HH mm ss fff").split(" "),
          n = this.formatDate(r, "yyyy MM dd HH mm ss fff").split(" ");
        return {
          minMillisecond: parseInt(o[6], 10),
          maxMillisecond: parseInt(n[6], 10),
          minSecond: parseInt(o[5], 10),
          maxSecond: parseInt(n[5], 10),
          minMinute: parseInt(o[4], 10),
          maxMinute: parseInt(n[4], 10),
          minHour: parseInt(o[3], 10),
          maxHour: parseInt(n[3], 10),
          minDate: parseInt(o[2], 10),
          maxDate: parseInt(n[2], 10),
          minMonth: parseInt(o[1], 10) - 1,
          maxMonth: parseInt(n[1], 10) - 1,
          minYear: parseInt(o[0], 10),
          maxYear: parseInt(n[0], 10)
        };
      }
    }, {
      key: "isLeapYear",
      value: function (t) {
        return t % 4 == 0 && t % 100 != 0 || t % 400 == 0;
      }
    }, {
      key: "calculcateLastDaysOfMonth",
      value: function (t, e, i) {
        return this.determineDaysOfMonths(t, e) - i;
      }
    }, {
      key: "determineDaysOfYear",
      value: function (t) {
        var e = 365;
        return this.isLeapYear(t) && (e = 366), e;
      }
    }, {
      key: "determineRemainingDaysOfYear",
      value: function (t, e, i) {
        var a = this.daysCntOfYear[e] + i;
        return e > 1 && this.isLeapYear() && a++, a;
      }
    }, {
      key: "determineDaysOfMonths",
      value: function (t, e) {
        var i = 30;
        switch (t = x.monthMod(t), !0) {
          case this.months30.indexOf(t) > -1:
            2 === t && (i = this.isLeapYear(e) ? 29 : 28);
            break;
          case this.months31.indexOf(t) > -1:
          default:
            i = 31;
        }
        return i;
      }
    }]), t;
  }(),
  T = function () {
    function t(e) {
      a(this, t), this.ctx = e, this.w = e.w, this.tooltipKeyFormat = "dd MMM";
    }
    return r(t, [{
      key: "xLabelFormat",
      value: function (t, e, i, a) {
        var s = this.w;
        if ("datetime" === s.config.xaxis.type && void 0 === s.config.xaxis.labels.formatter && void 0 === s.config.tooltip.x.formatter) {
          var r = new I(this.ctx);
          return r.formatDate(r.getDate(e), s.config.tooltip.x.format);
        }
        return t(e, i, a);
      }
    }, {
      key: "defaultGeneralFormatter",
      value: function (t) {
        return Array.isArray(t) ? t.map(function (t) {
          return t;
        }) : t;
      }
    }, {
      key: "defaultYFormatter",
      value: function (t, e, i) {
        var a = this.w;
        return x.isNumber(t) && (t = 0 !== a.globals.yValueDecimal ? t.toFixed(void 0 !== e.decimalsInFloat ? e.decimalsInFloat : a.globals.yValueDecimal) : a.globals.maxYArr[i] - a.globals.minYArr[i] < 5 ? t.toFixed(1) : t.toFixed(0)), t;
      }
    }, {
      key: "setLabelFormatters",
      value: function () {
        var t = this,
          e = this.w;
        return e.globals.xaxisTooltipFormatter = function (e) {
          return t.defaultGeneralFormatter(e);
        }, e.globals.ttKeyFormatter = function (e) {
          return t.defaultGeneralFormatter(e);
        }, e.globals.ttZFormatter = function (t) {
          return t;
        }, e.globals.legendFormatter = function (e) {
          return t.defaultGeneralFormatter(e);
        }, void 0 !== e.config.xaxis.labels.formatter ? e.globals.xLabelFormatter = e.config.xaxis.labels.formatter : e.globals.xLabelFormatter = function (t) {
          if (x.isNumber(t)) {
            if (!e.config.xaxis.convertedCatToNumeric && "numeric" === e.config.xaxis.type) {
              if (x.isNumber(e.config.xaxis.decimalsInFloat)) return t.toFixed(e.config.xaxis.decimalsInFloat);
              var i = e.globals.maxX - e.globals.minX;
              return i > 0 && i < 100 ? t.toFixed(1) : t.toFixed(0);
            }
            if (e.globals.isBarHorizontal) if (e.globals.maxY - e.globals.minYArr < 4) return t.toFixed(1);
            return t.toFixed(0);
          }
          return t;
        }, "function" == typeof e.config.tooltip.x.formatter ? e.globals.ttKeyFormatter = e.config.tooltip.x.formatter : e.globals.ttKeyFormatter = e.globals.xLabelFormatter, "function" == typeof e.config.xaxis.tooltip.formatter && (e.globals.xaxisTooltipFormatter = e.config.xaxis.tooltip.formatter), (Array.isArray(e.config.tooltip.y) || void 0 !== e.config.tooltip.y.formatter) && (e.globals.ttVal = e.config.tooltip.y), void 0 !== e.config.tooltip.z.formatter && (e.globals.ttZFormatter = e.config.tooltip.z.formatter), void 0 !== e.config.legend.formatter && (e.globals.legendFormatter = e.config.legend.formatter), e.config.yaxis.forEach(function (i, a) {
          void 0 !== i.labels.formatter ? e.globals.yLabelFormatters[a] = i.labels.formatter : e.globals.yLabelFormatters[a] = function (s) {
            return e.globals.xyCharts ? Array.isArray(s) ? s.map(function (e) {
              return t.defaultYFormatter(e, i, a);
            }) : t.defaultYFormatter(s, i, a) : s;
          };
        }), e.globals;
      }
    }, {
      key: "heatmapLabelFormatters",
      value: function () {
        var t = this.w;
        if ("heatmap" === t.config.chart.type) {
          t.globals.yAxisScale[0].result = t.globals.seriesNames.slice();
          var e = t.globals.seriesNames.reduce(function (t, e) {
            return t.length > e.length ? t : e;
          }, 0);
          t.globals.yAxisScale[0].niceMax = e, t.globals.yAxisScale[0].niceMin = e;
        }
      }
    }]), t;
  }(),
  M = function (t) {
    var e,
      i = t.isTimeline,
      a = t.ctx,
      s = t.seriesIndex,
      r = t.dataPointIndex,
      o = t.y1,
      n = t.y2,
      l = t.w,
      h = l.globals.seriesRangeStart[s][r],
      c = l.globals.seriesRangeEnd[s][r],
      d = l.globals.labels[r],
      g = l.config.series[s].name ? l.config.series[s].name : "",
      u = l.globals.ttKeyFormatter,
      p = l.config.tooltip.y.title.formatter,
      f = {
        w: l,
        seriesIndex: s,
        dataPointIndex: r,
        start: h,
        end: c
      };
    ("function" == typeof p && (g = p(g, f)), null !== (e = l.config.series[s].data[r]) && void 0 !== e && e.x && (d = l.config.series[s].data[r].x), i) || "datetime" === l.config.xaxis.type && (d = new T(a).xLabelFormat(l.globals.ttKeyFormatter, d, d, {
      i: void 0,
      dateFormatter: new I(a).formatDate,
      w: l
    }));
    "function" == typeof u && (d = u(d, f)), Number.isFinite(o) && Number.isFinite(n) && (h = o, c = n);
    var x = "",
      b = "",
      v = l.globals.colors[s];
    if (void 0 === l.config.tooltip.x.formatter) {
      if ("datetime" === l.config.xaxis.type) {
        var m = new I(a);
        x = m.formatDate(m.getDate(h), l.config.tooltip.x.format), b = m.formatDate(m.getDate(c), l.config.tooltip.x.format);
      } else x = h, b = c;
    } else x = l.config.tooltip.x.formatter(h), b = l.config.tooltip.x.formatter(c);
    return {
      start: h,
      end: c,
      startVal: x,
      endVal: b,
      ylabel: d,
      color: v,
      seriesName: g
    };
  },
  X = function (t) {
    var e = t.color,
      i = t.seriesName,
      a = t.ylabel,
      s = t.start,
      r = t.end,
      o = t.seriesIndex,
      n = t.dataPointIndex,
      l = t.ctx.tooltip.tooltipLabels.getFormatters(o);
    s = l.yLbFormatter(s), r = l.yLbFormatter(r);
    var h = l.yLbFormatter(t.w.globals.series[o][n]),
      c = '<span class="value start-value">\n  '.concat(s, '\n  </span> <span class="separator">-</span> <span class="value end-value">\n  ').concat(r, "\n  </span>");
    return '<div class="apexcharts-tooltip-rangebar"><div> <span class="series-name" style="color: ' + e + '">' + (i || "") + '</span></div><div> <span class="category">' + a + ": </span> " + (t.w.globals.comboCharts ? "rangeArea" === t.w.config.series[o].type || "rangeBar" === t.w.config.series[o].type ? c : "<span>".concat(h, "</span>") : c) + " </div></div>";
  },
  z = function () {
    function t(e) {
      a(this, t), this.opts = e;
    }
    return r(t, [{
      key: "hideYAxis",
      value: function () {
        this.opts.yaxis[0].show = !1, this.opts.yaxis[0].title.text = "", this.opts.yaxis[0].axisBorder.show = !1, this.opts.yaxis[0].axisTicks.show = !1, this.opts.yaxis[0].floating = !0;
      }
    }, {
      key: "line",
      value: function () {
        return {
          chart: {
            animations: {
              easing: "swing"
            }
          },
          dataLabels: {
            enabled: !1
          },
          stroke: {
            width: 5,
            curve: "straight"
          },
          markers: {
            size: 0,
            hover: {
              sizeOffset: 6
            }
          },
          xaxis: {
            crosshairs: {
              width: 1
            }
          }
        };
      }
    }, {
      key: "sparkline",
      value: function (t) {
        this.hideYAxis();
        return x.extend(t, {
          grid: {
            show: !1,
            padding: {
              left: 0,
              right: 0,
              top: 0,
              bottom: 0
            }
          },
          legend: {
            show: !1
          },
          xaxis: {
            labels: {
              show: !1
            },
            tooltip: {
              enabled: !1
            },
            axisBorder: {
              show: !1
            },
            axisTicks: {
              show: !1
            }
          },
          chart: {
            toolbar: {
              show: !1
            },
            zoom: {
              enabled: !1
            }
          },
          dataLabels: {
            enabled: !1
          }
        });
      }
    }, {
      key: "bar",
      value: function () {
        return {
          chart: {
            stacked: !1,
            animations: {
              easing: "swing"
            }
          },
          plotOptions: {
            bar: {
              dataLabels: {
                position: "center"
              }
            }
          },
          dataLabels: {
            style: {
              colors: ["#fff"]
            },
            background: {
              enabled: !1
            }
          },
          stroke: {
            width: 0,
            lineCap: "round"
          },
          fill: {
            opacity: .85
          },
          legend: {
            markers: {
              shape: "square",
              radius: 2,
              size: 8
            }
          },
          tooltip: {
            shared: !1,
            intersect: !0
          },
          xaxis: {
            tooltip: {
              enabled: !1
            },
            tickPlacement: "between",
            crosshairs: {
              width: "barWidth",
              position: "back",
              fill: {
                type: "gradient"
              },
              dropShadow: {
                enabled: !1
              },
              stroke: {
                width: 0
              }
            }
          }
        };
      }
    }, {
      key: "funnel",
      value: function () {
        return this.hideYAxis(), e(e({}, this.bar()), {}, {
          chart: {
            animations: {
              easing: "linear",
              speed: 800,
              animateGradually: {
                enabled: !1
              }
            }
          },
          plotOptions: {
            bar: {
              horizontal: !0,
              borderRadiusApplication: "around",
              borderRadius: 0,
              dataLabels: {
                position: "center"
              }
            }
          },
          grid: {
            show: !1,
            padding: {
              left: 0,
              right: 0
            }
          },
          xaxis: {
            labels: {
              show: !1
            },
            tooltip: {
              enabled: !1
            },
            axisBorder: {
              show: !1
            },
            axisTicks: {
              show: !1
            }
          }
        });
      }
    }, {
      key: "candlestick",
      value: function () {
        var t = this;
        return {
          stroke: {
            width: 1,
            colors: ["#333"]
          },
          fill: {
            opacity: 1
          },
          dataLabels: {
            enabled: !1
          },
          tooltip: {
            shared: !0,
            custom: function (e) {
              var i = e.seriesIndex,
                a = e.dataPointIndex,
                s = e.w;
              return t._getBoxTooltip(s, i, a, ["Open", "High", "", "Low", "Close"], "candlestick");
            }
          },
          states: {
            active: {
              filter: {
                type: "none"
              }
            }
          },
          xaxis: {
            crosshairs: {
              width: 1
            }
          }
        };
      }
    }, {
      key: "boxPlot",
      value: function () {
        var t = this;
        return {
          chart: {
            animations: {
              dynamicAnimation: {
                enabled: !1
              }
            }
          },
          stroke: {
            width: 1,
            colors: ["#24292e"]
          },
          dataLabels: {
            enabled: !1
          },
          tooltip: {
            shared: !0,
            custom: function (e) {
              var i = e.seriesIndex,
                a = e.dataPointIndex,
                s = e.w;
              return t._getBoxTooltip(s, i, a, ["Minimum", "Q1", "Median", "Q3", "Maximum"], "boxPlot");
            }
          },
          markers: {
            size: 5,
            strokeWidth: 1,
            strokeColors: "#111"
          },
          xaxis: {
            crosshairs: {
              width: 1
            }
          }
        };
      }
    }, {
      key: "rangeBar",
      value: function () {
        return {
          chart: {
            animations: {
              animateGradually: !1
            }
          },
          stroke: {
            width: 0,
            lineCap: "square"
          },
          plotOptions: {
            bar: {
              borderRadius: 0,
              dataLabels: {
                position: "center"
              }
            }
          },
          dataLabels: {
            enabled: !1,
            formatter: function (t, e) {
              e.ctx;
              var i = e.seriesIndex,
                a = e.dataPointIndex,
                s = e.w,
                r = function () {
                  var t = s.globals.seriesRangeStart[i][a];
                  return s.globals.seriesRangeEnd[i][a] - t;
                };
              return s.globals.comboCharts ? "rangeBar" === s.config.series[i].type || "rangeArea" === s.config.series[i].type ? r() : t : r();
            },
            background: {
              enabled: !1
            },
            style: {
              colors: ["#fff"]
            }
          },
          markers: {
            size: 10
          },
          tooltip: {
            shared: !1,
            followCursor: !0,
            custom: function (t) {
              return t.w.config.plotOptions && t.w.config.plotOptions.bar && t.w.config.plotOptions.bar.horizontal ? function (t) {
                var i = M(e(e({}, t), {}, {
                    isTimeline: !0
                  })),
                  a = i.color,
                  s = i.seriesName,
                  r = i.ylabel,
                  o = i.startVal,
                  n = i.endVal;
                return X(e(e({}, t), {}, {
                  color: a,
                  seriesName: s,
                  ylabel: r,
                  start: o,
                  end: n
                }));
              }(t) : function (t) {
                var i = M(t),
                  a = i.color,
                  s = i.seriesName,
                  r = i.ylabel,
                  o = i.start,
                  n = i.end;
                return X(e(e({}, t), {}, {
                  color: a,
                  seriesName: s,
                  ylabel: r,
                  start: o,
                  end: n
                }));
              }(t);
            }
          },
          xaxis: {
            tickPlacement: "between",
            tooltip: {
              enabled: !1
            },
            crosshairs: {
              stroke: {
                width: 0
              }
            }
          }
        };
      }
    }, {
      key: "dumbbell",
      value: function (t) {
        var e, i;
        return null !== (e = t.plotOptions.bar) && void 0 !== e && e.barHeight || (t.plotOptions.bar.barHeight = 2), null !== (i = t.plotOptions.bar) && void 0 !== i && i.columnWidth || (t.plotOptions.bar.columnWidth = 2), t;
      }
    }, {
      key: "area",
      value: function () {
        return {
          stroke: {
            width: 4,
            fill: {
              type: "solid",
              gradient: {
                inverseColors: !1,
                shade: "light",
                type: "vertical",
                opacityFrom: .65,
                opacityTo: .5,
                stops: [0, 100, 100]
              }
            }
          },
          fill: {
            type: "gradient",
            gradient: {
              inverseColors: !1,
              shade: "light",
              type: "vertical",
              opacityFrom: .65,
              opacityTo: .5,
              stops: [0, 100, 100]
            }
          },
          markers: {
            size: 0,
            hover: {
              sizeOffset: 6
            }
          },
          tooltip: {
            followCursor: !1
          }
        };
      }
    }, {
      key: "rangeArea",
      value: function () {
        return {
          stroke: {
            curve: "straight",
            width: 0
          },
          fill: {
            type: "solid",
            opacity: .6
          },
          markers: {
            size: 0
          },
          states: {
            hover: {
              filter: {
                type: "none"
              }
            },
            active: {
              filter: {
                type: "none"
              }
            }
          },
          tooltip: {
            intersect: !1,
            shared: !0,
            followCursor: !0,
            custom: function (t) {
              return function (t) {
                var i = M(t),
                  a = i.color,
                  s = i.seriesName,
                  r = i.ylabel,
                  o = i.start,
                  n = i.end;
                return X(e(e({}, t), {}, {
                  color: a,
                  seriesName: s,
                  ylabel: r,
                  start: o,
                  end: n
                }));
              }(t);
            }
          }
        };
      }
    }, {
      key: "brush",
      value: function (t) {
        return x.extend(t, {
          chart: {
            toolbar: {
              autoSelected: "selection",
              show: !1
            },
            zoom: {
              enabled: !1
            }
          },
          dataLabels: {
            enabled: !1
          },
          stroke: {
            width: 1
          },
          tooltip: {
            enabled: !1
          },
          xaxis: {
            tooltip: {
              enabled: !1
            }
          }
        });
      }
    }, {
      key: "stacked100",
      value: function (t) {
        t.dataLabels = t.dataLabels || {}, t.dataLabels.formatter = t.dataLabels.formatter || void 0;
        var e = t.dataLabels.formatter;
        return t.yaxis.forEach(function (e, i) {
          t.yaxis[i].min = 0, t.yaxis[i].max = 100;
        }), "bar" === t.chart.type && (t.dataLabels.formatter = e || function (t) {
          return "number" == typeof t && t ? t.toFixed(0) + "%" : t;
        }), t;
      }
    }, {
      key: "stackedBars",
      value: function () {
        var t = this.bar();
        return e(e({}, t), {}, {
          plotOptions: e(e({}, t.plotOptions), {}, {
            bar: e(e({}, t.plotOptions.bar), {}, {
              borderRadiusApplication: "end",
              borderRadiusWhenStacked: "last"
            })
          })
        });
      }
    }, {
      key: "convertCatToNumeric",
      value: function (t) {
        return t.xaxis.convertedCatToNumeric = !0, t;
      }
    }, {
      key: "convertCatToNumericXaxis",
      value: function (t, e, i) {
        t.xaxis.type = "numeric", t.xaxis.labels = t.xaxis.labels || {}, t.xaxis.labels.formatter = t.xaxis.labels.formatter || function (t) {
          return x.isNumber(t) ? Math.floor(t) : t;
        };
        var a = t.xaxis.labels.formatter,
          s = t.xaxis.categories && t.xaxis.categories.length ? t.xaxis.categories : t.labels;
        return i && i.length && (s = i.map(function (t) {
          return Array.isArray(t) ? t : String(t);
        })), s && s.length && (t.xaxis.labels.formatter = function (t) {
          return x.isNumber(t) ? a(s[Math.floor(t) - 1]) : a(t);
        }), t.xaxis.categories = [], t.labels = [], t.xaxis.tickAmount = t.xaxis.tickAmount || "dataPoints", t;
      }
    }, {
      key: "bubble",
      value: function () {
        return {
          dataLabels: {
            style: {
              colors: ["#fff"]
            }
          },
          tooltip: {
            shared: !1,
            intersect: !0
          },
          xaxis: {
            crosshairs: {
              width: 0
            }
          },
          fill: {
            type: "solid",
            gradient: {
              shade: "light",
              inverse: !0,
              shadeIntensity: .55,
              opacityFrom: .4,
              opacityTo: .8
            }
          }
        };
      }
    }, {
      key: "scatter",
      value: function () {
        return {
          dataLabels: {
            enabled: !1
          },
          tooltip: {
            shared: !1,
            intersect: !0
          },
          markers: {
            size: 6,
            strokeWidth: 1,
            hover: {
              sizeOffset: 2
            }
          }
        };
      }
    }, {
      key: "heatmap",
      value: function () {
        return {
          chart: {
            stacked: !1
          },
          fill: {
            opacity: 1
          },
          dataLabels: {
            style: {
              colors: ["#fff"]
            }
          },
          stroke: {
            colors: ["#fff"]
          },
          tooltip: {
            followCursor: !0,
            marker: {
              show: !1
            },
            x: {
              show: !1
            }
          },
          legend: {
            position: "top",
            markers: {
              shape: "square",
              size: 10,
              offsetY: 2
            }
          },
          grid: {
            padding: {
              right: 20
            }
          }
        };
      }
    }, {
      key: "treemap",
      value: function () {
        return {
          chart: {
            zoom: {
              enabled: !1
            }
          },
          dataLabels: {
            style: {
              fontSize: 14,
              fontWeight: 600,
              colors: ["#fff"]
            }
          },
          stroke: {
            show: !0,
            width: 2,
            colors: ["#fff"]
          },
          legend: {
            show: !1
          },
          fill: {
            gradient: {
              stops: [0, 100]
            }
          },
          tooltip: {
            followCursor: !0,
            x: {
              show: !1
            }
          },
          grid: {
            padding: {
              left: 0,
              right: 0
            }
          },
          xaxis: {
            crosshairs: {
              show: !1
            },
            tooltip: {
              enabled: !1
            }
          }
        };
      }
    }, {
      key: "pie",
      value: function () {
        return {
          chart: {
            toolbar: {
              show: !1
            }
          },
          plotOptions: {
            pie: {
              donut: {
                labels: {
                  show: !1
                }
              }
            }
          },
          dataLabels: {
            formatter: function (t) {
              return t.toFixed(1) + "%";
            },
            style: {
              colors: ["#fff"]
            },
            background: {
              enabled: !1
            },
            dropShadow: {
              enabled: !0
            }
          },
          stroke: {
            colors: ["#fff"]
          },
          fill: {
            opacity: 1,
            gradient: {
              shade: "light",
              stops: [0, 100]
            }
          },
          tooltip: {
            theme: "dark",
            fillSeriesColor: !0
          },
          legend: {
            position: "right"
          }
        };
      }
    }, {
      key: "donut",
      value: function () {
        return {
          chart: {
            toolbar: {
              show: !1
            }
          },
          dataLabels: {
            formatter: function (t) {
              return t.toFixed(1) + "%";
            },
            style: {
              colors: ["#fff"]
            },
            background: {
              enabled: !1
            },
            dropShadow: {
              enabled: !0
            }
          },
          stroke: {
            colors: ["#fff"]
          },
          fill: {
            opacity: 1,
            gradient: {
              shade: "light",
              shadeIntensity: .35,
              stops: [80, 100],
              opacityFrom: 1,
              opacityTo: 1
            }
          },
          tooltip: {
            theme: "dark",
            fillSeriesColor: !0
          },
          legend: {
            position: "right"
          }
        };
      }
    }, {
      key: "polarArea",
      value: function () {
        return this.opts.yaxis[0].tickAmount = this.opts.yaxis[0].tickAmount ? this.opts.yaxis[0].tickAmount : 6, {
          chart: {
            toolbar: {
              show: !1
            }
          },
          dataLabels: {
            formatter: function (t) {
              return t.toFixed(1) + "%";
            },
            enabled: !1
          },
          stroke: {
            show: !0,
            width: 2
          },
          fill: {
            opacity: .7
          },
          tooltip: {
            theme: "dark",
            fillSeriesColor: !0
          },
          legend: {
            position: "right"
          }
        };
      }
    }, {
      key: "radar",
      value: function () {
        return this.opts.yaxis[0].labels.offsetY = this.opts.yaxis[0].labels.offsetY ? this.opts.yaxis[0].labels.offsetY : 6, {
          dataLabels: {
            enabled: !1,
            style: {
              fontSize: "11px"
            }
          },
          stroke: {
            width: 2
          },
          markers: {
            size: 3,
            strokeWidth: 1,
            strokeOpacity: 1
          },
          fill: {
            opacity: .2
          },
          tooltip: {
            shared: !1,
            intersect: !0,
            followCursor: !0
          },
          grid: {
            show: !1
          },
          xaxis: {
            labels: {
              formatter: function (t) {
                return t;
              },
              style: {
                colors: ["#a8a8a8"],
                fontSize: "11px"
              }
            },
            tooltip: {
              enabled: !1
            },
            crosshairs: {
              show: !1
            }
          }
        };
      }
    }, {
      key: "radialBar",
      value: function () {
        return {
          chart: {
            animations: {
              dynamicAnimation: {
                enabled: !0,
                speed: 800
              }
            },
            toolbar: {
              show: !1
            }
          },
          fill: {
            gradient: {
              shade: "dark",
              shadeIntensity: .4,
              inverseColors: !1,
              type: "diagonal2",
              opacityFrom: 1,
              opacityTo: 1,
              stops: [70, 98, 100]
            }
          },
          legend: {
            show: !1,
            position: "right"
          },
          tooltip: {
            enabled: !1,
            fillSeriesColor: !0
          }
        };
      }
    }, {
      key: "_getBoxTooltip",
      value: function (t, e, i, a, s) {
        var r = t.globals.seriesCandleO[e][i],
          o = t.globals.seriesCandleH[e][i],
          n = t.globals.seriesCandleM[e][i],
          l = t.globals.seriesCandleL[e][i],
          h = t.globals.seriesCandleC[e][i];
        return t.config.series[e].type && t.config.series[e].type !== s ? '<div class="apexcharts-custom-tooltip">\n          '.concat(t.config.series[e].name ? t.config.series[e].name : "series-" + (e + 1), ": <strong>").concat(t.globals.series[e][i], "</strong>\n        </div>") : '<div class="apexcharts-tooltip-box apexcharts-tooltip-'.concat(t.config.chart.type, '">') + "<div>".concat(a[0], ': <span class="value">') + r + "</span></div>" + "<div>".concat(a[1], ': <span class="value">') + o + "</span></div>" + (n ? "<div>".concat(a[2], ': <span class="value">') + n + "</span></div>" : "") + "<div>".concat(a[3], ': <span class="value">') + l + "</span></div>" + "<div>".concat(a[4], ': <span class="value">') + h + "</span></div></div>";
      }
    }]), t;
  }(),
  E = function () {
    function t(e) {
      a(this, t), this.opts = e;
    }
    return r(t, [{
      key: "init",
      value: function (t) {
        var e = t.responsiveOverride,
          a = this.opts,
          s = new L(),
          r = new z(a);
        this.chartType = a.chart.type, a = this.extendYAxis(a), a = this.extendAnnotations(a);
        var o = s.init(),
          n = {};
        if (a && "object" === i(a)) {
          var l,
            h,
            c,
            d,
            g,
            u,
            p,
            f,
            b = {};
          b = -1 !== ["line", "area", "bar", "candlestick", "boxPlot", "rangeBar", "rangeArea", "bubble", "scatter", "heatmap", "treemap", "pie", "polarArea", "donut", "radar", "radialBar"].indexOf(a.chart.type) ? r[a.chart.type]() : r.line(), null !== (l = a.plotOptions) && void 0 !== l && null !== (h = l.bar) && void 0 !== h && h.isFunnel && (b = r.funnel()), a.chart.stacked && "bar" === a.chart.type && (b = r.stackedBars()), null !== (c = a.chart.brush) && void 0 !== c && c.enabled && (b = r.brush(b)), a.chart.stacked && "100%" === a.chart.stackType && (a = r.stacked100(a)), null !== (d = a.plotOptions) && void 0 !== d && null !== (g = d.bar) && void 0 !== g && g.isDumbbell && (a = r.dumbbell(a)), this.checkForDarkTheme(window.Apex), this.checkForDarkTheme(a), a.xaxis = a.xaxis || window.Apex.xaxis || {}, e || (a.xaxis.convertedCatToNumeric = !1), (null !== (u = (a = this.checkForCatToNumericXAxis(this.chartType, b, a)).chart.sparkline) && void 0 !== u && u.enabled || null !== (p = window.Apex.chart) && void 0 !== p && null !== (f = p.sparkline) && void 0 !== f && f.enabled) && (b = r.sparkline(b)), n = x.extend(o, b);
        }
        var v = x.extend(n, window.Apex);
        return o = x.extend(v, a), o = this.handleUserInputErrors(o);
      }
    }, {
      key: "checkForCatToNumericXAxis",
      value: function (t, e, i) {
        var a,
          s,
          r = new z(i),
          o = ("bar" === t || "boxPlot" === t) && (null === (a = i.plotOptions) || void 0 === a || null === (s = a.bar) || void 0 === s ? void 0 : s.horizontal),
          n = "pie" === t || "polarArea" === t || "donut" === t || "radar" === t || "radialBar" === t || "heatmap" === t,
          l = "datetime" !== i.xaxis.type && "numeric" !== i.xaxis.type,
          h = i.xaxis.tickPlacement ? i.xaxis.tickPlacement : e.xaxis && e.xaxis.tickPlacement;
        return o || n || !l || "between" === h || (i = r.convertCatToNumeric(i)), i;
      }
    }, {
      key: "extendYAxis",
      value: function (t, e) {
        var i = new L();
        (void 0 === t.yaxis || !t.yaxis || Array.isArray(t.yaxis) && 0 === t.yaxis.length) && (t.yaxis = {}), t.yaxis.constructor !== Array && window.Apex.yaxis && window.Apex.yaxis.constructor !== Array && (t.yaxis = x.extend(t.yaxis, window.Apex.yaxis)), t.yaxis.constructor !== Array ? t.yaxis = [x.extend(i.yAxis, t.yaxis)] : t.yaxis = x.extendArray(t.yaxis, i.yAxis);
        var a = !1;
        t.yaxis.forEach(function (t) {
          t.logarithmic && (a = !0);
        });
        var s = t.series;
        return e && !s && (s = e.config.series), a && s.length !== t.yaxis.length && s.length && (t.yaxis = s.map(function (e, a) {
          if (e.name || (s[a].name = "series-".concat(a + 1)), t.yaxis[a]) return t.yaxis[a].seriesName = s[a].name, t.yaxis[a];
          var r = x.extend(i.yAxis, t.yaxis[0]);
          return r.show = !1, r;
        })), a && s.length > 1 && s.length !== t.yaxis.length && console.warn("A multi-series logarithmic chart should have equal number of series and y-axes. Please make sure to equalize both."), t;
      }
    }, {
      key: "extendAnnotations",
      value: function (t) {
        return void 0 === t.annotations && (t.annotations = {}, t.annotations.yaxis = [], t.annotations.xaxis = [], t.annotations.points = []), t = this.extendYAxisAnnotations(t), t = this.extendXAxisAnnotations(t), t = this.extendPointAnnotations(t);
      }
    }, {
      key: "extendYAxisAnnotations",
      value: function (t) {
        var e = new L();
        return t.annotations.yaxis = x.extendArray(void 0 !== t.annotations.yaxis ? t.annotations.yaxis : [], e.yAxisAnnotation), t;
      }
    }, {
      key: "extendXAxisAnnotations",
      value: function (t) {
        var e = new L();
        return t.annotations.xaxis = x.extendArray(void 0 !== t.annotations.xaxis ? t.annotations.xaxis : [], e.xAxisAnnotation), t;
      }
    }, {
      key: "extendPointAnnotations",
      value: function (t) {
        var e = new L();
        return t.annotations.points = x.extendArray(void 0 !== t.annotations.points ? t.annotations.points : [], e.pointAnnotation), t;
      }
    }, {
      key: "checkForDarkTheme",
      value: function (t) {
        t.theme && "dark" === t.theme.mode && (t.tooltip || (t.tooltip = {}), "light" !== t.tooltip.theme && (t.tooltip.theme = "dark"), t.chart.foreColor || (t.chart.foreColor = "#f6f7f8"), t.chart.background || (t.chart.background = "#424242"), t.theme.palette || (t.theme.palette = "palette4"));
      }
    }, {
      key: "handleUserInputErrors",
      value: function (t) {
        var e = t;
        if (e.tooltip.shared && e.tooltip.intersect) throw new Error("tooltip.shared cannot be enabled when tooltip.intersect is true. Turn off any other option by setting it to false.");
        if ("bar" === e.chart.type && e.plotOptions.bar.horizontal) {
          if (e.yaxis.length > 1) throw new Error("Multiple Y Axis for bars are not supported. Switch to column chart by setting plotOptions.bar.horizontal=false");
          e.yaxis[0].reversed && (e.yaxis[0].opposite = !0), e.xaxis.tooltip.enabled = !1, e.yaxis[0].tooltip.enabled = !1, e.chart.zoom.enabled = !1;
        }
        return "bar" !== e.chart.type && "rangeBar" !== e.chart.type || e.tooltip.shared && "barWidth" === e.xaxis.crosshairs.width && e.series.length > 1 && (e.xaxis.crosshairs.width = "tickWidth"), "candlestick" !== e.chart.type && "boxPlot" !== e.chart.type || e.yaxis[0].reversed && (console.warn("Reversed y-axis in ".concat(e.chart.type, " chart is not supported.")), e.yaxis[0].reversed = !1), e;
      }
    }]), t;
  }(),
  Y = function () {
    function t() {
      a(this, t);
    }
    return r(t, [{
      key: "initGlobalVars",
      value: function (t) {
        t.series = [], t.seriesCandleO = [], t.seriesCandleH = [], t.seriesCandleM = [], t.seriesCandleL = [], t.seriesCandleC = [], t.seriesRangeStart = [], t.seriesRangeEnd = [], t.seriesRange = [], t.seriesPercent = [], t.seriesGoals = [], t.seriesX = [], t.seriesZ = [], t.seriesNames = [], t.seriesTotals = [], t.seriesLog = [], t.seriesColors = [], t.stackedSeriesTotals = [], t.seriesXvalues = [], t.seriesYvalues = [], t.labels = [], t.hasXaxisGroups = !1, t.groups = [], t.hasSeriesGroups = !1, t.seriesGroups = [], t.categoryLabels = [], t.timescaleLabels = [], t.noLabelsProvided = !1, t.resizeTimer = null, t.selectionResizeTimer = null, t.delayedElements = [], t.pointsArray = [], t.dataLabelsRects = [], t.isXNumeric = !1, t.skipLastTimelinelabel = !1, t.skipFirstTimelinelabel = !1, t.isDataXYZ = !1, t.isMultiLineX = !1, t.isMultipleYAxis = !1, t.maxY = -Number.MAX_VALUE, t.minY = Number.MIN_VALUE, t.minYArr = [], t.maxYArr = [], t.maxX = -Number.MAX_VALUE, t.minX = Number.MAX_VALUE, t.initialMaxX = -Number.MAX_VALUE, t.initialMinX = Number.MAX_VALUE, t.maxDate = 0, t.minDate = Number.MAX_VALUE, t.minZ = Number.MAX_VALUE, t.maxZ = -Number.MAX_VALUE, t.minXDiff = Number.MAX_VALUE, t.yAxisScale = [], t.xAxisScale = null, t.xAxisTicksPositions = [], t.yLabelsCoords = [], t.yTitleCoords = [], t.barPadForNumericAxis = 0, t.padHorizontal = 0, t.xRange = 0, t.yRange = [], t.zRange = 0, t.dataPoints = 0, t.xTickAmount = 0;
      }
    }, {
      key: "globalVars",
      value: function (t) {
        return {
          chartID: null,
          cuid: null,
          events: {
            beforeMount: [],
            mounted: [],
            updated: [],
            clicked: [],
            selection: [],
            dataPointSelection: [],
            zoomed: [],
            scrolled: []
          },
          colors: [],
          clientX: null,
          clientY: null,
          fill: {
            colors: []
          },
          stroke: {
            colors: []
          },
          dataLabels: {
            style: {
              colors: []
            }
          },
          radarPolygons: {
            fill: {
              colors: []
            }
          },
          markers: {
            colors: [],
            size: t.markers.size,
            largestSize: 0
          },
          animationEnded: !1,
          isTouchDevice: "ontouchstart" in window || navigator.msMaxTouchPoints,
          isDirty: !1,
          isExecCalled: !1,
          initialConfig: null,
          initialSeries: [],
          lastXAxis: [],
          lastYAxis: [],
          columnSeries: null,
          labels: [],
          timescaleLabels: [],
          noLabelsProvided: !1,
          allSeriesCollapsed: !1,
          collapsedSeries: [],
          collapsedSeriesIndices: [],
          ancillaryCollapsedSeries: [],
          ancillaryCollapsedSeriesIndices: [],
          risingSeries: [],
          dataFormatXNumeric: !1,
          capturedSeriesIndex: -1,
          capturedDataPointIndex: -1,
          selectedDataPoints: [],
          goldenPadding: 35,
          invalidLogScale: !1,
          ignoreYAxisIndexes: [],
          yAxisSameScaleIndices: [],
          maxValsInArrayIndex: 0,
          radialSize: 0,
          selection: void 0,
          zoomEnabled: "zoom" === t.chart.toolbar.autoSelected && t.chart.toolbar.tools.zoom && t.chart.zoom.enabled,
          panEnabled: "pan" === t.chart.toolbar.autoSelected && t.chart.toolbar.tools.pan,
          selectionEnabled: "selection" === t.chart.toolbar.autoSelected && t.chart.toolbar.tools.selection,
          yaxis: null,
          mousedown: !1,
          lastClientPosition: {},
          visibleXRange: void 0,
          yValueDecimal: 0,
          total: 0,
          SVGNS: "http://www.w3.org/2000/svg",
          svgWidth: 0,
          svgHeight: 0,
          noData: !1,
          locale: {},
          dom: {},
          memory: {
            methodsToExec: []
          },
          shouldAnimate: !0,
          skipLastTimelinelabel: !1,
          skipFirstTimelinelabel: !1,
          delayedElements: [],
          axisCharts: !0,
          isDataXYZ: !1,
          resized: !1,
          resizeTimer: null,
          comboCharts: !1,
          dataChanged: !1,
          previousPaths: [],
          allSeriesHasEqualX: !0,
          pointsArray: [],
          dataLabelsRects: [],
          lastDrawnDataLabelsIndexes: [],
          hasNullValues: !1,
          easing: null,
          zoomed: !1,
          gridWidth: 0,
          gridHeight: 0,
          rotateXLabels: !1,
          defaultLabels: !1,
          xLabelFormatter: void 0,
          yLabelFormatters: [],
          xaxisTooltipFormatter: void 0,
          ttKeyFormatter: void 0,
          ttVal: void 0,
          ttZFormatter: void 0,
          LINE_HEIGHT_RATIO: 1.618,
          xAxisLabelsHeight: 0,
          xAxisGroupLabelsHeight: 0,
          xAxisLabelsWidth: 0,
          yAxisLabelsWidth: 0,
          scaleX: 1,
          scaleY: 1,
          translateX: 0,
          translateY: 0,
          translateYAxisX: [],
          yAxisWidths: [],
          translateXAxisY: 0,
          translateXAxisX: 0,
          tooltip: null
        };
      }
    }, {
      key: "init",
      value: function (t) {
        var e = this.globalVars(t);
        return this.initGlobalVars(e), e.initialConfig = x.extend({}, t), e.initialSeries = x.clone(t.series), e.lastXAxis = x.clone(e.initialConfig.xaxis), e.lastYAxis = x.clone(e.initialConfig.yaxis), e;
      }
    }]), t;
  }(),
  F = function () {
    function t(e) {
      a(this, t), this.opts = e;
    }
    return r(t, [{
      key: "init",
      value: function () {
        var t = new E(this.opts).init({
          responsiveOverride: !1
        });
        return {
          config: t,
          globals: new Y().init(t)
        };
      }
    }]), t;
  }(),
  R = function () {
    function t(e) {
      a(this, t), this.ctx = e, this.w = e.w, this.opts = null, this.seriesIndex = 0;
    }
    return r(t, [{
      key: "clippedImgArea",
      value: function (t) {
        var e = this.w,
          i = e.config,
          a = parseInt(e.globals.gridWidth, 10),
          s = parseInt(e.globals.gridHeight, 10),
          r = a > s ? a : s,
          o = t.image,
          n = 0,
          l = 0;
        void 0 === t.width && void 0 === t.height ? void 0 !== i.fill.image.width && void 0 !== i.fill.image.height ? (n = i.fill.image.width + 1, l = i.fill.image.height) : (n = r + 1, l = r) : (n = t.width, l = t.height);
        var h = document.createElementNS(e.globals.SVGNS, "pattern");
        m.setAttrs(h, {
          id: t.patternID,
          patternUnits: t.patternUnits ? t.patternUnits : "userSpaceOnUse",
          width: n + "px",
          height: l + "px"
        });
        var c = document.createElementNS(e.globals.SVGNS, "image");
        h.appendChild(c), c.setAttributeNS(window.SVG.xlink, "href", o), m.setAttrs(c, {
          x: 0,
          y: 0,
          preserveAspectRatio: "none",
          width: n + "px",
          height: l + "px"
        }), c.style.opacity = t.opacity, e.globals.dom.elDefs.node.appendChild(h);
      }
    }, {
      key: "getSeriesIndex",
      value: function (t) {
        var e = this.w,
          i = e.config.chart.type;
        return ("bar" === i || "rangeBar" === i) && e.config.plotOptions.bar.distributed || "heatmap" === i || "treemap" === i ? this.seriesIndex = t.seriesNumber : this.seriesIndex = t.seriesNumber % e.globals.series.length, this.seriesIndex;
      }
    }, {
      key: "fillPath",
      value: function (t) {
        var e = this.w;
        this.opts = t;
        var i,
          a,
          s,
          r = this.w.config;
        this.seriesIndex = this.getSeriesIndex(t);
        var o = this.getFillColors()[this.seriesIndex];
        void 0 !== e.globals.seriesColors[this.seriesIndex] && (o = e.globals.seriesColors[this.seriesIndex]), "function" == typeof o && (o = o({
          seriesIndex: this.seriesIndex,
          dataPointIndex: t.dataPointIndex,
          value: t.value,
          w: e
        }));
        var n = t.fillType ? t.fillType : this.getFillType(this.seriesIndex),
          l = Array.isArray(r.fill.opacity) ? r.fill.opacity[this.seriesIndex] : r.fill.opacity;
        t.color && (o = t.color);
        var h = o;
        if (-1 === o.indexOf("rgb") ? o.length < 9 && (h = x.hexToRgba(o, l)) : o.indexOf("rgba") > -1 && (l = x.getOpacityFromRGBA(o)), t.opacity && (l = t.opacity), "pattern" === n && (a = this.handlePatternFill({
          fillConfig: t.fillConfig,
          patternFill: a,
          fillColor: o,
          fillOpacity: l,
          defaultColor: h
        })), "gradient" === n && (s = this.handleGradientFill({
          fillConfig: t.fillConfig,
          fillColor: o,
          fillOpacity: l,
          i: this.seriesIndex
        })), "image" === n) {
          var c = r.fill.image.src,
            d = t.patternID ? t.patternID : "";
          this.clippedImgArea({
            opacity: l,
            image: Array.isArray(c) ? t.seriesNumber < c.length ? c[t.seriesNumber] : c[0] : c,
            width: t.width ? t.width : void 0,
            height: t.height ? t.height : void 0,
            patternUnits: t.patternUnits,
            patternID: "pattern".concat(e.globals.cuid).concat(t.seriesNumber + 1).concat(d)
          }), i = "url(#pattern".concat(e.globals.cuid).concat(t.seriesNumber + 1).concat(d, ")");
        } else i = "gradient" === n ? s : "pattern" === n ? a : h;
        return t.solid && (i = h), i;
      }
    }, {
      key: "getFillType",
      value: function (t) {
        var e = this.w;
        return Array.isArray(e.config.fill.type) ? e.config.fill.type[t] : e.config.fill.type;
      }
    }, {
      key: "getFillColors",
      value: function () {
        var t = this.w,
          e = t.config,
          i = this.opts,
          a = [];
        return t.globals.comboCharts ? "line" === t.config.series[this.seriesIndex].type ? Array.isArray(t.globals.stroke.colors) ? a = t.globals.stroke.colors : a.push(t.globals.stroke.colors) : Array.isArray(t.globals.fill.colors) ? a = t.globals.fill.colors : a.push(t.globals.fill.colors) : "line" === e.chart.type ? Array.isArray(t.globals.stroke.colors) ? a = t.globals.stroke.colors : a.push(t.globals.stroke.colors) : Array.isArray(t.globals.fill.colors) ? a = t.globals.fill.colors : a.push(t.globals.fill.colors), void 0 !== i.fillColors && (a = [], Array.isArray(i.fillColors) ? a = i.fillColors.slice() : a.push(i.fillColors)), a;
      }
    }, {
      key: "handlePatternFill",
      value: function (t) {
        var e = t.fillConfig,
          i = t.patternFill,
          a = t.fillColor,
          s = t.fillOpacity,
          r = t.defaultColor,
          o = this.w.config.fill;
        e && (o = e);
        var n = this.opts,
          l = new m(this.ctx),
          h = Array.isArray(o.pattern.strokeWidth) ? o.pattern.strokeWidth[this.seriesIndex] : o.pattern.strokeWidth,
          c = a;
        Array.isArray(o.pattern.style) ? i = void 0 !== o.pattern.style[n.seriesNumber] ? l.drawPattern(o.pattern.style[n.seriesNumber], o.pattern.width, o.pattern.height, c, h, s) : r : i = l.drawPattern(o.pattern.style, o.pattern.width, o.pattern.height, c, h, s);
        return i;
      }
    }, {
      key: "handleGradientFill",
      value: function (t) {
        var i = t.fillColor,
          a = t.fillOpacity,
          s = t.fillConfig,
          r = t.i,
          o = this.w.config.fill;
        s && (o = e(e({}, o), s));
        var n,
          l = this.opts,
          h = new m(this.ctx),
          c = new x(),
          d = o.gradient.type,
          g = i,
          u = void 0 === o.gradient.opacityFrom ? a : Array.isArray(o.gradient.opacityFrom) ? o.gradient.opacityFrom[r] : o.gradient.opacityFrom;
        g.indexOf("rgba") > -1 && (u = x.getOpacityFromRGBA(g));
        var p = void 0 === o.gradient.opacityTo ? a : Array.isArray(o.gradient.opacityTo) ? o.gradient.opacityTo[r] : o.gradient.opacityTo;
        if (void 0 === o.gradient.gradientToColors || 0 === o.gradient.gradientToColors.length) n = "dark" === o.gradient.shade ? c.shadeColor(-1 * parseFloat(o.gradient.shadeIntensity), i.indexOf("rgb") > -1 ? x.rgb2hex(i) : i) : c.shadeColor(parseFloat(o.gradient.shadeIntensity), i.indexOf("rgb") > -1 ? x.rgb2hex(i) : i);else if (o.gradient.gradientToColors[l.seriesNumber]) {
          var f = o.gradient.gradientToColors[l.seriesNumber];
          n = f, f.indexOf("rgba") > -1 && (p = x.getOpacityFromRGBA(f));
        } else n = i;
        if (o.gradient.gradientFrom && (g = o.gradient.gradientFrom), o.gradient.gradientTo && (n = o.gradient.gradientTo), o.gradient.inverseColors) {
          var b = g;
          g = n, n = b;
        }
        return g.indexOf("rgb") > -1 && (g = x.rgb2hex(g)), n.indexOf("rgb") > -1 && (n = x.rgb2hex(n)), h.drawGradient(d, g, n, u, p, l.size, o.gradient.stops, o.gradient.colorStops, r);
      }
    }]), t;
  }(),
  H = function () {
    function t(e, i) {
      a(this, t), this.ctx = e, this.w = e.w;
    }
    return r(t, [{
      key: "setGlobalMarkerSize",
      value: function () {
        var t = this.w;
        if (t.globals.markers.size = Array.isArray(t.config.markers.size) ? t.config.markers.size : [t.config.markers.size], t.globals.markers.size.length > 0) {
          if (t.globals.markers.size.length < t.globals.series.length + 1) for (var e = 0; e <= t.globals.series.length; e++) void 0 === t.globals.markers.size[e] && t.globals.markers.size.push(t.globals.markers.size[0]);
        } else t.globals.markers.size = t.config.series.map(function (e) {
          return t.config.markers.size;
        });
      }
    }, {
      key: "plotChartMarkers",
      value: function (t, e, i, a) {
        var s,
          r = arguments.length > 4 && void 0 !== arguments[4] && arguments[4],
          o = this.w,
          n = e,
          l = t,
          h = null,
          c = new m(this.ctx),
          d = o.config.markers.discrete && o.config.markers.discrete.length;
        if ((o.globals.markers.size[e] > 0 || r || d) && (h = c.group({
          class: r || d ? "" : "apexcharts-series-markers"
        })).attr("clip-path", "url(#gridRectMarkerMask".concat(o.globals.cuid, ")")), Array.isArray(l.x)) for (var g = 0; g < l.x.length; g++) {
          var u = i;
          1 === i && 0 === g && (u = 0), 1 === i && 1 === g && (u = 1);
          var p = "apexcharts-marker";
          if ("line" !== o.config.chart.type && "area" !== o.config.chart.type || o.globals.comboCharts || o.config.tooltip.intersect || (p += " no-pointer-events"), (Array.isArray(o.config.markers.size) ? o.globals.markers.size[e] > 0 : o.config.markers.size > 0) || r || d) {
            x.isNumber(l.y[g]) ? p += " w".concat(x.randomId()) : p = "apexcharts-nullpoint";
            var f = this.getMarkerConfig({
              cssClass: p,
              seriesIndex: e,
              dataPointIndex: u
            });
            o.config.series[n].data[u] && (o.config.series[n].data[u].fillColor && (f.pointFillColor = o.config.series[n].data[u].fillColor), o.config.series[n].data[u].strokeColor && (f.pointStrokeColor = o.config.series[n].data[u].strokeColor)), a && (f.pSize = a), (l.x[g] < 0 || l.x[g] > o.globals.gridWidth || l.y[g] < 0 || l.y[g] > o.globals.gridHeight) && (f.pSize = 0), (s = c.drawMarker(l.x[g], l.y[g], f)).attr("rel", u), s.attr("j", u), s.attr("index", e), s.node.setAttribute("default-marker-size", f.pSize), new v(this.ctx).setSelectionFilter(s, e, u), this.addEvents(s), h && h.add(s);
          } else void 0 === o.globals.pointsArray[e] && (o.globals.pointsArray[e] = []), o.globals.pointsArray[e].push([l.x[g], l.y[g]]);
        }
        return h;
      }
    }, {
      key: "getMarkerConfig",
      value: function (t) {
        var e = t.cssClass,
          i = t.seriesIndex,
          a = t.dataPointIndex,
          s = void 0 === a ? null : a,
          r = t.finishRadius,
          o = void 0 === r ? null : r,
          n = this.w,
          l = this.getMarkerStyle(i),
          h = n.globals.markers.size[i],
          c = n.config.markers;
        return null !== s && c.discrete.length && c.discrete.map(function (t) {
          t.seriesIndex === i && t.dataPointIndex === s && (l.pointStrokeColor = t.strokeColor, l.pointFillColor = t.fillColor, h = t.size, l.pointShape = t.shape);
        }), {
          pSize: null === o ? h : o,
          pRadius: c.radius,
          width: Array.isArray(c.width) ? c.width[i] : c.width,
          height: Array.isArray(c.height) ? c.height[i] : c.height,
          pointStrokeWidth: Array.isArray(c.strokeWidth) ? c.strokeWidth[i] : c.strokeWidth,
          pointStrokeColor: l.pointStrokeColor,
          pointFillColor: l.pointFillColor,
          shape: l.pointShape || (Array.isArray(c.shape) ? c.shape[i] : c.shape),
          class: e,
          pointStrokeOpacity: Array.isArray(c.strokeOpacity) ? c.strokeOpacity[i] : c.strokeOpacity,
          pointStrokeDashArray: Array.isArray(c.strokeDashArray) ? c.strokeDashArray[i] : c.strokeDashArray,
          pointFillOpacity: Array.isArray(c.fillOpacity) ? c.fillOpacity[i] : c.fillOpacity,
          seriesIndex: i
        };
      }
    }, {
      key: "addEvents",
      value: function (t) {
        var e = this.w,
          i = new m(this.ctx);
        t.node.addEventListener("mouseenter", i.pathMouseEnter.bind(this.ctx, t)), t.node.addEventListener("mouseleave", i.pathMouseLeave.bind(this.ctx, t)), t.node.addEventListener("mousedown", i.pathMouseDown.bind(this.ctx, t)), t.node.addEventListener("click", e.config.markers.onClick), t.node.addEventListener("dblclick", e.config.markers.onDblClick), t.node.addEventListener("touchstart", i.pathMouseDown.bind(this.ctx, t), {
          passive: !0
        });
      }
    }, {
      key: "getMarkerStyle",
      value: function (t) {
        var e = this.w,
          i = e.globals.markers.colors,
          a = e.config.markers.strokeColor || e.config.markers.strokeColors;
        return {
          pointStrokeColor: Array.isArray(a) ? a[t] : a,
          pointFillColor: Array.isArray(i) ? i[t] : i
        };
      }
    }]), t;
  }(),
  D = function () {
    function t(e) {
      a(this, t), this.ctx = e, this.w = e.w, this.initialAnim = this.w.config.chart.animations.enabled, this.dynamicAnim = this.initialAnim && this.w.config.chart.animations.dynamicAnimation.enabled;
    }
    return r(t, [{
      key: "draw",
      value: function (t, e, i) {
        var a = this.w,
          s = new m(this.ctx),
          r = i.realIndex,
          o = i.pointsPos,
          n = i.zRatio,
          l = i.elParent,
          h = s.group({
            class: "apexcharts-series-markers apexcharts-series-".concat(a.config.chart.type)
          });
        if (h.attr("clip-path", "url(#gridRectMarkerMask".concat(a.globals.cuid, ")")), Array.isArray(o.x)) for (var c = 0; c < o.x.length; c++) {
          var d = e + 1,
            g = !0;
          0 === e && 0 === c && (d = 0), 0 === e && 1 === c && (d = 1);
          var u = 0,
            p = a.globals.markers.size[r];
          if (n !== 1 / 0) {
            var f = a.config.plotOptions.bubble;
            p = a.globals.seriesZ[r][d], f.zScaling && (p /= n), f.minBubbleRadius && p < f.minBubbleRadius && (p = f.minBubbleRadius), f.maxBubbleRadius && p > f.maxBubbleRadius && (p = f.maxBubbleRadius);
          }
          a.config.chart.animations.enabled || (u = p);
          var x = o.x[c],
            b = o.y[c];
          if (u = u || 0, null !== b && void 0 !== a.globals.series[r][d] || (g = !1), g) {
            var v = this.drawPoint(x, b, u, p, r, d, e);
            h.add(v);
          }
          l.add(h);
        }
      }
    }, {
      key: "drawPoint",
      value: function (t, e, i, a, s, r, o) {
        var n = this.w,
          l = s,
          h = new b(this.ctx),
          c = new v(this.ctx),
          d = new R(this.ctx),
          g = new H(this.ctx),
          u = new m(this.ctx),
          p = g.getMarkerConfig({
            cssClass: "apexcharts-marker",
            seriesIndex: l,
            dataPointIndex: r,
            finishRadius: "bubble" === n.config.chart.type || n.globals.comboCharts && n.config.series[s] && "bubble" === n.config.series[s].type ? a : null
          });
        a = p.pSize;
        var f,
          x = d.fillPath({
            seriesNumber: s,
            dataPointIndex: r,
            color: p.pointFillColor,
            patternUnits: "objectBoundingBox",
            value: n.globals.series[s][o]
          });
        if ("circle" === p.shape ? f = u.drawCircle(i) : "square" !== p.shape && "rect" !== p.shape || (f = u.drawRect(0, 0, p.width - p.pointStrokeWidth / 2, p.height - p.pointStrokeWidth / 2, p.pRadius)), n.config.series[l].data[r] && n.config.series[l].data[r].fillColor && (x = n.config.series[l].data[r].fillColor), f.attr({
          x: t - p.width / 2 - p.pointStrokeWidth / 2,
          y: e - p.height / 2 - p.pointStrokeWidth / 2,
          cx: t,
          cy: e,
          fill: x,
          "fill-opacity": p.pointFillOpacity,
          stroke: p.pointStrokeColor,
          r: a,
          "stroke-width": p.pointStrokeWidth,
          "stroke-dasharray": p.pointStrokeDashArray,
          "stroke-opacity": p.pointStrokeOpacity
        }), n.config.chart.dropShadow.enabled) {
          var y = n.config.chart.dropShadow;
          c.dropShadow(f, y, s);
        }
        if (!this.initialAnim || n.globals.dataChanged || n.globals.resized) n.globals.animationEnded = !0;else {
          var w = n.config.chart.animations.speed;
          h.animateMarker(f, 0, "circle" === p.shape ? a : {
            width: p.width,
            height: p.height
          }, w, n.globals.easing, function () {
            window.setTimeout(function () {
              h.animationCompleted(f);
            }, 100);
          });
        }
        if (n.globals.dataChanged && "circle" === p.shape) if (this.dynamicAnim) {
          var k,
            A,
            S,
            C,
            L = n.config.chart.animations.dynamicAnimation.speed;
          null != (C = n.globals.previousPaths[s] && n.globals.previousPaths[s][o]) && (k = C.x, A = C.y, S = void 0 !== C.r ? C.r : a);
          for (var P = 0; P < n.globals.collapsedSeries.length; P++) n.globals.collapsedSeries[P].index === s && (L = 1, a = 0);
          0 === t && 0 === e && (a = 0), h.animateCircle(f, {
            cx: k,
            cy: A,
            r: S
          }, {
            cx: t,
            cy: e,
            r: a
          }, L, n.globals.easing);
        } else f.attr({
          r: a
        });
        return f.attr({
          rel: r,
          j: r,
          index: s,
          "default-marker-size": a
        }), c.setSelectionFilter(f, s, r), g.addEvents(f), f.node.classList.add("apexcharts-marker"), f;
      }
    }, {
      key: "centerTextInBubble",
      value: function (t) {
        var e = this.w;
        return {
          y: t += parseInt(e.config.dataLabels.style.fontSize, 10) / 4
        };
      }
    }]), t;
  }(),
  O = function () {
    function t(e) {
      a(this, t), this.ctx = e, this.w = e.w;
    }
    return r(t, [{
      key: "dataLabelsCorrection",
      value: function (t, e, i, a, s, r, o) {
        var n = this.w,
          l = !1,
          h = new m(this.ctx).getTextRects(i, o),
          c = h.width,
          d = h.height;
        e < 0 && (e = 0), e > n.globals.gridHeight + d && (e = n.globals.gridHeight + d / 2), void 0 === n.globals.dataLabelsRects[a] && (n.globals.dataLabelsRects[a] = []), n.globals.dataLabelsRects[a].push({
          x: t,
          y: e,
          width: c,
          height: d
        });
        var g = n.globals.dataLabelsRects[a].length - 2,
          u = void 0 !== n.globals.lastDrawnDataLabelsIndexes[a] ? n.globals.lastDrawnDataLabelsIndexes[a][n.globals.lastDrawnDataLabelsIndexes[a].length - 1] : 0;
        if (void 0 !== n.globals.dataLabelsRects[a][g]) {
          var p = n.globals.dataLabelsRects[a][u];
          (t > p.x + p.width + 2 || e > p.y + p.height + 2 || t + c < p.x) && (l = !0);
        }
        return (0 === s || r) && (l = !0), {
          x: t,
          y: e,
          textRects: h,
          drawnextLabel: l
        };
      }
    }, {
      key: "drawDataLabel",
      value: function (t) {
        var e = this,
          i = t.type,
          a = t.pos,
          s = t.i,
          r = t.j,
          o = t.isRangeStart,
          n = t.strokeWidth,
          l = void 0 === n ? 2 : n,
          h = this.w,
          c = new m(this.ctx),
          d = h.config.dataLabels,
          g = 0,
          u = 0,
          p = r,
          f = null;
        if (!d.enabled || !Array.isArray(a.x)) return f;
        f = c.group({
          class: "apexcharts-data-labels"
        });
        for (var x = 0; x < a.x.length; x++) if (g = a.x[x] + d.offsetX, u = a.y[x] + d.offsetY + l, !isNaN(g)) {
          1 === r && 0 === x && (p = 0), 1 === r && 1 === x && (p = 1);
          var b = h.globals.series[s][p];
          "rangeArea" === i && (b = o ? h.globals.seriesRangeStart[s][p] : h.globals.seriesRangeEnd[s][p]);
          var v = "",
            y = function (t) {
              return h.config.dataLabels.formatter(t, {
                ctx: e.ctx,
                seriesIndex: s,
                dataPointIndex: p,
                w: h
              });
            };
          if ("bubble" === h.config.chart.type) v = y(b = h.globals.seriesZ[s][p]), u = a.y[x], u = new D(this.ctx).centerTextInBubble(u, s, p).y;else void 0 !== b && (v = y(b));
          this.plotDataLabelsText({
            x: g,
            y: u,
            text: v,
            i: s,
            j: p,
            parent: f,
            offsetCorrection: !0,
            dataLabelsConfig: h.config.dataLabels
          });
        }
        return f;
      }
    }, {
      key: "plotDataLabelsText",
      value: function (t) {
        var e = this.w,
          i = new m(this.ctx),
          a = t.x,
          s = t.y,
          r = t.i,
          o = t.j,
          n = t.text,
          l = t.textAnchor,
          h = t.fontSize,
          c = t.parent,
          d = t.dataLabelsConfig,
          g = t.color,
          u = t.alwaysDrawDataLabel,
          p = t.offsetCorrection;
        if (!(Array.isArray(e.config.dataLabels.enabledOnSeries) && e.config.dataLabels.enabledOnSeries.indexOf(r) < 0)) {
          var f = {
            x: a,
            y: s,
            drawnextLabel: !0,
            textRects: null
          };
          p && (f = this.dataLabelsCorrection(a, s, n, r, o, u, parseInt(d.style.fontSize, 10))), e.globals.zoomed || (a = f.x, s = f.y), f.textRects && (a < -10 - f.textRects.width || a > e.globals.gridWidth + f.textRects.width + 10) && (n = "");
          var x = e.globals.dataLabels.style.colors[r];
          (("bar" === e.config.chart.type || "rangeBar" === e.config.chart.type) && e.config.plotOptions.bar.distributed || e.config.dataLabels.distributed) && (x = e.globals.dataLabels.style.colors[o]), "function" == typeof x && (x = x({
            series: e.globals.series,
            seriesIndex: r,
            dataPointIndex: o,
            w: e
          })), g && (x = g);
          var b = d.offsetX,
            y = d.offsetY;
          if ("bar" !== e.config.chart.type && "rangeBar" !== e.config.chart.type || (b = 0, y = 0), f.drawnextLabel) {
            var w = i.drawText({
              width: 100,
              height: parseInt(d.style.fontSize, 10),
              x: a + b,
              y: s + y,
              foreColor: x,
              textAnchor: l || d.textAnchor,
              text: n,
              fontSize: h || d.style.fontSize,
              fontFamily: d.style.fontFamily,
              fontWeight: d.style.fontWeight || "normal"
            });
            if (w.attr({
              class: "apexcharts-datalabel",
              cx: a,
              cy: s
            }), d.dropShadow.enabled) {
              var k = d.dropShadow;
              new v(this.ctx).dropShadow(w, k);
            }
            c.add(w), void 0 === e.globals.lastDrawnDataLabelsIndexes[r] && (e.globals.lastDrawnDataLabelsIndexes[r] = []), e.globals.lastDrawnDataLabelsIndexes[r].push(o);
          }
        }
      }
    }, {
      key: "addBackgroundToDataLabel",
      value: function (t, e) {
        var i = this.w,
          a = i.config.dataLabels.background,
          s = a.padding,
          r = a.padding / 2,
          o = e.width,
          n = e.height,
          l = new m(this.ctx).drawRect(e.x - s, e.y - r / 2, o + 2 * s, n + r, a.borderRadius, "transparent" === i.config.chart.background ? "#fff" : i.config.chart.background, a.opacity, a.borderWidth, a.borderColor);
        a.dropShadow.enabled && new v(this.ctx).dropShadow(l, a.dropShadow);
        return l;
      }
    }, {
      key: "dataLabelsBackground",
      value: function () {
        var t = this.w;
        if ("bubble" !== t.config.chart.type) for (var e = t.globals.dom.baseEl.querySelectorAll(".apexcharts-datalabels text"), i = 0; i < e.length; i++) {
          var a = e[i],
            s = a.getBBox(),
            r = null;
          if (s.width && s.height && (r = this.addBackgroundToDataLabel(a, s)), r) {
            a.parentNode.insertBefore(r.node, a);
            var o = a.getAttribute("fill");
            t.config.chart.animations.enabled && !t.globals.resized && !t.globals.dataChanged ? r.animate().attr({
              fill: o
            }) : r.attr({
              fill: o
            }), a.setAttribute("fill", t.config.dataLabels.background.foreColor);
          }
        }
      }
    }, {
      key: "bringForward",
      value: function () {
        for (var t = this.w, e = t.globals.dom.baseEl.querySelectorAll(".apexcharts-datalabels"), i = t.globals.dom.baseEl.querySelector(".apexcharts-plot-series:last-child"), a = 0; a < e.length; a++) i && i.insertBefore(e[a], i.nextSibling);
      }
    }]), t;
  }(),
  N = function () {
    function t(e) {
      a(this, t), this.ctx = e, this.w = e.w, this.legendInactiveClass = "legend-mouseover-inactive";
    }
    return r(t, [{
      key: "getAllSeriesEls",
      value: function () {
        return this.w.globals.dom.baseEl.getElementsByClassName("apexcharts-series");
      }
    }, {
      key: "getSeriesByName",
      value: function (t) {
        return this.w.globals.dom.baseEl.querySelector(".apexcharts-inner .apexcharts-series[seriesName='".concat(x.escapeString(t), "']"));
      }
    }, {
      key: "isSeriesHidden",
      value: function (t) {
        var e = this.getSeriesByName(t),
          i = parseInt(e.getAttribute("data:realIndex"), 10);
        return {
          isHidden: e.classList.contains("apexcharts-series-collapsed"),
          realIndex: i
        };
      }
    }, {
      key: "addCollapsedClassToSeries",
      value: function (t, e) {
        var i = this.w;
        function a(i) {
          for (var a = 0; a < i.length; a++) i[a].index === e && t.node.classList.add("apexcharts-series-collapsed");
        }
        a(i.globals.collapsedSeries), a(i.globals.ancillaryCollapsedSeries);
      }
    }, {
      key: "toggleSeries",
      value: function (t) {
        var e = this.isSeriesHidden(t);
        return this.ctx.legend.legendHelpers.toggleDataSeries(e.realIndex, e.isHidden), e.isHidden;
      }
    }, {
      key: "showSeries",
      value: function (t) {
        var e = this.isSeriesHidden(t);
        e.isHidden && this.ctx.legend.legendHelpers.toggleDataSeries(e.realIndex, !0);
      }
    }, {
      key: "hideSeries",
      value: function (t) {
        var e = this.isSeriesHidden(t);
        e.isHidden || this.ctx.legend.legendHelpers.toggleDataSeries(e.realIndex, !1);
      }
    }, {
      key: "resetSeries",
      value: function () {
        var t = !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0],
          e = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1],
          i = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2],
          a = this.w,
          s = x.clone(a.globals.initialSeries);
        a.globals.previousPaths = [], i ? (a.globals.collapsedSeries = [], a.globals.ancillaryCollapsedSeries = [], a.globals.collapsedSeriesIndices = [], a.globals.ancillaryCollapsedSeriesIndices = []) : s = this.emptyCollapsedSeries(s), a.config.series = s, t && (e && (a.globals.zoomed = !1, this.ctx.updateHelpers.revertDefaultAxisMinMax()), this.ctx.updateHelpers._updateSeries(s, a.config.chart.animations.dynamicAnimation.enabled));
      }
    }, {
      key: "emptyCollapsedSeries",
      value: function (t) {
        for (var e = this.w, i = 0; i < t.length; i++) e.globals.collapsedSeriesIndices.indexOf(i) > -1 && (t[i].data = []);
        return t;
      }
    }, {
      key: "toggleSeriesOnHover",
      value: function (t, e) {
        var i = this.w;
        e || (e = t.target);
        var a = i.globals.dom.baseEl.querySelectorAll(".apexcharts-series, .apexcharts-datalabels");
        if ("mousemove" === t.type) {
          var s = parseInt(e.getAttribute("rel"), 10) - 1,
            r = null,
            o = null;
          i.globals.axisCharts || "radialBar" === i.config.chart.type ? i.globals.axisCharts ? (r = i.globals.dom.baseEl.querySelector(".apexcharts-series[data\\:realIndex='".concat(s, "']")), o = i.globals.dom.baseEl.querySelector(".apexcharts-datalabels[data\\:realIndex='".concat(s, "']"))) : r = i.globals.dom.baseEl.querySelector(".apexcharts-series[rel='".concat(s + 1, "']")) : r = i.globals.dom.baseEl.querySelector(".apexcharts-series[rel='".concat(s + 1, "'] path"));
          for (var n = 0; n < a.length; n++) a[n].classList.add(this.legendInactiveClass);
          null !== r && (i.globals.axisCharts || r.parentNode.classList.remove(this.legendInactiveClass), r.classList.remove(this.legendInactiveClass), null !== o && o.classList.remove(this.legendInactiveClass));
        } else if ("mouseout" === t.type) for (var l = 0; l < a.length; l++) a[l].classList.remove(this.legendInactiveClass);
      }
    }, {
      key: "highlightRangeInSeries",
      value: function (t, e) {
        var i = this,
          a = this.w,
          s = a.globals.dom.baseEl.getElementsByClassName("apexcharts-heatmap-rect"),
          r = function (t) {
            for (var e = 0; e < s.length; e++) s[e].classList[t](i.legendInactiveClass);
          };
        if ("mousemove" === t.type) {
          var o = parseInt(e.getAttribute("rel"), 10) - 1;
          r("add"), function (t) {
            for (var e = 0; e < s.length; e++) {
              var a = parseInt(s[e].getAttribute("val"), 10);
              a >= t.from && a <= t.to && s[e].classList.remove(i.legendInactiveClass);
            }
          }(a.config.plotOptions.heatmap.colorScale.ranges[o]);
        } else "mouseout" === t.type && r("remove");
      }
    }, {
      key: "getActiveConfigSeriesIndex",
      value: function () {
        var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "asc",
          e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [],
          i = this.w,
          a = 0;
        if (i.config.series.length > 1) for (var s = i.config.series.map(function (t, a) {
            return t.data && t.data.length > 0 && -1 === i.globals.collapsedSeriesIndices.indexOf(a) && (!i.globals.comboCharts || 0 === e.length || e.length && e.indexOf(i.config.series[a].type) > -1) ? a : -1;
          }), r = "asc" === t ? 0 : s.length - 1; "asc" === t ? r < s.length : r >= 0; "asc" === t ? r++ : r--) if (-1 !== s[r]) {
          a = s[r];
          break;
        }
        return a;
      }
    }, {
      key: "getBarSeriesIndices",
      value: function () {
        return this.w.globals.comboCharts ? this.w.config.series.map(function (t, e) {
          return "bar" === t.type || "column" === t.type ? e : -1;
        }).filter(function (t) {
          return -1 !== t;
        }) : this.w.config.series.map(function (t, e) {
          return e;
        });
      }
    }, {
      key: "getPreviousPaths",
      value: function () {
        var t = this.w;
        function e(e, i, a) {
          for (var s = e[i].childNodes, r = {
              type: a,
              paths: [],
              realIndex: e[i].getAttribute("data:realIndex")
            }, o = 0; o < s.length; o++) if (s[o].hasAttribute("pathTo")) {
            var n = s[o].getAttribute("pathTo");
            r.paths.push({
              d: n
            });
          }
          t.globals.previousPaths.push(r);
        }
        t.globals.previousPaths = [];
        ["line", "area", "bar", "rangebar", "rangeArea", "candlestick", "radar"].forEach(function (i) {
          for (var a, s = (a = i, t.globals.dom.baseEl.querySelectorAll(".apexcharts-".concat(a, "-series .apexcharts-series"))), r = 0; r < s.length; r++) e(s, r, i);
        }), this.handlePrevBubbleScatterPaths("bubble"), this.handlePrevBubbleScatterPaths("scatter");
        var i = t.globals.dom.baseEl.querySelectorAll(".apexcharts-".concat(t.config.chart.type, " .apexcharts-series"));
        if (i.length > 0) for (var a = function (e) {
            for (var i = t.globals.dom.baseEl.querySelectorAll(".apexcharts-".concat(t.config.chart.type, " .apexcharts-series[data\\:realIndex='").concat(e, "'] rect")), a = [], s = function (t) {
                var e = function (e) {
                    return i[t].getAttribute(e);
                  },
                  s = {
                    x: parseFloat(e("x")),
                    y: parseFloat(e("y")),
                    width: parseFloat(e("width")),
                    height: parseFloat(e("height"))
                  };
                a.push({
                  rect: s,
                  color: i[t].getAttribute("color")
                });
              }, r = 0; r < i.length; r++) s(r);
            t.globals.previousPaths.push(a);
          }, s = 0; s < i.length; s++) a(s);
        t.globals.axisCharts || (t.globals.previousPaths = t.globals.series);
      }
    }, {
      key: "handlePrevBubbleScatterPaths",
      value: function (t) {
        var e = this.w,
          i = e.globals.dom.baseEl.querySelectorAll(".apexcharts-".concat(t, "-series .apexcharts-series"));
        if (i.length > 0) for (var a = 0; a < i.length; a++) {
          for (var s = e.globals.dom.baseEl.querySelectorAll(".apexcharts-".concat(t, "-series .apexcharts-series[data\\:realIndex='").concat(a, "'] circle")), r = [], o = 0; o < s.length; o++) r.push({
            x: s[o].getAttribute("cx"),
            y: s[o].getAttribute("cy"),
            r: s[o].getAttribute("r")
          });
          e.globals.previousPaths.push(r);
        }
      }
    }, {
      key: "clearPreviousPaths",
      value: function () {
        var t = this.w;
        t.globals.previousPaths = [], t.globals.allSeriesCollapsed = !1;
      }
    }, {
      key: "handleNoData",
      value: function () {
        var t = this.w,
          e = t.config.noData,
          i = new m(this.ctx),
          a = t.globals.svgWidth / 2,
          s = t.globals.svgHeight / 2,
          r = "middle";
        if (t.globals.noData = !0, t.globals.animationEnded = !0, "left" === e.align ? (a = 10, r = "start") : "right" === e.align && (a = t.globals.svgWidth - 10, r = "end"), "top" === e.verticalAlign ? s = 50 : "bottom" === e.verticalAlign && (s = t.globals.svgHeight - 50), a += e.offsetX, s = s + parseInt(e.style.fontSize, 10) + 2 + e.offsetY, void 0 !== e.text && "" !== e.text) {
          var o = i.drawText({
            x: a,
            y: s,
            text: e.text,
            textAnchor: r,
            fontSize: e.style.fontSize,
            fontFamily: e.style.fontFamily,
            foreColor: e.style.color,
            opacity: 1,
            class: "apexcharts-text-nodata"
          });
          t.globals.dom.Paper.add(o);
        }
      }
    }, {
      key: "setNullSeriesToZeroValues",
      value: function (t) {
        for (var e = this.w, i = 0; i < t.length; i++) if (0 === t[i].length) for (var a = 0; a < t[e.globals.maxValsInArrayIndex].length; a++) t[i].push(0);
        return t;
      }
    }, {
      key: "hasAllSeriesEqualX",
      value: function () {
        for (var t = !0, e = this.w, i = this.filteredSeriesX(), a = 0; a < i.length - 1; a++) if (i[a][0] !== i[a + 1][0]) {
          t = !1;
          break;
        }
        return e.globals.allSeriesHasEqualX = t, t;
      }
    }, {
      key: "filteredSeriesX",
      value: function () {
        var t = this.w.globals.seriesX.map(function (t) {
          return t.length > 0 ? t : [];
        });
        return t;
      }
    }]), t;
  }(),
  W = function () {
    function t(e) {
      a(this, t), this.ctx = e, this.w = e.w, this.twoDSeries = [], this.threeDSeries = [], this.twoDSeriesX = [], this.seriesGoals = [], this.coreUtils = new y(this.ctx);
    }
    return r(t, [{
      key: "isMultiFormat",
      value: function () {
        return this.isFormatXY() || this.isFormat2DArray();
      }
    }, {
      key: "isFormatXY",
      value: function () {
        var t = this.w.config.series.slice(),
          e = new N(this.ctx);
        if (this.activeSeriesIndex = e.getActiveConfigSeriesIndex(), void 0 !== t[this.activeSeriesIndex].data && t[this.activeSeriesIndex].data.length > 0 && null !== t[this.activeSeriesIndex].data[0] && void 0 !== t[this.activeSeriesIndex].data[0].x && null !== t[this.activeSeriesIndex].data[0]) return !0;
      }
    }, {
      key: "isFormat2DArray",
      value: function () {
        var t = this.w.config.series.slice(),
          e = new N(this.ctx);
        if (this.activeSeriesIndex = e.getActiveConfigSeriesIndex(), void 0 !== t[this.activeSeriesIndex].data && t[this.activeSeriesIndex].data.length > 0 && void 0 !== t[this.activeSeriesIndex].data[0] && null !== t[this.activeSeriesIndex].data[0] && t[this.activeSeriesIndex].data[0].constructor === Array) return !0;
      }
    }, {
      key: "handleFormat2DArray",
      value: function (t, e) {
        for (var i = this.w.config, a = this.w.globals, s = "boxPlot" === i.chart.type || "boxPlot" === i.series[e].type, r = 0; r < t[e].data.length; r++) if (void 0 !== t[e].data[r][1] && (Array.isArray(t[e].data[r][1]) && 4 === t[e].data[r][1].length && !s ? this.twoDSeries.push(x.parseNumber(t[e].data[r][1][3])) : t[e].data[r].length >= 5 ? this.twoDSeries.push(x.parseNumber(t[e].data[r][4])) : this.twoDSeries.push(x.parseNumber(t[e].data[r][1])), a.dataFormatXNumeric = !0), "datetime" === i.xaxis.type) {
          var o = new Date(t[e].data[r][0]);
          o = new Date(o).getTime(), this.twoDSeriesX.push(o);
        } else this.twoDSeriesX.push(t[e].data[r][0]);
        for (var n = 0; n < t[e].data.length; n++) void 0 !== t[e].data[n][2] && (this.threeDSeries.push(t[e].data[n][2]), a.isDataXYZ = !0);
      }
    }, {
      key: "handleFormatXY",
      value: function (t, e) {
        var i = this.w.config,
          a = this.w.globals,
          s = new I(this.ctx),
          r = e;
        a.collapsedSeriesIndices.indexOf(e) > -1 && (r = this.activeSeriesIndex);
        for (var o = 0; o < t[e].data.length; o++) void 0 !== t[e].data[o].y && (Array.isArray(t[e].data[o].y) ? this.twoDSeries.push(x.parseNumber(t[e].data[o].y[t[e].data[o].y.length - 1])) : this.twoDSeries.push(x.parseNumber(t[e].data[o].y))), void 0 !== t[e].data[o].goals && Array.isArray(t[e].data[o].goals) ? (void 0 === this.seriesGoals[e] && (this.seriesGoals[e] = []), this.seriesGoals[e].push(t[e].data[o].goals)) : (void 0 === this.seriesGoals[e] && (this.seriesGoals[e] = []), this.seriesGoals[e].push(null));
        for (var n = 0; n < t[r].data.length; n++) {
          var l = "string" == typeof t[r].data[n].x,
            h = Array.isArray(t[r].data[n].x),
            c = !h && !!s.isValidDate(t[r].data[n].x.toString());
          if (l || c) {
            if (l || i.xaxis.convertedCatToNumeric) {
              var d = a.isBarHorizontal && a.isRangeData;
              "datetime" !== i.xaxis.type || d ? (this.fallbackToCategory = !0, this.twoDSeriesX.push(t[r].data[n].x)) : this.twoDSeriesX.push(s.parseDate(t[r].data[n].x));
            } else "datetime" === i.xaxis.type ? this.twoDSeriesX.push(s.parseDate(t[r].data[n].x.toString())) : (a.dataFormatXNumeric = !0, a.isXNumeric = !0, this.twoDSeriesX.push(parseFloat(t[r].data[n].x)));
          } else h ? (this.fallbackToCategory = !0, this.twoDSeriesX.push(t[r].data[n].x)) : (a.isXNumeric = !0, a.dataFormatXNumeric = !0, this.twoDSeriesX.push(t[r].data[n].x));
        }
        if (t[e].data[0] && void 0 !== t[e].data[0].z) {
          for (var g = 0; g < t[e].data.length; g++) this.threeDSeries.push(t[e].data[g].z);
          a.isDataXYZ = !0;
        }
      }
    }, {
      key: "handleRangeData",
      value: function (t, e) {
        var i = this.w.globals,
          a = {};
        return this.isFormat2DArray() ? a = this.handleRangeDataFormat("array", t, e) : this.isFormatXY() && (a = this.handleRangeDataFormat("xy", t, e)), i.seriesRangeStart.push(a.start), i.seriesRangeEnd.push(a.end), i.seriesRange.push(a.rangeUniques), i.seriesRange.forEach(function (t, e) {
          t && t.forEach(function (t, e) {
            t.y.forEach(function (e, i) {
              for (var a = 0; a < t.y.length; a++) if (i !== a) {
                var s = e.y1,
                  r = e.y2,
                  o = t.y[a].y1;
                s <= t.y[a].y2 && o <= r && (t.overlaps.indexOf(e.rangeName) < 0 && t.overlaps.push(e.rangeName), t.overlaps.indexOf(t.y[a].rangeName) < 0 && t.overlaps.push(t.y[a].rangeName));
              }
            });
          });
        }), a;
      }
    }, {
      key: "handleCandleStickBoxData",
      value: function (t, e) {
        var i = this.w.globals,
          a = {};
        return this.isFormat2DArray() ? a = this.handleCandleStickBoxDataFormat("array", t, e) : this.isFormatXY() && (a = this.handleCandleStickBoxDataFormat("xy", t, e)), i.seriesCandleO[e] = a.o, i.seriesCandleH[e] = a.h, i.seriesCandleM[e] = a.m, i.seriesCandleL[e] = a.l, i.seriesCandleC[e] = a.c, a;
      }
    }, {
      key: "handleRangeDataFormat",
      value: function (t, e, i) {
        var a = [],
          s = [],
          r = e[i].data.filter(function (t, e, i) {
            return e === i.findIndex(function (e) {
              return e.x === t.x;
            });
          }).map(function (t, e) {
            return {
              x: t.x,
              overlaps: [],
              y: []
            };
          });
        if ("array" === t) for (var o = 0; o < e[i].data.length; o++) Array.isArray(e[i].data[o]) ? (a.push(e[i].data[o][1][0]), s.push(e[i].data[o][1][1])) : (a.push(e[i].data[o]), s.push(e[i].data[o]));else if ("xy" === t) for (var n = function (t) {
            var o = Array.isArray(e[i].data[t].y),
              n = x.randomId(),
              l = e[i].data[t].x,
              h = {
                y1: o ? e[i].data[t].y[0] : e[i].data[t].y,
                y2: o ? e[i].data[t].y[1] : e[i].data[t].y,
                rangeName: n
              };
            e[i].data[t].rangeName = n;
            var c = r.findIndex(function (t) {
              return t.x === l;
            });
            r[c].y.push(h), a.push(h.y1), s.push(h.y2);
          }, l = 0; l < e[i].data.length; l++) n(l);
        return {
          start: a,
          end: s,
          rangeUniques: r
        };
      }
    }, {
      key: "handleCandleStickBoxDataFormat",
      value: function (t, e, i) {
        var a = this.w,
          s = "boxPlot" === a.config.chart.type || "boxPlot" === a.config.series[i].type,
          r = [],
          o = [],
          n = [],
          l = [],
          h = [];
        if ("array" === t) {
          if (s && 6 === e[i].data[0].length || !s && 5 === e[i].data[0].length) for (var c = 0; c < e[i].data.length; c++) r.push(e[i].data[c][1]), o.push(e[i].data[c][2]), s ? (n.push(e[i].data[c][3]), l.push(e[i].data[c][4]), h.push(e[i].data[c][5])) : (l.push(e[i].data[c][3]), h.push(e[i].data[c][4]));else for (var d = 0; d < e[i].data.length; d++) Array.isArray(e[i].data[d][1]) && (r.push(e[i].data[d][1][0]), o.push(e[i].data[d][1][1]), s ? (n.push(e[i].data[d][1][2]), l.push(e[i].data[d][1][3]), h.push(e[i].data[d][1][4])) : (l.push(e[i].data[d][1][2]), h.push(e[i].data[d][1][3])));
        } else if ("xy" === t) for (var g = 0; g < e[i].data.length; g++) Array.isArray(e[i].data[g].y) && (r.push(e[i].data[g].y[0]), o.push(e[i].data[g].y[1]), s ? (n.push(e[i].data[g].y[2]), l.push(e[i].data[g].y[3]), h.push(e[i].data[g].y[4])) : (l.push(e[i].data[g].y[2]), h.push(e[i].data[g].y[3])));
        return {
          o: r,
          h: o,
          m: n,
          l: l,
          c: h
        };
      }
    }, {
      key: "parseDataAxisCharts",
      value: function (t) {
        var e,
          i = this,
          a = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.ctx,
          s = this.w.config,
          r = this.w.globals,
          o = new I(a),
          n = s.labels.length > 0 ? s.labels.slice() : s.xaxis.categories.slice();
        if (r.isRangeBar = "rangeBar" === s.chart.type && r.isBarHorizontal, r.hasXaxisGroups = "category" === s.xaxis.type && s.xaxis.group.groups.length > 0, r.hasXaxisGroups && (r.groups = s.xaxis.group.groups), r.hasSeriesGroups = null === (e = t[0]) || void 0 === e ? void 0 : e.group, r.hasSeriesGroups) {
          var l = [],
            h = u(new Set(t.map(function (t) {
              return t.group;
            })));
          t.forEach(function (t, e) {
            var i = h.indexOf(t.group);
            l[i] || (l[i] = []), l[i].push(t.name);
          }), r.seriesGroups = l;
        }
        for (var c = function () {
            for (var t = 0; t < n.length; t++) if ("string" == typeof n[t]) {
              if (!o.isValidDate(n[t])) throw new Error("You have provided invalid Date format. Please provide a valid JavaScript Date");
              i.twoDSeriesX.push(o.parseDate(n[t]));
            } else i.twoDSeriesX.push(n[t]);
          }, d = 0; d < t.length; d++) {
          if (this.twoDSeries = [], this.twoDSeriesX = [], this.threeDSeries = [], void 0 === t[d].data) return void console.error("It is a possibility that you may have not included 'data' property in series.");
          if ("rangeBar" !== s.chart.type && "rangeArea" !== s.chart.type && "rangeBar" !== t[d].type && "rangeArea" !== t[d].type || (r.isRangeData = !0, r.isComboCharts ? "rangeBar" !== t[d].type && "rangeArea" !== t[d].type || this.handleRangeData(t, d) : "rangeBar" !== s.chart.type && "rangeArea" !== s.chart.type || this.handleRangeData(t, d)), this.isMultiFormat()) this.isFormat2DArray() ? this.handleFormat2DArray(t, d) : this.isFormatXY() && this.handleFormatXY(t, d), "candlestick" !== s.chart.type && "candlestick" !== t[d].type && "boxPlot" !== s.chart.type && "boxPlot" !== t[d].type || this.handleCandleStickBoxData(t, d), r.series.push(this.twoDSeries), r.labels.push(this.twoDSeriesX), r.seriesX.push(this.twoDSeriesX), r.seriesGoals = this.seriesGoals, d !== this.activeSeriesIndex || this.fallbackToCategory || (r.isXNumeric = !0);else {
            "datetime" === s.xaxis.type ? (r.isXNumeric = !0, c(), r.seriesX.push(this.twoDSeriesX)) : "numeric" === s.xaxis.type && (r.isXNumeric = !0, n.length > 0 && (this.twoDSeriesX = n, r.seriesX.push(this.twoDSeriesX))), r.labels.push(this.twoDSeriesX);
            var g = t[d].data.map(function (t) {
              return x.parseNumber(t);
            });
            r.series.push(g);
          }
          r.seriesZ.push(this.threeDSeries), void 0 !== t[d].name ? r.seriesNames.push(t[d].name) : r.seriesNames.push("series-" + parseInt(d + 1, 10)), void 0 !== t[d].color ? r.seriesColors.push(t[d].color) : r.seriesColors.push(void 0);
        }
        return this.w;
      }
    }, {
      key: "parseDataNonAxisCharts",
      value: function (t) {
        var e = this.w.globals,
          i = this.w.config;
        e.series = t.slice(), e.seriesNames = i.labels.slice();
        for (var a = 0; a < e.series.length; a++) void 0 === e.seriesNames[a] && e.seriesNames.push("series-" + (a + 1));
        return this.w;
      }
    }, {
      key: "handleExternalLabelsData",
      value: function (t) {
        var e = this.w.config,
          i = this.w.globals;
        if (e.xaxis.categories.length > 0) i.labels = e.xaxis.categories;else if (e.labels.length > 0) i.labels = e.labels.slice();else if (this.fallbackToCategory) {
          if (i.labels = i.labels[0], i.seriesRange.length && (i.seriesRange.map(function (t) {
            t.forEach(function (t) {
              i.labels.indexOf(t.x) < 0 && t.x && i.labels.push(t.x);
            });
          }), i.labels = Array.from(new Set(i.labels.map(JSON.stringify)), JSON.parse)), e.xaxis.convertedCatToNumeric) new z(e).convertCatToNumericXaxis(e, this.ctx, i.seriesX[0]), this._generateExternalLabels(t);
        } else this._generateExternalLabels(t);
      }
    }, {
      key: "_generateExternalLabels",
      value: function (t) {
        var e = this.w.globals,
          i = this.w.config,
          a = [];
        if (e.axisCharts) {
          if (e.series.length > 0) if (this.isFormatXY()) for (var s = i.series.map(function (t, e) {
              return t.data.filter(function (t, e, i) {
                return i.findIndex(function (e) {
                  return e.x === t.x;
                }) === e;
              });
            }), r = s.reduce(function (t, e, i, a) {
              return a[t].length > e.length ? t : i;
            }, 0), o = 0; o < s[r].length; o++) a.push(o + 1);else for (var n = 0; n < e.series[e.maxValsInArrayIndex].length; n++) a.push(n + 1);
          e.seriesX = [];
          for (var l = 0; l < t.length; l++) e.seriesX.push(a);
          e.isXNumeric = !0;
        }
        if (0 === a.length) {
          a = e.axisCharts ? [] : e.series.map(function (t, e) {
            return e + 1;
          });
          for (var h = 0; h < t.length; h++) e.seriesX.push(a);
        }
        e.labels = a, i.xaxis.convertedCatToNumeric && (e.categoryLabels = a.map(function (t) {
          return i.xaxis.labels.formatter(t);
        })), e.noLabelsProvided = !0;
      }
    }, {
      key: "parseData",
      value: function (t) {
        var e = this.w,
          i = e.config,
          a = e.globals;
        if (this.excludeCollapsedSeriesInYAxis(), this.fallbackToCategory = !1, this.ctx.core.resetGlobals(), this.ctx.core.isMultipleY(), a.axisCharts ? (this.parseDataAxisCharts(t), this.coreUtils.getLargestSeries()) : this.parseDataNonAxisCharts(t), i.chart.stacked) {
          var s = new N(this.ctx);
          a.series = s.setNullSeriesToZeroValues(a.series);
        }
        this.coreUtils.getSeriesTotals(), a.axisCharts && (a.stackedSeriesTotals = this.coreUtils.getStackedSeriesTotals()), this.coreUtils.getPercentSeries(), a.dataFormatXNumeric || a.isXNumeric && ("numeric" !== i.xaxis.type || 0 !== i.labels.length || 0 !== i.xaxis.categories.length) || this.handleExternalLabelsData(t);
        for (var r = this.coreUtils.getCategoryLabels(a.labels), o = 0; o < r.length; o++) if (Array.isArray(r[o])) {
          a.isMultiLineX = !0;
          break;
        }
      }
    }, {
      key: "excludeCollapsedSeriesInYAxis",
      value: function () {
        var t = this,
          e = this.w;
        e.globals.ignoreYAxisIndexes = e.globals.collapsedSeries.map(function (i, a) {
          if (t.w.globals.isMultipleYAxis && !e.config.chart.stacked) return i.index;
        });
      }
    }]), t;
  }(),
  B = function () {
    function t(e) {
      a(this, t), this.ctx = e, this.w = e.w;
    }
    return r(t, [{
      key: "getLabel",
      value: function (t, e, i, a) {
        var s = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : [],
          r = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : "12px",
          o = !(arguments.length > 6 && void 0 !== arguments[6]) || arguments[6],
          n = this.w,
          l = void 0 === t[a] ? "" : t[a],
          h = l,
          c = n.globals.xLabelFormatter,
          d = n.config.xaxis.labels.formatter,
          g = !1,
          u = new T(this.ctx),
          p = l;
        o && (h = u.xLabelFormat(c, l, p, {
          i: a,
          dateFormatter: new I(this.ctx).formatDate,
          w: n
        }), void 0 !== d && (h = d(l, t[a], {
          i: a,
          dateFormatter: new I(this.ctx).formatDate,
          w: n
        })));
        var f, x;
        e.length > 0 ? (f = e[a].unit, x = null, e.forEach(function (t) {
          "month" === t.unit ? x = "year" : "day" === t.unit ? x = "month" : "hour" === t.unit ? x = "day" : "minute" === t.unit && (x = "hour");
        }), g = x === f, i = e[a].position, h = e[a].value) : "datetime" === n.config.xaxis.type && void 0 === d && (h = ""), void 0 === h && (h = ""), h = Array.isArray(h) ? h : h.toString();
        var b = new m(this.ctx),
          v = {};
        v = n.globals.rotateXLabels && o ? b.getTextRects(h, parseInt(r, 10), null, "rotate(".concat(n.config.xaxis.labels.rotate, " 0 0)"), !1) : b.getTextRects(h, parseInt(r, 10));
        var y = !n.config.xaxis.labels.showDuplicates && this.ctx.timeScale;
        return !Array.isArray(h) && (0 === h.indexOf("NaN") || 0 === h.toLowerCase().indexOf("invalid") || h.toLowerCase().indexOf("infinity") >= 0 || s.indexOf(h) >= 0 && y) && (h = ""), {
          x: i,
          text: h,
          textRect: v,
          isBold: g
        };
      }
    }, {
      key: "checkLabelBasedOnTickamount",
      value: function (t, e, i) {
        var a = this.w,
          s = a.config.xaxis.tickAmount;
        return "dataPoints" === s && (s = Math.round(a.globals.gridWidth / 120)), s > i || t % Math.round(i / (s + 1)) == 0 || (e.text = ""), e;
      }
    }, {
      key: "checkForOverflowingLabels",
      value: function (t, e, i, a, s) {
        var r = this.w;
        if (0 === t && r.globals.skipFirstTimelinelabel && (e.text = ""), t === i - 1 && r.globals.skipLastTimelinelabel && (e.text = ""), r.config.xaxis.labels.hideOverlappingLabels && a.length > 0) {
          var o = s[s.length - 1];
          e.x < o.textRect.width / (r.globals.rotateXLabels ? Math.abs(r.config.xaxis.labels.rotate) / 12 : 1.01) + o.x && (e.text = "");
        }
        return e;
      }
    }, {
      key: "checkForReversedLabels",
      value: function (t, e) {
        var i = this.w;
        return i.config.yaxis[t] && i.config.yaxis[t].reversed && e.reverse(), e;
      }
    }, {
      key: "isYAxisHidden",
      value: function (t) {
        var e = this.w,
          i = new y(this.ctx);
        return !e.config.yaxis[t].show || !e.config.yaxis[t].showForNullSeries && i.isSeriesNull(t) && -1 === e.globals.collapsedSeriesIndices.indexOf(t);
      }
    }, {
      key: "getYAxisForeColor",
      value: function (t, e) {
        var i = this.w;
        return Array.isArray(t) && i.globals.yAxisScale[e] && this.ctx.theme.pushExtraColors(t, i.globals.yAxisScale[e].result.length, !1), t;
      }
    }, {
      key: "drawYAxisTicks",
      value: function (t, e, i, a, s, r, o) {
        var n = this.w,
          l = new m(this.ctx),
          h = n.globals.translateY;
        if (a.show && e > 0) {
          !0 === n.config.yaxis[s].opposite && (t += a.width);
          for (var c = e; c >= 0; c--) {
            var d = h + e / 10 + n.config.yaxis[s].labels.offsetY - 1;
            n.globals.isBarHorizontal && (d = r * c), "heatmap" === n.config.chart.type && (d += r / 2);
            var g = l.drawLine(t + i.offsetX - a.width + a.offsetX, d + a.offsetY, t + i.offsetX + a.offsetX, d + a.offsetY, a.color);
            o.add(g), h += r;
          }
        }
      }
    }]), t;
  }(),
  G = function () {
    function t(e) {
      a(this, t), this.ctx = e, this.w = e.w;
    }
    return r(t, [{
      key: "scaleSvgNode",
      value: function (t, e) {
        var i = parseFloat(t.getAttributeNS(null, "width")),
          a = parseFloat(t.getAttributeNS(null, "height"));
        t.setAttributeNS(null, "width", i * e), t.setAttributeNS(null, "height", a * e), t.setAttributeNS(null, "viewBox", "0 0 " + i + " " + a);
      }
    }, {
      key: "fixSvgStringForIe11",
      value: function (t) {
        if (!x.isIE11()) return t.replace(/&nbsp;/g, "&#160;");
        var e = 0,
          i = t.replace(/xmlns="http:\/\/www.w3.org\/2000\/svg"/g, function (t) {
            return 2 === ++e ? 'xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svgjs="http://svgjs.dev"' : t;
          });
        return i = (i = i.replace(/xmlns:NS\d+=""/g, "")).replace(/NS\d+:(\w+:\w+=")/g, "$1");
      }
    }, {
      key: "getSvgString",
      value: function (t) {
        null == t && (t = 1);
        var e = this.w.globals.dom.Paper.svg();
        if (1 !== t) {
          var i = this.w.globals.dom.Paper.node.cloneNode(!0);
          this.scaleSvgNode(i, t), e = new XMLSerializer().serializeToString(i);
        }
        return this.fixSvgStringForIe11(e);
      }
    }, {
      key: "cleanup",
      value: function () {
        var t = this.w,
          e = t.globals.dom.baseEl.getElementsByClassName("apexcharts-xcrosshairs"),
          i = t.globals.dom.baseEl.getElementsByClassName("apexcharts-ycrosshairs"),
          a = t.globals.dom.baseEl.querySelectorAll(".apexcharts-zoom-rect, .apexcharts-selection-rect");
        Array.prototype.forEach.call(a, function (t) {
          t.setAttribute("width", 0);
        }), e && e[0] && (e[0].setAttribute("x", -500), e[0].setAttribute("x1", -500), e[0].setAttribute("x2", -500)), i && i[0] && (i[0].setAttribute("y", -100), i[0].setAttribute("y1", -100), i[0].setAttribute("y2", -100));
      }
    }, {
      key: "svgUrl",
      value: function () {
        this.cleanup();
        var t = this.getSvgString(),
          e = new Blob([t], {
            type: "image/svg+xml;charset=utf-8"
          });
        return URL.createObjectURL(e);
      }
    }, {
      key: "dataURI",
      value: function (t) {
        var e = this;
        return new Promise(function (i) {
          var a = e.w,
            s = t ? t.scale || t.width / a.globals.svgWidth : 1;
          e.cleanup();
          var r = document.createElement("canvas");
          r.width = a.globals.svgWidth * s, r.height = parseInt(a.globals.dom.elWrap.style.height, 10) * s;
          var o = "transparent" === a.config.chart.background ? "#fff" : a.config.chart.background,
            n = r.getContext("2d");
          n.fillStyle = o, n.fillRect(0, 0, r.width * s, r.height * s);
          var l = e.getSvgString(s);
          if (window.canvg && x.isIE11()) {
            var h = window.canvg.Canvg.fromString(n, l, {
              ignoreClear: !0,
              ignoreDimensions: !0
            });
            h.start();
            var c = r.msToBlob();
            h.stop(), i({
              blob: c
            });
          } else {
            var d = "data:image/svg+xml," + encodeURIComponent(l),
              g = new Image();
            g.crossOrigin = "anonymous", g.onload = function () {
              if (n.drawImage(g, 0, 0), r.msToBlob) {
                var t = r.msToBlob();
                i({
                  blob: t
                });
              } else {
                var e = r.toDataURL("image/png");
                i({
                  imgURI: e
                });
              }
            }, g.src = d;
          }
        });
      }
    }, {
      key: "exportToSVG",
      value: function () {
        this.triggerDownload(this.svgUrl(), this.w.config.chart.toolbar.export.svg.filename, ".svg");
      }
    }, {
      key: "exportToPng",
      value: function () {
        var t = this;
        this.dataURI().then(function (e) {
          var i = e.imgURI,
            a = e.blob;
          a ? navigator.msSaveOrOpenBlob(a, t.w.globals.chartID + ".png") : t.triggerDownload(i, t.w.config.chart.toolbar.export.png.filename, ".png");
        });
      }
    }, {
      key: "exportToCSV",
      value: function (t) {
        var e = this,
          i = t.series,
          a = t.fileName,
          s = t.columnDelimiter,
          r = void 0 === s ? "," : s,
          o = t.lineDelimiter,
          n = void 0 === o ? "\n" : o,
          l = this.w;
        i || (i = l.config.series);
        var h = [],
          c = [],
          d = "",
          g = l.globals.series.map(function (t, e) {
            return -1 === l.globals.collapsedSeriesIndices.indexOf(e) ? t : [];
          }),
          p = Math.max.apply(Math, u(i.map(function (t) {
            return t.data ? t.data.length : 0;
          }))),
          f = new W(this.ctx),
          b = new B(this.ctx),
          v = function (t) {
            var i = "";
            if (l.globals.axisCharts) {
              if ("category" === l.config.xaxis.type || l.config.xaxis.convertedCatToNumeric) if (l.globals.isBarHorizontal) {
                var a = l.globals.yLabelFormatters[0],
                  s = new N(e.ctx).getActiveConfigSeriesIndex();
                i = a(l.globals.labels[t], {
                  seriesIndex: s,
                  dataPointIndex: t,
                  w: l
                });
              } else i = b.getLabel(l.globals.labels, l.globals.timescaleLabels, 0, t).text;
              "datetime" === l.config.xaxis.type && (l.config.xaxis.categories.length ? i = l.config.xaxis.categories[t] : l.config.labels.length && (i = l.config.labels[t]));
            } else i = l.config.labels[t];
            return Array.isArray(i) && (i = i.join(" ")), x.isNumber(i) ? i : i.split(r).join("");
          },
          m = function (t, e) {
            if (h.length && 0 === e && c.push(h.join(r)), t.data) {
              t.data = t.data.length && t.data || u(Array(p)).map(function () {
                return "";
              });
              for (var a = 0; a < t.data.length; a++) {
                h = [];
                var s = v(a);
                if (s || (f.isFormatXY() ? s = i[e].data[a].x : f.isFormat2DArray() && (s = i[e].data[a] ? i[e].data[a][0] : "")), 0 === e) {
                  h.push((n = s, "datetime" === l.config.xaxis.type && String(n).length >= 10 ? l.config.chart.toolbar.export.csv.dateFormatter(s) : x.isNumber(s) ? s : s.split(r).join("")));
                  for (var o = 0; o < l.globals.series.length; o++) f.isFormatXY() ? h.push(i[o].data[a].y) : h.push(g[o][a]);
                }
                ("candlestick" === l.config.chart.type || t.type && "candlestick" === t.type) && (h.pop(), h.push(l.globals.seriesCandleO[e][a]), h.push(l.globals.seriesCandleH[e][a]), h.push(l.globals.seriesCandleL[e][a]), h.push(l.globals.seriesCandleC[e][a])), ("boxPlot" === l.config.chart.type || t.type && "boxPlot" === t.type) && (h.pop(), h.push(l.globals.seriesCandleO[e][a]), h.push(l.globals.seriesCandleH[e][a]), h.push(l.globals.seriesCandleM[e][a]), h.push(l.globals.seriesCandleL[e][a]), h.push(l.globals.seriesCandleC[e][a])), "rangeBar" === l.config.chart.type && (h.pop(), h.push(l.globals.seriesRangeStart[e][a]), h.push(l.globals.seriesRangeEnd[e][a])), h.length && c.push(h.join(r));
              }
            }
            var n;
          };
        h.push(l.config.chart.toolbar.export.csv.headerCategory), "boxPlot" === l.config.chart.type ? (h.push("minimum"), h.push("q1"), h.push("median"), h.push("q3"), h.push("maximum")) : "candlestick" === l.config.chart.type ? (h.push("open"), h.push("high"), h.push("low"), h.push("close")) : "rangeBar" === l.config.chart.type ? (h.push("minimum"), h.push("maximum")) : i.map(function (t, e) {
          var i = t.name ? t.name : "series-".concat(e);
          l.globals.axisCharts && h.push(i.split(r).join("") ? i.split(r).join("") : "series-".concat(e));
        }), l.globals.axisCharts || (h.push(l.config.chart.toolbar.export.csv.headerValue), c.push(h.join(r))), i.map(function (t, e) {
          l.globals.axisCharts ? m(t, e) : ((h = []).push(l.globals.labels[e].split(r).join("")), h.push(g[e]), c.push(h.join(r)));
        }), d += c.join(n), this.triggerDownload("data:text/csv; charset=utf-8," + encodeURIComponent("\ufeff" + d), a || l.config.chart.toolbar.export.csv.filename, ".csv");
      }
    }, {
      key: "triggerDownload",
      value: function (t, e, i) {
        var a = document.createElement("a");
        a.href = t, a.download = (e || this.w.globals.chartID) + i, document.body.appendChild(a), a.click(), document.body.removeChild(a);
      }
    }]), t;
  }(),
  V = function () {
    function t(e, i) {
      a(this, t), this.ctx = e, this.elgrid = i, this.w = e.w;
      var s = this.w;
      this.axesUtils = new B(e), this.xaxisLabels = s.globals.labels.slice(), s.globals.timescaleLabels.length > 0 && !s.globals.isBarHorizontal && (this.xaxisLabels = s.globals.timescaleLabels.slice()), s.config.xaxis.overwriteCategories && (this.xaxisLabels = s.config.xaxis.overwriteCategories), this.drawnLabels = [], this.drawnLabelsRects = [], "top" === s.config.xaxis.position ? this.offY = 0 : this.offY = s.globals.gridHeight + 1, this.offY = this.offY + s.config.xaxis.axisBorder.offsetY, this.isCategoryBarHorizontal = "bar" === s.config.chart.type && s.config.plotOptions.bar.horizontal, this.xaxisFontSize = s.config.xaxis.labels.style.fontSize, this.xaxisFontFamily = s.config.xaxis.labels.style.fontFamily, this.xaxisForeColors = s.config.xaxis.labels.style.colors, this.xaxisBorderWidth = s.config.xaxis.axisBorder.width, this.isCategoryBarHorizontal && (this.xaxisBorderWidth = s.config.yaxis[0].axisBorder.width.toString()), this.xaxisBorderWidth.indexOf("%") > -1 ? this.xaxisBorderWidth = s.globals.gridWidth * parseInt(this.xaxisBorderWidth, 10) / 100 : this.xaxisBorderWidth = parseInt(this.xaxisBorderWidth, 10), this.xaxisBorderHeight = s.config.xaxis.axisBorder.height, this.yaxis = s.config.yaxis[0];
    }
    return r(t, [{
      key: "drawXaxis",
      value: function () {
        var t = this.w,
          e = new m(this.ctx),
          i = e.group({
            class: "apexcharts-xaxis",
            transform: "translate(".concat(t.config.xaxis.offsetX, ", ").concat(t.config.xaxis.offsetY, ")")
          }),
          a = e.group({
            class: "apexcharts-xaxis-texts-g",
            transform: "translate(".concat(t.globals.translateXAxisX, ", ").concat(t.globals.translateXAxisY, ")")
          });
        i.add(a);
        for (var s = [], r = 0; r < this.xaxisLabels.length; r++) s.push(this.xaxisLabels[r]);
        if (this.drawXAxisLabelAndGroup(!0, e, a, s, t.globals.isXNumeric, function (t, e) {
          return e;
        }), t.globals.hasXaxisGroups) {
          var o = t.globals.groups;
          s = [];
          for (var n = 0; n < o.length; n++) s.push(o[n].title);
          var l = {};
          t.config.xaxis.group.style && (l.xaxisFontSize = t.config.xaxis.group.style.fontSize, l.xaxisFontFamily = t.config.xaxis.group.style.fontFamily, l.xaxisForeColors = t.config.xaxis.group.style.colors, l.fontWeight = t.config.xaxis.group.style.fontWeight, l.cssClass = t.config.xaxis.group.style.cssClass), this.drawXAxisLabelAndGroup(!1, e, a, s, !1, function (t, e) {
            return o[t].cols * e;
          }, l);
        }
        if (void 0 !== t.config.xaxis.title.text) {
          var h = e.group({
              class: "apexcharts-xaxis-title"
            }),
            c = e.drawText({
              x: t.globals.gridWidth / 2 + t.config.xaxis.title.offsetX,
              y: this.offY + parseFloat(this.xaxisFontSize) + ("bottom" === t.config.xaxis.position ? t.globals.xAxisLabelsHeight : -t.globals.xAxisLabelsHeight - 10) + t.config.xaxis.title.offsetY,
              text: t.config.xaxis.title.text,
              textAnchor: "middle",
              fontSize: t.config.xaxis.title.style.fontSize,
              fontFamily: t.config.xaxis.title.style.fontFamily,
              fontWeight: t.config.xaxis.title.style.fontWeight,
              foreColor: t.config.xaxis.title.style.color,
              cssClass: "apexcharts-xaxis-title-text " + t.config.xaxis.title.style.cssClass
            });
          h.add(c), i.add(h);
        }
        if (t.config.xaxis.axisBorder.show) {
          var d = t.globals.barPadForNumericAxis,
            g = e.drawLine(t.globals.padHorizontal + t.config.xaxis.axisBorder.offsetX - d, this.offY, this.xaxisBorderWidth + d, this.offY, t.config.xaxis.axisBorder.color, 0, this.xaxisBorderHeight);
          this.elgrid && this.elgrid.elGridBorders && t.config.grid.show ? this.elgrid.elGridBorders.add(g) : i.add(g);
        }
        return i;
      }
    }, {
      key: "drawXAxisLabelAndGroup",
      value: function (t, e, i, a, s, r) {
        var o,
          n = this,
          l = arguments.length > 6 && void 0 !== arguments[6] ? arguments[6] : {},
          h = [],
          c = [],
          d = this.w,
          g = l.xaxisFontSize || this.xaxisFontSize,
          u = l.xaxisFontFamily || this.xaxisFontFamily,
          p = l.xaxisForeColors || this.xaxisForeColors,
          f = l.fontWeight || d.config.xaxis.labels.style.fontWeight,
          x = l.cssClass || d.config.xaxis.labels.style.cssClass,
          b = d.globals.padHorizontal,
          v = a.length,
          m = "category" === d.config.xaxis.type ? d.globals.dataPoints : v;
        if (0 === m && v > m && (m = v), s) {
          var y = m > 1 ? m - 1 : m;
          o = d.globals.gridWidth / y, b = b + r(0, o) / 2 + d.config.xaxis.labels.offsetX;
        } else o = d.globals.gridWidth / m, b = b + r(0, o) + d.config.xaxis.labels.offsetX;
        for (var w = function (s) {
            var l = b - r(s, o) / 2 + d.config.xaxis.labels.offsetX;
            0 === s && 1 === v && o / 2 === b && 1 === m && (l = d.globals.gridWidth / 2);
            var y = n.axesUtils.getLabel(a, d.globals.timescaleLabels, l, s, h, g, t),
              w = 28;
            d.globals.rotateXLabels && t && (w = 22), d.config.xaxis.title.text && "top" === d.config.xaxis.position && (w += parseFloat(d.config.xaxis.title.style.fontSize) + 2), t || (w = w + parseFloat(g) + (d.globals.xAxisLabelsHeight - d.globals.xAxisGroupLabelsHeight) + (d.globals.rotateXLabels ? 10 : 0)), y = void 0 !== d.config.xaxis.tickAmount && "dataPoints" !== d.config.xaxis.tickAmount && "datetime" !== d.config.xaxis.type ? n.axesUtils.checkLabelBasedOnTickamount(s, y, v) : n.axesUtils.checkForOverflowingLabels(s, y, v, h, c);
            if (d.config.xaxis.labels.show) {
              var k = e.drawText({
                x: y.x,
                y: n.offY + d.config.xaxis.labels.offsetY + w - ("top" === d.config.xaxis.position ? d.globals.xAxisHeight + d.config.xaxis.axisTicks.height - 2 : 0),
                text: y.text,
                textAnchor: "middle",
                fontWeight: y.isBold ? 600 : f,
                fontSize: g,
                fontFamily: u,
                foreColor: Array.isArray(p) ? t && d.config.xaxis.convertedCatToNumeric ? p[d.globals.minX + s - 1] : p[s] : p,
                isPlainText: !1,
                cssClass: (t ? "apexcharts-xaxis-label " : "apexcharts-xaxis-group-label ") + x
              });
              if (i.add(k), k.on("click", function (t) {
                if ("function" == typeof d.config.chart.events.xAxisLabelClick) {
                  var e = Object.assign({}, d, {
                    labelIndex: s
                  });
                  d.config.chart.events.xAxisLabelClick(t, n.ctx, e);
                }
              }), t) {
                var A = document.createElementNS(d.globals.SVGNS, "title");
                A.textContent = Array.isArray(y.text) ? y.text.join(" ") : y.text, k.node.appendChild(A), "" !== y.text && (h.push(y.text), c.push(y));
              }
            }
            s < v - 1 && (b += r(s + 1, o));
          }, k = 0; k <= v - 1; k++) w(k);
      }
    }, {
      key: "drawXaxisInversed",
      value: function (t) {
        var e,
          i,
          a = this,
          s = this.w,
          r = new m(this.ctx),
          o = s.config.yaxis[0].opposite ? s.globals.translateYAxisX[t] : 0,
          n = r.group({
            class: "apexcharts-yaxis apexcharts-xaxis-inversed",
            rel: t
          }),
          l = r.group({
            class: "apexcharts-yaxis-texts-g apexcharts-xaxis-inversed-texts-g",
            transform: "translate(" + o + ", 0)"
          });
        n.add(l);
        var h = [];
        if (s.config.yaxis[t].show) for (var c = 0; c < this.xaxisLabels.length; c++) h.push(this.xaxisLabels[c]);
        e = s.globals.gridHeight / h.length, i = -e / 2.2;
        var d = s.globals.yLabelFormatters[0],
          g = s.config.yaxis[0].labels;
        if (g.show) for (var u = function (o) {
            var n = void 0 === h[o] ? "" : h[o];
            n = d(n, {
              seriesIndex: t,
              dataPointIndex: o,
              w: s
            });
            var c = a.axesUtils.getYAxisForeColor(g.style.colors, t),
              u = 0;
            Array.isArray(n) && (u = n.length / 2 * parseInt(g.style.fontSize, 10));
            var p = g.offsetX - 15,
              f = "end";
            a.yaxis.opposite && (f = "start"), "left" === s.config.yaxis[0].labels.align ? (p = g.offsetX, f = "start") : "center" === s.config.yaxis[0].labels.align ? (p = g.offsetX, f = "middle") : "right" === s.config.yaxis[0].labels.align && (f = "end");
            var x = r.drawText({
              x: p,
              y: i + e + g.offsetY - u,
              text: n,
              textAnchor: f,
              foreColor: Array.isArray(c) ? c[o] : c,
              fontSize: g.style.fontSize,
              fontFamily: g.style.fontFamily,
              fontWeight: g.style.fontWeight,
              isPlainText: !1,
              cssClass: "apexcharts-yaxis-label " + g.style.cssClass,
              maxWidth: g.maxWidth
            });
            l.add(x), x.on("click", function (t) {
              if ("function" == typeof s.config.chart.events.xAxisLabelClick) {
                var e = Object.assign({}, s, {
                  labelIndex: o
                });
                s.config.chart.events.xAxisLabelClick(t, a.ctx, e);
              }
            });
            var b = document.createElementNS(s.globals.SVGNS, "title");
            if (b.textContent = Array.isArray(n) ? n.join(" ") : n, x.node.appendChild(b), 0 !== s.config.yaxis[t].labels.rotate) {
              var v = r.rotateAroundCenter(x.node);
              x.node.setAttribute("transform", "rotate(".concat(s.config.yaxis[t].labels.rotate, " 0 ").concat(v.y, ")"));
            }
            i += e;
          }, p = 0; p <= h.length - 1; p++) u(p);
        if (void 0 !== s.config.yaxis[0].title.text) {
          var f = r.group({
              class: "apexcharts-yaxis-title apexcharts-xaxis-title-inversed",
              transform: "translate(" + o + ", 0)"
            }),
            x = r.drawText({
              x: s.config.yaxis[0].title.offsetX,
              y: s.globals.gridHeight / 2 + s.config.yaxis[0].title.offsetY,
              text: s.config.yaxis[0].title.text,
              textAnchor: "middle",
              foreColor: s.config.yaxis[0].title.style.color,
              fontSize: s.config.yaxis[0].title.style.fontSize,
              fontWeight: s.config.yaxis[0].title.style.fontWeight,
              fontFamily: s.config.yaxis[0].title.style.fontFamily,
              cssClass: "apexcharts-yaxis-title-text " + s.config.yaxis[0].title.style.cssClass
            });
          f.add(x), n.add(f);
        }
        var b = 0;
        this.isCategoryBarHorizontal && s.config.yaxis[0].opposite && (b = s.globals.gridWidth);
        var v = s.config.xaxis.axisBorder;
        if (v.show) {
          var y = r.drawLine(s.globals.padHorizontal + v.offsetX + b, 1 + v.offsetY, s.globals.padHorizontal + v.offsetX + b, s.globals.gridHeight + v.offsetY, v.color, 0);
          this.elgrid && this.elgrid.elGridBorders && s.config.grid.show ? this.elgrid.elGridBorders.add(y) : n.add(y);
        }
        return s.config.yaxis[0].axisTicks.show && this.axesUtils.drawYAxisTicks(b, h.length, s.config.yaxis[0].axisBorder, s.config.yaxis[0].axisTicks, 0, e, n), n;
      }
    }, {
      key: "drawXaxisTicks",
      value: function (t, e, i) {
        var a = this.w,
          s = t;
        if (!(t < 0 || t - 2 > a.globals.gridWidth)) {
          var r = this.offY + a.config.xaxis.axisTicks.offsetY;
          if (e = e + r + a.config.xaxis.axisTicks.height, "top" === a.config.xaxis.position && (e = r - a.config.xaxis.axisTicks.height), a.config.xaxis.axisTicks.show) {
            var o = new m(this.ctx).drawLine(t + a.config.xaxis.axisTicks.offsetX, r + a.config.xaxis.offsetY, s + a.config.xaxis.axisTicks.offsetX, e + a.config.xaxis.offsetY, a.config.xaxis.axisTicks.color);
            i.add(o), o.node.classList.add("apexcharts-xaxis-tick");
          }
        }
      }
    }, {
      key: "getXAxisTicksPositions",
      value: function () {
        var t = this.w,
          e = [],
          i = this.xaxisLabels.length,
          a = t.globals.padHorizontal;
        if (t.globals.timescaleLabels.length > 0) for (var s = 0; s < i; s++) a = this.xaxisLabels[s].position, e.push(a);else for (var r = i, o = 0; o < r; o++) {
          var n = r;
          t.globals.isXNumeric && "bar" !== t.config.chart.type && (n -= 1), a += t.globals.gridWidth / n, e.push(a);
        }
        return e;
      }
    }, {
      key: "xAxisLabelCorrections",
      value: function () {
        var t = this.w,
          e = new m(this.ctx),
          i = t.globals.dom.baseEl.querySelector(".apexcharts-xaxis-texts-g"),
          a = t.globals.dom.baseEl.querySelectorAll(".apexcharts-xaxis-texts-g text:not(.apexcharts-xaxis-group-label)"),
          s = t.globals.dom.baseEl.querySelectorAll(".apexcharts-yaxis-inversed text"),
          r = t.globals.dom.baseEl.querySelectorAll(".apexcharts-xaxis-inversed-texts-g text tspan");
        if (t.globals.rotateXLabels || t.config.xaxis.labels.rotateAlways) for (var o = 0; o < a.length; o++) {
          var n = e.rotateAroundCenter(a[o]);
          n.y = n.y - 1, n.x = n.x + 1, a[o].setAttribute("transform", "rotate(".concat(t.config.xaxis.labels.rotate, " ").concat(n.x, " ").concat(n.y, ")")), a[o].setAttribute("text-anchor", "end");
          i.setAttribute("transform", "translate(0, ".concat(-10, ")"));
          var l = a[o].childNodes;
          t.config.xaxis.labels.trim && Array.prototype.forEach.call(l, function (i) {
            e.placeTextWithEllipsis(i, i.textContent, t.globals.xAxisLabelsHeight - ("bottom" === t.config.legend.position ? 20 : 10));
          });
        } else !function () {
          for (var i = t.globals.gridWidth / (t.globals.labels.length + 1), s = 0; s < a.length; s++) {
            var r = a[s].childNodes;
            t.config.xaxis.labels.trim && "datetime" !== t.config.xaxis.type && Array.prototype.forEach.call(r, function (t) {
              e.placeTextWithEllipsis(t, t.textContent, i);
            });
          }
        }();
        if (s.length > 0) {
          var h = s[s.length - 1].getBBox(),
            c = s[0].getBBox();
          h.x < -20 && s[s.length - 1].parentNode.removeChild(s[s.length - 1]), c.x + c.width > t.globals.gridWidth && !t.globals.isBarHorizontal && s[0].parentNode.removeChild(s[0]);
          for (var d = 0; d < r.length; d++) e.placeTextWithEllipsis(r[d], r[d].textContent, t.config.yaxis[0].labels.maxWidth - (t.config.yaxis[0].title.text ? 2 * parseFloat(t.config.yaxis[0].title.style.fontSize) : 0) - 15);
        }
      }
    }]), t;
  }(),
  j = function () {
    function t(e) {
      a(this, t), this.ctx = e, this.w = e.w;
      var i = this.w;
      this.xaxisLabels = i.globals.labels.slice(), this.axesUtils = new B(e), this.isRangeBar = i.globals.seriesRange.length, i.globals.timescaleLabels.length > 0 && (this.xaxisLabels = i.globals.timescaleLabels.slice());
    }
    return r(t, [{
      key: "drawGridArea",
      value: function () {
        var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null,
          e = this.w,
          i = new m(this.ctx);
        null === t && (t = i.group({
          class: "apexcharts-grid"
        }));
        var a = i.drawLine(e.globals.padHorizontal, 1, e.globals.padHorizontal, e.globals.gridHeight, "transparent"),
          s = i.drawLine(e.globals.padHorizontal, e.globals.gridHeight, e.globals.gridWidth, e.globals.gridHeight, "transparent");
        return t.add(s), t.add(a), t;
      }
    }, {
      key: "drawGrid",
      value: function () {
        var t = null;
        return this.w.globals.axisCharts && (t = this.renderGrid(), this.drawGridArea(t.el)), t;
      }
    }, {
      key: "createGridMask",
      value: function () {
        var t = this.w,
          e = t.globals,
          i = new m(this.ctx),
          a = Array.isArray(t.config.stroke.width) ? 0 : t.config.stroke.width;
        if (Array.isArray(t.config.stroke.width)) {
          var s = 0;
          t.config.stroke.width.forEach(function (t) {
            s = Math.max(s, t);
          }), a = s;
        }
        e.dom.elGridRectMask = document.createElementNS(e.SVGNS, "clipPath"), e.dom.elGridRectMask.setAttribute("id", "gridRectMask".concat(e.cuid)), e.dom.elGridRectMarkerMask = document.createElementNS(e.SVGNS, "clipPath"), e.dom.elGridRectMarkerMask.setAttribute("id", "gridRectMarkerMask".concat(e.cuid)), e.dom.elForecastMask = document.createElementNS(e.SVGNS, "clipPath"), e.dom.elForecastMask.setAttribute("id", "forecastMask".concat(e.cuid)), e.dom.elNonForecastMask = document.createElementNS(e.SVGNS, "clipPath"), e.dom.elNonForecastMask.setAttribute("id", "nonForecastMask".concat(e.cuid));
        var r = t.config.chart.type,
          o = 0,
          n = 0;
        ("bar" === r || "rangeBar" === r || "candlestick" === r || "boxPlot" === r || t.globals.comboBarCount > 0) && t.globals.isXNumeric && !t.globals.isBarHorizontal && (o = t.config.grid.padding.left, n = t.config.grid.padding.right, e.barPadForNumericAxis > o && (o = e.barPadForNumericAxis, n = e.barPadForNumericAxis)), e.dom.elGridRect = i.drawRect(-a / 2 - o - 2, -a / 2, e.gridWidth + a + n + o + 4, e.gridHeight + a, 0, "#fff");
        var l = t.globals.markers.largestSize + 1;
        e.dom.elGridRectMarker = i.drawRect(2 * -l, 2 * -l, e.gridWidth + 4 * l, e.gridHeight + 4 * l, 0, "#fff"), e.dom.elGridRectMask.appendChild(e.dom.elGridRect.node), e.dom.elGridRectMarkerMask.appendChild(e.dom.elGridRectMarker.node);
        var h = e.dom.baseEl.querySelector("defs");
        h.appendChild(e.dom.elGridRectMask), h.appendChild(e.dom.elForecastMask), h.appendChild(e.dom.elNonForecastMask), h.appendChild(e.dom.elGridRectMarkerMask);
      }
    }, {
      key: "_drawGridLines",
      value: function (t) {
        var e = t.i,
          i = t.x1,
          a = t.y1,
          s = t.x2,
          r = t.y2,
          o = t.xCount,
          n = t.parent,
          l = this.w;
        if (!(0 === e && l.globals.skipFirstTimelinelabel || e === o - 1 && l.globals.skipLastTimelinelabel && !l.config.xaxis.labels.formatter || "radar" === l.config.chart.type)) {
          l.config.grid.xaxis.lines.show && this._drawGridLine({
            i: e,
            x1: i,
            y1: a,
            x2: s,
            y2: r,
            xCount: o,
            parent: n
          });
          var h = 0;
          if (l.globals.hasXaxisGroups && "between" === l.config.xaxis.tickPlacement) {
            var c = l.globals.groups;
            if (c) {
              for (var d = 0, g = 0; d < e && g < c.length; g++) d += c[g].cols;
              d === e && (h = .6 * l.globals.xAxisLabelsHeight);
            }
          }
          new V(this.ctx).drawXaxisTicks(i, h, l.globals.dom.elGraphical);
        }
      }
    }, {
      key: "_drawGridLine",
      value: function (t) {
        var e = t.i,
          i = t.x1,
          a = t.y1,
          s = t.x2,
          r = t.y2,
          o = t.xCount,
          n = t.parent,
          l = this.w,
          h = !1,
          c = n.node.classList.contains("apexcharts-gridlines-horizontal"),
          d = l.config.grid.strokeDashArray,
          g = l.globals.barPadForNumericAxis;
        (0 === a && 0 === r || 0 === i && 0 === s) && (h = !0), a === l.globals.gridHeight && r === l.globals.gridHeight && (h = !0), !l.globals.isBarHorizontal || 0 !== e && e !== o - 1 || (h = !0);
        var u = new m(this).drawLine(i - (c ? g : 0), a, s + (c ? g : 0), r, l.config.grid.borderColor, d);
        u.node.classList.add("apexcharts-gridline"), h && l.config.grid.show ? this.elGridBorders.add(u) : n.add(u);
      }
    }, {
      key: "_drawGridBandRect",
      value: function (t) {
        var e = t.c,
          i = t.x1,
          a = t.y1,
          s = t.x2,
          r = t.y2,
          o = t.type,
          n = this.w,
          l = new m(this.ctx),
          h = n.globals.barPadForNumericAxis;
        if ("column" !== o || "datetime" !== n.config.xaxis.type) {
          var c = n.config.grid[o].colors[e],
            d = l.drawRect(i - ("row" === o ? h : 0), a, s + ("row" === o ? 2 * h : 0), r, 0, c, n.config.grid[o].opacity);
          this.elg.add(d), d.attr("clip-path", "url(#gridRectMask".concat(n.globals.cuid, ")")), d.node.classList.add("apexcharts-grid-".concat(o));
        }
      }
    }, {
      key: "_drawXYLines",
      value: function (t) {
        var e = this,
          i = t.xCount,
          a = t.tickAmount,
          s = this.w;
        if (s.config.grid.xaxis.lines.show || s.config.xaxis.axisTicks.show) {
          var r,
            o = s.globals.padHorizontal,
            n = s.globals.gridHeight;
          s.globals.timescaleLabels.length ? function (t) {
            for (var a = t.xC, s = t.x1, r = t.y1, o = t.x2, n = t.y2, l = 0; l < a; l++) s = e.xaxisLabels[l].position, o = e.xaxisLabels[l].position, e._drawGridLines({
              i: l,
              x1: s,
              y1: r,
              x2: o,
              y2: n,
              xCount: i,
              parent: e.elgridLinesV
            });
          }({
            xC: i,
            x1: o,
            y1: 0,
            x2: r,
            y2: n
          }) : (s.globals.isXNumeric && (i = s.globals.xAxisScale.result.length), function (t) {
            for (var a = t.xC, r = t.x1, o = t.y1, n = t.x2, l = t.y2, h = 0; h < a + (s.globals.isXNumeric ? 0 : 1); h++) 0 === h && 1 === a && 1 === s.globals.dataPoints && (n = r = s.globals.gridWidth / 2), e._drawGridLines({
              i: h,
              x1: r,
              y1: o,
              x2: n,
              y2: l,
              xCount: i,
              parent: e.elgridLinesV
            }), n = r += s.globals.gridWidth / (s.globals.isXNumeric ? a - 1 : a);
          }({
            xC: i,
            x1: o,
            y1: 0,
            x2: r,
            y2: n
          }));
        }
        if (s.config.grid.yaxis.lines.show) {
          var l = 0,
            h = 0,
            c = s.globals.gridWidth,
            d = a + 1;
          this.isRangeBar && (d = s.globals.labels.length);
          for (var g = 0; g < d + (this.isRangeBar ? 1 : 0); g++) this._drawGridLine({
            i: g,
            xCount: d + (this.isRangeBar ? 1 : 0),
            x1: 0,
            y1: l,
            x2: c,
            y2: h,
            parent: this.elgridLinesH
          }), h = l += s.globals.gridHeight / (this.isRangeBar ? d : a);
        }
      }
    }, {
      key: "_drawInvertedXYLines",
      value: function (t) {
        var e = t.xCount,
          i = this.w;
        if (i.config.grid.xaxis.lines.show || i.config.xaxis.axisTicks.show) for (var a, s = i.globals.padHorizontal, r = i.globals.gridHeight, o = 0; o < e + 1; o++) {
          i.config.grid.xaxis.lines.show && this._drawGridLine({
            i: o,
            xCount: e + 1,
            x1: s,
            y1: 0,
            x2: a,
            y2: r,
            parent: this.elgridLinesV
          }), new V(this.ctx).drawXaxisTicks(s, 0, i.globals.dom.elGraphical), a = s = s + i.globals.gridWidth / e + .3;
        }
        if (i.config.grid.yaxis.lines.show) for (var n = 0, l = 0, h = i.globals.gridWidth, c = 0; c < i.globals.dataPoints + 1; c++) this._drawGridLine({
          i: c,
          xCount: i.globals.dataPoints + 1,
          x1: 0,
          y1: n,
          x2: h,
          y2: l,
          parent: this.elgridLinesH
        }), l = n += i.globals.gridHeight / i.globals.dataPoints;
      }
    }, {
      key: "renderGrid",
      value: function () {
        var t = this.w,
          e = new m(this.ctx);
        this.elg = e.group({
          class: "apexcharts-grid"
        }), this.elgridLinesH = e.group({
          class: "apexcharts-gridlines-horizontal"
        }), this.elgridLinesV = e.group({
          class: "apexcharts-gridlines-vertical"
        }), this.elGridBorders = e.group({
          class: "apexcharts-grid-borders"
        }), this.elg.add(this.elgridLinesH), this.elg.add(this.elgridLinesV), t.config.grid.show || (this.elgridLinesV.hide(), this.elgridLinesH.hide(), this.elGridBorders.hide());
        for (var i, a = t.globals.yAxisScale.length ? t.globals.yAxisScale[0].result.length - 1 : 5, s = 0; s < t.globals.series.length && (void 0 !== t.globals.yAxisScale[s] && (a = t.globals.yAxisScale[s].result.length - 1), !(a > 2)); s++);
        return !t.globals.isBarHorizontal || this.isRangeBar ? (i = this.xaxisLabels.length, this.isRangeBar && t.globals.isBarHorizontal && (i--, a = t.globals.labels.length, t.config.xaxis.tickAmount && t.config.xaxis.labels.formatter && (i = t.config.xaxis.tickAmount)), this._drawXYLines({
          xCount: i,
          tickAmount: a
        })) : (i = a, a = t.globals.xTickAmount, this._drawInvertedXYLines({
          xCount: i,
          tickAmount: a
        })), this.drawGridBands(i, a), {
          el: this.elg,
          elGridBorders: this.elGridBorders,
          xAxisTickWidth: t.globals.gridWidth / i
        };
      }
    }, {
      key: "drawGridBands",
      value: function (t, e) {
        var i = this.w;
        if (void 0 !== i.config.grid.row.colors && i.config.grid.row.colors.length > 0) for (var a = 0, s = i.globals.gridHeight / e, r = i.globals.gridWidth, o = 0, n = 0; o < e; o++, n++) n >= i.config.grid.row.colors.length && (n = 0), this._drawGridBandRect({
          c: n,
          x1: 0,
          y1: a,
          x2: r,
          y2: s,
          type: "row"
        }), a += i.globals.gridHeight / e;
        if (void 0 !== i.config.grid.column.colors && i.config.grid.column.colors.length > 0) for (var l = i.globals.isBarHorizontal || "category" !== i.config.xaxis.type && !i.config.xaxis.convertedCatToNumeric ? t : t - 1, h = i.globals.padHorizontal, c = i.globals.padHorizontal + i.globals.gridWidth / l, d = i.globals.gridHeight, g = 0, u = 0; g < t; g++, u++) u >= i.config.grid.column.colors.length && (u = 0), this._drawGridBandRect({
          c: u,
          x1: h,
          y1: 0,
          x2: c,
          y2: d,
          type: "column"
        }), h += i.globals.gridWidth / l;
      }
    }]), t;
  }(),
  _ = function () {
    function t(e) {
      a(this, t), this.ctx = e, this.w = e.w;
    }
    return r(t, [{
      key: "niceScale",
      value: function (t, e) {
        var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 10,
          a = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 0,
          s = arguments.length > 4 ? arguments[4] : void 0,
          r = this.w,
          o = Math.abs(e - t);
        if ("dataPoints" === (i = this._adjustTicksForSmallRange(i, a, o)) && (i = r.globals.dataPoints - 1), t === Number.MIN_VALUE && 0 === e || !x.isNumber(t) && !x.isNumber(e) || t === Number.MIN_VALUE && e === -Number.MAX_VALUE) return t = 0, e = i, this.linearScale(t, e, i);
        t > e ? (console.warn("axis.min cannot be greater than axis.max"), e = t + .1) : t === e && (t = 0 === t ? 0 : t - .5, e = 0 === e ? 2 : e + .5);
        var n = [];
        o < 1 && s && ("candlestick" === r.config.chart.type || "candlestick" === r.config.series[a].type || "boxPlot" === r.config.chart.type || "boxPlot" === r.config.series[a].type || r.globals.isRangeData) && (e *= 1.01);
        var l = i + 1;
        l < 2 ? l = 2 : l > 2 && (l -= 2);
        var h = o / l,
          c = Math.floor(x.log10(h)),
          d = Math.pow(10, c),
          g = Math.round(h / d);
        g < 1 && (g = 1);
        var u = g * d,
          p = u * Math.floor(t / u),
          f = u * Math.ceil(e / u),
          b = p;
        if (s && o > 2) {
          for (; n.push(b), !((b += u) > f););
          return {
            result: n,
            niceMin: n[0],
            niceMax: n[n.length - 1]
          };
        }
        var v = t;
        (n = []).push(v);
        for (var m = Math.abs(e - t) / i, y = 0; y <= i; y++) v += m, n.push(v);
        return n[n.length - 2] >= e && n.pop(), {
          result: n,
          niceMin: n[0],
          niceMax: n[n.length - 1]
        };
      }
    }, {
      key: "linearScale",
      value: function (t, e) {
        var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 10,
          a = arguments.length > 3 ? arguments[3] : void 0,
          s = Math.abs(e - t);
        "dataPoints" === (i = this._adjustTicksForSmallRange(i, a, s)) && (i = this.w.globals.dataPoints - 1);
        var r = s / i;
        i === Number.MAX_VALUE && (i = 10, r = 1);
        for (var o = [], n = t; i >= 0;) o.push(n), n += r, i -= 1;
        return {
          result: o,
          niceMin: o[0],
          niceMax: o[o.length - 1]
        };
      }
    }, {
      key: "logarithmicScaleNice",
      value: function (t, e, i) {
        e <= 0 && (e = Math.max(t, i)), t <= 0 && (t = Math.min(e, i));
        for (var a = [], s = Math.ceil(Math.log(e) / Math.log(i) + 1), r = Math.floor(Math.log(t) / Math.log(i)); r < s; r++) a.push(Math.pow(i, r));
        return {
          result: a,
          niceMin: a[0],
          niceMax: a[a.length - 1]
        };
      }
    }, {
      key: "logarithmicScale",
      value: function (t, e, i) {
        e <= 0 && (e = Math.max(t, i)), t <= 0 && (t = Math.min(e, i));
        for (var a = [], s = Math.log(e) / Math.log(i), r = Math.log(t) / Math.log(i), o = s - r, n = Math.round(o), l = o / n, h = 0, c = r; h < n; h++, c += l) a.push(Math.pow(i, c));
        return a.push(Math.pow(i, s)), {
          result: a,
          niceMin: t,
          niceMax: e
        };
      }
    }, {
      key: "_adjustTicksForSmallRange",
      value: function (t, e, i) {
        var a = t;
        if (void 0 !== e && this.w.config.yaxis[e].labels.formatter && void 0 === this.w.config.yaxis[e].tickAmount) {
          var s = Number(this.w.config.yaxis[e].labels.formatter(1));
          x.isNumber(s) && 0 === this.w.globals.yValueDecimal && (a = Math.ceil(i));
        }
        return a < t ? a : t;
      }
    }, {
      key: "setYScaleForIndex",
      value: function (t, e, i) {
        var a = this.w.globals,
          s = this.w.config,
          r = a.isBarHorizontal ? s.xaxis : s.yaxis[t];
        void 0 === a.yAxisScale[t] && (a.yAxisScale[t] = []);
        var o = Math.abs(i - e);
        if (r.logarithmic && o <= 5 && (a.invalidLogScale = !0), r.logarithmic && o > 5) a.allSeriesCollapsed = !1, a.yAxisScale[t] = this.logarithmicScale(e, i, r.logBase), a.yAxisScale[t] = r.forceNiceScale ? this.logarithmicScaleNice(e, i, r.logBase) : this.logarithmicScale(e, i, r.logBase);else if (i !== -Number.MAX_VALUE && x.isNumber(i)) {
          if (a.allSeriesCollapsed = !1, void 0 === r.min && void 0 === r.max || r.forceNiceScale) {
            var n = void 0 === s.yaxis[t].max && void 0 === s.yaxis[t].min || s.yaxis[t].forceNiceScale;
            a.yAxisScale[t] = this.niceScale(e, i, r.tickAmount ? r.tickAmount : o < 5 && o > 1 ? o + 1 : 5, t, n);
          } else a.yAxisScale[t] = this.linearScale(e, i, r.tickAmount, t);
        } else a.yAxisScale[t] = this.linearScale(0, 5, 5);
      }
    }, {
      key: "setXScale",
      value: function (t, e) {
        var i = this.w,
          a = i.globals,
          s = i.config.xaxis,
          r = Math.abs(e - t);
        return e !== -Number.MAX_VALUE && x.isNumber(e) ? a.xAxisScale = this.linearScale(t, e, s.tickAmount ? s.tickAmount : r < 5 && r > 1 ? r + 1 : 5, 0) : a.xAxisScale = this.linearScale(0, 5, 5), a.xAxisScale;
      }
    }, {
      key: "setMultipleYScales",
      value: function () {
        var t = this,
          e = this.w.globals,
          i = this.w.config,
          a = e.minYArr.concat([]),
          s = e.maxYArr.concat([]),
          r = [];
        i.yaxis.forEach(function (e, o) {
          var n = o;
          i.series.forEach(function (t, i) {
            t.name === e.seriesName && (n = i, o !== i ? r.push({
              index: i,
              similarIndex: o,
              alreadyExists: !0
            }) : r.push({
              index: i
            }));
          });
          var l = a[n],
            h = s[n];
          t.setYScaleForIndex(o, l, h);
        }), this.sameScaleInMultipleAxes(a, s, r);
      }
    }, {
      key: "sameScaleInMultipleAxes",
      value: function (t, e, i) {
        var a = this,
          s = this.w.config,
          r = this.w.globals,
          o = [];
        i.forEach(function (t) {
          t.alreadyExists && (void 0 === o[t.index] && (o[t.index] = []), o[t.index].push(t.index), o[t.index].push(t.similarIndex));
        }), r.yAxisSameScaleIndices = o, o.forEach(function (t, e) {
          o.forEach(function (i, a) {
            var s, r;
            e !== a && (s = t, r = i, s.filter(function (t) {
              return -1 !== r.indexOf(t);
            })).length > 0 && (o[e] = o[e].concat(o[a]));
          });
        });
        var n = o.map(function (t) {
          return t.filter(function (e, i) {
            return t.indexOf(e) === i;
          });
        }).map(function (t) {
          return t.sort();
        });
        o = o.filter(function (t) {
          return !!t;
        });
        var l = n.slice(),
          h = l.map(function (t) {
            return JSON.stringify(t);
          });
        l = l.filter(function (t, e) {
          return h.indexOf(JSON.stringify(t)) === e;
        });
        var c = [],
          d = [];
        t.forEach(function (t, i) {
          l.forEach(function (a, s) {
            a.indexOf(i) > -1 && (void 0 === c[s] && (c[s] = [], d[s] = []), c[s].push({
              key: i,
              value: t
            }), d[s].push({
              key: i,
              value: e[i]
            }));
          });
        });
        var g = Array.apply(null, Array(l.length)).map(Number.prototype.valueOf, Number.MIN_VALUE),
          u = Array.apply(null, Array(l.length)).map(Number.prototype.valueOf, -Number.MAX_VALUE);
        c.forEach(function (t, e) {
          t.forEach(function (t, i) {
            g[e] = Math.min(t.value, g[e]);
          });
        }), d.forEach(function (t, e) {
          t.forEach(function (t, i) {
            u[e] = Math.max(t.value, u[e]);
          });
        }), t.forEach(function (t, e) {
          d.forEach(function (t, i) {
            var o = g[i],
              n = u[i];
            s.chart.stacked && (n = 0, t.forEach(function (t, e) {
              t.value !== -Number.MAX_VALUE && (n += t.value), o !== Number.MIN_VALUE && (o += c[i][e].value);
            })), t.forEach(function (i, l) {
              t[l].key === e && (void 0 !== s.yaxis[e].min && (o = "function" == typeof s.yaxis[e].min ? s.yaxis[e].min(r.minY) : s.yaxis[e].min), void 0 !== s.yaxis[e].max && (n = "function" == typeof s.yaxis[e].max ? s.yaxis[e].max(r.maxY) : s.yaxis[e].max), a.setYScaleForIndex(e, o, n));
            });
          });
        });
      }
    }, {
      key: "autoScaleY",
      value: function (t, e, i) {
        t || (t = this);
        var a = t.w;
        if (a.globals.isMultipleYAxis || a.globals.collapsedSeries.length) return console.warn("autoScaleYaxis is not supported in a multi-yaxis chart."), e;
        var s = a.globals.seriesX[0],
          r = a.config.chart.stacked;
        return e.forEach(function (t, o) {
          for (var n = 0, l = 0; l < s.length; l++) if (s[l] >= i.xaxis.min) {
            n = l;
            break;
          }
          var h,
            c,
            d = a.globals.minYArr[o],
            g = a.globals.maxYArr[o],
            u = a.globals.stackedSeriesTotals;
          a.globals.series.forEach(function (o, l) {
            var p = o[n];
            r ? (p = u[n], h = c = p, u.forEach(function (t, e) {
              s[e] <= i.xaxis.max && s[e] >= i.xaxis.min && (t > c && null !== t && (c = t), o[e] < h && null !== o[e] && (h = o[e]));
            })) : (h = c = p, o.forEach(function (t, e) {
              if (s[e] <= i.xaxis.max && s[e] >= i.xaxis.min) {
                var r = t,
                  o = t;
                a.globals.series.forEach(function (i, a) {
                  null !== t && (r = Math.min(i[e], r), o = Math.max(i[e], o));
                }), o > c && null !== o && (c = o), r < h && null !== r && (h = r);
              }
            })), void 0 === h && void 0 === c && (h = d, c = g), c *= c < 0 ? .9 : 1.1, 0 === (h *= h < 0 ? 1.1 : .9) && 0 === c && (h = -1, c = 1), c < 0 && c < g && (c = g), h < 0 && h > d && (h = d), e.length > 1 ? (e[l].min = void 0 === t.min ? h : t.min, e[l].max = void 0 === t.max ? c : t.max) : (e[0].min = void 0 === t.min ? h : t.min, e[0].max = void 0 === t.max ? c : t.max);
          });
        }), e;
      }
    }]), t;
  }(),
  U = function () {
    function t(e) {
      a(this, t), this.ctx = e, this.w = e.w, this.scales = new _(e);
    }
    return r(t, [{
      key: "init",
      value: function () {
        this.setYRange(), this.setXRange(), this.setZRange();
      }
    }, {
      key: "getMinYMaxY",
      value: function (t) {
        var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : Number.MAX_VALUE,
          i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : -Number.MAX_VALUE,
          a = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : null,
          s = this.w.config,
          r = this.w.globals,
          o = -Number.MAX_VALUE,
          n = Number.MIN_VALUE;
        null === a && (a = t + 1);
        var l = r.series,
          h = l,
          c = l;
        "candlestick" === s.chart.type ? (h = r.seriesCandleL, c = r.seriesCandleH) : "boxPlot" === s.chart.type ? (h = r.seriesCandleO, c = r.seriesCandleC) : r.isRangeData && (h = r.seriesRangeStart, c = r.seriesRangeEnd);
        for (var d = t; d < a; d++) {
          r.dataPoints = Math.max(r.dataPoints, l[d].length), r.categoryLabels.length && (r.dataPoints = r.categoryLabels.filter(function (t) {
            return void 0 !== t;
          }).length), r.labels.length && (r.dataPoints = Math.max(r.dataPoints, r.labels.length));
          for (var g = 0; g < r.series[d].length; g++) {
            var u = l[d][g];
            null !== u && x.isNumber(u) ? (void 0 !== c[d][g] && (o = Math.max(o, c[d][g]), e = Math.min(e, c[d][g])), void 0 !== h[d][g] && (e = Math.min(e, h[d][g]), i = Math.max(i, h[d][g])), "candlestick" !== this.w.config.chart.type && "boxPlot" !== this.w.config.chart.type && "rangeArea" === this.w.config.chart.type && "rangeBar" === this.w.config.chart.type || ("candlestick" !== this.w.config.chart.type && "boxPlot" !== this.w.config.chart.type || void 0 !== r.seriesCandleC[d][g] && (o = Math.max(o, r.seriesCandleO[d][g]), o = Math.max(o, r.seriesCandleH[d][g]), o = Math.max(o, r.seriesCandleL[d][g]), o = Math.max(o, r.seriesCandleC[d][g]), "boxPlot" === this.w.config.chart.type && (o = Math.max(o, r.seriesCandleM[d][g]))), !s.series[d].type || "candlestick" === s.series[d].type && "boxPlot" === s.series[d].type && "rangeArea" === s.series[d].type && "rangeBar" === s.series[d].type || (o = Math.max(o, r.series[d][g]), e = Math.min(e, r.series[d][g])), i = o), r.seriesGoals[d] && r.seriesGoals[d][g] && Array.isArray(r.seriesGoals[d][g]) && r.seriesGoals[d][g].forEach(function (t) {
              n !== Number.MIN_VALUE && (n = Math.min(n, t.value), e = n), o = Math.max(o, t.value), i = o;
            }), x.isFloat(u) && (u = x.noExponents(u), r.yValueDecimal = Math.max(r.yValueDecimal, u.toString().split(".")[1].length)), n > h[d][g] && h[d][g] < 0 && (n = h[d][g])) : r.hasNullValues = !0;
          }
        }
        return "rangeBar" === s.chart.type && r.seriesRangeStart.length && r.isBarHorizontal && (n = e), "bar" === s.chart.type && (n < 0 && o < 0 && (o = 0), n === Number.MIN_VALUE && (n = 0)), {
          minY: n,
          maxY: o,
          lowestY: e,
          highestY: i
        };
      }
    }, {
      key: "setYRange",
      value: function () {
        var t = this.w.globals,
          e = this.w.config;
        t.maxY = -Number.MAX_VALUE, t.minY = Number.MIN_VALUE;
        var i = Number.MAX_VALUE;
        if (t.isMultipleYAxis) for (var a = 0; a < t.series.length; a++) {
          var s = this.getMinYMaxY(a, i, null, a + 1);
          t.minYArr.push(s.minY), t.maxYArr.push(s.maxY), i = s.lowestY;
        }
        var r = this.getMinYMaxY(0, i, null, t.series.length);
        if (t.minY = r.minY, t.maxY = r.maxY, i = r.lowestY, e.chart.stacked && this._setStackedMinMax(), ("line" === e.chart.type || "area" === e.chart.type || "candlestick" === e.chart.type || "boxPlot" === e.chart.type || "rangeBar" === e.chart.type && !t.isBarHorizontal) && t.minY === Number.MIN_VALUE && i !== -Number.MAX_VALUE && i !== t.maxY) {
          var o = t.maxY - i;
          (i >= 0 && i <= 10 || void 0 !== e.yaxis[0].min || void 0 !== e.yaxis[0].max) && (o = 0), t.minY = i - 5 * o / 100, i > 0 && t.minY < 0 && (t.minY = 0), t.maxY = t.maxY + 5 * o / 100;
        }
        if (e.yaxis.forEach(function (e, i) {
          void 0 !== e.max && ("number" == typeof e.max ? t.maxYArr[i] = e.max : "function" == typeof e.max && (t.maxYArr[i] = e.max(t.isMultipleYAxis ? t.maxYArr[i] : t.maxY)), t.maxY = t.maxYArr[i]), void 0 !== e.min && ("number" == typeof e.min ? t.minYArr[i] = e.min : "function" == typeof e.min && (t.minYArr[i] = e.min(t.isMultipleYAxis ? t.minYArr[i] === Number.MIN_VALUE ? 0 : t.minYArr[i] : t.minY)), t.minY = t.minYArr[i]);
        }), t.isBarHorizontal) {
          ["min", "max"].forEach(function (i) {
            void 0 !== e.xaxis[i] && "number" == typeof e.xaxis[i] && ("min" === i ? t.minY = e.xaxis[i] : t.maxY = e.xaxis[i]);
          });
        }
        return t.isMultipleYAxis ? (this.scales.setMultipleYScales(), t.minY = i, t.yAxisScale.forEach(function (e, i) {
          t.minYArr[i] = e.niceMin, t.maxYArr[i] = e.niceMax;
        })) : (this.scales.setYScaleForIndex(0, t.minY, t.maxY), t.minY = t.yAxisScale[0].niceMin, t.maxY = t.yAxisScale[0].niceMax, t.minYArr[0] = t.yAxisScale[0].niceMin, t.maxYArr[0] = t.yAxisScale[0].niceMax), {
          minY: t.minY,
          maxY: t.maxY,
          minYArr: t.minYArr,
          maxYArr: t.maxYArr,
          yAxisScale: t.yAxisScale
        };
      }
    }, {
      key: "setXRange",
      value: function () {
        var t = this.w.globals,
          e = this.w.config,
          i = "numeric" === e.xaxis.type || "datetime" === e.xaxis.type || "category" === e.xaxis.type && !t.noLabelsProvided || t.noLabelsProvided || t.isXNumeric;
        if (t.isXNumeric && function () {
          for (var e = 0; e < t.series.length; e++) if (t.labels[e]) for (var i = 0; i < t.labels[e].length; i++) null !== t.labels[e][i] && x.isNumber(t.labels[e][i]) && (t.maxX = Math.max(t.maxX, t.labels[e][i]), t.initialMaxX = Math.max(t.maxX, t.labels[e][i]), t.minX = Math.min(t.minX, t.labels[e][i]), t.initialMinX = Math.min(t.minX, t.labels[e][i]));
        }(), t.noLabelsProvided && 0 === e.xaxis.categories.length && (t.maxX = t.labels[t.labels.length - 1], t.initialMaxX = t.labels[t.labels.length - 1], t.minX = 1, t.initialMinX = 1), t.isXNumeric || t.noLabelsProvided || t.dataFormatXNumeric) {
          var a;
          if (void 0 === e.xaxis.tickAmount ? (a = Math.round(t.svgWidth / 150), "numeric" === e.xaxis.type && t.dataPoints < 30 && (a = t.dataPoints - 1), a > t.dataPoints && 0 !== t.dataPoints && (a = t.dataPoints - 1)) : "dataPoints" === e.xaxis.tickAmount ? (t.series.length > 1 && (a = t.series[t.maxValsInArrayIndex].length - 1), t.isXNumeric && (a = t.maxX - t.minX - 1)) : a = e.xaxis.tickAmount, t.xTickAmount = a, void 0 !== e.xaxis.max && "number" == typeof e.xaxis.max && (t.maxX = e.xaxis.max), void 0 !== e.xaxis.min && "number" == typeof e.xaxis.min && (t.minX = e.xaxis.min), void 0 !== e.xaxis.range && (t.minX = t.maxX - e.xaxis.range), t.minX !== Number.MAX_VALUE && t.maxX !== -Number.MAX_VALUE) {
            if (e.xaxis.convertedCatToNumeric && !t.dataFormatXNumeric) {
              for (var s = [], r = t.minX - 1; r < t.maxX; r++) s.push(r + 1);
              t.xAxisScale = {
                result: s,
                niceMin: s[0],
                niceMax: s[s.length - 1]
              };
            } else t.xAxisScale = this.scales.setXScale(t.minX, t.maxX);
          } else t.xAxisScale = this.scales.linearScale(1, a, a), t.noLabelsProvided && t.labels.length > 0 && (t.xAxisScale = this.scales.linearScale(1, t.labels.length, a - 1), t.seriesX = t.labels.slice());
          i && (t.labels = t.xAxisScale.result.slice());
        }
        return t.isBarHorizontal && t.labels.length && (t.xTickAmount = t.labels.length), this._handleSingleDataPoint(), this._getMinXDiff(), {
          minX: t.minX,
          maxX: t.maxX
        };
      }
    }, {
      key: "setZRange",
      value: function () {
        var t = this.w.globals;
        if (t.isDataXYZ) for (var e = 0; e < t.series.length; e++) if (void 0 !== t.seriesZ[e]) for (var i = 0; i < t.seriesZ[e].length; i++) null !== t.seriesZ[e][i] && x.isNumber(t.seriesZ[e][i]) && (t.maxZ = Math.max(t.maxZ, t.seriesZ[e][i]), t.minZ = Math.min(t.minZ, t.seriesZ[e][i]));
      }
    }, {
      key: "_handleSingleDataPoint",
      value: function () {
        var t = this.w.globals,
          e = this.w.config;
        if (t.minX === t.maxX) {
          var i = new I(this.ctx);
          if ("datetime" === e.xaxis.type) {
            var a = i.getDate(t.minX);
            e.xaxis.labels.datetimeUTC ? a.setUTCDate(a.getUTCDate() - 2) : a.setDate(a.getDate() - 2), t.minX = new Date(a).getTime();
            var s = i.getDate(t.maxX);
            e.xaxis.labels.datetimeUTC ? s.setUTCDate(s.getUTCDate() + 2) : s.setDate(s.getDate() + 2), t.maxX = new Date(s).getTime();
          } else ("numeric" === e.xaxis.type || "category" === e.xaxis.type && !t.noLabelsProvided) && (t.minX = t.minX - 2, t.initialMinX = t.minX, t.maxX = t.maxX + 2, t.initialMaxX = t.maxX);
        }
      }
    }, {
      key: "_getMinXDiff",
      value: function () {
        var t = this.w.globals;
        t.isXNumeric && t.seriesX.forEach(function (e, i) {
          1 === e.length && e.push(t.seriesX[t.maxValsInArrayIndex][t.seriesX[t.maxValsInArrayIndex].length - 1]);
          var a = e.slice();
          a.sort(function (t, e) {
            return t - e;
          }), a.forEach(function (e, i) {
            if (i > 0) {
              var s = e - a[i - 1];
              s > 0 && (t.minXDiff = Math.min(s, t.minXDiff));
            }
          }), 1 !== t.dataPoints && t.minXDiff !== Number.MAX_VALUE || (t.minXDiff = .5);
        });
      }
    }, {
      key: "_setStackedMinMax",
      value: function () {
        var t = this,
          e = this.w.globals;
        if (e.series.length) {
          var i = e.seriesGroups;
          i.length || (i = [this.w.config.series.map(function (t) {
            return t.name;
          })]);
          var a = {},
            s = {};
          i.forEach(function (i) {
            a[i] = [], s[i] = [], t.w.config.series.map(function (t, e) {
              return i.indexOf(t.name) > -1 ? e : null;
            }).filter(function (t) {
              return null !== t;
            }).forEach(function (t) {
              for (var r = 0; r < e.series[e.maxValsInArrayIndex].length; r++) void 0 === a[i][r] && (a[i][r] = 0, s[i][r] = 0), null !== e.series[t][r] && x.isNumber(e.series[t][r]) && (e.series[t][r] > 0 ? a[i][r] += parseFloat(e.series[t][r]) + 1e-4 : s[i][r] += parseFloat(e.series[t][r]));
            });
          }), Object.entries(a).forEach(function (t) {
            var i = g(t, 1)[0];
            a[i].forEach(function (t, r) {
              e.maxY = Math.max(e.maxY, a[i][r]), e.minY = Math.min(e.minY, s[i][r]);
            });
          });
        }
      }
    }]), t;
  }(),
  q = function () {
    function t(e, i) {
      a(this, t), this.ctx = e, this.elgrid = i, this.w = e.w;
      var s = this.w;
      this.xaxisFontSize = s.config.xaxis.labels.style.fontSize, this.axisFontFamily = s.config.xaxis.labels.style.fontFamily, this.xaxisForeColors = s.config.xaxis.labels.style.colors, this.isCategoryBarHorizontal = "bar" === s.config.chart.type && s.config.plotOptions.bar.horizontal, this.xAxisoffX = 0, "bottom" === s.config.xaxis.position && (this.xAxisoffX = s.globals.gridHeight), this.drawnLabels = [], this.axesUtils = new B(e);
    }
    return r(t, [{
      key: "drawYaxis",
      value: function (t) {
        var e = this,
          i = this.w,
          a = new m(this.ctx),
          s = i.config.yaxis[t].labels.style,
          r = s.fontSize,
          o = s.fontFamily,
          n = s.fontWeight,
          l = a.group({
            class: "apexcharts-yaxis",
            rel: t,
            transform: "translate(" + i.globals.translateYAxisX[t] + ", 0)"
          });
        if (this.axesUtils.isYAxisHidden(t)) return l;
        var h = a.group({
          class: "apexcharts-yaxis-texts-g"
        });
        l.add(h);
        var c = i.globals.yAxisScale[t].result.length - 1,
          d = i.globals.gridHeight / c,
          g = i.globals.translateY,
          u = i.globals.yLabelFormatters[t],
          p = i.globals.yAxisScale[t].result.slice();
        p = this.axesUtils.checkForReversedLabels(t, p);
        var f = "";
        if (i.config.yaxis[t].labels.show) for (var x = function (l) {
            var x = p[l];
            x = u(x, l, i);
            var b = i.config.yaxis[t].labels.padding;
            i.config.yaxis[t].opposite && 0 !== i.config.yaxis.length && (b *= -1);
            var v = "end";
            i.config.yaxis[t].opposite && (v = "start"), "left" === i.config.yaxis[t].labels.align ? v = "start" : "center" === i.config.yaxis[t].labels.align ? v = "middle" : "right" === i.config.yaxis[t].labels.align && (v = "end");
            var m = e.axesUtils.getYAxisForeColor(s.colors, t),
              y = a.drawText({
                x: b,
                y: g + c / 10 + i.config.yaxis[t].labels.offsetY + 1,
                text: x,
                textAnchor: v,
                fontSize: r,
                fontFamily: o,
                fontWeight: n,
                maxWidth: i.config.yaxis[t].labels.maxWidth,
                foreColor: Array.isArray(m) ? m[l] : m,
                isPlainText: !1,
                cssClass: "apexcharts-yaxis-label " + s.cssClass
              });
            l === c && (f = y), h.add(y);
            var w = document.createElementNS(i.globals.SVGNS, "title");
            if (w.textContent = Array.isArray(x) ? x.join(" ") : x, y.node.appendChild(w), 0 !== i.config.yaxis[t].labels.rotate) {
              var k = a.rotateAroundCenter(f.node),
                A = a.rotateAroundCenter(y.node);
              y.node.setAttribute("transform", "rotate(".concat(i.config.yaxis[t].labels.rotate, " ").concat(k.x, " ").concat(A.y, ")"));
            }
            g += d;
          }, b = c; b >= 0; b--) x(b);
        if (void 0 !== i.config.yaxis[t].title.text) {
          var v = a.group({
              class: "apexcharts-yaxis-title"
            }),
            y = 0;
          i.config.yaxis[t].opposite && (y = i.globals.translateYAxisX[t]);
          var w = a.drawText({
            x: y,
            y: i.globals.gridHeight / 2 + i.globals.translateY + i.config.yaxis[t].title.offsetY,
            text: i.config.yaxis[t].title.text,
            textAnchor: "end",
            foreColor: i.config.yaxis[t].title.style.color,
            fontSize: i.config.yaxis[t].title.style.fontSize,
            fontWeight: i.config.yaxis[t].title.style.fontWeight,
            fontFamily: i.config.yaxis[t].title.style.fontFamily,
            cssClass: "apexcharts-yaxis-title-text " + i.config.yaxis[t].title.style.cssClass
          });
          v.add(w), l.add(v);
        }
        var k = i.config.yaxis[t].axisBorder,
          A = 31 + k.offsetX;
        if (i.config.yaxis[t].opposite && (A = -31 - k.offsetX), k.show) {
          var S = a.drawLine(A, i.globals.translateY + k.offsetY - 2, A, i.globals.gridHeight + i.globals.translateY + k.offsetY + 2, k.color, 0, k.width);
          l.add(S);
        }
        return i.config.yaxis[t].axisTicks.show && this.axesUtils.drawYAxisTicks(A, c, k, i.config.yaxis[t].axisTicks, t, d, l), l;
      }
    }, {
      key: "drawYaxisInversed",
      value: function (t) {
        var e = this.w,
          i = new m(this.ctx),
          a = i.group({
            class: "apexcharts-xaxis apexcharts-yaxis-inversed"
          }),
          s = i.group({
            class: "apexcharts-xaxis-texts-g",
            transform: "translate(".concat(e.globals.translateXAxisX, ", ").concat(e.globals.translateXAxisY, ")")
          });
        a.add(s);
        var r = e.globals.yAxisScale[t].result.length - 1,
          o = e.globals.gridWidth / r + .1,
          n = o + e.config.xaxis.labels.offsetX,
          l = e.globals.xLabelFormatter,
          h = e.globals.yAxisScale[t].result.slice(),
          c = e.globals.timescaleLabels;
        c.length > 0 && (this.xaxisLabels = c.slice(), r = (h = c.slice()).length), h = this.axesUtils.checkForReversedLabels(t, h);
        var d = c.length;
        if (e.config.xaxis.labels.show) for (var g = d ? 0 : r; d ? g < d : g >= 0; d ? g++ : g--) {
          var u = h[g];
          u = l(u, g, e);
          var p = e.globals.gridWidth + e.globals.padHorizontal - (n - o + e.config.xaxis.labels.offsetX);
          if (c.length) {
            var f = this.axesUtils.getLabel(h, c, p, g, this.drawnLabels, this.xaxisFontSize);
            p = f.x, u = f.text, this.drawnLabels.push(f.text), 0 === g && e.globals.skipFirstTimelinelabel && (u = ""), g === h.length - 1 && e.globals.skipLastTimelinelabel && (u = "");
          }
          var x = i.drawText({
            x: p,
            y: this.xAxisoffX + e.config.xaxis.labels.offsetY + 30 - ("top" === e.config.xaxis.position ? e.globals.xAxisHeight + e.config.xaxis.axisTicks.height - 2 : 0),
            text: u,
            textAnchor: "middle",
            foreColor: Array.isArray(this.xaxisForeColors) ? this.xaxisForeColors[t] : this.xaxisForeColors,
            fontSize: this.xaxisFontSize,
            fontFamily: this.xaxisFontFamily,
            fontWeight: e.config.xaxis.labels.style.fontWeight,
            isPlainText: !1,
            cssClass: "apexcharts-xaxis-label " + e.config.xaxis.labels.style.cssClass
          });
          s.add(x), x.tspan(u);
          var b = document.createElementNS(e.globals.SVGNS, "title");
          b.textContent = u, x.node.appendChild(b), n += o;
        }
        return this.inversedYAxisTitleText(a), this.inversedYAxisBorder(a), a;
      }
    }, {
      key: "inversedYAxisBorder",
      value: function (t) {
        var e = this.w,
          i = new m(this.ctx),
          a = e.config.xaxis.axisBorder;
        if (a.show) {
          var s = 0;
          "bar" === e.config.chart.type && e.globals.isXNumeric && (s -= 15);
          var r = i.drawLine(e.globals.padHorizontal + s + a.offsetX, this.xAxisoffX, e.globals.gridWidth, this.xAxisoffX, a.color, 0, a.height);
          this.elgrid && this.elgrid.elGridBorders && e.config.grid.show ? this.elgrid.elGridBorders.add(r) : t.add(r);
        }
      }
    }, {
      key: "inversedYAxisTitleText",
      value: function (t) {
        var e = this.w,
          i = new m(this.ctx);
        if (void 0 !== e.config.xaxis.title.text) {
          var a = i.group({
              class: "apexcharts-xaxis-title apexcharts-yaxis-title-inversed"
            }),
            s = i.drawText({
              x: e.globals.gridWidth / 2 + e.config.xaxis.title.offsetX,
              y: this.xAxisoffX + parseFloat(this.xaxisFontSize) + parseFloat(e.config.xaxis.title.style.fontSize) + e.config.xaxis.title.offsetY + 20,
              text: e.config.xaxis.title.text,
              textAnchor: "middle",
              fontSize: e.config.xaxis.title.style.fontSize,
              fontFamily: e.config.xaxis.title.style.fontFamily,
              fontWeight: e.config.xaxis.title.style.fontWeight,
              foreColor: e.config.xaxis.title.style.color,
              cssClass: "apexcharts-xaxis-title-text " + e.config.xaxis.title.style.cssClass
            });
          a.add(s), t.add(a);
        }
      }
    }, {
      key: "yAxisTitleRotate",
      value: function (t, e) {
        var i = this.w,
          a = new m(this.ctx),
          s = {
            width: 0,
            height: 0
          },
          r = {
            width: 0,
            height: 0
          },
          o = i.globals.dom.baseEl.querySelector(" .apexcharts-yaxis[rel='".concat(t, "'] .apexcharts-yaxis-texts-g"));
        null !== o && (s = o.getBoundingClientRect());
        var n = i.globals.dom.baseEl.querySelector(".apexcharts-yaxis[rel='".concat(t, "'] .apexcharts-yaxis-title text"));
        if (null !== n && (r = n.getBoundingClientRect()), null !== n) {
          var l = this.xPaddingForYAxisTitle(t, s, r, e);
          n.setAttribute("x", l.xPos - (e ? 10 : 0));
        }
        if (null !== n) {
          var h = a.rotateAroundCenter(n);
          n.setAttribute("transform", "rotate(".concat(e ? -1 * i.config.yaxis[t].title.rotate : i.config.yaxis[t].title.rotate, " ").concat(h.x, " ").concat(h.y, ")"));
        }
      }
    }, {
      key: "xPaddingForYAxisTitle",
      value: function (t, e, i, a) {
        var s = this.w,
          r = 0,
          o = 0,
          n = 10;
        return void 0 === s.config.yaxis[t].title.text || t < 0 ? {
          xPos: o,
          padd: 0
        } : (a ? (o = e.width + s.config.yaxis[t].title.offsetX + i.width / 2 + n / 2, 0 === (r += 1) && (o -= n / 2)) : (o = -1 * e.width + s.config.yaxis[t].title.offsetX + n / 2 + i.width / 2, s.globals.isBarHorizontal && (n = 25, o = -1 * e.width - s.config.yaxis[t].title.offsetX - n)), {
          xPos: o,
          padd: n
        });
      }
    }, {
      key: "setYAxisXPosition",
      value: function (t, e) {
        var i = this.w,
          a = 0,
          s = 0,
          r = 18,
          o = 1;
        i.config.yaxis.length > 1 && (this.multipleYs = !0), i.config.yaxis.map(function (n, l) {
          var h = i.globals.ignoreYAxisIndexes.indexOf(l) > -1 || !n.show || n.floating || 0 === t[l].width,
            c = t[l].width + e[l].width;
          n.opposite ? i.globals.isBarHorizontal ? (s = i.globals.gridWidth + i.globals.translateX - 1, i.globals.translateYAxisX[l] = s - n.labels.offsetX) : (s = i.globals.gridWidth + i.globals.translateX + o, h || (o = o + c + 20), i.globals.translateYAxisX[l] = s - n.labels.offsetX + 20) : (a = i.globals.translateX - r, h || (r = r + c + 20), i.globals.translateYAxisX[l] = a + n.labels.offsetX);
        });
      }
    }, {
      key: "setYAxisTextAlignments",
      value: function () {
        var t = this.w,
          e = t.globals.dom.baseEl.getElementsByClassName("apexcharts-yaxis");
        (e = x.listToArray(e)).forEach(function (e, i) {
          var a = t.config.yaxis[i];
          if (a && !a.floating && void 0 !== a.labels.align) {
            var s = t.globals.dom.baseEl.querySelector(".apexcharts-yaxis[rel='".concat(i, "'] .apexcharts-yaxis-texts-g")),
              r = t.globals.dom.baseEl.querySelectorAll(".apexcharts-yaxis[rel='".concat(i, "'] .apexcharts-yaxis-label"));
            r = x.listToArray(r);
            var o = s.getBoundingClientRect();
            "left" === a.labels.align ? (r.forEach(function (t, e) {
              t.setAttribute("text-anchor", "start");
            }), a.opposite || s.setAttribute("transform", "translate(-".concat(o.width, ", 0)"))) : "center" === a.labels.align ? (r.forEach(function (t, e) {
              t.setAttribute("text-anchor", "middle");
            }), s.setAttribute("transform", "translate(".concat(o.width / 2 * (a.opposite ? 1 : -1), ", 0)"))) : "right" === a.labels.align && (r.forEach(function (t, e) {
              t.setAttribute("text-anchor", "end");
            }), a.opposite && s.setAttribute("transform", "translate(".concat(o.width, ", 0)")));
          }
        });
      }
    }]), t;
  }(),
  Z = function () {
    function t(e) {
      a(this, t), this.ctx = e, this.w = e.w, this.documentEvent = x.bind(this.documentEvent, this);
    }
    return r(t, [{
      key: "addEventListener",
      value: function (t, e) {
        var i = this.w;
        i.globals.events.hasOwnProperty(t) ? i.globals.events[t].push(e) : i.globals.events[t] = [e];
      }
    }, {
      key: "removeEventListener",
      value: function (t, e) {
        var i = this.w;
        if (i.globals.events.hasOwnProperty(t)) {
          var a = i.globals.events[t].indexOf(e);
          -1 !== a && i.globals.events[t].splice(a, 1);
        }
      }
    }, {
      key: "fireEvent",
      value: function (t, e) {
        var i = this.w;
        if (i.globals.events.hasOwnProperty(t)) {
          e && e.length || (e = []);
          for (var a = i.globals.events[t], s = a.length, r = 0; r < s; r++) a[r].apply(null, e);
        }
      }
    }, {
      key: "setupEventHandlers",
      value: function () {
        var t = this,
          e = this.w,
          i = this.ctx,
          a = e.globals.dom.baseEl.querySelector(e.globals.chartClass);
        this.ctx.eventList.forEach(function (t) {
          a.addEventListener(t, function (t) {
            var a = Object.assign({}, e, {
              seriesIndex: e.globals.capturedSeriesIndex,
              dataPointIndex: e.globals.capturedDataPointIndex
            });
            "mousemove" === t.type || "touchmove" === t.type ? "function" == typeof e.config.chart.events.mouseMove && e.config.chart.events.mouseMove(t, i, a) : "mouseleave" === t.type || "touchleave" === t.type ? "function" == typeof e.config.chart.events.mouseLeave && e.config.chart.events.mouseLeave(t, i, a) : ("mouseup" === t.type && 1 === t.which || "touchend" === t.type) && ("function" == typeof e.config.chart.events.click && e.config.chart.events.click(t, i, a), i.ctx.events.fireEvent("click", [t, i, a]));
          }, {
            capture: !1,
            passive: !0
          });
        }), this.ctx.eventList.forEach(function (i) {
          e.globals.dom.baseEl.addEventListener(i, t.documentEvent, {
            passive: !0
          });
        }), this.ctx.core.setupBrushHandler();
      }
    }, {
      key: "documentEvent",
      value: function (t) {
        var e = this.w,
          i = t.target.className;
        if ("click" === t.type) {
          var a = e.globals.dom.baseEl.querySelector(".apexcharts-menu");
          a && a.classList.contains("apexcharts-menu-open") && "apexcharts-menu-icon" !== i && a.classList.remove("apexcharts-menu-open");
        }
        e.globals.clientX = "touchmove" === t.type ? t.touches[0].clientX : t.clientX, e.globals.clientY = "touchmove" === t.type ? t.touches[0].clientY : t.clientY;
      }
    }]), t;
  }(),
  $ = function () {
    function t(e) {
      a(this, t), this.ctx = e, this.w = e.w;
    }
    return r(t, [{
      key: "setCurrentLocaleValues",
      value: function (t) {
        var e = this.w.config.chart.locales;
        window.Apex.chart && window.Apex.chart.locales && window.Apex.chart.locales.length > 0 && (e = this.w.config.chart.locales.concat(window.Apex.chart.locales));
        var i = e.filter(function (e) {
          return e.name === t;
        })[0];
        if (!i) throw new Error("Wrong locale name provided. Please make sure you set the correct locale name in options");
        var a = x.extend(C, i);
        this.w.globals.locale = a.options;
      }
    }]), t;
  }(),
  J = function () {
    function t(e) {
      a(this, t), this.ctx = e, this.w = e.w;
    }
    return r(t, [{
      key: "drawAxis",
      value: function (t, e) {
        var i,
          a,
          s = this,
          r = this.w.globals,
          o = this.w.config,
          n = new V(this.ctx, e),
          l = new q(this.ctx, e);
        r.axisCharts && "radar" !== t && (r.isBarHorizontal ? (a = l.drawYaxisInversed(0), i = n.drawXaxisInversed(0), r.dom.elGraphical.add(i), r.dom.elGraphical.add(a)) : (i = n.drawXaxis(), r.dom.elGraphical.add(i), o.yaxis.map(function (t, e) {
          if (-1 === r.ignoreYAxisIndexes.indexOf(e) && (a = l.drawYaxis(e), r.dom.Paper.add(a), "back" === s.w.config.grid.position)) {
            var i = r.dom.Paper.children()[1];
            i.remove(), r.dom.Paper.add(i);
          }
        })));
      }
    }]), t;
  }(),
  Q = function () {
    function t(e) {
      a(this, t), this.ctx = e, this.w = e.w;
    }
    return r(t, [{
      key: "drawXCrosshairs",
      value: function () {
        var t = this.w,
          e = new m(this.ctx),
          i = new v(this.ctx),
          a = t.config.xaxis.crosshairs.fill.gradient,
          s = t.config.xaxis.crosshairs.dropShadow,
          r = t.config.xaxis.crosshairs.fill.type,
          o = a.colorFrom,
          n = a.colorTo,
          l = a.opacityFrom,
          h = a.opacityTo,
          c = a.stops,
          d = s.enabled,
          g = s.left,
          u = s.top,
          p = s.blur,
          f = s.color,
          b = s.opacity,
          y = t.config.xaxis.crosshairs.fill.color;
        if (t.config.xaxis.crosshairs.show) {
          "gradient" === r && (y = e.drawGradient("vertical", o, n, l, h, null, c, null));
          var w = e.drawRect();
          1 === t.config.xaxis.crosshairs.width && (w = e.drawLine());
          var k = t.globals.gridHeight;
          (!x.isNumber(k) || k < 0) && (k = 0);
          var A = t.config.xaxis.crosshairs.width;
          (!x.isNumber(A) || A < 0) && (A = 0), w.attr({
            class: "apexcharts-xcrosshairs",
            x: 0,
            y: 0,
            y2: k,
            width: A,
            height: k,
            fill: y,
            filter: "none",
            "fill-opacity": t.config.xaxis.crosshairs.opacity,
            stroke: t.config.xaxis.crosshairs.stroke.color,
            "stroke-width": t.config.xaxis.crosshairs.stroke.width,
            "stroke-dasharray": t.config.xaxis.crosshairs.stroke.dashArray
          }), d && (w = i.dropShadow(w, {
            left: g,
            top: u,
            blur: p,
            color: f,
            opacity: b
          })), t.globals.dom.elGraphical.add(w);
        }
      }
    }, {
      key: "drawYCrosshairs",
      value: function () {
        var t = this.w,
          e = new m(this.ctx),
          i = t.config.yaxis[0].crosshairs,
          a = t.globals.barPadForNumericAxis;
        if (t.config.yaxis[0].crosshairs.show) {
          var s = e.drawLine(-a, 0, t.globals.gridWidth + a, 0, i.stroke.color, i.stroke.dashArray, i.stroke.width);
          s.attr({
            class: "apexcharts-ycrosshairs"
          }), t.globals.dom.elGraphical.add(s);
        }
        var r = e.drawLine(-a, 0, t.globals.gridWidth + a, 0, i.stroke.color, 0, 0);
        r.attr({
          class: "apexcharts-ycrosshairs-hidden"
        }), t.globals.dom.elGraphical.add(r);
      }
    }]), t;
  }(),
  K = function () {
    function t(e) {
      a(this, t), this.ctx = e, this.w = e.w;
    }
    return r(t, [{
      key: "checkResponsiveConfig",
      value: function (t) {
        var e = this,
          i = this.w,
          a = i.config;
        if (0 !== a.responsive.length) {
          var s = a.responsive.slice();
          s.sort(function (t, e) {
            return t.breakpoint > e.breakpoint ? 1 : e.breakpoint > t.breakpoint ? -1 : 0;
          }).reverse();
          var r = new E({}),
            o = function () {
              var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                a = s[0].breakpoint,
                o = window.innerWidth > 0 ? window.innerWidth : screen.width;
              if (o > a) {
                var n = y.extendArrayProps(r, i.globals.initialConfig, i);
                t = x.extend(n, t), t = x.extend(i.config, t), e.overrideResponsiveOptions(t);
              } else for (var l = 0; l < s.length; l++) o < s[l].breakpoint && (t = y.extendArrayProps(r, s[l].options, i), t = x.extend(i.config, t), e.overrideResponsiveOptions(t));
            };
          if (t) {
            var n = y.extendArrayProps(r, t, i);
            n = x.extend(i.config, n), o(n = x.extend(n, t));
          } else o({});
        }
      }
    }, {
      key: "overrideResponsiveOptions",
      value: function (t) {
        var e = new E(t).init({
          responsiveOverride: !0
        });
        this.w.config = e;
      }
    }]), t;
  }(),
  tt = function () {
    function t(e) {
      a(this, t), this.ctx = e, this.colors = [], this.w = e.w;
      var i = this.w;
      this.isColorFn = !1, this.isHeatmapDistributed = "treemap" === i.config.chart.type && i.config.plotOptions.treemap.distributed || "heatmap" === i.config.chart.type && i.config.plotOptions.heatmap.distributed, this.isBarDistributed = i.config.plotOptions.bar.distributed && ("bar" === i.config.chart.type || "rangeBar" === i.config.chart.type);
    }
    return r(t, [{
      key: "init",
      value: function () {
        this.setDefaultColors();
      }
    }, {
      key: "setDefaultColors",
      value: function () {
        var t,
          e = this,
          i = this.w,
          a = new x();
        if (i.globals.dom.elWrap.classList.add("apexcharts-theme-".concat(i.config.theme.mode)), void 0 === i.config.colors || 0 === (null === (t = i.config.colors) || void 0 === t ? void 0 : t.length) ? i.globals.colors = this.predefined() : (i.globals.colors = i.config.colors, Array.isArray(i.config.colors) && i.config.colors.length > 0 && "function" == typeof i.config.colors[0] && (i.globals.colors = i.config.series.map(function (t, a) {
          var s = i.config.colors[a];
          return s || (s = i.config.colors[0]), "function" == typeof s ? (e.isColorFn = !0, s({
            value: i.globals.axisCharts ? i.globals.series[a][0] ? i.globals.series[a][0] : 0 : i.globals.series[a],
            seriesIndex: a,
            dataPointIndex: a,
            w: i
          })) : s;
        }))), i.globals.seriesColors.map(function (t, e) {
          t && (i.globals.colors[e] = t);
        }), i.config.theme.monochrome.enabled) {
          var s = [],
            r = i.globals.series.length;
          (this.isBarDistributed || this.isHeatmapDistributed) && (r = i.globals.series[0].length * i.globals.series.length);
          for (var o = i.config.theme.monochrome.color, n = 1 / (r / i.config.theme.monochrome.shadeIntensity), l = i.config.theme.monochrome.shadeTo, h = 0, c = 0; c < r; c++) {
            var d = void 0;
            "dark" === l ? (d = a.shadeColor(-1 * h, o), h += n) : (d = a.shadeColor(h, o), h += n), s.push(d);
          }
          i.globals.colors = s.slice();
        }
        var g = i.globals.colors.slice();
        this.pushExtraColors(i.globals.colors);
        ["fill", "stroke"].forEach(function (t) {
          void 0 === i.config[t].colors ? i.globals[t].colors = e.isColorFn ? i.config.colors : g : i.globals[t].colors = i.config[t].colors.slice(), e.pushExtraColors(i.globals[t].colors);
        }), void 0 === i.config.dataLabels.style.colors ? i.globals.dataLabels.style.colors = g : i.globals.dataLabels.style.colors = i.config.dataLabels.style.colors.slice(), this.pushExtraColors(i.globals.dataLabels.style.colors, 50), void 0 === i.config.plotOptions.radar.polygons.fill.colors ? i.globals.radarPolygons.fill.colors = ["dark" === i.config.theme.mode ? "#424242" : "none"] : i.globals.radarPolygons.fill.colors = i.config.plotOptions.radar.polygons.fill.colors.slice(), this.pushExtraColors(i.globals.radarPolygons.fill.colors, 20), void 0 === i.config.markers.colors ? i.globals.markers.colors = g : i.globals.markers.colors = i.config.markers.colors.slice(), this.pushExtraColors(i.globals.markers.colors);
      }
    }, {
      key: "pushExtraColors",
      value: function (t, e) {
        var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null,
          a = this.w,
          s = e || a.globals.series.length;
        if (null === i && (i = this.isBarDistributed || this.isHeatmapDistributed || "heatmap" === a.config.chart.type && a.config.plotOptions.heatmap.colorScale.inverse), i && a.globals.series.length && (s = a.globals.series[a.globals.maxValsInArrayIndex].length * a.globals.series.length), t.length < s) for (var r = s - t.length, o = 0; o < r; o++) t.push(t[o]);
      }
    }, {
      key: "updateThemeOptions",
      value: function (t) {
        t.chart = t.chart || {}, t.tooltip = t.tooltip || {};
        var e = t.theme.mode || "light",
          i = t.theme.palette ? t.theme.palette : "dark" === e ? "palette4" : "palette1",
          a = t.chart.foreColor ? t.chart.foreColor : "dark" === e ? "#f6f7f8" : "#373d3f";
        return t.tooltip.theme = e, t.chart.foreColor = a, t.theme.palette = i, t;
      }
    }, {
      key: "predefined",
      value: function () {
        switch (this.w.config.theme.palette) {
          case "palette1":
          default:
            this.colors = ["#008FFB", "#00E396", "#FEB019", "#FF4560", "#775DD0"];
            break;
          case "palette2":
            this.colors = ["#3f51b5", "#03a9f4", "#4caf50", "#f9ce1d", "#FF9800"];
            break;
          case "palette3":
            this.colors = ["#33b2df", "#546E7A", "#d4526e", "#13d8aa", "#A5978B"];
            break;
          case "palette4":
            this.colors = ["#4ecdc4", "#c7f464", "#81D4FA", "#fd6a6a", "#546E7A"];
            break;
          case "palette5":
            this.colors = ["#2b908f", "#f9a3a4", "#90ee7e", "#fa4443", "#69d2e7"];
            break;
          case "palette6":
            this.colors = ["#449DD1", "#F86624", "#EA3546", "#662E9B", "#C5D86D"];
            break;
          case "palette7":
            this.colors = ["#D7263D", "#1B998B", "#2E294E", "#F46036", "#E2C044"];
            break;
          case "palette8":
            this.colors = ["#662E9B", "#F86624", "#F9C80E", "#EA3546", "#43BCCD"];
            break;
          case "palette9":
            this.colors = ["#5C4742", "#A5978B", "#8D5B4C", "#5A2A27", "#C4BBAF"];
            break;
          case "palette10":
            this.colors = ["#A300D6", "#7D02EB", "#5653FE", "#2983FF", "#00B1F2"];
        }
        return this.colors;
      }
    }]), t;
  }(),
  et = function () {
    function t(e) {
      a(this, t), this.ctx = e, this.w = e.w;
    }
    return r(t, [{
      key: "draw",
      value: function () {
        this.drawTitleSubtitle("title"), this.drawTitleSubtitle("subtitle");
      }
    }, {
      key: "drawTitleSubtitle",
      value: function (t) {
        var e = this.w,
          i = "title" === t ? e.config.title : e.config.subtitle,
          a = e.globals.svgWidth / 2,
          s = i.offsetY,
          r = "middle";
        if ("left" === i.align ? (a = 10, r = "start") : "right" === i.align && (a = e.globals.svgWidth - 10, r = "end"), a += i.offsetX, s = s + parseInt(i.style.fontSize, 10) + i.margin / 2, void 0 !== i.text) {
          var o = new m(this.ctx).drawText({
            x: a,
            y: s,
            text: i.text,
            textAnchor: r,
            fontSize: i.style.fontSize,
            fontFamily: i.style.fontFamily,
            fontWeight: i.style.fontWeight,
            foreColor: i.style.color,
            opacity: 1
          });
          o.node.setAttribute("class", "apexcharts-".concat(t, "-text")), e.globals.dom.Paper.add(o);
        }
      }
    }]), t;
  }(),
  it = function () {
    function t(e) {
      a(this, t), this.w = e.w, this.dCtx = e;
    }
    return r(t, [{
      key: "getTitleSubtitleCoords",
      value: function (t) {
        var e = this.w,
          i = 0,
          a = 0,
          s = "title" === t ? e.config.title.floating : e.config.subtitle.floating,
          r = e.globals.dom.baseEl.querySelector(".apexcharts-".concat(t, "-text"));
        if (null !== r && !s) {
          var o = r.getBoundingClientRect();
          i = o.width, a = e.globals.axisCharts ? o.height + 5 : o.height;
        }
        return {
          width: i,
          height: a
        };
      }
    }, {
      key: "getLegendsRect",
      value: function () {
        var t = this.w,
          e = t.globals.dom.elLegendWrap;
        t.config.legend.height || "top" !== t.config.legend.position && "bottom" !== t.config.legend.position || (e.style.maxHeight = t.globals.svgHeight / 2 + "px");
        var i = Object.assign({}, x.getBoundingClientRect(e));
        return null !== e && !t.config.legend.floating && t.config.legend.show ? this.dCtx.lgRect = {
          x: i.x,
          y: i.y,
          height: i.height,
          width: 0 === i.height ? 0 : i.width
        } : this.dCtx.lgRect = {
          x: 0,
          y: 0,
          height: 0,
          width: 0
        }, "left" !== t.config.legend.position && "right" !== t.config.legend.position || 1.5 * this.dCtx.lgRect.width > t.globals.svgWidth && (this.dCtx.lgRect.width = t.globals.svgWidth / 1.5), this.dCtx.lgRect;
      }
    }, {
      key: "getLargestStringFromMultiArr",
      value: function (t, e) {
        var i = t;
        if (this.w.globals.isMultiLineX) {
          var a = e.map(function (t, e) {
              return Array.isArray(t) ? t.length : 1;
            }),
            s = Math.max.apply(Math, u(a));
          i = e[a.indexOf(s)];
        }
        return i;
      }
    }]), t;
  }(),
  at = function () {
    function t(e) {
      a(this, t), this.w = e.w, this.dCtx = e;
    }
    return r(t, [{
      key: "getxAxisLabelsCoords",
      value: function () {
        var t,
          e = this.w,
          i = e.globals.labels.slice();
        if (e.config.xaxis.convertedCatToNumeric && 0 === i.length && (i = e.globals.categoryLabels), e.globals.timescaleLabels.length > 0) {
          var a = this.getxAxisTimeScaleLabelsCoords();
          t = {
            width: a.width,
            height: a.height
          }, e.globals.rotateXLabels = !1;
        } else {
          this.dCtx.lgWidthForSideLegends = "left" !== e.config.legend.position && "right" !== e.config.legend.position || e.config.legend.floating ? 0 : this.dCtx.lgRect.width;
          var s = e.globals.xLabelFormatter,
            r = x.getLargestStringFromArr(i),
            o = this.dCtx.dimHelpers.getLargestStringFromMultiArr(r, i);
          e.globals.isBarHorizontal && (o = r = e.globals.yAxisScale[0].result.reduce(function (t, e) {
            return t.length > e.length ? t : e;
          }, 0));
          var n = new T(this.dCtx.ctx),
            l = r;
          r = n.xLabelFormat(s, r, l, {
            i: void 0,
            dateFormatter: new I(this.dCtx.ctx).formatDate,
            w: e
          }), o = n.xLabelFormat(s, o, l, {
            i: void 0,
            dateFormatter: new I(this.dCtx.ctx).formatDate,
            w: e
          }), (e.config.xaxis.convertedCatToNumeric && void 0 === r || "" === String(r).trim()) && (o = r = "1");
          var h = new m(this.dCtx.ctx),
            c = h.getTextRects(r, e.config.xaxis.labels.style.fontSize),
            d = c;
          if (r !== o && (d = h.getTextRects(o, e.config.xaxis.labels.style.fontSize)), (t = {
            width: c.width >= d.width ? c.width : d.width,
            height: c.height >= d.height ? c.height : d.height
          }).width * i.length > e.globals.svgWidth - this.dCtx.lgWidthForSideLegends - this.dCtx.yAxisWidth - this.dCtx.gridPad.left - this.dCtx.gridPad.right && 0 !== e.config.xaxis.labels.rotate || e.config.xaxis.labels.rotateAlways) {
            if (!e.globals.isBarHorizontal) {
              e.globals.rotateXLabels = !0;
              var g = function (t) {
                return h.getTextRects(t, e.config.xaxis.labels.style.fontSize, e.config.xaxis.labels.style.fontFamily, "rotate(".concat(e.config.xaxis.labels.rotate, " 0 0)"), !1);
              };
              c = g(r), r !== o && (d = g(o)), t.height = (c.height > d.height ? c.height : d.height) / 1.5, t.width = c.width > d.width ? c.width : d.width;
            }
          } else e.globals.rotateXLabels = !1;
        }
        return e.config.xaxis.labels.show || (t = {
          width: 0,
          height: 0
        }), {
          width: t.width,
          height: t.height
        };
      }
    }, {
      key: "getxAxisGroupLabelsCoords",
      value: function () {
        var t,
          e = this.w;
        if (!e.globals.hasXaxisGroups) return {
          width: 0,
          height: 0
        };
        var i,
          a = (null === (t = e.config.xaxis.group.style) || void 0 === t ? void 0 : t.fontSize) || e.config.xaxis.labels.style.fontSize,
          s = e.globals.groups.map(function (t) {
            return t.title;
          }),
          r = x.getLargestStringFromArr(s),
          o = this.dCtx.dimHelpers.getLargestStringFromMultiArr(r, s),
          n = new m(this.dCtx.ctx),
          l = n.getTextRects(r, a),
          h = l;
        return r !== o && (h = n.getTextRects(o, a)), i = {
          width: l.width >= h.width ? l.width : h.width,
          height: l.height >= h.height ? l.height : h.height
        }, e.config.xaxis.labels.show || (i = {
          width: 0,
          height: 0
        }), {
          width: i.width,
          height: i.height
        };
      }
    }, {
      key: "getxAxisTitleCoords",
      value: function () {
        var t = this.w,
          e = 0,
          i = 0;
        if (void 0 !== t.config.xaxis.title.text) {
          var a = new m(this.dCtx.ctx).getTextRects(t.config.xaxis.title.text, t.config.xaxis.title.style.fontSize);
          e = a.width, i = a.height;
        }
        return {
          width: e,
          height: i
        };
      }
    }, {
      key: "getxAxisTimeScaleLabelsCoords",
      value: function () {
        var t,
          e = this.w;
        this.dCtx.timescaleLabels = e.globals.timescaleLabels.slice();
        var i = this.dCtx.timescaleLabels.map(function (t) {
            return t.value;
          }),
          a = i.reduce(function (t, e) {
            return void 0 === t ? (console.error("You have possibly supplied invalid Date format. Please supply a valid JavaScript Date"), 0) : t.length > e.length ? t : e;
          }, 0);
        return 1.05 * (t = new m(this.dCtx.ctx).getTextRects(a, e.config.xaxis.labels.style.fontSize)).width * i.length > e.globals.gridWidth && 0 !== e.config.xaxis.labels.rotate && (e.globals.overlappingXLabels = !0), t;
      }
    }, {
      key: "additionalPaddingXLabels",
      value: function (t) {
        var e = this,
          i = this.w,
          a = i.globals,
          s = i.config,
          r = s.xaxis.type,
          o = t.width;
        a.skipLastTimelinelabel = !1, a.skipFirstTimelinelabel = !1;
        var n = i.config.yaxis[0].opposite && i.globals.isBarHorizontal,
          l = function (t, n) {
            s.yaxis.length > 1 && function (t) {
              return -1 !== a.collapsedSeriesIndices.indexOf(t);
            }(n) || function (t) {
              if (e.dCtx.timescaleLabels && e.dCtx.timescaleLabels.length) {
                var n = e.dCtx.timescaleLabels[0],
                  l = e.dCtx.timescaleLabels[e.dCtx.timescaleLabels.length - 1].position + o / 1.75 - e.dCtx.yAxisWidthRight,
                  h = n.position - o / 1.75 + e.dCtx.yAxisWidthLeft,
                  c = "right" === i.config.legend.position && e.dCtx.lgRect.width > 0 ? e.dCtx.lgRect.width : 0;
                l > a.svgWidth - a.translateX - c && (a.skipLastTimelinelabel = !0), h < -(t.show && !t.floating || "bar" !== s.chart.type && "candlestick" !== s.chart.type && "rangeBar" !== s.chart.type && "boxPlot" !== s.chart.type ? 10 : o / 1.75) && (a.skipFirstTimelinelabel = !0);
              } else "datetime" === r ? e.dCtx.gridPad.right < o && !a.rotateXLabels && (a.skipLastTimelinelabel = !0) : "datetime" !== r && e.dCtx.gridPad.right < o / 2 - e.dCtx.yAxisWidthRight && !a.rotateXLabels && !i.config.xaxis.labels.trim && ("between" !== i.config.xaxis.tickPlacement || i.globals.isBarHorizontal) && (e.dCtx.xPadRight = o / 2 + 1);
            }(t);
          };
        s.yaxis.forEach(function (t, i) {
          n ? (e.dCtx.gridPad.left < o && (e.dCtx.xPadLeft = o / 2 + 1), e.dCtx.xPadRight = o / 2 + 1) : l(t, i);
        });
      }
    }]), t;
  }(),
  st = function () {
    function t(e) {
      a(this, t), this.w = e.w, this.dCtx = e;
    }
    return r(t, [{
      key: "getyAxisLabelsCoords",
      value: function () {
        var t = this,
          e = this.w,
          i = [],
          a = 10,
          s = new B(this.dCtx.ctx);
        return e.config.yaxis.map(function (r, o) {
          var n = e.globals.yAxisScale[o],
            l = 0;
          if (!s.isYAxisHidden(o) && r.labels.show && void 0 !== r.labels.minWidth && (l = r.labels.minWidth), !s.isYAxisHidden(o) && r.labels.show && n.result.length) {
            var h = e.globals.yLabelFormatters[o],
              c = n.niceMin === Number.MIN_VALUE ? 0 : n.niceMin,
              d = String(c).length > String(n.niceMax).length ? c : n.niceMax,
              g = h(d, {
                seriesIndex: o,
                dataPointIndex: -1,
                w: e
              }),
              u = g;
            if (void 0 !== g && 0 !== g.length || (g = d), e.globals.isBarHorizontal) {
              a = 0;
              var p = e.globals.labels.slice();
              g = h(g = x.getLargestStringFromArr(p), {
                seriesIndex: o,
                dataPointIndex: -1,
                w: e
              }), u = t.dCtx.dimHelpers.getLargestStringFromMultiArr(g, p);
            }
            var f = new m(t.dCtx.ctx),
              b = "rotate(".concat(r.labels.rotate, " 0 0)"),
              v = f.getTextRects(g, r.labels.style.fontSize, r.labels.style.fontFamily, b, !1),
              y = v;
            g !== u && (y = f.getTextRects(u, r.labels.style.fontSize, r.labels.style.fontFamily, b, !1)), i.push({
              width: (l > y.width || l > v.width ? l : y.width > v.width ? y.width : v.width) + a,
              height: y.height > v.height ? y.height : v.height
            });
          } else i.push({
            width: 0,
            height: 0
          });
        }), i;
      }
    }, {
      key: "getyAxisTitleCoords",
      value: function () {
        var t = this,
          e = this.w,
          i = [];
        return e.config.yaxis.map(function (e, a) {
          if (e.show && void 0 !== e.title.text) {
            var s = new m(t.dCtx.ctx),
              r = "rotate(".concat(e.title.rotate, " 0 0)"),
              o = s.getTextRects(e.title.text, e.title.style.fontSize, e.title.style.fontFamily, r, !1);
            i.push({
              width: o.width,
              height: o.height
            });
          } else i.push({
            width: 0,
            height: 0
          });
        }), i;
      }
    }, {
      key: "getTotalYAxisWidth",
      value: function () {
        var t = this.w,
          e = 0,
          i = 0,
          a = 0,
          s = t.globals.yAxisScale.length > 1 ? 10 : 0,
          r = new B(this.dCtx.ctx),
          o = function (o, n) {
            var l = t.config.yaxis[n].floating,
              h = 0;
            o.width > 0 && !l ? (h = o.width + s, function (e) {
              return t.globals.ignoreYAxisIndexes.indexOf(e) > -1;
            }(n) && (h = h - o.width - s)) : h = l || r.isYAxisHidden(n) ? 0 : 5, t.config.yaxis[n].opposite ? a += h : i += h, e += h;
          };
        return t.globals.yLabelsCoords.map(function (t, e) {
          o(t, e);
        }), t.globals.yTitleCoords.map(function (t, e) {
          o(t, e);
        }), t.globals.isBarHorizontal && !t.config.yaxis[0].floating && (e = t.globals.yLabelsCoords[0].width + t.globals.yTitleCoords[0].width + 15), this.dCtx.yAxisWidthLeft = i, this.dCtx.yAxisWidthRight = a, e;
      }
    }]), t;
  }(),
  rt = function () {
    function t(e) {
      a(this, t), this.w = e.w, this.dCtx = e;
    }
    return r(t, [{
      key: "gridPadForColumnsInNumericAxis",
      value: function (t) {
        var e = this.w;
        if (e.globals.noData || e.globals.allSeriesCollapsed) return 0;
        var i = function (t) {
            return "bar" === t || "rangeBar" === t || "candlestick" === t || "boxPlot" === t;
          },
          a = e.config.chart.type,
          s = 0,
          r = i(a) ? e.config.series.length : 1;
        if (e.globals.comboBarCount > 0 && (r = e.globals.comboBarCount), e.globals.collapsedSeries.forEach(function (t) {
          i(t.type) && (r -= 1);
        }), e.config.chart.stacked && (r = 1), (i(a) || e.globals.comboBarCount > 0) && e.globals.isXNumeric && !e.globals.isBarHorizontal && r > 0) {
          var o,
            n,
            l = Math.abs(e.globals.initialMaxX - e.globals.initialMinX);
          l <= 3 && (l = e.globals.dataPoints), o = l / t, e.globals.minXDiff && e.globals.minXDiff / o > 0 && (n = e.globals.minXDiff / o), n > t / 2 && (n /= 2), (s = n / r * parseInt(e.config.plotOptions.bar.columnWidth, 10) / 100) < 1 && (s = 1), s = s / (r > 1 ? 1 : 1.5) + 5, e.globals.barPadForNumericAxis = s;
        }
        return s;
      }
    }, {
      key: "gridPadFortitleSubtitle",
      value: function () {
        var t = this,
          e = this.w,
          i = e.globals,
          a = this.dCtx.isSparkline || !e.globals.axisCharts ? 0 : 10;
        ["title", "subtitle"].forEach(function (i) {
          void 0 !== e.config[i].text ? a += e.config[i].margin : a += t.dCtx.isSparkline || !e.globals.axisCharts ? 0 : 5;
        }), !e.config.legend.show || "bottom" !== e.config.legend.position || e.config.legend.floating || e.globals.axisCharts || (a += 10);
        var s = this.dCtx.dimHelpers.getTitleSubtitleCoords("title"),
          r = this.dCtx.dimHelpers.getTitleSubtitleCoords("subtitle");
        i.gridHeight = i.gridHeight - s.height - r.height - a, i.translateY = i.translateY + s.height + r.height + a;
      }
    }, {
      key: "setGridXPosForDualYAxis",
      value: function (t, e) {
        var i = this.w,
          a = new B(this.dCtx.ctx);
        i.config.yaxis.map(function (s, r) {
          -1 !== i.globals.ignoreYAxisIndexes.indexOf(r) || s.floating || a.isYAxisHidden(r) || (s.opposite && (i.globals.translateX = i.globals.translateX - (e[r].width + t[r].width) - parseInt(i.config.yaxis[r].labels.style.fontSize, 10) / 1.2 - 12), i.globals.translateX < 2 && (i.globals.translateX = 2));
        });
      }
    }]), t;
  }(),
  ot = function () {
    function t(e) {
      a(this, t), this.ctx = e, this.w = e.w, this.lgRect = {}, this.yAxisWidth = 0, this.yAxisWidthLeft = 0, this.yAxisWidthRight = 0, this.xAxisHeight = 0, this.isSparkline = this.w.config.chart.sparkline.enabled, this.dimHelpers = new it(this), this.dimYAxis = new st(this), this.dimXAxis = new at(this), this.dimGrid = new rt(this), this.lgWidthForSideLegends = 0, this.gridPad = this.w.config.grid.padding, this.xPadRight = 0, this.xPadLeft = 0;
    }
    return r(t, [{
      key: "plotCoords",
      value: function () {
        var t = this,
          e = this.w,
          i = e.globals;
        this.lgRect = this.dimHelpers.getLegendsRect(), this.isSparkline && (e.config.markers.discrete.length > 0 || e.config.markers.size > 0) && Object.entries(this.gridPad).forEach(function (e) {
          var i = g(e, 2),
            a = i[0],
            s = i[1];
          t.gridPad[a] = Math.max(s, t.w.globals.markers.largestSize / 1.5);
        }), i.axisCharts ? this.setDimensionsForAxisCharts() : this.setDimensionsForNonAxisCharts(), this.dimGrid.gridPadFortitleSubtitle(), i.gridHeight = i.gridHeight - this.gridPad.top - this.gridPad.bottom, i.gridWidth = i.gridWidth - this.gridPad.left - this.gridPad.right - this.xPadRight - this.xPadLeft;
        var a = this.dimGrid.gridPadForColumnsInNumericAxis(i.gridWidth);
        i.gridWidth = i.gridWidth - 2 * a, i.translateX = i.translateX + this.gridPad.left + this.xPadLeft + (a > 0 ? a + 4 : 0), i.translateY = i.translateY + this.gridPad.top;
      }
    }, {
      key: "setDimensionsForAxisCharts",
      value: function () {
        var t = this,
          e = this.w,
          i = e.globals,
          a = this.dimYAxis.getyAxisLabelsCoords(),
          s = this.dimYAxis.getyAxisTitleCoords();
        e.globals.yLabelsCoords = [], e.globals.yTitleCoords = [], e.config.yaxis.map(function (t, i) {
          e.globals.yLabelsCoords.push({
            width: a[i].width,
            index: i
          }), e.globals.yTitleCoords.push({
            width: s[i].width,
            index: i
          });
        }), this.yAxisWidth = this.dimYAxis.getTotalYAxisWidth();
        var r = this.dimXAxis.getxAxisLabelsCoords(),
          o = this.dimXAxis.getxAxisGroupLabelsCoords(),
          n = this.dimXAxis.getxAxisTitleCoords();
        this.conditionalChecksForAxisCoords(r, n, o), i.translateXAxisY = e.globals.rotateXLabels ? this.xAxisHeight / 8 : -4, i.translateXAxisX = e.globals.rotateXLabels && e.globals.isXNumeric && e.config.xaxis.labels.rotate <= -45 ? -this.xAxisWidth / 4 : 0, e.globals.isBarHorizontal && (i.rotateXLabels = !1, i.translateXAxisY = parseInt(e.config.xaxis.labels.style.fontSize, 10) / 1.5 * -1), i.translateXAxisY = i.translateXAxisY + e.config.xaxis.labels.offsetY, i.translateXAxisX = i.translateXAxisX + e.config.xaxis.labels.offsetX;
        var l = this.yAxisWidth,
          h = this.xAxisHeight;
        i.xAxisLabelsHeight = this.xAxisHeight - n.height, i.xAxisGroupLabelsHeight = i.xAxisLabelsHeight - r.height, i.xAxisLabelsWidth = this.xAxisWidth, i.xAxisHeight = this.xAxisHeight;
        var c = 10;
        ("radar" === e.config.chart.type || this.isSparkline) && (l = 0, h = i.goldenPadding), this.isSparkline && (this.lgRect = {
          height: 0,
          width: 0
        }), (this.isSparkline || "treemap" === e.config.chart.type) && (l = 0, h = 0, c = 0), this.isSparkline || this.dimXAxis.additionalPaddingXLabels(r);
        var d = function () {
          i.translateX = l, i.gridHeight = i.svgHeight - t.lgRect.height - h - (t.isSparkline || "treemap" === e.config.chart.type ? 0 : e.globals.rotateXLabels ? 10 : 15), i.gridWidth = i.svgWidth - l;
        };
        switch ("top" === e.config.xaxis.position && (c = i.xAxisHeight - e.config.xaxis.axisTicks.height - 5), e.config.legend.position) {
          case "bottom":
            i.translateY = c, d();
            break;
          case "top":
            i.translateY = this.lgRect.height + c, d();
            break;
          case "left":
            i.translateY = c, i.translateX = this.lgRect.width + l, i.gridHeight = i.svgHeight - h - 12, i.gridWidth = i.svgWidth - this.lgRect.width - l;
            break;
          case "right":
            i.translateY = c, i.translateX = l, i.gridHeight = i.svgHeight - h - 12, i.gridWidth = i.svgWidth - this.lgRect.width - l - 5;
            break;
          default:
            throw new Error("Legend position not supported");
        }
        this.dimGrid.setGridXPosForDualYAxis(s, a), new q(this.ctx).setYAxisXPosition(a, s);
      }
    }, {
      key: "setDimensionsForNonAxisCharts",
      value: function () {
        var t = this.w,
          e = t.globals,
          i = t.config,
          a = 0;
        t.config.legend.show && !t.config.legend.floating && (a = 20);
        var s = "pie" === i.chart.type || "polarArea" === i.chart.type || "donut" === i.chart.type ? "pie" : "radialBar",
          r = i.plotOptions[s].offsetY,
          o = i.plotOptions[s].offsetX;
        if (!i.legend.show || i.legend.floating) return e.gridHeight = e.svgHeight - i.grid.padding.left + i.grid.padding.right, e.gridWidth = e.gridHeight, e.translateY = r, void (e.translateX = o + (e.svgWidth - e.gridWidth) / 2);
        switch (i.legend.position) {
          case "bottom":
            e.gridHeight = e.svgHeight - this.lgRect.height - e.goldenPadding, e.gridWidth = e.svgWidth, e.translateY = r - 10, e.translateX = o + (e.svgWidth - e.gridWidth) / 2;
            break;
          case "top":
            e.gridHeight = e.svgHeight - this.lgRect.height - e.goldenPadding, e.gridWidth = e.svgWidth, e.translateY = this.lgRect.height + r + 10, e.translateX = o + (e.svgWidth - e.gridWidth) / 2;
            break;
          case "left":
            e.gridWidth = e.svgWidth - this.lgRect.width - a, e.gridHeight = "auto" !== i.chart.height ? e.svgHeight : e.gridWidth, e.translateY = r, e.translateX = o + this.lgRect.width + a;
            break;
          case "right":
            e.gridWidth = e.svgWidth - this.lgRect.width - a - 5, e.gridHeight = "auto" !== i.chart.height ? e.svgHeight : e.gridWidth, e.translateY = r, e.translateX = o + 10;
            break;
          default:
            throw new Error("Legend position not supported");
        }
      }
    }, {
      key: "conditionalChecksForAxisCoords",
      value: function (t, e, i) {
        var a = this.w,
          s = a.globals.hasXaxisGroups ? 2 : 1,
          r = i.height + t.height + e.height,
          o = a.globals.isMultiLineX ? 1.2 : a.globals.LINE_HEIGHT_RATIO,
          n = a.globals.rotateXLabels ? 22 : 10,
          l = a.globals.rotateXLabels && "bottom" === a.config.legend.position ? 10 : 0;
        this.xAxisHeight = r * o + s * n + l, this.xAxisWidth = t.width, this.xAxisHeight - e.height > a.config.xaxis.labels.maxHeight && (this.xAxisHeight = a.config.xaxis.labels.maxHeight), a.config.xaxis.labels.minHeight && this.xAxisHeight < a.config.xaxis.labels.minHeight && (this.xAxisHeight = a.config.xaxis.labels.minHeight), a.config.xaxis.floating && (this.xAxisHeight = 0);
        var h = 0,
          c = 0;
        a.config.yaxis.forEach(function (t) {
          h += t.labels.minWidth, c += t.labels.maxWidth;
        }), this.yAxisWidth < h && (this.yAxisWidth = h), this.yAxisWidth > c && (this.yAxisWidth = c);
      }
    }]), t;
  }(),
  nt = function () {
    function t(e) {
      a(this, t), this.w = e.w, this.lgCtx = e;
    }
    return r(t, [{
      key: "getLegendStyles",
      value: function () {
        var t = document.createElement("style");
        t.setAttribute("type", "text/css");
        var e = document.createTextNode("\t\n    \t\n      .apexcharts-legend {\t\n        display: flex;\t\n        overflow: auto;\t\n        padding: 0 10px;\t\n      }\t\n      .apexcharts-legend.apx-legend-position-bottom, .apexcharts-legend.apx-legend-position-top {\t\n        flex-wrap: wrap\t\n      }\t\n      .apexcharts-legend.apx-legend-position-right, .apexcharts-legend.apx-legend-position-left {\t\n        flex-direction: column;\t\n        bottom: 0;\t\n      }\t\n      .apexcharts-legend.apx-legend-position-bottom.apexcharts-align-left, .apexcharts-legend.apx-legend-position-top.apexcharts-align-left, .apexcharts-legend.apx-legend-position-right, .apexcharts-legend.apx-legend-position-left {\t\n        justify-content: flex-start;\t\n      }\t\n      .apexcharts-legend.apx-legend-position-bottom.apexcharts-align-center, .apexcharts-legend.apx-legend-position-top.apexcharts-align-center {\t\n        justify-content: center;  \t\n      }\t\n      .apexcharts-legend.apx-legend-position-bottom.apexcharts-align-right, .apexcharts-legend.apx-legend-position-top.apexcharts-align-right {\t\n        justify-content: flex-end;\t\n      }\t\n      .apexcharts-legend-series {\t\n        cursor: pointer;\t\n        line-height: normal;\t\n      }\t\n      .apexcharts-legend.apx-legend-position-bottom .apexcharts-legend-series, .apexcharts-legend.apx-legend-position-top .apexcharts-legend-series{\t\n        display: flex;\t\n        align-items: center;\t\n      }\t\n      .apexcharts-legend-text {\t\n        position: relative;\t\n        font-size: 14px;\t\n      }\t\n      .apexcharts-legend-text *, .apexcharts-legend-marker * {\t\n        pointer-events: none;\t\n      }\t\n      .apexcharts-legend-marker {\t\n        position: relative;\t\n        display: inline-block;\t\n        cursor: pointer;\t\n        margin-right: 3px;\t\n        border-style: solid;\n      }\t\n      \t\n      .apexcharts-legend.apexcharts-align-right .apexcharts-legend-series, .apexcharts-legend.apexcharts-align-left .apexcharts-legend-series{\t\n        display: inline-block;\t\n      }\t\n      .apexcharts-legend-series.apexcharts-no-click {\t\n        cursor: auto;\t\n      }\t\n      .apexcharts-legend .apexcharts-hidden-zero-series, .apexcharts-legend .apexcharts-hidden-null-series {\t\n        display: none !important;\t\n      }\t\n      .apexcharts-inactive-legend {\t\n        opacity: 0.45;\t\n      }");
        return t.appendChild(e), t;
      }
    }, {
      key: "getLegendBBox",
      value: function () {
        var t = this.w.globals.dom.baseEl.querySelector(".apexcharts-legend").getBoundingClientRect(),
          e = t.width;
        return {
          clwh: t.height,
          clww: e
        };
      }
    }, {
      key: "appendToForeignObject",
      value: function () {
        this.w.globals.dom.elLegendForeign.appendChild(this.getLegendStyles());
      }
    }, {
      key: "toggleDataSeries",
      value: function (t, e) {
        var i = this,
          a = this.w;
        if (a.globals.axisCharts || "radialBar" === a.config.chart.type) {
          a.globals.resized = !0;
          var s = null,
            r = null;
          if (a.globals.risingSeries = [], a.globals.axisCharts ? (s = a.globals.dom.baseEl.querySelector(".apexcharts-series[data\\:realIndex='".concat(t, "']")), r = parseInt(s.getAttribute("data:realIndex"), 10)) : (s = a.globals.dom.baseEl.querySelector(".apexcharts-series[rel='".concat(t + 1, "']")), r = parseInt(s.getAttribute("rel"), 10) - 1), e) [{
            cs: a.globals.collapsedSeries,
            csi: a.globals.collapsedSeriesIndices
          }, {
            cs: a.globals.ancillaryCollapsedSeries,
            csi: a.globals.ancillaryCollapsedSeriesIndices
          }].forEach(function (t) {
            i.riseCollapsedSeries(t.cs, t.csi, r);
          });else this.hideSeries({
            seriesEl: s,
            realIndex: r
          });
        } else {
          var o = a.globals.dom.Paper.select(" .apexcharts-series[rel='".concat(t + 1, "'] path")),
            n = a.config.chart.type;
          if ("pie" === n || "polarArea" === n || "donut" === n) {
            var l = a.config.plotOptions.pie.donut.labels;
            new m(this.lgCtx.ctx).pathMouseDown(o.members[0], null), this.lgCtx.ctx.pie.printDataLabelsInner(o.members[0].node, l);
          }
          o.fire("click");
        }
      }
    }, {
      key: "hideSeries",
      value: function (t) {
        var e = t.seriesEl,
          i = t.realIndex,
          a = this.w,
          s = x.clone(a.config.series);
        if (a.globals.axisCharts) {
          var r = !1;
          if (a.config.yaxis[i] && a.config.yaxis[i].show && a.config.yaxis[i].showAlways && (r = !0, a.globals.ancillaryCollapsedSeriesIndices.indexOf(i) < 0 && (a.globals.ancillaryCollapsedSeries.push({
            index: i,
            data: s[i].data.slice(),
            type: e.parentNode.className.baseVal.split("-")[1]
          }), a.globals.ancillaryCollapsedSeriesIndices.push(i))), !r) {
            a.globals.collapsedSeries.push({
              index: i,
              data: s[i].data.slice(),
              type: e.parentNode.className.baseVal.split("-")[1]
            }), a.globals.collapsedSeriesIndices.push(i);
            var o = a.globals.risingSeries.indexOf(i);
            a.globals.risingSeries.splice(o, 1);
          }
        } else a.globals.collapsedSeries.push({
          index: i,
          data: s[i]
        }), a.globals.collapsedSeriesIndices.push(i);
        for (var n = e.childNodes, l = 0; l < n.length; l++) n[l].classList.contains("apexcharts-series-markers-wrap") && (n[l].classList.contains("apexcharts-hide") ? n[l].classList.remove("apexcharts-hide") : n[l].classList.add("apexcharts-hide"));
        a.globals.allSeriesCollapsed = a.globals.collapsedSeries.length === a.config.series.length, s = this._getSeriesBasedOnCollapsedState(s), this.lgCtx.ctx.updateHelpers._updateSeries(s, a.config.chart.animations.dynamicAnimation.enabled);
      }
    }, {
      key: "riseCollapsedSeries",
      value: function (t, e, i) {
        var a = this.w,
          s = x.clone(a.config.series);
        if (t.length > 0) {
          for (var r = 0; r < t.length; r++) t[r].index === i && (a.globals.axisCharts ? (s[i].data = t[r].data.slice(), t.splice(r, 1), e.splice(r, 1), a.globals.risingSeries.push(i)) : (s[i] = t[r].data, t.splice(r, 1), e.splice(r, 1), a.globals.risingSeries.push(i)));
          s = this._getSeriesBasedOnCollapsedState(s), this.lgCtx.ctx.updateHelpers._updateSeries(s, a.config.chart.animations.dynamicAnimation.enabled);
        }
      }
    }, {
      key: "_getSeriesBasedOnCollapsedState",
      value: function (t) {
        var e = this.w;
        return e.globals.axisCharts ? t.forEach(function (i, a) {
          e.globals.collapsedSeriesIndices.indexOf(a) > -1 && (t[a].data = []);
        }) : t.forEach(function (i, a) {
          e.globals.collapsedSeriesIndices.indexOf(a) > -1 && (t[a] = 0);
        }), t;
      }
    }]), t;
  }(),
  lt = function () {
    function t(e) {
      a(this, t), this.ctx = e, this.w = e.w, this.onLegendClick = this.onLegendClick.bind(this), this.onLegendHovered = this.onLegendHovered.bind(this), this.isBarsDistributed = "bar" === this.w.config.chart.type && this.w.config.plotOptions.bar.distributed && 1 === this.w.config.series.length, this.legendHelpers = new nt(this);
    }
    return r(t, [{
      key: "init",
      value: function () {
        var t = this.w,
          e = t.globals,
          i = t.config;
        if ((i.legend.showForSingleSeries && 1 === e.series.length || this.isBarsDistributed || e.series.length > 1 || !e.axisCharts) && i.legend.show) {
          for (; e.dom.elLegendWrap.firstChild;) e.dom.elLegendWrap.removeChild(e.dom.elLegendWrap.firstChild);
          this.drawLegends(), x.isIE11() ? document.getElementsByTagName("head")[0].appendChild(this.legendHelpers.getLegendStyles()) : this.legendHelpers.appendToForeignObject(), "bottom" === i.legend.position || "top" === i.legend.position ? this.legendAlignHorizontal() : "right" !== i.legend.position && "left" !== i.legend.position || this.legendAlignVertical();
        }
      }
    }, {
      key: "drawLegends",
      value: function () {
        var t = this,
          e = this.w,
          i = e.config.legend.fontFamily,
          a = e.globals.seriesNames,
          s = e.globals.colors.slice();
        if ("heatmap" === e.config.chart.type) {
          var r = e.config.plotOptions.heatmap.colorScale.ranges;
          a = r.map(function (t) {
            return t.name ? t.name : t.from + " - " + t.to;
          }), s = r.map(function (t) {
            return t.color;
          });
        } else this.isBarsDistributed && (a = e.globals.labels.slice());
        e.config.legend.customLegendItems.length && (a = e.config.legend.customLegendItems);
        for (var o = e.globals.legendFormatter, n = e.config.legend.inverseOrder, l = n ? a.length - 1 : 0; n ? l >= 0 : l <= a.length - 1; n ? l-- : l++) {
          var h = o(a[l], {
              seriesIndex: l,
              w: e
            }),
            c = !1,
            d = !1;
          if (e.globals.collapsedSeries.length > 0) for (var g = 0; g < e.globals.collapsedSeries.length; g++) e.globals.collapsedSeries[g].index === l && (c = !0);
          if (e.globals.ancillaryCollapsedSeriesIndices.length > 0) for (var u = 0; u < e.globals.ancillaryCollapsedSeriesIndices.length; u++) e.globals.ancillaryCollapsedSeriesIndices[u] === l && (d = !0);
          var p = document.createElement("span");
          p.classList.add("apexcharts-legend-marker");
          var f = e.config.legend.markers.offsetX,
            b = e.config.legend.markers.offsetY,
            v = e.config.legend.markers.height,
            w = e.config.legend.markers.width,
            k = e.config.legend.markers.strokeWidth,
            A = e.config.legend.markers.strokeColor,
            S = e.config.legend.markers.radius,
            C = p.style;
          C.background = s[l], C.color = s[l], C.setProperty("background", s[l], "important"), e.config.legend.markers.fillColors && e.config.legend.markers.fillColors[l] && (C.background = e.config.legend.markers.fillColors[l]), void 0 !== e.globals.seriesColors[l] && (C.background = e.globals.seriesColors[l], C.color = e.globals.seriesColors[l]), C.height = Array.isArray(v) ? parseFloat(v[l]) + "px" : parseFloat(v) + "px", C.width = Array.isArray(w) ? parseFloat(w[l]) + "px" : parseFloat(w) + "px", C.left = (Array.isArray(f) ? parseFloat(f[l]) : parseFloat(f)) + "px", C.top = (Array.isArray(b) ? parseFloat(b[l]) : parseFloat(b)) + "px", C.borderWidth = Array.isArray(k) ? k[l] : k, C.borderColor = Array.isArray(A) ? A[l] : A, C.borderRadius = Array.isArray(S) ? parseFloat(S[l]) + "px" : parseFloat(S) + "px", e.config.legend.markers.customHTML && (Array.isArray(e.config.legend.markers.customHTML) ? e.config.legend.markers.customHTML[l] && (p.innerHTML = e.config.legend.markers.customHTML[l]()) : p.innerHTML = e.config.legend.markers.customHTML()), m.setAttrs(p, {
            rel: l + 1,
            "data:collapsed": c || d
          }), (c || d) && p.classList.add("apexcharts-inactive-legend");
          var L = document.createElement("div"),
            P = document.createElement("span");
          P.classList.add("apexcharts-legend-text"), P.innerHTML = Array.isArray(h) ? h.join(" ") : h;
          var I = e.config.legend.labels.useSeriesColors ? e.globals.colors[l] : e.config.legend.labels.colors;
          I || (I = e.config.chart.foreColor), P.style.color = I, P.style.fontSize = parseFloat(e.config.legend.fontSize) + "px", P.style.fontWeight = e.config.legend.fontWeight, P.style.fontFamily = i || e.config.chart.fontFamily, m.setAttrs(P, {
            rel: l + 1,
            i: l,
            "data:default-text": encodeURIComponent(h),
            "data:collapsed": c || d
          }), L.appendChild(p), L.appendChild(P);
          var T = new y(this.ctx);
          if (!e.config.legend.showForZeroSeries) 0 === T.getSeriesTotalByIndex(l) && T.seriesHaveSameValues(l) && !T.isSeriesNull(l) && -1 === e.globals.collapsedSeriesIndices.indexOf(l) && -1 === e.globals.ancillaryCollapsedSeriesIndices.indexOf(l) && L.classList.add("apexcharts-hidden-zero-series");
          e.config.legend.showForNullSeries || T.isSeriesNull(l) && -1 === e.globals.collapsedSeriesIndices.indexOf(l) && -1 === e.globals.ancillaryCollapsedSeriesIndices.indexOf(l) && L.classList.add("apexcharts-hidden-null-series"), e.globals.dom.elLegendWrap.appendChild(L), e.globals.dom.elLegendWrap.classList.add("apexcharts-align-".concat(e.config.legend.horizontalAlign)), e.globals.dom.elLegendWrap.classList.add("apx-legend-position-" + e.config.legend.position), L.classList.add("apexcharts-legend-series"), L.style.margin = "".concat(e.config.legend.itemMargin.vertical, "px ").concat(e.config.legend.itemMargin.horizontal, "px"), e.globals.dom.elLegendWrap.style.width = e.config.legend.width ? e.config.legend.width + "px" : "", e.globals.dom.elLegendWrap.style.height = e.config.legend.height ? e.config.legend.height + "px" : "", m.setAttrs(L, {
            rel: l + 1,
            seriesName: x.escapeString(a[l]),
            "data:collapsed": c || d
          }), (c || d) && L.classList.add("apexcharts-inactive-legend"), e.config.legend.onItemClick.toggleDataSeries || L.classList.add("apexcharts-no-click");
        }
        e.globals.dom.elWrap.addEventListener("click", t.onLegendClick, !0), e.config.legend.onItemHover.highlightDataSeries && 0 === e.config.legend.customLegendItems.length && (e.globals.dom.elWrap.addEventListener("mousemove", t.onLegendHovered, !0), e.globals.dom.elWrap.addEventListener("mouseout", t.onLegendHovered, !0));
      }
    }, {
      key: "setLegendWrapXY",
      value: function (t, e) {
        var i = this.w,
          a = i.globals.dom.elLegendWrap,
          s = a.getBoundingClientRect(),
          r = 0,
          o = 0;
        if ("bottom" === i.config.legend.position) o += i.globals.svgHeight - s.height / 2;else if ("top" === i.config.legend.position) {
          var n = new ot(this.ctx),
            l = n.dimHelpers.getTitleSubtitleCoords("title").height,
            h = n.dimHelpers.getTitleSubtitleCoords("subtitle").height;
          o = o + (l > 0 ? l - 10 : 0) + (h > 0 ? h - 10 : 0);
        }
        a.style.position = "absolute", r = r + t + i.config.legend.offsetX, o = o + e + i.config.legend.offsetY, a.style.left = r + "px", a.style.top = o + "px", "bottom" === i.config.legend.position ? (a.style.top = "auto", a.style.bottom = 5 - i.config.legend.offsetY + "px") : "right" === i.config.legend.position && (a.style.left = "auto", a.style.right = 25 + i.config.legend.offsetX + "px");
        ["width", "height"].forEach(function (t) {
          a.style[t] && (a.style[t] = parseInt(i.config.legend[t], 10) + "px");
        });
      }
    }, {
      key: "legendAlignHorizontal",
      value: function () {
        var t = this.w;
        t.globals.dom.elLegendWrap.style.right = 0;
        var e = this.legendHelpers.getLegendBBox(),
          i = new ot(this.ctx),
          a = i.dimHelpers.getTitleSubtitleCoords("title"),
          s = i.dimHelpers.getTitleSubtitleCoords("subtitle"),
          r = 0;
        "bottom" === t.config.legend.position ? r = -e.clwh / 1.8 : "top" === t.config.legend.position && (r = a.height + s.height + t.config.title.margin + t.config.subtitle.margin - 10), this.setLegendWrapXY(20, r);
      }
    }, {
      key: "legendAlignVertical",
      value: function () {
        var t = this.w,
          e = this.legendHelpers.getLegendBBox(),
          i = 0;
        "left" === t.config.legend.position && (i = 20), "right" === t.config.legend.position && (i = t.globals.svgWidth - e.clww - 10), this.setLegendWrapXY(i, 20);
      }
    }, {
      key: "onLegendHovered",
      value: function (t) {
        var e = this.w,
          i = t.target.classList.contains("apexcharts-legend-text") || t.target.classList.contains("apexcharts-legend-marker");
        if ("heatmap" === e.config.chart.type || this.isBarsDistributed) {
          if (i) {
            var a = parseInt(t.target.getAttribute("rel"), 10) - 1;
            this.ctx.events.fireEvent("legendHover", [this.ctx, a, this.w]), new N(this.ctx).highlightRangeInSeries(t, t.target);
          }
        } else !t.target.classList.contains("apexcharts-inactive-legend") && i && new N(this.ctx).toggleSeriesOnHover(t, t.target);
      }
    }, {
      key: "onLegendClick",
      value: function (t) {
        var e = this.w;
        if (!e.config.legend.customLegendItems.length && (t.target.classList.contains("apexcharts-legend-text") || t.target.classList.contains("apexcharts-legend-marker"))) {
          var i = parseInt(t.target.getAttribute("rel"), 10) - 1,
            a = "true" === t.target.getAttribute("data:collapsed"),
            s = this.w.config.chart.events.legendClick;
          "function" == typeof s && s(this.ctx, i, this.w), this.ctx.events.fireEvent("legendClick", [this.ctx, i, this.w]);
          var r = this.w.config.legend.markers.onClick;
          "function" == typeof r && t.target.classList.contains("apexcharts-legend-marker") && (r(this.ctx, i, this.w), this.ctx.events.fireEvent("legendMarkerClick", [this.ctx, i, this.w])), "treemap" !== e.config.chart.type && "heatmap" !== e.config.chart.type && !this.isBarsDistributed && e.config.legend.onItemClick.toggleDataSeries && this.legendHelpers.toggleDataSeries(i, a);
        }
      }
    }]), t;
  }(),
  ht = function () {
    function t(e) {
      a(this, t), this.ctx = e, this.w = e.w;
      var i = this.w;
      this.ev = this.w.config.chart.events, this.selectedClass = "apexcharts-selected", this.localeValues = this.w.globals.locale.toolbar, this.minX = i.globals.minX, this.maxX = i.globals.maxX;
    }
    return r(t, [{
      key: "createToolbar",
      value: function () {
        var t = this,
          e = this.w,
          i = function () {
            return document.createElement("div");
          },
          a = i();
        if (a.setAttribute("class", "apexcharts-toolbar"), a.style.top = e.config.chart.toolbar.offsetY + "px", a.style.right = 3 - e.config.chart.toolbar.offsetX + "px", e.globals.dom.elWrap.appendChild(a), this.elZoom = i(), this.elZoomIn = i(), this.elZoomOut = i(), this.elPan = i(), this.elSelection = i(), this.elZoomReset = i(), this.elMenuIcon = i(), this.elMenu = i(), this.elCustomIcons = [], this.t = e.config.chart.toolbar.tools, Array.isArray(this.t.customIcons)) for (var s = 0; s < this.t.customIcons.length; s++) this.elCustomIcons.push(i());
        var r = [],
          o = function (i, a, s) {
            var o = i.toLowerCase();
            t.t[o] && e.config.chart.zoom.enabled && r.push({
              el: a,
              icon: "string" == typeof t.t[o] ? t.t[o] : s,
              title: t.localeValues[i],
              class: "apexcharts-".concat(o, "-icon")
            });
          };
        o("zoomIn", this.elZoomIn, '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">\n    <path d="M0 0h24v24H0z" fill="none"/>\n    <path d="M13 7h-2v4H7v2h4v4h2v-4h4v-2h-4V7zm-1-5C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z"/>\n</svg>\n'), o("zoomOut", this.elZoomOut, '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">\n    <path d="M0 0h24v24H0z" fill="none"/>\n    <path d="M7 11v2h10v-2H7zm5-9C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z"/>\n</svg>\n');
        var n = function (i) {
          t.t[i] && e.config.chart[i].enabled && r.push({
            el: "zoom" === i ? t.elZoom : t.elSelection,
            icon: "string" == typeof t.t[i] ? t.t[i] : "zoom" === i ? '<svg xmlns="http://www.w3.org/2000/svg" fill="#000000" height="24" viewBox="0 0 24 24" width="24">\n    <path d="M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"/>\n    <path d="M0 0h24v24H0V0z" fill="none"/>\n    <path d="M12 10h-2v2H9v-2H7V9h2V7h1v2h2v1z"/>\n</svg>' : '<svg fill="#6E8192" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg">\n    <path d="M0 0h24v24H0z" fill="none"/>\n    <path d="M3 5h2V3c-1.1 0-2 .9-2 2zm0 8h2v-2H3v2zm4 8h2v-2H7v2zM3 9h2V7H3v2zm10-6h-2v2h2V3zm6 0v2h2c0-1.1-.9-2-2-2zM5 21v-2H3c0 1.1.9 2 2 2zm-2-4h2v-2H3v2zM9 3H7v2h2V3zm2 18h2v-2h-2v2zm8-8h2v-2h-2v2zm0 8c1.1 0 2-.9 2-2h-2v2zm0-12h2V7h-2v2zm0 8h2v-2h-2v2zm-4 4h2v-2h-2v2zm0-16h2V3h-2v2z"/>\n</svg>',
            title: t.localeValues["zoom" === i ? "selectionZoom" : "selection"],
            class: e.globals.isTouchDevice ? "apexcharts-element-hidden" : "apexcharts-".concat(i, "-icon")
          });
        };
        n("zoom"), n("selection"), this.t.pan && e.config.chart.zoom.enabled && r.push({
          el: this.elPan,
          icon: "string" == typeof this.t.pan ? this.t.pan : '<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" fill="#000000" height="24" viewBox="0 0 24 24" width="24">\n    <defs>\n        <path d="M0 0h24v24H0z" id="a"/>\n    </defs>\n    <clipPath id="b">\n        <use overflow="visible" xlink:href="#a"/>\n    </clipPath>\n    <path clip-path="url(#b)" d="M23 5.5V20c0 2.2-1.8 4-4 4h-7.3c-1.08 0-2.1-.43-2.85-1.19L1 14.83s1.26-1.23 1.3-1.25c.22-.19.49-.29.79-.29.22 0 .42.06.6.16.04.01 4.31 2.46 4.31 2.46V4c0-.83.67-1.5 1.5-1.5S11 3.17 11 4v7h1V1.5c0-.83.67-1.5 1.5-1.5S15 .67 15 1.5V11h1V2.5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5V11h1V5.5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5z"/>\n</svg>',
          title: this.localeValues.pan,
          class: e.globals.isTouchDevice ? "apexcharts-element-hidden" : "apexcharts-pan-icon"
        }), o("reset", this.elZoomReset, '<svg fill="#000000" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg">\n    <path d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z"/>\n    <path d="M0 0h24v24H0z" fill="none"/>\n</svg>'), this.t.download && r.push({
          el: this.elMenuIcon,
          icon: "string" == typeof this.t.download ? this.t.download : '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path fill="none" d="M0 0h24v24H0V0z"/><path d="M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z"/></svg>',
          title: this.localeValues.menu,
          class: "apexcharts-menu-icon"
        });
        for (var l = 0; l < this.elCustomIcons.length; l++) r.push({
          el: this.elCustomIcons[l],
          icon: this.t.customIcons[l].icon,
          title: this.t.customIcons[l].title,
          index: this.t.customIcons[l].index,
          class: "apexcharts-toolbar-custom-icon " + this.t.customIcons[l].class
        });
        r.forEach(function (t, e) {
          t.index && x.moveIndexInArray(r, e, t.index);
        });
        for (var h = 0; h < r.length; h++) m.setAttrs(r[h].el, {
          class: r[h].class,
          title: r[h].title
        }), r[h].el.innerHTML = r[h].icon, a.appendChild(r[h].el);
        this._createHamburgerMenu(a), e.globals.zoomEnabled ? this.elZoom.classList.add(this.selectedClass) : e.globals.panEnabled ? this.elPan.classList.add(this.selectedClass) : e.globals.selectionEnabled && this.elSelection.classList.add(this.selectedClass), this.addToolbarEventListeners();
      }
    }, {
      key: "_createHamburgerMenu",
      value: function (t) {
        this.elMenuItems = [], t.appendChild(this.elMenu), m.setAttrs(this.elMenu, {
          class: "apexcharts-menu"
        });
        var e = [{
          name: "exportSVG",
          title: this.localeValues.exportToSVG
        }, {
          name: "exportPNG",
          title: this.localeValues.exportToPNG
        }, {
          name: "exportCSV",
          title: this.localeValues.exportToCSV
        }];
        this.w.globals.allSeriesHasEqualX || e.splice(2, 1);
        for (var i = 0; i < e.length; i++) this.elMenuItems.push(document.createElement("div")), this.elMenuItems[i].innerHTML = e[i].title, m.setAttrs(this.elMenuItems[i], {
          class: "apexcharts-menu-item ".concat(e[i].name),
          title: e[i].title
        }), this.elMenu.appendChild(this.elMenuItems[i]);
      }
    }, {
      key: "addToolbarEventListeners",
      value: function () {
        var t = this;
        this.elZoomReset.addEventListener("click", this.handleZoomReset.bind(this)), this.elSelection.addEventListener("click", this.toggleZoomSelection.bind(this, "selection")), this.elZoom.addEventListener("click", this.toggleZoomSelection.bind(this, "zoom")), this.elZoomIn.addEventListener("click", this.handleZoomIn.bind(this)), this.elZoomOut.addEventListener("click", this.handleZoomOut.bind(this)), this.elPan.addEventListener("click", this.togglePanning.bind(this)), this.elMenuIcon.addEventListener("click", this.toggleMenu.bind(this)), this.elMenuItems.forEach(function (e) {
          e.classList.contains("exportSVG") ? e.addEventListener("click", t.handleDownload.bind(t, "svg")) : e.classList.contains("exportPNG") ? e.addEventListener("click", t.handleDownload.bind(t, "png")) : e.classList.contains("exportCSV") && e.addEventListener("click", t.handleDownload.bind(t, "csv"));
        });
        for (var e = 0; e < this.t.customIcons.length; e++) this.elCustomIcons[e].addEventListener("click", this.t.customIcons[e].click.bind(this, this.ctx, this.ctx.w));
      }
    }, {
      key: "toggleZoomSelection",
      value: function (t) {
        this.ctx.getSyncedCharts().forEach(function (e) {
          e.ctx.toolbar.toggleOtherControls();
          var i = "selection" === t ? e.ctx.toolbar.elSelection : e.ctx.toolbar.elZoom,
            a = "selection" === t ? "selectionEnabled" : "zoomEnabled";
          e.w.globals[a] = !e.w.globals[a], i.classList.contains(e.ctx.toolbar.selectedClass) ? i.classList.remove(e.ctx.toolbar.selectedClass) : i.classList.add(e.ctx.toolbar.selectedClass);
        });
      }
    }, {
      key: "getToolbarIconsReference",
      value: function () {
        var t = this.w;
        this.elZoom || (this.elZoom = t.globals.dom.baseEl.querySelector(".apexcharts-zoom-icon")), this.elPan || (this.elPan = t.globals.dom.baseEl.querySelector(".apexcharts-pan-icon")), this.elSelection || (this.elSelection = t.globals.dom.baseEl.querySelector(".apexcharts-selection-icon"));
      }
    }, {
      key: "enableZoomPanFromToolbar",
      value: function (t) {
        this.toggleOtherControls(), "pan" === t ? this.w.globals.panEnabled = !0 : this.w.globals.zoomEnabled = !0;
        var e = "pan" === t ? this.elPan : this.elZoom,
          i = "pan" === t ? this.elZoom : this.elPan;
        e && e.classList.add(this.selectedClass), i && i.classList.remove(this.selectedClass);
      }
    }, {
      key: "togglePanning",
      value: function () {
        this.ctx.getSyncedCharts().forEach(function (t) {
          t.ctx.toolbar.toggleOtherControls(), t.w.globals.panEnabled = !t.w.globals.panEnabled, t.ctx.toolbar.elPan.classList.contains(t.ctx.toolbar.selectedClass) ? t.ctx.toolbar.elPan.classList.remove(t.ctx.toolbar.selectedClass) : t.ctx.toolbar.elPan.classList.add(t.ctx.toolbar.selectedClass);
        });
      }
    }, {
      key: "toggleOtherControls",
      value: function () {
        var t = this,
          e = this.w;
        e.globals.panEnabled = !1, e.globals.zoomEnabled = !1, e.globals.selectionEnabled = !1, this.getToolbarIconsReference(), [this.elPan, this.elSelection, this.elZoom].forEach(function (e) {
          e && e.classList.remove(t.selectedClass);
        });
      }
    }, {
      key: "handleZoomIn",
      value: function () {
        var t = this.w;
        t.globals.isRangeBar && (this.minX = t.globals.minY, this.maxX = t.globals.maxY);
        var e = (this.minX + this.maxX) / 2,
          i = (this.minX + e) / 2,
          a = (this.maxX + e) / 2,
          s = this._getNewMinXMaxX(i, a);
        t.globals.disableZoomIn || this.zoomUpdateOptions(s.minX, s.maxX);
      }
    }, {
      key: "handleZoomOut",
      value: function () {
        var t = this.w;
        if (t.globals.isRangeBar && (this.minX = t.globals.minY, this.maxX = t.globals.maxY), !("datetime" === t.config.xaxis.type && new Date(this.minX).getUTCFullYear() < 1e3)) {
          var e = (this.minX + this.maxX) / 2,
            i = this.minX - (e - this.minX),
            a = this.maxX - (e - this.maxX),
            s = this._getNewMinXMaxX(i, a);
          t.globals.disableZoomOut || this.zoomUpdateOptions(s.minX, s.maxX);
        }
      }
    }, {
      key: "_getNewMinXMaxX",
      value: function (t, e) {
        var i = this.w.config.xaxis.convertedCatToNumeric;
        return {
          minX: i ? Math.floor(t) : t,
          maxX: i ? Math.floor(e) : e
        };
      }
    }, {
      key: "zoomUpdateOptions",
      value: function (t, e) {
        var i = this.w;
        if (void 0 !== t || void 0 !== e) {
          if (!(i.config.xaxis.convertedCatToNumeric && (t < 1 && (t = 1, e = i.globals.dataPoints), e - t < 2))) {
            var a = {
                min: t,
                max: e
              },
              s = this.getBeforeZoomRange(a);
            s && (a = s.xaxis);
            var r = {
                xaxis: a
              },
              o = x.clone(i.globals.initialConfig.yaxis);
            if (i.config.chart.zoom.autoScaleYaxis) o = new _(this.ctx).autoScaleY(this.ctx, o, {
              xaxis: a
            });
            i.config.chart.group || (r.yaxis = o), this.w.globals.zoomed = !0, this.ctx.updateHelpers._updateOptions(r, !1, this.w.config.chart.animations.dynamicAnimation.enabled), this.zoomCallback(a, o);
          }
        } else this.handleZoomReset();
      }
    }, {
      key: "zoomCallback",
      value: function (t, e) {
        "function" == typeof this.ev.zoomed && this.ev.zoomed(this.ctx, {
          xaxis: t,
          yaxis: e
        });
      }
    }, {
      key: "getBeforeZoomRange",
      value: function (t, e) {
        var i = null;
        return "function" == typeof this.ev.beforeZoom && (i = this.ev.beforeZoom(this, {
          xaxis: t,
          yaxis: e
        })), i;
      }
    }, {
      key: "toggleMenu",
      value: function () {
        var t = this;
        window.setTimeout(function () {
          t.elMenu.classList.contains("apexcharts-menu-open") ? t.elMenu.classList.remove("apexcharts-menu-open") : t.elMenu.classList.add("apexcharts-menu-open");
        }, 0);
      }
    }, {
      key: "handleDownload",
      value: function (t) {
        var e = this.w,
          i = new G(this.ctx);
        switch (t) {
          case "svg":
            i.exportToSVG(this.ctx);
            break;
          case "png":
            i.exportToPng(this.ctx);
            break;
          case "csv":
            i.exportToCSV({
              series: e.config.series,
              columnDelimiter: e.config.chart.toolbar.export.csv.columnDelimiter
            });
        }
      }
    }, {
      key: "handleZoomReset",
      value: function (t) {
        this.ctx.getSyncedCharts().forEach(function (t) {
          var e = t.w;
          if (e.globals.lastXAxis.min = void 0, e.globals.lastXAxis.max = void 0, t.updateHelpers.revertDefaultAxisMinMax(), "function" == typeof e.config.chart.events.beforeResetZoom) {
            var i = e.config.chart.events.beforeResetZoom(t, e);
            i && t.updateHelpers.revertDefaultAxisMinMax(i);
          }
          "function" == typeof e.config.chart.events.zoomed && t.ctx.toolbar.zoomCallback({
            min: e.config.xaxis.min,
            max: e.config.xaxis.max
          }), e.globals.zoomed = !1;
          var a = t.ctx.series.emptyCollapsedSeries(x.clone(e.globals.initialSeries));
          t.updateHelpers._updateSeries(a, e.config.chart.animations.dynamicAnimation.enabled);
        });
      }
    }, {
      key: "destroy",
      value: function () {
        this.elZoom = null, this.elZoomIn = null, this.elZoomOut = null, this.elPan = null, this.elSelection = null, this.elZoomReset = null, this.elMenuIcon = null;
      }
    }]), t;
  }(),
  ct = function (t) {
    n(i, ht);
    var e = d(i);
    function i(t) {
      var s;
      return a(this, i), (s = e.call(this, t)).ctx = t, s.w = t.w, s.dragged = !1, s.graphics = new m(s.ctx), s.eventList = ["mousedown", "mouseleave", "mousemove", "touchstart", "touchmove", "mouseup", "touchend"], s.clientX = 0, s.clientY = 0, s.startX = 0, s.endX = 0, s.dragX = 0, s.startY = 0, s.endY = 0, s.dragY = 0, s.moveDirection = "none", s;
    }
    return r(i, [{
      key: "init",
      value: function (t) {
        var e = this,
          i = t.xyRatios,
          a = this.w,
          s = this;
        this.xyRatios = i, this.zoomRect = this.graphics.drawRect(0, 0, 0, 0), this.selectionRect = this.graphics.drawRect(0, 0, 0, 0), this.gridRect = a.globals.dom.baseEl.querySelector(".apexcharts-grid"), this.zoomRect.node.classList.add("apexcharts-zoom-rect"), this.selectionRect.node.classList.add("apexcharts-selection-rect"), a.globals.dom.elGraphical.add(this.zoomRect), a.globals.dom.elGraphical.add(this.selectionRect), "x" === a.config.chart.selection.type ? this.slDraggableRect = this.selectionRect.draggable({
          minX: 0,
          minY: 0,
          maxX: a.globals.gridWidth,
          maxY: a.globals.gridHeight
        }).on("dragmove", this.selectionDragging.bind(this, "dragging")) : "y" === a.config.chart.selection.type ? this.slDraggableRect = this.selectionRect.draggable({
          minX: 0,
          maxX: a.globals.gridWidth
        }).on("dragmove", this.selectionDragging.bind(this, "dragging")) : this.slDraggableRect = this.selectionRect.draggable().on("dragmove", this.selectionDragging.bind(this, "dragging")), this.preselectedSelection(), this.hoverArea = a.globals.dom.baseEl.querySelector("".concat(a.globals.chartClass, " .apexcharts-svg")), this.hoverArea.classList.add("apexcharts-zoomable"), this.eventList.forEach(function (t) {
          e.hoverArea.addEventListener(t, s.svgMouseEvents.bind(s, i), {
            capture: !1,
            passive: !0
          });
        });
      }
    }, {
      key: "destroy",
      value: function () {
        this.slDraggableRect && (this.slDraggableRect.draggable(!1), this.slDraggableRect.off(), this.selectionRect.off()), this.selectionRect = null, this.zoomRect = null, this.gridRect = null;
      }
    }, {
      key: "svgMouseEvents",
      value: function (t, e) {
        var i = this.w,
          a = this,
          s = this.ctx.toolbar,
          r = i.globals.zoomEnabled ? i.config.chart.zoom.type : i.config.chart.selection.type,
          o = i.config.chart.toolbar.autoSelected;
        if (e.shiftKey ? (this.shiftWasPressed = !0, s.enableZoomPanFromToolbar("pan" === o ? "zoom" : "pan")) : this.shiftWasPressed && (s.enableZoomPanFromToolbar(o), this.shiftWasPressed = !1), e.target) {
          var n,
            l = e.target.classList;
          if (e.target.parentNode && null !== e.target.parentNode && (n = e.target.parentNode.classList), !(l.contains("apexcharts-selection-rect") || l.contains("apexcharts-legend-marker") || l.contains("apexcharts-legend-text") || n && n.contains("apexcharts-toolbar"))) {
            if (a.clientX = "touchmove" === e.type || "touchstart" === e.type ? e.touches[0].clientX : "touchend" === e.type ? e.changedTouches[0].clientX : e.clientX, a.clientY = "touchmove" === e.type || "touchstart" === e.type ? e.touches[0].clientY : "touchend" === e.type ? e.changedTouches[0].clientY : e.clientY, "mousedown" === e.type && 1 === e.which) {
              var h = a.gridRect.getBoundingClientRect();
              a.startX = a.clientX - h.left, a.startY = a.clientY - h.top, a.dragged = !1, a.w.globals.mousedown = !0;
            }
            if (("mousemove" === e.type && 1 === e.which || "touchmove" === e.type) && (a.dragged = !0, i.globals.panEnabled ? (i.globals.selection = null, a.w.globals.mousedown && a.panDragging({
              context: a,
              zoomtype: r,
              xyRatios: t
            })) : (a.w.globals.mousedown && i.globals.zoomEnabled || a.w.globals.mousedown && i.globals.selectionEnabled) && (a.selection = a.selectionDrawing({
              context: a,
              zoomtype: r
            }))), "mouseup" === e.type || "touchend" === e.type || "mouseleave" === e.type) {
              var c = a.gridRect.getBoundingClientRect();
              a.w.globals.mousedown && (a.endX = a.clientX - c.left, a.endY = a.clientY - c.top, a.dragX = Math.abs(a.endX - a.startX), a.dragY = Math.abs(a.endY - a.startY), (i.globals.zoomEnabled || i.globals.selectionEnabled) && a.selectionDrawn({
                context: a,
                zoomtype: r
              }), i.globals.panEnabled && i.config.xaxis.convertedCatToNumeric && a.delayedPanScrolled()), i.globals.zoomEnabled && a.hideSelectionRect(this.selectionRect), a.dragged = !1, a.w.globals.mousedown = !1;
            }
            this.makeSelectionRectDraggable();
          }
        }
      }
    }, {
      key: "makeSelectionRectDraggable",
      value: function () {
        var t = this.w;
        if (this.selectionRect) {
          var e = this.selectionRect.node.getBoundingClientRect();
          e.width > 0 && e.height > 0 && this.slDraggableRect.selectize({
            points: "l, r",
            pointSize: 8,
            pointType: "rect"
          }).resize({
            constraint: {
              minX: 0,
              minY: 0,
              maxX: t.globals.gridWidth,
              maxY: t.globals.gridHeight
            }
          }).on("resizing", this.selectionDragging.bind(this, "resizing"));
        }
      }
    }, {
      key: "preselectedSelection",
      value: function () {
        var t = this.w,
          e = this.xyRatios;
        if (!t.globals.zoomEnabled) if (void 0 !== t.globals.selection && null !== t.globals.selection) this.drawSelectionRect(t.globals.selection);else if (void 0 !== t.config.chart.selection.xaxis.min && void 0 !== t.config.chart.selection.xaxis.max) {
          var i = (t.config.chart.selection.xaxis.min - t.globals.minX) / e.xRatio,
            a = {
              x: i,
              y: 0,
              width: t.globals.gridWidth - (t.globals.maxX - t.config.chart.selection.xaxis.max) / e.xRatio - i,
              height: t.globals.gridHeight,
              translateX: 0,
              translateY: 0,
              selectionEnabled: !0
            };
          this.drawSelectionRect(a), this.makeSelectionRectDraggable(), "function" == typeof t.config.chart.events.selection && t.config.chart.events.selection(this.ctx, {
            xaxis: {
              min: t.config.chart.selection.xaxis.min,
              max: t.config.chart.selection.xaxis.max
            },
            yaxis: {}
          });
        }
      }
    }, {
      key: "drawSelectionRect",
      value: function (t) {
        var e = t.x,
          i = t.y,
          a = t.width,
          s = t.height,
          r = t.translateX,
          o = void 0 === r ? 0 : r,
          n = t.translateY,
          l = void 0 === n ? 0 : n,
          h = this.w,
          c = this.zoomRect,
          d = this.selectionRect;
        if (this.dragged || null !== h.globals.selection) {
          var g = {
            transform: "translate(" + o + ", " + l + ")"
          };
          h.globals.zoomEnabled && this.dragged && (a < 0 && (a = 1), c.attr({
            x: e,
            y: i,
            width: a,
            height: s,
            fill: h.config.chart.zoom.zoomedArea.fill.color,
            "fill-opacity": h.config.chart.zoom.zoomedArea.fill.opacity,
            stroke: h.config.chart.zoom.zoomedArea.stroke.color,
            "stroke-width": h.config.chart.zoom.zoomedArea.stroke.width,
            "stroke-opacity": h.config.chart.zoom.zoomedArea.stroke.opacity
          }), m.setAttrs(c.node, g)), h.globals.selectionEnabled && (d.attr({
            x: e,
            y: i,
            width: a > 0 ? a : 0,
            height: s > 0 ? s : 0,
            fill: h.config.chart.selection.fill.color,
            "fill-opacity": h.config.chart.selection.fill.opacity,
            stroke: h.config.chart.selection.stroke.color,
            "stroke-width": h.config.chart.selection.stroke.width,
            "stroke-dasharray": h.config.chart.selection.stroke.dashArray,
            "stroke-opacity": h.config.chart.selection.stroke.opacity
          }), m.setAttrs(d.node, g));
        }
      }
    }, {
      key: "hideSelectionRect",
      value: function (t) {
        t && t.attr({
          x: 0,
          y: 0,
          width: 0,
          height: 0
        });
      }
    }, {
      key: "selectionDrawing",
      value: function (t) {
        var e = t.context,
          i = t.zoomtype,
          a = this.w,
          s = e,
          r = this.gridRect.getBoundingClientRect(),
          o = s.startX - 1,
          n = s.startY,
          l = !1,
          h = !1,
          c = s.clientX - r.left - o,
          d = s.clientY - r.top - n,
          g = {};
        return Math.abs(c + o) > a.globals.gridWidth ? c = a.globals.gridWidth - o : s.clientX - r.left < 0 && (c = o), o > s.clientX - r.left && (l = !0, c = Math.abs(c)), n > s.clientY - r.top && (h = !0, d = Math.abs(d)), g = "x" === i ? {
          x: l ? o - c : o,
          y: 0,
          width: c,
          height: a.globals.gridHeight
        } : "y" === i ? {
          x: 0,
          y: h ? n - d : n,
          width: a.globals.gridWidth,
          height: d
        } : {
          x: l ? o - c : o,
          y: h ? n - d : n,
          width: c,
          height: d
        }, s.drawSelectionRect(g), s.selectionDragging("resizing"), g;
      }
    }, {
      key: "selectionDragging",
      value: function (t, e) {
        var i = this,
          a = this.w,
          s = this.xyRatios,
          r = this.selectionRect,
          o = 0;
        "resizing" === t && (o = 30);
        var n = function (t) {
            return parseFloat(r.node.getAttribute(t));
          },
          l = {
            x: n("x"),
            y: n("y"),
            width: n("width"),
            height: n("height")
          };
        a.globals.selection = l, "function" == typeof a.config.chart.events.selection && a.globals.selectionEnabled && (clearTimeout(this.w.globals.selectionResizeTimer), this.w.globals.selectionResizeTimer = window.setTimeout(function () {
          var t = i.gridRect.getBoundingClientRect(),
            e = r.node.getBoundingClientRect(),
            o = {
              xaxis: {
                min: a.globals.xAxisScale.niceMin + (e.left - t.left) * s.xRatio,
                max: a.globals.xAxisScale.niceMin + (e.right - t.left) * s.xRatio
              },
              yaxis: {
                min: a.globals.yAxisScale[0].niceMin + (t.bottom - e.bottom) * s.yRatio[0],
                max: a.globals.yAxisScale[0].niceMax - (e.top - t.top) * s.yRatio[0]
              }
            };
          a.config.chart.events.selection(i.ctx, o), a.config.chart.brush.enabled && void 0 !== a.config.chart.events.brushScrolled && a.config.chart.events.brushScrolled(i.ctx, o);
        }, o));
      }
    }, {
      key: "selectionDrawn",
      value: function (t) {
        var e = t.context,
          i = t.zoomtype,
          a = this.w,
          s = e,
          r = this.xyRatios,
          o = this.ctx.toolbar;
        if (s.startX > s.endX) {
          var n = s.startX;
          s.startX = s.endX, s.endX = n;
        }
        if (s.startY > s.endY) {
          var l = s.startY;
          s.startY = s.endY, s.endY = l;
        }
        var h = void 0,
          c = void 0;
        a.globals.isRangeBar ? (h = a.globals.yAxisScale[0].niceMin + s.startX * r.invertedYRatio, c = a.globals.yAxisScale[0].niceMin + s.endX * r.invertedYRatio) : (h = a.globals.xAxisScale.niceMin + s.startX * r.xRatio, c = a.globals.xAxisScale.niceMin + s.endX * r.xRatio);
        var d = [],
          g = [];
        if (a.config.yaxis.forEach(function (t, e) {
          d.push(a.globals.yAxisScale[e].niceMax - r.yRatio[e] * s.startY), g.push(a.globals.yAxisScale[e].niceMax - r.yRatio[e] * s.endY);
        }), s.dragged && (s.dragX > 10 || s.dragY > 10) && h !== c) if (a.globals.zoomEnabled) {
          var u = x.clone(a.globals.initialConfig.yaxis),
            p = x.clone(a.globals.initialConfig.xaxis);
          if (a.globals.zoomed = !0, a.config.xaxis.convertedCatToNumeric && (h = Math.floor(h), c = Math.floor(c), h < 1 && (h = 1, c = a.globals.dataPoints), c - h < 2 && (c = h + 1)), "xy" !== i && "x" !== i || (p = {
            min: h,
            max: c
          }), "xy" !== i && "y" !== i || u.forEach(function (t, e) {
            u[e].min = g[e], u[e].max = d[e];
          }), a.config.chart.zoom.autoScaleYaxis) {
            var f = new _(s.ctx);
            u = f.autoScaleY(s.ctx, u, {
              xaxis: p
            });
          }
          if (o) {
            var b = o.getBeforeZoomRange(p, u);
            b && (p = b.xaxis ? b.xaxis : p, u = b.yaxis ? b.yaxis : u);
          }
          var v = {
            xaxis: p
          };
          a.config.chart.group || (v.yaxis = u), s.ctx.updateHelpers._updateOptions(v, !1, s.w.config.chart.animations.dynamicAnimation.enabled), "function" == typeof a.config.chart.events.zoomed && o.zoomCallback(p, u);
        } else if (a.globals.selectionEnabled) {
          var m,
            y = null;
          m = {
            min: h,
            max: c
          }, "xy" !== i && "y" !== i || (y = x.clone(a.config.yaxis)).forEach(function (t, e) {
            y[e].min = g[e], y[e].max = d[e];
          }), a.globals.selection = s.selection, "function" == typeof a.config.chart.events.selection && a.config.chart.events.selection(s.ctx, {
            xaxis: m,
            yaxis: y
          });
        }
      }
    }, {
      key: "panDragging",
      value: function (t) {
        var e = t.context,
          i = this.w,
          a = e;
        if (void 0 !== i.globals.lastClientPosition.x) {
          var s = i.globals.lastClientPosition.x - a.clientX,
            r = i.globals.lastClientPosition.y - a.clientY;
          Math.abs(s) > Math.abs(r) && s > 0 ? this.moveDirection = "left" : Math.abs(s) > Math.abs(r) && s < 0 ? this.moveDirection = "right" : Math.abs(r) > Math.abs(s) && r > 0 ? this.moveDirection = "up" : Math.abs(r) > Math.abs(s) && r < 0 && (this.moveDirection = "down");
        }
        i.globals.lastClientPosition = {
          x: a.clientX,
          y: a.clientY
        };
        var o = i.globals.isRangeBar ? i.globals.minY : i.globals.minX,
          n = i.globals.isRangeBar ? i.globals.maxY : i.globals.maxX;
        i.config.xaxis.convertedCatToNumeric || a.panScrolled(o, n);
      }
    }, {
      key: "delayedPanScrolled",
      value: function () {
        var t = this.w,
          e = t.globals.minX,
          i = t.globals.maxX,
          a = (t.globals.maxX - t.globals.minX) / 2;
        "left" === this.moveDirection ? (e = t.globals.minX + a, i = t.globals.maxX + a) : "right" === this.moveDirection && (e = t.globals.minX - a, i = t.globals.maxX - a), e = Math.floor(e), i = Math.floor(i), this.updateScrolledChart({
          xaxis: {
            min: e,
            max: i
          }
        }, e, i);
      }
    }, {
      key: "panScrolled",
      value: function (t, e) {
        var i = this.w,
          a = this.xyRatios,
          s = x.clone(i.globals.initialConfig.yaxis),
          r = a.xRatio,
          o = i.globals.minX,
          n = i.globals.maxX;
        i.globals.isRangeBar && (r = a.invertedYRatio, o = i.globals.minY, n = i.globals.maxY), "left" === this.moveDirection ? (t = o + i.globals.gridWidth / 15 * r, e = n + i.globals.gridWidth / 15 * r) : "right" === this.moveDirection && (t = o - i.globals.gridWidth / 15 * r, e = n - i.globals.gridWidth / 15 * r), i.globals.isRangeBar || (t < i.globals.initialMinX || e > i.globals.initialMaxX) && (t = o, e = n);
        var l = {
          min: t,
          max: e
        };
        i.config.chart.zoom.autoScaleYaxis && (s = new _(this.ctx).autoScaleY(this.ctx, s, {
          xaxis: l
        }));
        var h = {
          xaxis: {
            min: t,
            max: e
          }
        };
        i.config.chart.group || (h.yaxis = s), this.updateScrolledChart(h, t, e);
      }
    }, {
      key: "updateScrolledChart",
      value: function (t, e, i) {
        var a = this.w;
        this.ctx.updateHelpers._updateOptions(t, !1, !1), "function" == typeof a.config.chart.events.scrolled && a.config.chart.events.scrolled(this.ctx, {
          xaxis: {
            min: e,
            max: i
          }
        });
      }
    }]), i;
  }(),
  dt = function () {
    function t(e) {
      a(this, t), this.w = e.w, this.ttCtx = e, this.ctx = e.ctx;
    }
    return r(t, [{
      key: "getNearestValues",
      value: function (t) {
        var e = t.hoverArea,
          i = t.elGrid,
          a = t.clientX,
          s = t.clientY,
          r = this.w,
          o = i.getBoundingClientRect(),
          n = o.width,
          l = o.height,
          h = n / (r.globals.dataPoints - 1),
          c = l / r.globals.dataPoints,
          d = this.hasBars();
        !r.globals.comboCharts && !d || r.config.xaxis.convertedCatToNumeric || (h = n / r.globals.dataPoints);
        var g = a - o.left - r.globals.barPadForNumericAxis,
          u = s - o.top;
        g < 0 || u < 0 || g > n || u > l ? (e.classList.remove("hovering-zoom"), e.classList.remove("hovering-pan")) : r.globals.zoomEnabled ? (e.classList.remove("hovering-pan"), e.classList.add("hovering-zoom")) : r.globals.panEnabled && (e.classList.remove("hovering-zoom"), e.classList.add("hovering-pan"));
        var p = Math.round(g / h),
          f = Math.floor(u / c);
        d && !r.config.xaxis.convertedCatToNumeric && (p = Math.ceil(g / h), p -= 1);
        var b = null,
          v = null,
          m = [],
          y = [];
        if (r.globals.seriesXvalues.forEach(function (t) {
          m.push([t[0] + 1e-6].concat(t));
        }), r.globals.seriesYvalues.forEach(function (t) {
          y.push([t[0] + 1e-6].concat(t));
        }), m = m.map(function (t) {
          return t.filter(function (t) {
            return x.isNumber(t);
          });
        }), y = y.map(function (t) {
          return t.filter(function (t) {
            return x.isNumber(t);
          });
        }), r.globals.isXNumeric) {
          var w = this.ttCtx.getElGrid().getBoundingClientRect(),
            k = g * (w.width / n),
            A = u * (w.height / l);
          b = (v = this.closestInMultiArray(k, A, m, y)).index, p = v.j, null !== b && (m = r.globals.seriesXvalues[b], p = (v = this.closestInArray(k, m)).index);
        }
        return r.globals.capturedSeriesIndex = null === b ? -1 : b, (!p || p < 1) && (p = 0), r.globals.isBarHorizontal ? r.globals.capturedDataPointIndex = f : r.globals.capturedDataPointIndex = p, {
          capturedSeries: b,
          j: r.globals.isBarHorizontal ? f : p,
          hoverX: g,
          hoverY: u
        };
      }
    }, {
      key: "closestInMultiArray",
      value: function (t, e, i, a) {
        var s = this.w,
          r = 0,
          o = null,
          n = -1;
        s.globals.series.length > 1 ? r = this.getFirstActiveXArray(i) : o = 0;
        var l = i[r][0],
          h = Math.abs(t - l);
        if (i.forEach(function (e) {
          e.forEach(function (e, i) {
            var a = Math.abs(t - e);
            a < h && (h = a, n = i);
          });
        }), -1 !== n) {
          var c = a[r][n],
            d = Math.abs(e - c);
          o = r, a.forEach(function (t, i) {
            var a = Math.abs(e - t[n]);
            a < d && (d = a, o = i);
          });
        }
        return {
          index: o,
          j: n
        };
      }
    }, {
      key: "getFirstActiveXArray",
      value: function (t) {
        for (var e = this.w, i = 0, a = t.map(function (t, e) {
            return t.length > 0 ? e : -1;
          }), s = 0; s < a.length; s++) if (-1 !== a[s] && -1 === e.globals.collapsedSeriesIndices.indexOf(s) && -1 === e.globals.ancillaryCollapsedSeriesIndices.indexOf(s)) {
          i = a[s];
          break;
        }
        return i;
      }
    }, {
      key: "closestInArray",
      value: function (t, e) {
        for (var i = e[0], a = null, s = Math.abs(t - i), r = 0; r < e.length; r++) {
          var o = Math.abs(t - e[r]);
          o < s && (s = o, a = r);
        }
        return {
          index: a
        };
      }
    }, {
      key: "isXoverlap",
      value: function (t) {
        var e = [],
          i = this.w.globals.seriesX.filter(function (t) {
            return void 0 !== t[0];
          });
        if (i.length > 0) for (var a = 0; a < i.length - 1; a++) void 0 !== i[a][t] && void 0 !== i[a + 1][t] && i[a][t] !== i[a + 1][t] && e.push("unEqual");
        return 0 === e.length;
      }
    }, {
      key: "isInitialSeriesSameLen",
      value: function () {
        for (var t = !0, e = this.w.globals.initialSeries, i = 0; i < e.length - 1; i++) if (e[i].data.length !== e[i + 1].data.length) {
          t = !1;
          break;
        }
        return t;
      }
    }, {
      key: "getBarsHeight",
      value: function (t) {
        return u(t).reduce(function (t, e) {
          return t + e.getBBox().height;
        }, 0);
      }
    }, {
      key: "getElMarkers",
      value: function (t) {
        return "number" == typeof t ? this.w.globals.dom.baseEl.querySelectorAll(".apexcharts-series[data\\:realIndex='".concat(t, "'] .apexcharts-series-markers-wrap > *")) : this.w.globals.dom.baseEl.querySelectorAll(".apexcharts-series-markers-wrap > *");
      }
    }, {
      key: "getAllMarkers",
      value: function () {
        var t = this.w.globals.dom.baseEl.querySelectorAll(".apexcharts-series-markers-wrap");
        (t = u(t)).sort(function (t, e) {
          var i = Number(t.getAttribute("data:realIndex")),
            a = Number(e.getAttribute("data:realIndex"));
          return a < i ? 1 : a > i ? -1 : 0;
        });
        var e = [];
        return t.forEach(function (t) {
          e.push(t.querySelector(".apexcharts-marker"));
        }), e;
      }
    }, {
      key: "hasMarkers",
      value: function (t) {
        return this.getElMarkers(t).length > 0;
      }
    }, {
      key: "getElBars",
      value: function () {
        return this.w.globals.dom.baseEl.querySelectorAll(".apexcharts-bar-series,  .apexcharts-candlestick-series, .apexcharts-boxPlot-series, .apexcharts-rangebar-series");
      }
    }, {
      key: "hasBars",
      value: function () {
        return this.getElBars().length > 0;
      }
    }, {
      key: "getHoverMarkerSize",
      value: function (t) {
        var e = this.w,
          i = e.config.markers.hover.size;
        return void 0 === i && (i = e.globals.markers.size[t] + e.config.markers.hover.sizeOffset), i;
      }
    }, {
      key: "toggleAllTooltipSeriesGroups",
      value: function (t) {
        var e = this.w,
          i = this.ttCtx;
        0 === i.allTooltipSeriesGroups.length && (i.allTooltipSeriesGroups = e.globals.dom.baseEl.querySelectorAll(".apexcharts-tooltip-series-group"));
        for (var a = i.allTooltipSeriesGroups, s = 0; s < a.length; s++) "enable" === t ? (a[s].classList.add("apexcharts-active"), a[s].style.display = e.config.tooltip.items.display) : (a[s].classList.remove("apexcharts-active"), a[s].style.display = "none");
      }
    }]), t;
  }(),
  gt = function () {
    function t(e) {
      a(this, t), this.w = e.w, this.ctx = e.ctx, this.ttCtx = e, this.tooltipUtil = new dt(e);
    }
    return r(t, [{
      key: "drawSeriesTexts",
      value: function (t) {
        var e = t.shared,
          i = void 0 === e || e,
          a = t.ttItems,
          s = t.i,
          r = void 0 === s ? 0 : s,
          o = t.j,
          n = void 0 === o ? null : o,
          l = t.y1,
          h = t.y2,
          c = t.e,
          d = this.w;
        void 0 !== d.config.tooltip.custom ? this.handleCustomTooltip({
          i: r,
          j: n,
          y1: l,
          y2: h,
          w: d
        }) : this.toggleActiveInactiveSeries(i);
        var g = this.getValuesToPrint({
          i: r,
          j: n
        });
        this.printLabels({
          i: r,
          j: n,
          values: g,
          ttItems: a,
          shared: i,
          e: c
        });
        var u = this.ttCtx.getElTooltip();
        this.ttCtx.tooltipRect.ttWidth = u.getBoundingClientRect().width, this.ttCtx.tooltipRect.ttHeight = u.getBoundingClientRect().height;
      }
    }, {
      key: "printLabels",
      value: function (t) {
        var i,
          a = this,
          s = t.i,
          r = t.j,
          o = t.values,
          n = t.ttItems,
          l = t.shared,
          h = t.e,
          c = this.w,
          d = [],
          g = function (t) {
            return c.globals.seriesGoals[t] && c.globals.seriesGoals[t][r] && Array.isArray(c.globals.seriesGoals[t][r]);
          },
          u = o.xVal,
          p = o.zVal,
          f = o.xAxisTTVal,
          x = "",
          b = c.globals.colors[s];
        null !== r && c.config.plotOptions.bar.distributed && (b = c.globals.colors[r]);
        for (var v = function (t, o) {
            var v = a.getFormatters(s);
            x = a.getSeriesName({
              fn: v.yLbTitleFormatter,
              index: s,
              seriesIndex: s,
              j: r
            }), "treemap" === c.config.chart.type && (x = v.yLbTitleFormatter(String(c.config.series[s].data[r].x), {
              series: c.globals.series,
              seriesIndex: s,
              dataPointIndex: r,
              w: c
            }));
            var m = c.config.tooltip.inverseOrder ? o : t;
            if (c.globals.axisCharts) {
              var y = function (t) {
                var e, i, a, s;
                return c.globals.isRangeData ? v.yLbFormatter(null === (e = c.globals.seriesRangeStart) || void 0 === e || null === (i = e[t]) || void 0 === i ? void 0 : i[r], {
                  series: c.globals.seriesRangeStart,
                  seriesIndex: t,
                  dataPointIndex: r,
                  w: c
                }) + " - " + v.yLbFormatter(null === (a = c.globals.seriesRangeEnd) || void 0 === a || null === (s = a[t]) || void 0 === s ? void 0 : s[r], {
                  series: c.globals.seriesRangeEnd,
                  seriesIndex: t,
                  dataPointIndex: r,
                  w: c
                }) : v.yLbFormatter(c.globals.series[t][r], {
                  series: c.globals.series,
                  seriesIndex: t,
                  dataPointIndex: r,
                  w: c
                });
              };
              if (l) v = a.getFormatters(m), x = a.getSeriesName({
                fn: v.yLbTitleFormatter,
                index: m,
                seriesIndex: s,
                j: r
              }), b = c.globals.colors[m], i = y(m), g(m) && (d = c.globals.seriesGoals[m][r].map(function (t) {
                return {
                  attrs: t,
                  val: v.yLbFormatter(t.value, {
                    seriesIndex: m,
                    dataPointIndex: r,
                    w: c
                  })
                };
              }));else {
                var w,
                  k = null == h || null === (w = h.target) || void 0 === w ? void 0 : w.getAttribute("fill");
                k && (b = -1 !== k.indexOf("url") ? document.querySelector(k.substr(4).slice(0, -1)).childNodes[0].getAttribute("stroke") : k), i = y(s), g(s) && Array.isArray(c.globals.seriesGoals[s][r]) && (d = c.globals.seriesGoals[s][r].map(function (t) {
                  return {
                    attrs: t,
                    val: v.yLbFormatter(t.value, {
                      seriesIndex: s,
                      dataPointIndex: r,
                      w: c
                    })
                  };
                }));
              }
            }
            null === r && (i = v.yLbFormatter(c.globals.series[s], e(e({}, c), {}, {
              seriesIndex: s,
              dataPointIndex: s
            }))), a.DOMHandling({
              i: s,
              t: m,
              j: r,
              ttItems: n,
              values: {
                val: i,
                goalVals: d,
                xVal: u,
                xAxisTTVal: f,
                zVal: p
              },
              seriesName: x,
              shared: l,
              pColor: b
            });
          }, m = 0, y = c.globals.series.length - 1; m < c.globals.series.length; m++, y--) v(m, y);
      }
    }, {
      key: "getFormatters",
      value: function (t) {
        var e,
          i = this.w,
          a = i.globals.yLabelFormatters[t];
        return void 0 !== i.globals.ttVal ? Array.isArray(i.globals.ttVal) ? (a = i.globals.ttVal[t] && i.globals.ttVal[t].formatter, e = i.globals.ttVal[t] && i.globals.ttVal[t].title && i.globals.ttVal[t].title.formatter) : (a = i.globals.ttVal.formatter, "function" == typeof i.globals.ttVal.title.formatter && (e = i.globals.ttVal.title.formatter)) : e = i.config.tooltip.y.title.formatter, "function" != typeof a && (a = i.globals.yLabelFormatters[0] ? i.globals.yLabelFormatters[0] : function (t) {
          return t;
        }), "function" != typeof e && (e = function (t) {
          return t;
        }), {
          yLbFormatter: a,
          yLbTitleFormatter: e
        };
      }
    }, {
      key: "getSeriesName",
      value: function (t) {
        var e = t.fn,
          i = t.index,
          a = t.seriesIndex,
          s = t.j,
          r = this.w;
        return e(String(r.globals.seriesNames[i]), {
          series: r.globals.series,
          seriesIndex: a,
          dataPointIndex: s,
          w: r
        });
      }
    }, {
      key: "DOMHandling",
      value: function (t) {
        t.i;
        var e = t.t,
          i = t.j,
          a = t.ttItems,
          s = t.values,
          r = t.seriesName,
          o = t.shared,
          n = t.pColor,
          l = this.w,
          h = this.ttCtx,
          c = s.val,
          d = s.goalVals,
          g = s.xVal,
          u = s.xAxisTTVal,
          p = s.zVal,
          f = null;
        f = a[e].children, l.config.tooltip.fillSeriesColor && (a[e].style.backgroundColor = n, f[0].style.display = "none"), h.showTooltipTitle && (null === h.tooltipTitle && (h.tooltipTitle = l.globals.dom.baseEl.querySelector(".apexcharts-tooltip-title")), h.tooltipTitle.innerHTML = g), h.isXAxisTooltipEnabled && (h.xaxisTooltipText.innerHTML = "" !== u ? u : g);
        var x = a[e].querySelector(".apexcharts-tooltip-text-y-label");
        x && (x.innerHTML = r || "");
        var b = a[e].querySelector(".apexcharts-tooltip-text-y-value");
        b && (b.innerHTML = void 0 !== c ? c : ""), f[0] && f[0].classList.contains("apexcharts-tooltip-marker") && (l.config.tooltip.marker.fillColors && Array.isArray(l.config.tooltip.marker.fillColors) && (n = l.config.tooltip.marker.fillColors[e]), f[0].style.backgroundColor = n), l.config.tooltip.marker.show || (f[0].style.display = "none");
        var v = a[e].querySelector(".apexcharts-tooltip-text-goals-label"),
          m = a[e].querySelector(".apexcharts-tooltip-text-goals-value");
        if (d.length && l.globals.seriesGoals[e]) {
          var y = function () {
            var t = "<div >",
              e = "<div>";
            d.forEach(function (i, a) {
              t += ' <div style="display: flex"><span class="apexcharts-tooltip-marker" style="background-color: '.concat(i.attrs.strokeColor, '; height: 3px; border-radius: 0; top: 5px;"></span> ').concat(i.attrs.name, "</div>"), e += "<div>".concat(i.val, "</div>");
            }), v.innerHTML = t + "</div>", m.innerHTML = e + "</div>";
          };
          o ? l.globals.seriesGoals[e][i] && Array.isArray(l.globals.seriesGoals[e][i]) ? y() : (v.innerHTML = "", m.innerHTML = "") : y();
        } else v.innerHTML = "", m.innerHTML = "";
        null !== p && (a[e].querySelector(".apexcharts-tooltip-text-z-label").innerHTML = l.config.tooltip.z.title, a[e].querySelector(".apexcharts-tooltip-text-z-value").innerHTML = void 0 !== p ? p : "");
        o && f[0] && (null == c || l.globals.ancillaryCollapsedSeriesIndices.indexOf(e) > -1 || l.globals.collapsedSeriesIndices.indexOf(e) > -1 ? f[0].parentNode.style.display = "none" : f[0].parentNode.style.display = l.config.tooltip.items.display);
      }
    }, {
      key: "toggleActiveInactiveSeries",
      value: function (t) {
        var e = this.w;
        if (t) this.tooltipUtil.toggleAllTooltipSeriesGroups("enable");else {
          this.tooltipUtil.toggleAllTooltipSeriesGroups("disable");
          var i = e.globals.dom.baseEl.querySelector(".apexcharts-tooltip-series-group");
          i && (i.classList.add("apexcharts-active"), i.style.display = e.config.tooltip.items.display);
        }
      }
    }, {
      key: "getValuesToPrint",
      value: function (t) {
        var e = t.i,
          i = t.j,
          a = this.w,
          s = this.ctx.series.filteredSeriesX(),
          r = "",
          o = "",
          n = null,
          l = null,
          h = {
            series: a.globals.series,
            seriesIndex: e,
            dataPointIndex: i,
            w: a
          },
          c = a.globals.ttZFormatter;
        null === i ? l = a.globals.series[e] : a.globals.isXNumeric && "treemap" !== a.config.chart.type ? (r = s[e][i], 0 === s[e].length && (r = s[this.tooltipUtil.getFirstActiveXArray(s)][i])) : r = void 0 !== a.globals.labels[i] ? a.globals.labels[i] : "";
        var d = r;
        a.globals.isXNumeric && "datetime" === a.config.xaxis.type ? r = new T(this.ctx).xLabelFormat(a.globals.ttKeyFormatter, d, d, {
          i: void 0,
          dateFormatter: new I(this.ctx).formatDate,
          w: this.w
        }) : r = a.globals.isBarHorizontal ? a.globals.yLabelFormatters[0](d, h) : a.globals.xLabelFormatter(d, h);
        return void 0 !== a.config.tooltip.x.formatter && (r = a.globals.ttKeyFormatter(d, h)), a.globals.seriesZ.length > 0 && a.globals.seriesZ[e].length > 0 && (n = c(a.globals.seriesZ[e][i], a)), o = "function" == typeof a.config.xaxis.tooltip.formatter ? a.globals.xaxisTooltipFormatter(d, h) : r, {
          val: Array.isArray(l) ? l.join(" ") : l,
          xVal: Array.isArray(r) ? r.join(" ") : r,
          xAxisTTVal: Array.isArray(o) ? o.join(" ") : o,
          zVal: n
        };
      }
    }, {
      key: "handleCustomTooltip",
      value: function (t) {
        var e = t.i,
          i = t.j,
          a = t.y1,
          s = t.y2,
          r = t.w,
          o = this.ttCtx.getElTooltip(),
          n = r.config.tooltip.custom;
        Array.isArray(n) && n[e] && (n = n[e]), o.innerHTML = n({
          ctx: this.ctx,
          series: r.globals.series,
          seriesIndex: e,
          dataPointIndex: i,
          y1: a,
          y2: s,
          w: r
        });
      }
    }]), t;
  }(),
  ut = function () {
    function t(e) {
      a(this, t), this.ttCtx = e, this.ctx = e.ctx, this.w = e.w;
    }
    return r(t, [{
      key: "moveXCrosshairs",
      value: function (t) {
        var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null,
          i = this.ttCtx,
          a = this.w,
          s = i.getElXCrosshairs(),
          r = t - i.xcrosshairsWidth / 2,
          o = a.globals.labels.slice().length;
        if (null !== e && (r = a.globals.gridWidth / o * e), null === s || a.globals.isBarHorizontal || (s.setAttribute("x", r), s.setAttribute("x1", r), s.setAttribute("x2", r), s.setAttribute("y2", a.globals.gridHeight), s.classList.add("apexcharts-active")), r < 0 && (r = 0), r > a.globals.gridWidth && (r = a.globals.gridWidth), i.isXAxisTooltipEnabled) {
          var n = r;
          "tickWidth" !== a.config.xaxis.crosshairs.width && "barWidth" !== a.config.xaxis.crosshairs.width || (n = r + i.xcrosshairsWidth / 2), this.moveXAxisTooltip(n);
        }
      }
    }, {
      key: "moveYCrosshairs",
      value: function (t) {
        var e = this.ttCtx;
        null !== e.ycrosshairs && m.setAttrs(e.ycrosshairs, {
          y1: t,
          y2: t
        }), null !== e.ycrosshairsHidden && m.setAttrs(e.ycrosshairsHidden, {
          y1: t,
          y2: t
        });
      }
    }, {
      key: "moveXAxisTooltip",
      value: function (t) {
        var e = this.w,
          i = this.ttCtx;
        if (null !== i.xaxisTooltip && 0 !== i.xcrosshairsWidth) {
          i.xaxisTooltip.classList.add("apexcharts-active");
          var a = i.xaxisOffY + e.config.xaxis.tooltip.offsetY + e.globals.translateY + 1 + e.config.xaxis.offsetY;
          if (t -= i.xaxisTooltip.getBoundingClientRect().width / 2, !isNaN(t)) {
            t += e.globals.translateX;
            var s;
            s = new m(this.ctx).getTextRects(i.xaxisTooltipText.innerHTML), i.xaxisTooltipText.style.minWidth = s.width + "px", i.xaxisTooltip.style.left = t + "px", i.xaxisTooltip.style.top = a + "px";
          }
        }
      }
    }, {
      key: "moveYAxisTooltip",
      value: function (t) {
        var e = this.w,
          i = this.ttCtx;
        null === i.yaxisTTEls && (i.yaxisTTEls = e.globals.dom.baseEl.querySelectorAll(".apexcharts-yaxistooltip"));
        var a = parseInt(i.ycrosshairsHidden.getAttribute("y1"), 10),
          s = e.globals.translateY + a,
          r = i.yaxisTTEls[t].getBoundingClientRect().height,
          o = e.globals.translateYAxisX[t] - 2;
        e.config.yaxis[t].opposite && (o -= 26), s -= r / 2, -1 === e.globals.ignoreYAxisIndexes.indexOf(t) ? (i.yaxisTTEls[t].classList.add("apexcharts-active"), i.yaxisTTEls[t].style.top = s + "px", i.yaxisTTEls[t].style.left = o + e.config.yaxis[t].tooltip.offsetX + "px") : i.yaxisTTEls[t].classList.remove("apexcharts-active");
      }
    }, {
      key: "moveTooltip",
      value: function (t, e) {
        var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null,
          a = this.w,
          s = this.ttCtx,
          r = s.getElTooltip(),
          o = s.tooltipRect,
          n = null !== i ? parseFloat(i) : 1,
          l = parseFloat(t) + n + 5,
          h = parseFloat(e) + n / 2;
        if (l > a.globals.gridWidth / 2 && (l = l - o.ttWidth - n - 10), l > a.globals.gridWidth - o.ttWidth - 10 && (l = a.globals.gridWidth - o.ttWidth), l < -20 && (l = -20), a.config.tooltip.followCursor) {
          var c = s.getElGrid().getBoundingClientRect();
          (l = s.e.clientX - c.left) > a.globals.gridWidth / 2 && (l -= s.tooltipRect.ttWidth), (h = s.e.clientY + a.globals.translateY - c.top) > a.globals.gridHeight / 2 && (h -= s.tooltipRect.ttHeight);
        } else a.globals.isBarHorizontal || o.ttHeight / 2 + h > a.globals.gridHeight && (h = a.globals.gridHeight - o.ttHeight + a.globals.translateY);
        isNaN(l) || (l += a.globals.translateX, r.style.left = l + "px", r.style.top = h + "px");
      }
    }, {
      key: "moveMarkers",
      value: function (t, e) {
        var i = this.w,
          a = this.ttCtx;
        if (i.globals.markers.size[t] > 0) for (var s = i.globals.dom.baseEl.querySelectorAll(" .apexcharts-series[data\\:realIndex='".concat(t, "'] .apexcharts-marker")), r = 0; r < s.length; r++) parseInt(s[r].getAttribute("rel"), 10) === e && (a.marker.resetPointsSize(), a.marker.enlargeCurrentPoint(e, s[r]));else a.marker.resetPointsSize(), this.moveDynamicPointOnHover(e, t);
      }
    }, {
      key: "moveDynamicPointOnHover",
      value: function (t, e) {
        var i,
          a,
          s = this.w,
          r = this.ttCtx,
          o = s.globals.pointsArray,
          n = r.tooltipUtil.getHoverMarkerSize(e),
          l = s.config.series[e].type;
        if (!l || "column" !== l && "candlestick" !== l && "boxPlot" !== l) {
          i = o[e][t][0], a = o[e][t][1] ? o[e][t][1] : 0;
          var h = s.globals.dom.baseEl.querySelector(".apexcharts-series[data\\:realIndex='".concat(e, "'] .apexcharts-series-markers circle"));
          h && a < s.globals.gridHeight && a > 0 && (h.setAttribute("r", n), h.setAttribute("cx", i), h.setAttribute("cy", a)), this.moveXCrosshairs(i), r.fixedTooltip || this.moveTooltip(i, a, n);
        }
      }
    }, {
      key: "moveDynamicPointsOnHover",
      value: function (t) {
        var e,
          i = this.ttCtx,
          a = i.w,
          s = 0,
          r = 0,
          o = a.globals.pointsArray;
        e = new N(this.ctx).getActiveConfigSeriesIndex("asc", ["line", "area", "scatter", "bubble"]);
        var n = i.tooltipUtil.getHoverMarkerSize(e);
        o[e] && (s = o[e][t][0], r = o[e][t][1]);
        var l = i.tooltipUtil.getAllMarkers();
        if (null !== l) for (var h = 0; h < a.globals.series.length; h++) {
          var c = o[h];
          if (a.globals.comboCharts && void 0 === c && l.splice(h, 0, null), c && c.length) {
            var d = o[h][t][1],
              g = void 0;
            if (l[h].setAttribute("cx", s), "rangeArea" === a.config.chart.type && !a.globals.comboCharts) {
              var u = t + a.globals.series[h].length;
              g = o[h][u][1], d -= Math.abs(d - g) / 2;
            }
            null !== d && !isNaN(d) && d < a.globals.gridHeight + n && d + n > 0 ? (l[h] && l[h].setAttribute("r", n), l[h] && l[h].setAttribute("cy", d)) : l[h] && l[h].setAttribute("r", 0);
          }
        }
        this.moveXCrosshairs(s), i.fixedTooltip || this.moveTooltip(s, r || a.globals.gridHeight, n);
      }
    }, {
      key: "moveStickyTooltipOverBars",
      value: function (t, e) {
        var i = this.w,
          a = this.ttCtx,
          s = i.globals.columnSeries ? i.globals.columnSeries.length : i.globals.series.length,
          r = s >= 2 && s % 2 == 0 ? Math.floor(s / 2) : Math.floor(s / 2) + 1;
        i.globals.isBarHorizontal && (r = new N(this.ctx).getActiveConfigSeriesIndex("desc") + 1);
        var o = i.globals.dom.baseEl.querySelector(".apexcharts-bar-series .apexcharts-series[rel='".concat(r, "'] path[j='").concat(t, "'], .apexcharts-candlestick-series .apexcharts-series[rel='").concat(r, "'] path[j='").concat(t, "'], .apexcharts-boxPlot-series .apexcharts-series[rel='").concat(r, "'] path[j='").concat(t, "'], .apexcharts-rangebar-series .apexcharts-series[rel='").concat(r, "'] path[j='").concat(t, "']"));
        o || "number" != typeof e || (o = i.globals.dom.baseEl.querySelector(".apexcharts-bar-series .apexcharts-series[data\\:realIndex='".concat(e, "'] path[j='").concat(t, "'],\n        .apexcharts-candlestick-series .apexcharts-series[data\\:realIndex='").concat(e, "'] path[j='").concat(t, "'],\n        .apexcharts-boxPlot-series .apexcharts-series[data\\:realIndex='").concat(e, "'] path[j='").concat(t, "'],\n        .apexcharts-rangebar-series .apexcharts-series[data\\:realIndex='").concat(e, "'] path[j='").concat(t, "']")));
        var n = o ? parseFloat(o.getAttribute("cx")) : 0,
          l = o ? parseFloat(o.getAttribute("cy")) : 0,
          h = o ? parseFloat(o.getAttribute("barWidth")) : 0,
          c = a.getElGrid().getBoundingClientRect(),
          d = o && (o.classList.contains("apexcharts-candlestick-area") || o.classList.contains("apexcharts-boxPlot-area"));
        i.globals.isXNumeric ? (o && !d && (n -= s % 2 != 0 ? h / 2 : 0), o && d && i.globals.comboCharts && (n -= h / 2)) : i.globals.isBarHorizontal || (n = a.xAxisTicksPositions[t - 1] + a.dataPointsDividedWidth / 2, isNaN(n) && (n = a.xAxisTicksPositions[t] - a.dataPointsDividedWidth / 2)), i.globals.isBarHorizontal ? l -= a.tooltipRect.ttHeight : i.config.tooltip.followCursor ? l = a.e.clientY - c.top - a.tooltipRect.ttHeight / 2 : l + a.tooltipRect.ttHeight + 15 > i.globals.gridHeight && (l = i.globals.gridHeight), i.globals.isBarHorizontal || this.moveXCrosshairs(n), a.fixedTooltip || this.moveTooltip(n, l || i.globals.gridHeight);
      }
    }]), t;
  }(),
  pt = function () {
    function t(e) {
      a(this, t), this.w = e.w, this.ttCtx = e, this.ctx = e.ctx, this.tooltipPosition = new ut(e);
    }
    return r(t, [{
      key: "drawDynamicPoints",
      value: function () {
        var t = this.w,
          e = new m(this.ctx),
          i = new H(this.ctx),
          a = t.globals.dom.baseEl.querySelectorAll(".apexcharts-series");
        a = u(a), t.config.chart.stacked && a.sort(function (t, e) {
          return parseFloat(t.getAttribute("data:realIndex")) - parseFloat(e.getAttribute("data:realIndex"));
        });
        for (var s = 0; s < a.length; s++) {
          var r = a[s].querySelector(".apexcharts-series-markers-wrap");
          if (null !== r) {
            var o = void 0,
              n = "apexcharts-marker w".concat((Math.random() + 1).toString(36).substring(4));
            "line" !== t.config.chart.type && "area" !== t.config.chart.type || t.globals.comboCharts || t.config.tooltip.intersect || (n += " no-pointer-events");
            var l = i.getMarkerConfig({
              cssClass: n,
              seriesIndex: Number(r.getAttribute("data:realIndex"))
            });
            (o = e.drawMarker(0, 0, l)).node.setAttribute("default-marker-size", 0);
            var h = document.createElementNS(t.globals.SVGNS, "g");
            h.classList.add("apexcharts-series-markers"), h.appendChild(o.node), r.appendChild(h);
          }
        }
      }
    }, {
      key: "enlargeCurrentPoint",
      value: function (t, e) {
        var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null,
          a = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : null,
          s = this.w;
        "bubble" !== s.config.chart.type && this.newPointSize(t, e);
        var r = e.getAttribute("cx"),
          o = e.getAttribute("cy");
        if (null !== i && null !== a && (r = i, o = a), this.tooltipPosition.moveXCrosshairs(r), !this.fixedTooltip) {
          if ("radar" === s.config.chart.type) {
            var n = this.ttCtx.getElGrid().getBoundingClientRect();
            r = this.ttCtx.e.clientX - n.left;
          }
          this.tooltipPosition.moveTooltip(r, o, s.config.markers.hover.size);
        }
      }
    }, {
      key: "enlargePoints",
      value: function (t) {
        for (var e = this.w, i = this, a = this.ttCtx, s = t, r = e.globals.dom.baseEl.querySelectorAll(".apexcharts-series:not(.apexcharts-series-collapsed) .apexcharts-marker"), o = e.config.markers.hover.size, n = 0; n < r.length; n++) {
          var l = r[n].getAttribute("rel"),
            h = r[n].getAttribute("index");
          if (void 0 === o && (o = e.globals.markers.size[h] + e.config.markers.hover.sizeOffset), s === parseInt(l, 10)) {
            i.newPointSize(s, r[n]);
            var c = r[n].getAttribute("cx"),
              d = r[n].getAttribute("cy");
            i.tooltipPosition.moveXCrosshairs(c), a.fixedTooltip || i.tooltipPosition.moveTooltip(c, d, o);
          } else i.oldPointSize(r[n]);
        }
      }
    }, {
      key: "newPointSize",
      value: function (t, e) {
        var i = this.w,
          a = i.config.markers.hover.size,
          s = 0 === t ? e.parentNode.firstChild : e.parentNode.lastChild;
        if ("0" !== s.getAttribute("default-marker-size")) {
          var r = parseInt(s.getAttribute("index"), 10);
          void 0 === a && (a = i.globals.markers.size[r] + i.config.markers.hover.sizeOffset), a < 0 && (a = 0), s.setAttribute("r", a);
        }
      }
    }, {
      key: "oldPointSize",
      value: function (t) {
        var e = parseFloat(t.getAttribute("default-marker-size"));
        t.setAttribute("r", e);
      }
    }, {
      key: "resetPointsSize",
      value: function () {
        for (var t = this.w.globals.dom.baseEl.querySelectorAll(".apexcharts-series:not(.apexcharts-series-collapsed) .apexcharts-marker"), e = 0; e < t.length; e++) {
          var i = parseFloat(t[e].getAttribute("default-marker-size"));
          x.isNumber(i) && i >= 0 ? t[e].setAttribute("r", i) : t[e].setAttribute("r", 0);
        }
      }
    }]), t;
  }(),
  ft = function () {
    function t(e) {
      a(this, t), this.w = e.w;
      var i = this.w;
      this.ttCtx = e, this.isVerticalGroupedRangeBar = !i.globals.isBarHorizontal && "rangeBar" === i.config.chart.type && i.config.plotOptions.bar.rangeBarGroupRows;
    }
    return r(t, [{
      key: "getAttr",
      value: function (t, e) {
        return parseFloat(t.target.getAttribute(e));
      }
    }, {
      key: "handleHeatTreeTooltip",
      value: function (t) {
        var e = t.e,
          i = t.opt,
          a = t.x,
          s = t.y,
          r = t.type,
          o = this.ttCtx,
          n = this.w;
        if (e.target.classList.contains("apexcharts-".concat(r, "-rect"))) {
          var l = this.getAttr(e, "i"),
            h = this.getAttr(e, "j"),
            c = this.getAttr(e, "cx"),
            d = this.getAttr(e, "cy"),
            g = this.getAttr(e, "width"),
            u = this.getAttr(e, "height");
          if (o.tooltipLabels.drawSeriesTexts({
            ttItems: i.ttItems,
            i: l,
            j: h,
            shared: !1,
            e: e
          }), n.globals.capturedSeriesIndex = l, n.globals.capturedDataPointIndex = h, a = c + o.tooltipRect.ttWidth / 2 + g, s = d + o.tooltipRect.ttHeight / 2 - u / 2, o.tooltipPosition.moveXCrosshairs(c + g / 2), a > n.globals.gridWidth / 2 && (a = c - o.tooltipRect.ttWidth / 2 + g), o.w.config.tooltip.followCursor) {
            var p = n.globals.dom.elWrap.getBoundingClientRect();
            a = n.globals.clientX - p.left - (a > n.globals.gridWidth / 2 ? o.tooltipRect.ttWidth : 0), s = n.globals.clientY - p.top - (s > n.globals.gridHeight / 2 ? o.tooltipRect.ttHeight : 0);
          }
        }
        return {
          x: a,
          y: s
        };
      }
    }, {
      key: "handleMarkerTooltip",
      value: function (t) {
        var e,
          i,
          a = t.e,
          s = t.opt,
          r = t.x,
          o = t.y,
          n = this.w,
          l = this.ttCtx;
        if (a.target.classList.contains("apexcharts-marker")) {
          var h = parseInt(s.paths.getAttribute("cx"), 10),
            c = parseInt(s.paths.getAttribute("cy"), 10),
            d = parseFloat(s.paths.getAttribute("val"));
          if (i = parseInt(s.paths.getAttribute("rel"), 10), e = parseInt(s.paths.parentNode.parentNode.parentNode.getAttribute("rel"), 10) - 1, l.intersect) {
            var g = x.findAncestor(s.paths, "apexcharts-series");
            g && (e = parseInt(g.getAttribute("data:realIndex"), 10));
          }
          if (l.tooltipLabels.drawSeriesTexts({
            ttItems: s.ttItems,
            i: e,
            j: i,
            shared: !l.showOnIntersect && n.config.tooltip.shared,
            e: a
          }), "mouseup" === a.type && l.markerClick(a, e, i), n.globals.capturedSeriesIndex = e, n.globals.capturedDataPointIndex = i, r = h, o = c + n.globals.translateY - 1.4 * l.tooltipRect.ttHeight, l.w.config.tooltip.followCursor) {
            var u = l.getElGrid().getBoundingClientRect();
            o = l.e.clientY + n.globals.translateY - u.top;
          }
          d < 0 && (o = c), l.marker.enlargeCurrentPoint(i, s.paths, r, o);
        }
        return {
          x: r,
          y: o
        };
      }
    }, {
      key: "handleBarTooltip",
      value: function (t) {
        var e,
          i,
          a = t.e,
          s = t.opt,
          r = this.w,
          o = this.ttCtx,
          n = o.getElTooltip(),
          l = 0,
          h = 0,
          c = 0,
          d = this.getBarTooltipXY({
            e: a,
            opt: s
          });
        e = d.i;
        var g = d.barHeight,
          u = d.j;
        r.globals.capturedSeriesIndex = e, r.globals.capturedDataPointIndex = u, r.globals.isBarHorizontal && o.tooltipUtil.hasBars() || !r.config.tooltip.shared ? (h = d.x, c = d.y, i = Array.isArray(r.config.stroke.width) ? r.config.stroke.width[e] : r.config.stroke.width, l = h) : r.globals.comboCharts || r.config.tooltip.shared || (l /= 2), isNaN(c) && (c = r.globals.svgHeight - o.tooltipRect.ttHeight);
        var p = parseInt(s.paths.parentNode.getAttribute("data:realIndex"), 10),
          f = r.globals.isMultipleYAxis ? r.config.yaxis[p] && r.config.yaxis[p].reversed : r.config.yaxis[0].reversed;
        if (h + o.tooltipRect.ttWidth > r.globals.gridWidth && !f ? h -= o.tooltipRect.ttWidth : h < 0 && (h = 0), o.w.config.tooltip.followCursor) {
          var x = o.getElGrid().getBoundingClientRect();
          c = o.e.clientY - x.top;
        }
        null === o.tooltip && (o.tooltip = r.globals.dom.baseEl.querySelector(".apexcharts-tooltip")), r.config.tooltip.shared || (r.globals.comboBarCount > 0 ? o.tooltipPosition.moveXCrosshairs(l + i / 2) : o.tooltipPosition.moveXCrosshairs(l)), !o.fixedTooltip && (!r.config.tooltip.shared || r.globals.isBarHorizontal && o.tooltipUtil.hasBars()) && (f && (h -= o.tooltipRect.ttWidth) < 0 && (h = 0), !f || r.globals.isBarHorizontal && o.tooltipUtil.hasBars() || (c = c + g - 2 * (r.globals.series[e][u] < 0 ? g : 0)), c = c + r.globals.translateY - o.tooltipRect.ttHeight / 2, n.style.left = h + r.globals.translateX + "px", n.style.top = c + "px");
      }
    }, {
      key: "getBarTooltipXY",
      value: function (t) {
        var e = this,
          i = t.e,
          a = t.opt,
          s = this.w,
          r = null,
          o = this.ttCtx,
          n = 0,
          l = 0,
          h = 0,
          c = 0,
          d = 0,
          g = i.target.classList;
        if (g.contains("apexcharts-bar-area") || g.contains("apexcharts-candlestick-area") || g.contains("apexcharts-boxPlot-area") || g.contains("apexcharts-rangebar-area")) {
          var u = i.target,
            p = u.getBoundingClientRect(),
            f = a.elGrid.getBoundingClientRect(),
            x = p.height;
          d = p.height;
          var b = p.width,
            v = parseInt(u.getAttribute("cx"), 10),
            m = parseInt(u.getAttribute("cy"), 10);
          c = parseFloat(u.getAttribute("barWidth"));
          var y = "touchmove" === i.type ? i.touches[0].clientX : i.clientX;
          r = parseInt(u.getAttribute("j"), 10), n = parseInt(u.parentNode.getAttribute("rel"), 10) - 1;
          var w = u.getAttribute("data-range-y1"),
            k = u.getAttribute("data-range-y2");
          s.globals.comboCharts && (n = parseInt(u.parentNode.getAttribute("data:realIndex"), 10));
          var A = function (t) {
              return s.globals.isXNumeric ? v - b / 2 : e.isVerticalGroupedRangeBar ? v + b / 2 : v - o.dataPointsDividedWidth + b / 2;
            },
            S = function () {
              return m - o.dataPointsDividedHeight + x / 2 - o.tooltipRect.ttHeight / 2;
            };
          o.tooltipLabels.drawSeriesTexts({
            ttItems: a.ttItems,
            i: n,
            j: r,
            y1: w ? parseInt(w, 10) : null,
            y2: k ? parseInt(k, 10) : null,
            shared: !o.showOnIntersect && s.config.tooltip.shared,
            e: i
          }), s.config.tooltip.followCursor ? s.globals.isBarHorizontal ? (l = y - f.left + 15, h = S()) : (l = A(), h = i.clientY - f.top - o.tooltipRect.ttHeight / 2 - 15) : s.globals.isBarHorizontal ? ((l = v) < o.xyRatios.baseLineInvertedY && (l = v - o.tooltipRect.ttWidth), h = S()) : (l = A(), h = m);
        }
        return {
          x: l,
          y: h,
          barHeight: d,
          barWidth: c,
          i: n,
          j: r
        };
      }
    }]), t;
  }(),
  xt = function () {
    function t(e) {
      a(this, t), this.w = e.w, this.ttCtx = e;
    }
    return r(t, [{
      key: "drawXaxisTooltip",
      value: function () {
        var t = this.w,
          e = this.ttCtx,
          i = "bottom" === t.config.xaxis.position;
        e.xaxisOffY = i ? t.globals.gridHeight + 1 : -t.globals.xAxisHeight - t.config.xaxis.axisTicks.height + 3;
        var a = i ? "apexcharts-xaxistooltip apexcharts-xaxistooltip-bottom" : "apexcharts-xaxistooltip apexcharts-xaxistooltip-top",
          s = t.globals.dom.elWrap;
        e.isXAxisTooltipEnabled && null === t.globals.dom.baseEl.querySelector(".apexcharts-xaxistooltip") && (e.xaxisTooltip = document.createElement("div"), e.xaxisTooltip.setAttribute("class", a + " apexcharts-theme-" + t.config.tooltip.theme), s.appendChild(e.xaxisTooltip), e.xaxisTooltipText = document.createElement("div"), e.xaxisTooltipText.classList.add("apexcharts-xaxistooltip-text"), e.xaxisTooltipText.style.fontFamily = t.config.xaxis.tooltip.style.fontFamily || t.config.chart.fontFamily, e.xaxisTooltipText.style.fontSize = t.config.xaxis.tooltip.style.fontSize, e.xaxisTooltip.appendChild(e.xaxisTooltipText));
      }
    }, {
      key: "drawYaxisTooltip",
      value: function () {
        for (var t = this.w, e = this.ttCtx, i = function (i) {
            var a = t.config.yaxis[i].opposite || t.config.yaxis[i].crosshairs.opposite;
            e.yaxisOffX = a ? t.globals.gridWidth + 1 : 1;
            var s = "apexcharts-yaxistooltip apexcharts-yaxistooltip-".concat(i, a ? " apexcharts-yaxistooltip-right" : " apexcharts-yaxistooltip-left");
            t.globals.yAxisSameScaleIndices.map(function (e, a) {
              e.map(function (e, a) {
                a === i && (s += t.config.yaxis[a].show ? " " : " apexcharts-yaxistooltip-hidden");
              });
            });
            var r = t.globals.dom.elWrap;
            null === t.globals.dom.baseEl.querySelector(".apexcharts-yaxistooltip apexcharts-yaxistooltip-".concat(i)) && (e.yaxisTooltip = document.createElement("div"), e.yaxisTooltip.setAttribute("class", s + " apexcharts-theme-" + t.config.tooltip.theme), r.appendChild(e.yaxisTooltip), 0 === i && (e.yaxisTooltipText = []), e.yaxisTooltipText[i] = document.createElement("div"), e.yaxisTooltipText[i].classList.add("apexcharts-yaxistooltip-text"), e.yaxisTooltip.appendChild(e.yaxisTooltipText[i]));
          }, a = 0; a < t.config.yaxis.length; a++) i(a);
      }
    }, {
      key: "setXCrosshairWidth",
      value: function () {
        var t = this.w,
          e = this.ttCtx,
          i = e.getElXCrosshairs();
        if (e.xcrosshairsWidth = parseInt(t.config.xaxis.crosshairs.width, 10), t.globals.comboCharts) {
          var a = t.globals.dom.baseEl.querySelector(".apexcharts-bar-area");
          if (null !== a && "barWidth" === t.config.xaxis.crosshairs.width) {
            var s = parseFloat(a.getAttribute("barWidth"));
            e.xcrosshairsWidth = s;
          } else if ("tickWidth" === t.config.xaxis.crosshairs.width) {
            var r = t.globals.labels.length;
            e.xcrosshairsWidth = t.globals.gridWidth / r;
          }
        } else if ("tickWidth" === t.config.xaxis.crosshairs.width) {
          var o = t.globals.labels.length;
          e.xcrosshairsWidth = t.globals.gridWidth / o;
        } else if ("barWidth" === t.config.xaxis.crosshairs.width) {
          var n = t.globals.dom.baseEl.querySelector(".apexcharts-bar-area");
          if (null !== n) {
            var l = parseFloat(n.getAttribute("barWidth"));
            e.xcrosshairsWidth = l;
          } else e.xcrosshairsWidth = 1;
        }
        t.globals.isBarHorizontal && (e.xcrosshairsWidth = 0), null !== i && e.xcrosshairsWidth > 0 && i.setAttribute("width", e.xcrosshairsWidth);
      }
    }, {
      key: "handleYCrosshair",
      value: function () {
        var t = this.w,
          e = this.ttCtx;
        e.ycrosshairs = t.globals.dom.baseEl.querySelector(".apexcharts-ycrosshairs"), e.ycrosshairsHidden = t.globals.dom.baseEl.querySelector(".apexcharts-ycrosshairs-hidden");
      }
    }, {
      key: "drawYaxisTooltipText",
      value: function (t, e, i) {
        var a = this.ttCtx,
          s = this.w,
          r = s.globals.yLabelFormatters[t];
        if (a.yaxisTooltips[t]) {
          var o = a.getElGrid().getBoundingClientRect(),
            n = (e - o.top) * i.yRatio[t],
            l = s.globals.maxYArr[t] - s.globals.minYArr[t],
            h = s.globals.minYArr[t] + (l - n);
          a.tooltipPosition.moveYCrosshairs(e - o.top), a.yaxisTooltipText[t].innerHTML = r(h), a.tooltipPosition.moveYAxisTooltip(t);
        }
      }
    }]), t;
  }(),
  bt = function () {
    function t(e) {
      a(this, t), this.ctx = e, this.w = e.w;
      var i = this.w;
      this.tConfig = i.config.tooltip, this.tooltipUtil = new dt(this), this.tooltipLabels = new gt(this), this.tooltipPosition = new ut(this), this.marker = new pt(this), this.intersect = new ft(this), this.axesTooltip = new xt(this), this.showOnIntersect = this.tConfig.intersect, this.showTooltipTitle = this.tConfig.x.show, this.fixedTooltip = this.tConfig.fixed.enabled, this.xaxisTooltip = null, this.yaxisTTEls = null, this.isBarShared = !i.globals.isBarHorizontal && this.tConfig.shared, this.lastHoverTime = Date.now();
    }
    return r(t, [{
      key: "getElTooltip",
      value: function (t) {
        return t || (t = this), t.w.globals.dom.baseEl ? t.w.globals.dom.baseEl.querySelector(".apexcharts-tooltip") : null;
      }
    }, {
      key: "getElXCrosshairs",
      value: function () {
        return this.w.globals.dom.baseEl.querySelector(".apexcharts-xcrosshairs");
      }
    }, {
      key: "getElGrid",
      value: function () {
        return this.w.globals.dom.baseEl.querySelector(".apexcharts-grid");
      }
    }, {
      key: "drawTooltip",
      value: function (t) {
        var e = this.w;
        this.xyRatios = t, this.isXAxisTooltipEnabled = e.config.xaxis.tooltip.enabled && e.globals.axisCharts, this.yaxisTooltips = e.config.yaxis.map(function (t, i) {
          return !!(t.show && t.tooltip.enabled && e.globals.axisCharts);
        }), this.allTooltipSeriesGroups = [], e.globals.axisCharts || (this.showTooltipTitle = !1);
        var i = document.createElement("div");
        if (i.classList.add("apexcharts-tooltip"), e.config.tooltip.cssClass && i.classList.add(e.config.tooltip.cssClass), i.classList.add("apexcharts-theme-".concat(this.tConfig.theme)), e.globals.dom.elWrap.appendChild(i), e.globals.axisCharts) {
          this.axesTooltip.drawXaxisTooltip(), this.axesTooltip.drawYaxisTooltip(), this.axesTooltip.setXCrosshairWidth(), this.axesTooltip.handleYCrosshair();
          var a = new V(this.ctx);
          this.xAxisTicksPositions = a.getXAxisTicksPositions();
        }
        if (!e.globals.comboCharts && !this.tConfig.intersect && "rangeBar" !== e.config.chart.type || this.tConfig.shared || (this.showOnIntersect = !0), 0 !== e.config.markers.size && 0 !== e.globals.markers.largestSize || this.marker.drawDynamicPoints(this), e.globals.collapsedSeries.length !== e.globals.series.length) {
          this.dataPointsDividedHeight = e.globals.gridHeight / e.globals.dataPoints, this.dataPointsDividedWidth = e.globals.gridWidth / e.globals.dataPoints, this.showTooltipTitle && (this.tooltipTitle = document.createElement("div"), this.tooltipTitle.classList.add("apexcharts-tooltip-title"), this.tooltipTitle.style.fontFamily = this.tConfig.style.fontFamily || e.config.chart.fontFamily, this.tooltipTitle.style.fontSize = this.tConfig.style.fontSize, i.appendChild(this.tooltipTitle));
          var s = e.globals.series.length;
          (e.globals.xyCharts || e.globals.comboCharts) && this.tConfig.shared && (s = this.showOnIntersect ? 1 : e.globals.series.length), this.legendLabels = e.globals.dom.baseEl.querySelectorAll(".apexcharts-legend-text"), this.ttItems = this.createTTElements(s), this.addSVGEvents();
        }
      }
    }, {
      key: "createTTElements",
      value: function (t) {
        for (var e = this, i = this.w, a = [], s = this.getElTooltip(), r = function (r) {
            var o = document.createElement("div");
            o.classList.add("apexcharts-tooltip-series-group"), o.style.order = i.config.tooltip.inverseOrder ? t - r : r + 1, e.tConfig.shared && e.tConfig.enabledOnSeries && Array.isArray(e.tConfig.enabledOnSeries) && e.tConfig.enabledOnSeries.indexOf(r) < 0 && o.classList.add("apexcharts-tooltip-series-group-hidden");
            var n = document.createElement("span");
            n.classList.add("apexcharts-tooltip-marker"), n.style.backgroundColor = i.globals.colors[r], o.appendChild(n);
            var l = document.createElement("div");
            l.classList.add("apexcharts-tooltip-text"), l.style.fontFamily = e.tConfig.style.fontFamily || i.config.chart.fontFamily, l.style.fontSize = e.tConfig.style.fontSize, ["y", "goals", "z"].forEach(function (t) {
              var e = document.createElement("div");
              e.classList.add("apexcharts-tooltip-".concat(t, "-group"));
              var i = document.createElement("span");
              i.classList.add("apexcharts-tooltip-text-".concat(t, "-label")), e.appendChild(i);
              var a = document.createElement("span");
              a.classList.add("apexcharts-tooltip-text-".concat(t, "-value")), e.appendChild(a), l.appendChild(e);
            }), o.appendChild(l), s.appendChild(o), a.push(o);
          }, o = 0; o < t; o++) r(o);
        return a;
      }
    }, {
      key: "addSVGEvents",
      value: function () {
        var t = this.w,
          e = t.config.chart.type,
          i = this.getElTooltip(),
          a = !("bar" !== e && "candlestick" !== e && "boxPlot" !== e && "rangeBar" !== e),
          s = "area" === e || "line" === e || "scatter" === e || "bubble" === e || "radar" === e,
          r = t.globals.dom.Paper.node,
          o = this.getElGrid();
        o && (this.seriesBound = o.getBoundingClientRect());
        var n,
          l = [],
          h = [],
          c = {
            hoverArea: r,
            elGrid: o,
            tooltipEl: i,
            tooltipY: l,
            tooltipX: h,
            ttItems: this.ttItems
          };
        if (t.globals.axisCharts && (s ? n = t.globals.dom.baseEl.querySelectorAll(".apexcharts-series[data\\:longestSeries='true'] .apexcharts-marker") : a ? n = t.globals.dom.baseEl.querySelectorAll(".apexcharts-series .apexcharts-bar-area, .apexcharts-series .apexcharts-candlestick-area, .apexcharts-series .apexcharts-boxPlot-area, .apexcharts-series .apexcharts-rangebar-area") : "heatmap" !== e && "treemap" !== e || (n = t.globals.dom.baseEl.querySelectorAll(".apexcharts-series .apexcharts-heatmap, .apexcharts-series .apexcharts-treemap")), n && n.length)) for (var d = 0; d < n.length; d++) l.push(n[d].getAttribute("cy")), h.push(n[d].getAttribute("cx"));
        if (t.globals.xyCharts && !this.showOnIntersect || t.globals.comboCharts && !this.showOnIntersect || a && this.tooltipUtil.hasBars() && this.tConfig.shared) this.addPathsEventListeners([r], c);else if (a && !t.globals.comboCharts || s && this.showOnIntersect) this.addDatapointEventsListeners(c);else if (!t.globals.axisCharts || "heatmap" === e || "treemap" === e) {
          var g = t.globals.dom.baseEl.querySelectorAll(".apexcharts-series");
          this.addPathsEventListeners(g, c);
        }
        if (this.showOnIntersect) {
          var u = t.globals.dom.baseEl.querySelectorAll(".apexcharts-line-series .apexcharts-marker, .apexcharts-area-series .apexcharts-marker");
          u.length > 0 && this.addPathsEventListeners(u, c), this.tooltipUtil.hasBars() && !this.tConfig.shared && this.addDatapointEventsListeners(c);
        }
      }
    }, {
      key: "drawFixedTooltipRect",
      value: function () {
        var t = this.w,
          e = this.getElTooltip(),
          i = e.getBoundingClientRect(),
          a = i.width + 10,
          s = i.height + 10,
          r = this.tConfig.fixed.offsetX,
          o = this.tConfig.fixed.offsetY,
          n = this.tConfig.fixed.position.toLowerCase();
        return n.indexOf("right") > -1 && (r = r + t.globals.svgWidth - a + 10), n.indexOf("bottom") > -1 && (o = o + t.globals.svgHeight - s - 10), e.style.left = r + "px", e.style.top = o + "px", {
          x: r,
          y: o,
          ttWidth: a,
          ttHeight: s
        };
      }
    }, {
      key: "addDatapointEventsListeners",
      value: function (t) {
        var e = this.w.globals.dom.baseEl.querySelectorAll(".apexcharts-series-markers .apexcharts-marker, .apexcharts-bar-area, .apexcharts-candlestick-area, .apexcharts-boxPlot-area, .apexcharts-rangebar-area");
        this.addPathsEventListeners(e, t);
      }
    }, {
      key: "addPathsEventListeners",
      value: function (t, e) {
        for (var i = this, a = function (a) {
            var s = {
              paths: t[a],
              tooltipEl: e.tooltipEl,
              tooltipY: e.tooltipY,
              tooltipX: e.tooltipX,
              elGrid: e.elGrid,
              hoverArea: e.hoverArea,
              ttItems: e.ttItems
            };
            ["mousemove", "mouseup", "touchmove", "mouseout", "touchend"].map(function (e) {
              return t[a].addEventListener(e, i.onSeriesHover.bind(i, s), {
                capture: !1,
                passive: !0
              });
            });
          }, s = 0; s < t.length; s++) a(s);
      }
    }, {
      key: "onSeriesHover",
      value: function (t, e) {
        var i = this,
          a = Date.now() - this.lastHoverTime;
        a >= 100 ? this.seriesHover(t, e) : (clearTimeout(this.seriesHoverTimeout), this.seriesHoverTimeout = setTimeout(function () {
          i.seriesHover(t, e);
        }, 100 - a));
      }
    }, {
      key: "seriesHover",
      value: function (t, e) {
        var i = this;
        this.lastHoverTime = Date.now();
        var a = [],
          s = this.w;
        s.config.chart.group && (a = this.ctx.getGroupedCharts()), s.globals.axisCharts && (s.globals.minX === -1 / 0 && s.globals.maxX === 1 / 0 || 0 === s.globals.dataPoints) || (a.length ? a.forEach(function (a) {
          var s = i.getElTooltip(a),
            r = {
              paths: t.paths,
              tooltipEl: s,
              tooltipY: t.tooltipY,
              tooltipX: t.tooltipX,
              elGrid: t.elGrid,
              hoverArea: t.hoverArea,
              ttItems: a.w.globals.tooltip.ttItems
            };
          a.w.globals.minX === i.w.globals.minX && a.w.globals.maxX === i.w.globals.maxX && a.w.globals.tooltip.seriesHoverByContext({
            chartCtx: a,
            ttCtx: a.w.globals.tooltip,
            opt: r,
            e: e
          });
        }) : this.seriesHoverByContext({
          chartCtx: this.ctx,
          ttCtx: this.w.globals.tooltip,
          opt: t,
          e: e
        }));
      }
    }, {
      key: "seriesHoverByContext",
      value: function (t) {
        var e = t.chartCtx,
          i = t.ttCtx,
          a = t.opt,
          s = t.e,
          r = e.w,
          o = this.getElTooltip();
        if (o) {
          if (i.tooltipRect = {
            x: 0,
            y: 0,
            ttWidth: o.getBoundingClientRect().width,
            ttHeight: o.getBoundingClientRect().height
          }, i.e = s, i.tooltipUtil.hasBars() && !r.globals.comboCharts && !i.isBarShared) if (this.tConfig.onDatasetHover.highlightDataSeries) new N(e).toggleSeriesOnHover(s, s.target.parentNode);
          i.fixedTooltip && i.drawFixedTooltipRect(), r.globals.axisCharts ? i.axisChartsTooltips({
            e: s,
            opt: a,
            tooltipRect: i.tooltipRect
          }) : i.nonAxisChartsTooltips({
            e: s,
            opt: a,
            tooltipRect: i.tooltipRect
          });
        }
      }
    }, {
      key: "axisChartsTooltips",
      value: function (t) {
        var e,
          i,
          a = t.e,
          s = t.opt,
          r = this.w,
          o = s.elGrid.getBoundingClientRect(),
          n = "touchmove" === a.type ? a.touches[0].clientX : a.clientX,
          l = "touchmove" === a.type ? a.touches[0].clientY : a.clientY;
        if (this.clientY = l, this.clientX = n, r.globals.capturedSeriesIndex = -1, r.globals.capturedDataPointIndex = -1, l < o.top || l > o.top + o.height) this.handleMouseOut(s);else {
          if (Array.isArray(this.tConfig.enabledOnSeries) && !r.config.tooltip.shared) {
            var h = parseInt(s.paths.getAttribute("index"), 10);
            if (this.tConfig.enabledOnSeries.indexOf(h) < 0) return void this.handleMouseOut(s);
          }
          var c = this.getElTooltip(),
            d = this.getElXCrosshairs(),
            g = r.globals.xyCharts || "bar" === r.config.chart.type && !r.globals.isBarHorizontal && this.tooltipUtil.hasBars() && this.tConfig.shared || r.globals.comboCharts && this.tooltipUtil.hasBars();
          if ("mousemove" === a.type || "touchmove" === a.type || "mouseup" === a.type) {
            if (r.globals.collapsedSeries.length + r.globals.ancillaryCollapsedSeries.length === r.globals.series.length) return;
            null !== d && d.classList.add("apexcharts-active");
            var u = this.yaxisTooltips.filter(function (t) {
              return !0 === t;
            });
            if (null !== this.ycrosshairs && u.length && this.ycrosshairs.classList.add("apexcharts-active"), g && !this.showOnIntersect) this.handleStickyTooltip(a, n, l, s);else if ("heatmap" === r.config.chart.type || "treemap" === r.config.chart.type) {
              var p = this.intersect.handleHeatTreeTooltip({
                e: a,
                opt: s,
                x: e,
                y: i,
                type: r.config.chart.type
              });
              e = p.x, i = p.y, c.style.left = e + "px", c.style.top = i + "px";
            } else this.tooltipUtil.hasBars() && this.intersect.handleBarTooltip({
              e: a,
              opt: s
            }), this.tooltipUtil.hasMarkers() && this.intersect.handleMarkerTooltip({
              e: a,
              opt: s,
              x: e,
              y: i
            });
            if (this.yaxisTooltips.length) for (var f = 0; f < r.config.yaxis.length; f++) this.axesTooltip.drawYaxisTooltipText(f, l, this.xyRatios);
            s.tooltipEl.classList.add("apexcharts-active");
          } else "mouseout" !== a.type && "touchend" !== a.type || this.handleMouseOut(s);
        }
      }
    }, {
      key: "nonAxisChartsTooltips",
      value: function (t) {
        var e = t.e,
          i = t.opt,
          a = t.tooltipRect,
          s = this.w,
          r = i.paths.getAttribute("rel"),
          o = this.getElTooltip(),
          n = s.globals.dom.elWrap.getBoundingClientRect();
        if ("mousemove" === e.type || "touchmove" === e.type) {
          o.classList.add("apexcharts-active"), this.tooltipLabels.drawSeriesTexts({
            ttItems: i.ttItems,
            i: parseInt(r, 10) - 1,
            shared: !1
          });
          var l = s.globals.clientX - n.left - a.ttWidth / 2,
            h = s.globals.clientY - n.top - a.ttHeight - 10;
          if (o.style.left = l + "px", o.style.top = h + "px", s.config.legend.tooltipHoverFormatter) {
            var c = r - 1,
              d = (0, s.config.legend.tooltipHoverFormatter)(this.legendLabels[c].getAttribute("data:default-text"), {
                seriesIndex: c,
                dataPointIndex: c,
                w: s
              });
            this.legendLabels[c].innerHTML = d;
          }
        } else "mouseout" !== e.type && "touchend" !== e.type || (o.classList.remove("apexcharts-active"), s.config.legend.tooltipHoverFormatter && this.legendLabels.forEach(function (t) {
          var e = t.getAttribute("data:default-text");
          t.innerHTML = decodeURIComponent(e);
        }));
      }
    }, {
      key: "handleStickyTooltip",
      value: function (t, e, i, a) {
        var s = this.w,
          r = this.tooltipUtil.getNearestValues({
            context: this,
            hoverArea: a.hoverArea,
            elGrid: a.elGrid,
            clientX: e,
            clientY: i
          }),
          o = r.j,
          n = r.capturedSeries;
        s.globals.collapsedSeriesIndices.includes(n) && (n = null);
        var l = a.elGrid.getBoundingClientRect();
        if (r.hoverX < 0 || r.hoverX > l.width) this.handleMouseOut(a);else if (null !== n) this.handleStickyCapturedSeries(t, n, a, o);else if (this.tooltipUtil.isXoverlap(o) || s.globals.isBarHorizontal) {
          var h = s.globals.series.findIndex(function (t, e) {
            return !s.globals.collapsedSeriesIndices.includes(e);
          });
          this.create(t, this, h, o, a.ttItems);
        }
      }
    }, {
      key: "handleStickyCapturedSeries",
      value: function (t, e, i, a) {
        var s = this.w;
        if (!this.tConfig.shared && null === s.globals.series[e][a]) return void this.handleMouseOut(i);
        if (void 0 !== s.globals.series[e][a]) this.tConfig.shared && this.tooltipUtil.isXoverlap(a) && this.tooltipUtil.isInitialSeriesSameLen() ? this.create(t, this, e, a, i.ttItems) : this.create(t, this, e, a, i.ttItems, !1);else if (this.tooltipUtil.isXoverlap(a)) {
          var r = s.globals.series.findIndex(function (t, e) {
            return !s.globals.collapsedSeriesIndices.includes(e);
          });
          this.create(t, this, r, a, i.ttItems);
        }
      }
    }, {
      key: "deactivateHoverFilter",
      value: function () {
        for (var t = this.w, e = new m(this.ctx), i = t.globals.dom.Paper.select(".apexcharts-bar-area"), a = 0; a < i.length; a++) e.pathMouseLeave(i[a]);
      }
    }, {
      key: "handleMouseOut",
      value: function (t) {
        var e = this.w,
          i = this.getElXCrosshairs();
        if (t.tooltipEl.classList.remove("apexcharts-active"), this.deactivateHoverFilter(), "bubble" !== e.config.chart.type && this.marker.resetPointsSize(), null !== i && i.classList.remove("apexcharts-active"), null !== this.ycrosshairs && this.ycrosshairs.classList.remove("apexcharts-active"), this.isXAxisTooltipEnabled && this.xaxisTooltip.classList.remove("apexcharts-active"), this.yaxisTooltips.length) {
          null === this.yaxisTTEls && (this.yaxisTTEls = e.globals.dom.baseEl.querySelectorAll(".apexcharts-yaxistooltip"));
          for (var a = 0; a < this.yaxisTTEls.length; a++) this.yaxisTTEls[a].classList.remove("apexcharts-active");
        }
        e.config.legend.tooltipHoverFormatter && this.legendLabels.forEach(function (t) {
          var e = t.getAttribute("data:default-text");
          t.innerHTML = decodeURIComponent(e);
        });
      }
    }, {
      key: "markerClick",
      value: function (t, e, i) {
        var a = this.w;
        "function" == typeof a.config.chart.events.markerClick && a.config.chart.events.markerClick(t, this.ctx, {
          seriesIndex: e,
          dataPointIndex: i,
          w: a
        }), this.ctx.events.fireEvent("markerClick", [t, this.ctx, {
          seriesIndex: e,
          dataPointIndex: i,
          w: a
        }]);
      }
    }, {
      key: "create",
      value: function (t, i, a, s, r) {
        var o,
          n,
          l,
          h,
          c,
          d,
          g,
          u,
          p,
          f,
          x,
          b,
          v,
          y,
          w,
          k,
          A = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : null,
          S = this.w,
          C = i;
        "mouseup" === t.type && this.markerClick(t, a, s), null === A && (A = this.tConfig.shared);
        var L = this.tooltipUtil.hasMarkers(a),
          P = this.tooltipUtil.getElBars();
        if (S.config.legend.tooltipHoverFormatter) {
          var I = S.config.legend.tooltipHoverFormatter,
            T = Array.from(this.legendLabels);
          T.forEach(function (t) {
            var e = t.getAttribute("data:default-text");
            t.innerHTML = decodeURIComponent(e);
          });
          for (var M = 0; M < T.length; M++) {
            var X = T[M],
              z = parseInt(X.getAttribute("i"), 10),
              E = decodeURIComponent(X.getAttribute("data:default-text")),
              Y = I(E, {
                seriesIndex: A ? z : a,
                dataPointIndex: s,
                w: S
              });
            if (A) X.innerHTML = S.globals.collapsedSeriesIndices.indexOf(z) < 0 ? Y : E;else if (X.innerHTML = z === a ? Y : E, a === z) break;
          }
        }
        var F = e(e({
          ttItems: r,
          i: a,
          j: s
        }, void 0 !== (null === (o = S.globals.seriesRange) || void 0 === o || null === (n = o[a]) || void 0 === n || null === (l = n[s]) || void 0 === l || null === (h = l.y[0]) || void 0 === h ? void 0 : h.y1) && {
          y1: null === (c = S.globals.seriesRange) || void 0 === c || null === (d = c[a]) || void 0 === d || null === (g = d[s]) || void 0 === g || null === (u = g.y[0]) || void 0 === u ? void 0 : u.y1
        }), void 0 !== (null === (p = S.globals.seriesRange) || void 0 === p || null === (f = p[a]) || void 0 === f || null === (x = f[s]) || void 0 === x || null === (b = x.y[0]) || void 0 === b ? void 0 : b.y2) && {
          y2: null === (v = S.globals.seriesRange) || void 0 === v || null === (y = v[a]) || void 0 === y || null === (w = y[s]) || void 0 === w || null === (k = w.y[0]) || void 0 === k ? void 0 : k.y2
        });
        if (A) {
          if (C.tooltipLabels.drawSeriesTexts(e(e({}, F), {}, {
            shared: !this.showOnIntersect && this.tConfig.shared
          })), L) S.globals.markers.largestSize > 0 ? C.marker.enlargePoints(s) : C.tooltipPosition.moveDynamicPointsOnHover(s);else if (this.tooltipUtil.hasBars() && (this.barSeriesHeight = this.tooltipUtil.getBarsHeight(P), this.barSeriesHeight > 0)) {
            var R = new m(this.ctx),
              H = S.globals.dom.Paper.select(".apexcharts-bar-area[j='".concat(s, "']"));
            this.deactivateHoverFilter(), this.tooltipPosition.moveStickyTooltipOverBars(s, a);
            for (var D = 0; D < H.length; D++) R.pathMouseEnter(H[D]);
          }
        } else C.tooltipLabels.drawSeriesTexts(e({
          shared: !1
        }, F)), this.tooltipUtil.hasBars() && C.tooltipPosition.moveStickyTooltipOverBars(s, a), L && C.tooltipPosition.moveMarkers(a, s);
      }
    }]), t;
  }(),
  vt = function () {
    function t(e) {
      a(this, t), this.w = e.w, this.barCtx = e, this.totalFormatter = this.w.config.plotOptions.bar.dataLabels.total.formatter, this.totalFormatter || (this.totalFormatter = this.w.config.dataLabels.formatter);
    }
    return r(t, [{
      key: "handleBarDataLabels",
      value: function (t) {
        var e = t.x,
          i = t.y,
          a = t.y1,
          s = t.y2,
          r = t.i,
          o = t.j,
          n = t.realIndex,
          l = t.groupIndex,
          h = t.series,
          c = t.barHeight,
          d = t.barWidth,
          g = t.barXPosition,
          u = t.barYPosition,
          p = t.visibleSeries,
          f = t.renderedPath,
          x = this.w,
          b = new m(this.barCtx.ctx),
          v = Array.isArray(this.barCtx.strokeWidth) ? this.barCtx.strokeWidth[n] : this.barCtx.strokeWidth,
          y = e + parseFloat(d * p),
          w = i + parseFloat(c * p);
        x.globals.isXNumeric && !x.globals.isBarHorizontal && (y = e + parseFloat(d * (p + 1)), w = i + parseFloat(c * (p + 1)) - v);
        var k,
          A = null,
          S = e,
          C = i,
          L = {},
          P = x.config.dataLabels,
          I = this.barCtx.barOptions.dataLabels,
          T = this.barCtx.barOptions.dataLabels.total;
        void 0 !== u && this.barCtx.isRangeBar && (w = u, C = u), void 0 !== g && this.barCtx.isVerticalGroupedRangeBar && (y = g, S = g);
        var M = P.offsetX,
          X = P.offsetY,
          z = {
            width: 0,
            height: 0
          };
        if (x.config.dataLabels.enabled) {
          var E = this.barCtx.series[r][o];
          z = b.getTextRects(x.globals.yLabelFormatters[0](E), parseFloat(P.style.fontSize));
        }
        var Y = {
          x: e,
          y: i,
          i: r,
          j: o,
          realIndex: n,
          groupIndex: l || -1,
          renderedPath: f,
          bcx: y,
          bcy: w,
          barHeight: c,
          barWidth: d,
          textRects: z,
          strokeWidth: v,
          dataLabelsX: S,
          dataLabelsY: C,
          dataLabelsConfig: P,
          barDataLabelsConfig: I,
          barTotalDataLabelsConfig: T,
          offX: M,
          offY: X
        };
        return L = this.barCtx.isHorizontal ? this.calculateBarsDataLabelsPosition(Y) : this.calculateColumnsDataLabelsPosition(Y), f.attr({
          cy: L.bcy,
          cx: L.bcx,
          j: o,
          val: h[r][o],
          barHeight: c,
          barWidth: d
        }), k = this.drawCalculatedDataLabels({
          x: L.dataLabelsX,
          y: L.dataLabelsY,
          val: this.barCtx.isRangeBar ? [a, s] : h[r][o],
          i: n,
          j: o,
          barWidth: d,
          barHeight: c,
          textRects: z,
          dataLabelsConfig: P
        }), x.config.chart.stacked && T.enabled && (A = this.drawTotalDataLabels({
          x: L.totalDataLabelsX,
          y: L.totalDataLabelsY,
          realIndex: n,
          textAnchor: L.totalDataLabelsAnchor,
          val: this.getStackedTotalDataLabel({
            realIndex: n,
            j: o
          }),
          dataLabelsConfig: P,
          barTotalDataLabelsConfig: T
        })), {
          dataLabels: k,
          totalDataLabels: A
        };
      }
    }, {
      key: "getStackedTotalDataLabel",
      value: function (t) {
        var i = t.realIndex,
          a = t.j,
          s = this.w,
          r = this.barCtx.stackedSeriesTotals[a];
        return this.totalFormatter && (r = this.totalFormatter(r, e(e({}, s), {}, {
          seriesIndex: i,
          dataPointIndex: a,
          w: s
        }))), r;
      }
    }, {
      key: "calculateColumnsDataLabelsPosition",
      value: function (t) {
        var e,
          i,
          a = this.w,
          s = t.i,
          r = t.j,
          o = t.realIndex,
          n = t.groupIndex,
          l = t.y,
          h = t.bcx,
          c = t.barWidth,
          d = t.barHeight,
          g = t.textRects,
          u = t.dataLabelsX,
          p = t.dataLabelsY,
          f = t.dataLabelsConfig,
          x = t.barDataLabelsConfig,
          b = t.barTotalDataLabelsConfig,
          v = t.strokeWidth,
          y = t.offX,
          w = t.offY;
        d = Math.abs(d);
        var k = "vertical" === a.config.plotOptions.bar.dataLabels.orientation;
        h = h - v / 2 + (-1 !== n ? n * c : 0);
        var A = a.globals.gridWidth / a.globals.dataPoints;
        if (this.barCtx.isVerticalGroupedRangeBar ? u += c / 2 : u = a.globals.isXNumeric ? h - c / 2 + y : h - A + c / 2 + y, k) {
          u = u + g.height / 2 - v / 2 - 2;
        }
        var S = this.barCtx.series[s][r] < 0,
          C = l;
        switch (this.barCtx.isReversed && (C = l - d + (S ? 2 * d : 0), l -= d), x.position) {
          case "center":
            p = k ? S ? C + d / 2 + w : C + d / 2 - w : S ? C - d / 2 + g.height / 2 + w : C + d / 2 + g.height / 2 - w;
            break;
          case "bottom":
            p = k ? S ? C + d + w : C + d - w : S ? C - d + g.height + v + w : C + d - g.height / 2 + v - w;
            break;
          case "top":
            p = k ? S ? C + w : C - w : S ? C - g.height / 2 - w : C + g.height + w;
        }
        if (this.barCtx.lastActiveBarSerieIndex === o && b.enabled) {
          var L = new m(this.barCtx.ctx).getTextRects(this.getStackedTotalDataLabel({
            realIndex: o,
            j: r
          }), f.fontSize);
          e = S ? C - L.height / 2 - w - b.offsetY + 18 : C + L.height + w + b.offsetY - 18, i = u + b.offsetX;
        }
        return a.config.chart.stacked || (p < 0 ? p = 0 + v : p + g.height / 3 > a.globals.gridHeight && (p = a.globals.gridHeight - v)), {
          bcx: h,
          bcy: l,
          dataLabelsX: u,
          dataLabelsY: p,
          totalDataLabelsX: i,
          totalDataLabelsY: e,
          totalDataLabelsAnchor: "middle"
        };
      }
    }, {
      key: "calculateBarsDataLabelsPosition",
      value: function (t) {
        var e = this.w,
          i = t.x,
          a = t.i,
          s = t.j,
          r = t.realIndex,
          o = t.groupIndex,
          n = t.bcy,
          l = t.barHeight,
          h = t.barWidth,
          c = t.textRects,
          d = t.dataLabelsX,
          g = t.strokeWidth,
          u = t.dataLabelsConfig,
          p = t.barDataLabelsConfig,
          f = t.barTotalDataLabelsConfig,
          x = t.offX,
          b = t.offY,
          v = e.globals.gridHeight / e.globals.dataPoints;
        h = Math.abs(h);
        var y,
          w,
          k = (n += -1 !== o ? o * l : 0) - (this.barCtx.isRangeBar ? 0 : v) + l / 2 + c.height / 2 + b - 3,
          A = "start",
          S = this.barCtx.series[a][s] < 0,
          C = i;
        switch (this.barCtx.isReversed && (C = i + h - (S ? 2 * h : 0), i = e.globals.gridWidth - h), p.position) {
          case "center":
            d = S ? C + h / 2 - x : Math.max(c.width / 2, C - h / 2) + x;
            break;
          case "bottom":
            d = S ? C + h - g - Math.round(c.width / 2) - x : C - h + g + Math.round(c.width / 2) + x;
            break;
          case "top":
            d = S ? C - g + Math.round(c.width / 2) - x : C - g - Math.round(c.width / 2) + x;
        }
        if (this.barCtx.lastActiveBarSerieIndex === r && f.enabled) {
          var L = new m(this.barCtx.ctx).getTextRects(this.getStackedTotalDataLabel({
            realIndex: r,
            j: s
          }), u.fontSize);
          S ? (y = C - g + Math.round(L.width / 2) - x - f.offsetX - 15, A = "end") : y = C - g - Math.round(L.width / 2) + x + f.offsetX + 15, w = k + f.offsetY;
        }
        return e.config.chart.stacked || (d < 0 ? d = d + c.width + g : d + c.width / 2 > e.globals.gridWidth && (d = e.globals.gridWidth - c.width - g)), {
          bcx: i,
          bcy: n,
          dataLabelsX: d,
          dataLabelsY: k,
          totalDataLabelsX: y,
          totalDataLabelsY: w,
          totalDataLabelsAnchor: A
        };
      }
    }, {
      key: "drawCalculatedDataLabels",
      value: function (t) {
        var i = t.x,
          a = t.y,
          s = t.val,
          r = t.i,
          o = t.j,
          n = t.textRects,
          l = t.barHeight,
          h = t.barWidth,
          c = t.dataLabelsConfig,
          d = this.w,
          g = "rotate(0)";
        "vertical" === d.config.plotOptions.bar.dataLabels.orientation && (g = "rotate(-90, ".concat(i, ", ").concat(a, ")"));
        var u = new O(this.barCtx.ctx),
          p = new m(this.barCtx.ctx),
          f = c.formatter,
          x = null,
          b = d.globals.collapsedSeriesIndices.indexOf(r) > -1;
        if (c.enabled && !b) {
          x = p.group({
            class: "apexcharts-data-labels",
            transform: g
          });
          var v = "";
          void 0 !== s && (v = f(s, e(e({}, d), {}, {
            seriesIndex: r,
            dataPointIndex: o,
            w: d
          }))), !s && d.config.plotOptions.bar.hideZeroBarsWhenGrouped && (v = "");
          var y = d.globals.series[r][o] < 0,
            w = d.config.plotOptions.bar.dataLabels.position;
          if ("vertical" === d.config.plotOptions.bar.dataLabels.orientation && ("top" === w && (c.textAnchor = y ? "end" : "start"), "center" === w && (c.textAnchor = "middle"), "bottom" === w && (c.textAnchor = y ? "end" : "start")), this.barCtx.isRangeBar && this.barCtx.barOptions.dataLabels.hideOverflowingLabels) h < p.getTextRects(v, parseFloat(c.style.fontSize)).width && (v = "");
          d.config.chart.stacked && this.barCtx.barOptions.dataLabels.hideOverflowingLabels && (this.barCtx.isHorizontal ? n.width / 1.6 > Math.abs(h) && (v = "") : n.height / 1.6 > Math.abs(l) && (v = ""));
          var k = e({}, c);
          this.barCtx.isHorizontal && s < 0 && ("start" === c.textAnchor ? k.textAnchor = "end" : "end" === c.textAnchor && (k.textAnchor = "start")), u.plotDataLabelsText({
            x: i,
            y: a,
            text: v,
            i: r,
            j: o,
            parent: x,
            dataLabelsConfig: k,
            alwaysDrawDataLabel: !0,
            offsetCorrection: !0
          });
        }
        return x;
      }
    }, {
      key: "drawTotalDataLabels",
      value: function (t) {
        var e,
          i = t.x,
          a = t.y,
          s = t.val,
          r = t.realIndex,
          o = t.textAnchor,
          n = t.barTotalDataLabelsConfig,
          l = new m(this.barCtx.ctx);
        return n.enabled && void 0 !== i && void 0 !== a && this.barCtx.lastActiveBarSerieIndex === r && (e = l.drawText({
          x: i,
          y: a,
          foreColor: n.style.color,
          text: s,
          textAnchor: o,
          fontFamily: n.style.fontFamily,
          fontSize: n.style.fontSize,
          fontWeight: n.style.fontWeight
        })), e;
      }
    }]), t;
  }(),
  mt = function () {
    function t(e) {
      a(this, t), this.w = e.w, this.barCtx = e;
    }
    return r(t, [{
      key: "initVariables",
      value: function (t) {
        var e = this.w;
        this.barCtx.series = t, this.barCtx.totalItems = 0, this.barCtx.seriesLen = 0, this.barCtx.visibleI = -1, this.barCtx.visibleItems = 1;
        for (var i = 0; i < t.length; i++) if (t[i].length > 0 && (this.barCtx.seriesLen = this.barCtx.seriesLen + 1, this.barCtx.totalItems += t[i].length), e.globals.isXNumeric) for (var a = 0; a < t[i].length; a++) e.globals.seriesX[i][a] > e.globals.minX && e.globals.seriesX[i][a] < e.globals.maxX && this.barCtx.visibleItems++;else this.barCtx.visibleItems = e.globals.dataPoints;
        0 === this.barCtx.seriesLen && (this.barCtx.seriesLen = 1), this.barCtx.zeroSerieses = [], e.globals.comboCharts || this.checkZeroSeries({
          series: t
        });
      }
    }, {
      key: "initialPositions",
      value: function () {
        var t,
          e,
          i,
          a,
          s,
          r,
          o,
          n,
          l = this.w,
          h = l.globals.dataPoints;
        this.barCtx.isRangeBar && (h = l.globals.labels.length);
        var c = this.barCtx.seriesLen;
        if (l.config.plotOptions.bar.rangeBarGroupRows && (c = 1), this.barCtx.isHorizontal) s = (i = l.globals.gridHeight / h) / c, l.globals.isXNumeric && (s = (i = l.globals.gridHeight / this.barCtx.totalItems) / this.barCtx.seriesLen), s = s * parseInt(this.barCtx.barOptions.barHeight, 10) / 100, -1 === String(this.barCtx.barOptions.barHeight).indexOf("%") && (s = parseInt(this.barCtx.barOptions.barHeight, 10)), n = this.barCtx.baseLineInvertedY + l.globals.padHorizontal + (this.barCtx.isReversed ? l.globals.gridWidth : 0) - (this.barCtx.isReversed ? 2 * this.barCtx.baseLineInvertedY : 0), this.barCtx.isFunnel && (n = l.globals.gridWidth / 2), e = (i - s * this.barCtx.seriesLen) / 2;else {
          if (a = l.globals.gridWidth / this.barCtx.visibleItems, l.config.xaxis.convertedCatToNumeric && (a = l.globals.gridWidth / l.globals.dataPoints), r = a / c * parseInt(this.barCtx.barOptions.columnWidth, 10) / 100, l.globals.isXNumeric) {
            var d = this.barCtx.xRatio;
            l.config.xaxis.convertedCatToNumeric && (d = this.barCtx.initialXRatio), l.globals.minXDiff && .5 !== l.globals.minXDiff && l.globals.minXDiff / d > 0 && (a = l.globals.minXDiff / d), (r = a / c * parseInt(this.barCtx.barOptions.columnWidth, 10) / 100) < 1 && (r = 1);
          }
          -1 === String(this.barCtx.barOptions.columnWidth).indexOf("%") && (r = parseInt(this.barCtx.barOptions.columnWidth, 10)), o = l.globals.gridHeight - this.barCtx.baseLineY[this.barCtx.yaxisIndex] - (this.barCtx.isReversed ? l.globals.gridHeight : 0) + (this.barCtx.isReversed ? 2 * this.barCtx.baseLineY[this.barCtx.yaxisIndex] : 0), t = l.globals.padHorizontal + (a - r * this.barCtx.seriesLen) / 2;
        }
        return {
          x: t,
          y: e,
          yDivision: i,
          xDivision: a,
          barHeight: s,
          barWidth: r,
          zeroH: o,
          zeroW: n
        };
      }
    }, {
      key: "initializeStackedPrevVars",
      value: function (t) {
        var e = t.w;
        e.globals.hasSeriesGroups ? e.globals.seriesGroups.forEach(function (e) {
          t[e] || (t[e] = {}), t[e].prevY = [], t[e].prevX = [], t[e].prevYF = [], t[e].prevXF = [], t[e].prevYVal = [], t[e].prevXVal = [];
        }) : (t.prevY = [], t.prevX = [], t.prevYF = [], t.prevXF = [], t.prevYVal = [], t.prevXVal = []);
      }
    }, {
      key: "initializeStackedXYVars",
      value: function (t) {
        var e = t.w;
        e.globals.hasSeriesGroups ? e.globals.seriesGroups.forEach(function (e) {
          t[e] || (t[e] = {}), t[e].xArrj = [], t[e].xArrjF = [], t[e].xArrjVal = [], t[e].yArrj = [], t[e].yArrjF = [], t[e].yArrjVal = [];
        }) : (t.xArrj = [], t.xArrjF = [], t.xArrjVal = [], t.yArrj = [], t.yArrjF = [], t.yArrjVal = []);
      }
    }, {
      key: "getPathFillColor",
      value: function (t, e, i, a) {
        var s,
          r,
          o,
          n,
          l = this.w,
          h = new R(this.barCtx.ctx),
          c = null,
          d = this.barCtx.barOptions.distributed ? i : e;
        this.barCtx.barOptions.colors.ranges.length > 0 && this.barCtx.barOptions.colors.ranges.map(function (a) {
          t[e][i] >= a.from && t[e][i] <= a.to && (c = a.color);
        });
        return l.config.series[e].data[i] && l.config.series[e].data[i].fillColor && (c = l.config.series[e].data[i].fillColor), h.fillPath({
          seriesNumber: this.barCtx.barOptions.distributed ? d : a,
          dataPointIndex: i,
          color: c,
          value: t[e][i],
          fillConfig: null === (s = l.config.series[e].data[i]) || void 0 === s ? void 0 : s.fill,
          fillType: null !== (r = l.config.series[e].data[i]) && void 0 !== r && null !== (o = r.fill) && void 0 !== o && o.type ? null === (n = l.config.series[e].data[i]) || void 0 === n ? void 0 : n.fill.type : l.config.fill.type
        });
      }
    }, {
      key: "getStrokeWidth",
      value: function (t, e, i) {
        var a = 0,
          s = this.w;
        return this.barCtx.series[t][e] ? this.barCtx.isNullValue = !1 : this.barCtx.isNullValue = !0, s.config.stroke.show && (this.barCtx.isNullValue || (a = Array.isArray(this.barCtx.strokeWidth) ? this.barCtx.strokeWidth[i] : this.barCtx.strokeWidth)), a;
      }
    }, {
      key: "shouldApplyRadius",
      value: function (t) {
        var e = this.w,
          i = !1;
        return e.config.plotOptions.bar.borderRadius > 0 && (e.config.chart.stacked && "last" === e.config.plotOptions.bar.borderRadiusWhenStacked ? this.barCtx.lastActiveBarSerieIndex === t && (i = !0) : i = !0), i;
      }
    }, {
      key: "barBackground",
      value: function (t) {
        var e = t.j,
          i = t.i,
          a = t.x1,
          s = t.x2,
          r = t.y1,
          o = t.y2,
          n = t.elSeries,
          l = this.w,
          h = new m(this.barCtx.ctx),
          c = new N(this.barCtx.ctx).getActiveConfigSeriesIndex();
        if (this.barCtx.barOptions.colors.backgroundBarColors.length > 0 && c === i) {
          e >= this.barCtx.barOptions.colors.backgroundBarColors.length && (e %= this.barCtx.barOptions.colors.backgroundBarColors.length);
          var d = this.barCtx.barOptions.colors.backgroundBarColors[e],
            g = h.drawRect(void 0 !== a ? a : 0, void 0 !== r ? r : 0, void 0 !== s ? s : l.globals.gridWidth, void 0 !== o ? o : l.globals.gridHeight, this.barCtx.barOptions.colors.backgroundBarRadius, d, this.barCtx.barOptions.colors.backgroundBarOpacity);
          n.add(g), g.node.classList.add("apexcharts-backgroundBar");
        }
      }
    }, {
      key: "getColumnPaths",
      value: function (t) {
        var e,
          i = t.barWidth,
          a = t.barXPosition,
          s = t.y1,
          r = t.y2,
          o = t.strokeWidth,
          n = t.seriesGroup,
          l = t.realIndex,
          h = t.i,
          c = t.j,
          d = t.w,
          g = new m(this.barCtx.ctx);
        (o = Array.isArray(o) ? o[l] : o) || (o = 0);
        var u = i,
          p = a;
        null !== (e = d.config.series[l].data[c]) && void 0 !== e && e.columnWidthOffset && (p = a - d.config.series[l].data[c].columnWidthOffset / 2, u = i + d.config.series[l].data[c].columnWidthOffset);
        var f = p,
          x = p + u;
        s += .001, r += .001;
        var b = g.move(f, s),
          v = g.move(f, s),
          y = g.line(x - o, s);
        if (d.globals.previousPaths.length > 0 && (v = this.barCtx.getPreviousPath(l, c, !1)), b = b + g.line(f, r) + g.line(x - o, r) + g.line(x - o, s) + ("around" === d.config.plotOptions.bar.borderRadiusApplication ? " Z" : " z"), v = v + g.line(f, s) + y + y + y + y + y + g.line(f, s) + ("around" === d.config.plotOptions.bar.borderRadiusApplication ? " Z" : " z"), this.shouldApplyRadius(l) && (b = g.roundPathCorners(b, d.config.plotOptions.bar.borderRadius)), d.config.chart.stacked) {
          var w = this.barCtx;
          d.globals.hasSeriesGroups && n && (w = this.barCtx[n]), w.yArrj.push(r), w.yArrjF.push(Math.abs(s - r)), w.yArrjVal.push(this.barCtx.series[h][c]);
        }
        return {
          pathTo: b,
          pathFrom: v
        };
      }
    }, {
      key: "getBarpaths",
      value: function (t) {
        var e,
          i = t.barYPosition,
          a = t.barHeight,
          s = t.x1,
          r = t.x2,
          o = t.strokeWidth,
          n = t.seriesGroup,
          l = t.realIndex,
          h = t.i,
          c = t.j,
          d = t.w,
          g = new m(this.barCtx.ctx);
        (o = Array.isArray(o) ? o[l] : o) || (o = 0);
        var u = i,
          p = a;
        null !== (e = d.config.series[l].data[c]) && void 0 !== e && e.barHeightOffset && (u = i - d.config.series[l].data[c].barHeightOffset / 2, p = a + d.config.series[l].data[c].barHeightOffset);
        var f = u,
          x = u + p;
        s += .001, r += .001;
        var b = g.move(s, f),
          v = g.move(s, f);
        d.globals.previousPaths.length > 0 && (v = this.barCtx.getPreviousPath(l, c, !1));
        var y = g.line(s, x - o);
        if (b = b + g.line(r, f) + g.line(r, x - o) + y + ("around" === d.config.plotOptions.bar.borderRadiusApplication ? " Z" : " z"), v = v + g.line(s, f) + y + y + y + y + y + g.line(s, f) + ("around" === d.config.plotOptions.bar.borderRadiusApplication ? " Z" : " z"), this.shouldApplyRadius(l) && (b = g.roundPathCorners(b, d.config.plotOptions.bar.borderRadius)), d.config.chart.stacked) {
          var w = this.barCtx;
          d.globals.hasSeriesGroups && n && (w = this.barCtx[n]), w.xArrj.push(r), w.xArrjF.push(Math.abs(s - r)), w.xArrjVal.push(this.barCtx.series[h][c]);
        }
        return {
          pathTo: b,
          pathFrom: v
        };
      }
    }, {
      key: "checkZeroSeries",
      value: function (t) {
        for (var e = t.series, i = this.w, a = 0; a < e.length; a++) {
          for (var s = 0, r = 0; r < e[i.globals.maxValsInArrayIndex].length; r++) s += e[a][r];
          0 === s && this.barCtx.zeroSerieses.push(a);
        }
      }
    }, {
      key: "getXForValue",
      value: function (t, e) {
        var i = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2] ? e : null;
        return null != t && (i = e + t / this.barCtx.invertedYRatio - 2 * (this.barCtx.isReversed ? t / this.barCtx.invertedYRatio : 0)), i;
      }
    }, {
      key: "getYForValue",
      value: function (t, e) {
        var i = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2] ? e : null;
        return null != t && (i = e - t / this.barCtx.yRatio[this.barCtx.yaxisIndex] + 2 * (this.barCtx.isReversed ? t / this.barCtx.yRatio[this.barCtx.yaxisIndex] : 0)), i;
      }
    }, {
      key: "getGoalValues",
      value: function (t, i, a, s, r) {
        var n = this,
          l = this.w,
          h = [],
          c = function (e, s) {
            var r;
            h.push((o(r = {}, t, "x" === t ? n.getXForValue(e, i, !1) : n.getYForValue(e, a, !1)), o(r, "attrs", s), r));
          };
        if (l.globals.seriesGoals[s] && l.globals.seriesGoals[s][r] && Array.isArray(l.globals.seriesGoals[s][r]) && l.globals.seriesGoals[s][r].forEach(function (t) {
          c(t.value, t);
        }), this.barCtx.barOptions.isDumbbell && l.globals.seriesRange.length) {
          var d = this.barCtx.barOptions.dumbbellColors ? this.barCtx.barOptions.dumbbellColors : l.globals.colors,
            g = {
              strokeHeight: "x" === t ? 0 : l.globals.markers.size[s],
              strokeWidth: "x" === t ? l.globals.markers.size[s] : 0,
              strokeDashArray: 0,
              strokeLineCap: "round",
              strokeColor: Array.isArray(d[s]) ? d[s][0] : d[s]
            };
          c(l.globals.seriesRangeStart[s][r], g), c(l.globals.seriesRangeEnd[s][r], e(e({}, g), {}, {
            strokeColor: Array.isArray(d[s]) ? d[s][1] : d[s]
          }));
        }
        return h;
      }
    }, {
      key: "drawGoalLine",
      value: function (t) {
        var e = t.barXPosition,
          i = t.barYPosition,
          a = t.goalX,
          s = t.goalY,
          r = t.barWidth,
          o = t.barHeight,
          n = new m(this.barCtx.ctx),
          l = n.group({
            className: "apexcharts-bar-goals-groups"
          });
        l.node.classList.add("apexcharts-element-hidden"), this.barCtx.w.globals.delayedElements.push({
          el: l.node
        }), l.attr("clip-path", "url(#gridRectMarkerMask".concat(this.barCtx.w.globals.cuid, ")"));
        var h = null;
        return this.barCtx.isHorizontal ? Array.isArray(a) && a.forEach(function (t) {
          var e = void 0 !== t.attrs.strokeHeight ? t.attrs.strokeHeight : o / 2,
            a = i + e + o / 2;
          h = n.drawLine(t.x, a - 2 * e, t.x, a, t.attrs.strokeColor ? t.attrs.strokeColor : void 0, t.attrs.strokeDashArray, t.attrs.strokeWidth ? t.attrs.strokeWidth : 2, t.attrs.strokeLineCap), l.add(h);
        }) : Array.isArray(s) && s.forEach(function (t) {
          var i = void 0 !== t.attrs.strokeWidth ? t.attrs.strokeWidth : r / 2,
            a = e + i + r / 2;
          h = n.drawLine(a - 2 * i, t.y, a, t.y, t.attrs.strokeColor ? t.attrs.strokeColor : void 0, t.attrs.strokeDashArray, t.attrs.strokeHeight ? t.attrs.strokeHeight : 2, t.attrs.strokeLineCap), l.add(h);
        }), l;
      }
    }, {
      key: "drawBarShadow",
      value: function (t) {
        var e = t.prevPaths,
          i = t.currPaths,
          a = t.color,
          s = this.w,
          r = e.x,
          o = e.x1,
          n = e.barYPosition,
          l = i.x,
          h = i.x1,
          c = i.barYPosition,
          d = n + i.barHeight,
          g = new m(this.barCtx.ctx),
          u = new x(),
          p = g.move(o, d) + g.line(r, d) + g.line(l, c) + g.line(h, c) + g.line(o, d) + ("around" === s.config.plotOptions.bar.borderRadiusApplication ? " Z" : " z");
        return g.drawPath({
          d: p,
          fill: u.shadeColor(.5, x.rgb2hex(a)),
          stroke: "none",
          strokeWidth: 0,
          fillOpacity: 1,
          classes: "apexcharts-bar-shadows"
        });
      }
    }]), t;
  }(),
  yt = function () {
    function t(e, i) {
      a(this, t), this.ctx = e, this.w = e.w;
      var s = this.w;
      this.barOptions = s.config.plotOptions.bar, this.isHorizontal = this.barOptions.horizontal, this.strokeWidth = s.config.stroke.width, this.isNullValue = !1, this.isRangeBar = s.globals.seriesRange.length && this.isHorizontal, this.isVerticalGroupedRangeBar = !s.globals.isBarHorizontal && s.globals.seriesRange.length && s.config.plotOptions.bar.rangeBarGroupRows, this.isFunnel = this.barOptions.isFunnel, this.xyRatios = i, null !== this.xyRatios && (this.xRatio = i.xRatio, this.initialXRatio = i.initialXRatio, this.yRatio = i.yRatio, this.invertedXRatio = i.invertedXRatio, this.invertedYRatio = i.invertedYRatio, this.baseLineY = i.baseLineY, this.baseLineInvertedY = i.baseLineInvertedY), this.yaxisIndex = 0, this.seriesLen = 0, this.pathArr = [];
      var r = new N(this.ctx);
      this.lastActiveBarSerieIndex = r.getActiveConfigSeriesIndex("desc", ["bar", "column"]);
      var o = r.getBarSeriesIndices(),
        n = new y(this.ctx);
      this.stackedSeriesTotals = n.getStackedSeriesTotals(this.w.config.series.map(function (t, e) {
        return -1 === o.indexOf(e) ? e : -1;
      }).filter(function (t) {
        return -1 !== t;
      })), this.barHelpers = new mt(this);
    }
    return r(t, [{
      key: "draw",
      value: function (t, i) {
        var a = this.w,
          s = new m(this.ctx),
          r = new y(this.ctx, a);
        t = r.getLogSeries(t), this.series = t, this.yRatio = r.getLogYRatios(this.yRatio), this.barHelpers.initVariables(t);
        var o = s.group({
          class: "apexcharts-bar-series apexcharts-plot-series"
        });
        a.config.dataLabels.enabled && this.totalItems > this.barOptions.dataLabels.maxItems && console.warn("WARNING: DataLabels are enabled but there are too many to display. This may cause performance issue when rendering.");
        for (var n = 0, l = 0; n < t.length; n++, l++) {
          var h,
            c,
            d,
            g,
            u = void 0,
            p = void 0,
            f = [],
            b = [],
            v = a.globals.comboCharts ? i[n] : n,
            w = s.group({
              class: "apexcharts-series",
              rel: n + 1,
              seriesName: x.escapeString(a.globals.seriesNames[v]),
              "data:realIndex": v
            });
          this.ctx.series.addCollapsedClassToSeries(w, v), t[n].length > 0 && (this.visibleI = this.visibleI + 1);
          var k = 0,
            A = 0;
          this.yRatio.length > 1 && (this.yaxisIndex = v), this.isReversed = a.config.yaxis[this.yaxisIndex] && a.config.yaxis[this.yaxisIndex].reversed;
          var S = this.barHelpers.initialPositions();
          p = S.y, k = S.barHeight, c = S.yDivision, g = S.zeroW, u = S.x, A = S.barWidth, h = S.xDivision, d = S.zeroH, this.horizontal || b.push(u + A / 2);
          var C = s.group({
            class: "apexcharts-datalabels",
            "data:realIndex": v
          });
          a.globals.delayedElements.push({
            el: C.node
          }), C.node.classList.add("apexcharts-element-hidden");
          var L = s.group({
              class: "apexcharts-bar-goals-markers",
              style: "pointer-events: none"
            }),
            P = s.group({
              class: "apexcharts-bar-shadows",
              style: "pointer-events: none"
            });
          a.globals.delayedElements.push({
            el: P.node
          }), P.node.classList.add("apexcharts-element-hidden");
          for (var I = 0; I < a.globals.dataPoints; I++) {
            var T = this.barHelpers.getStrokeWidth(n, I, v),
              M = null,
              X = {
                indexes: {
                  i: n,
                  j: I,
                  realIndex: v,
                  bc: l
                },
                x: u,
                y: p,
                strokeWidth: T,
                elSeries: w
              };
            this.isHorizontal ? (M = this.drawBarPaths(e(e({}, X), {}, {
              barHeight: k,
              zeroW: g,
              yDivision: c
            })), A = this.series[n][I] / this.invertedYRatio) : (M = this.drawColumnPaths(e(e({}, X), {}, {
              xDivision: h,
              barWidth: A,
              zeroH: d
            })), k = this.series[n][I] / this.yRatio[this.yaxisIndex]);
            var z = this.barHelpers.getPathFillColor(t, n, I, v);
            if (this.isFunnel && this.barOptions.isFunnel3d && this.pathArr.length && I > 0) {
              var E = this.barHelpers.drawBarShadow({
                color: "string" == typeof z && -1 === (null == z ? void 0 : z.indexOf("url")) ? z : x.hexToRgba(a.globals.colors[n]),
                prevPaths: this.pathArr[this.pathArr.length - 1],
                currPaths: M
              });
              E && P.add(E);
            }
            this.pathArr.push(M);
            var Y = this.barHelpers.drawGoalLine({
              barXPosition: M.barXPosition,
              barYPosition: M.barYPosition,
              goalX: M.goalX,
              goalY: M.goalY,
              barHeight: k,
              barWidth: A
            });
            Y && L.add(Y), p = M.y, u = M.x, I > 0 && b.push(u + A / 2), f.push(p), this.renderSeries({
              realIndex: v,
              pathFill: z,
              j: I,
              i: n,
              pathFrom: M.pathFrom,
              pathTo: M.pathTo,
              strokeWidth: T,
              elSeries: w,
              x: u,
              y: p,
              series: t,
              barHeight: M.barHeight ? M.barHeight : k,
              barWidth: M.barWidth ? M.barWidth : A,
              elDataLabelsWrap: C,
              elGoalsMarkers: L,
              elBarShadows: P,
              visibleSeries: this.visibleI,
              type: "bar"
            });
          }
          a.globals.seriesXvalues[v] = b, a.globals.seriesYvalues[v] = f, o.add(w);
        }
        return o;
      }
    }, {
      key: "renderSeries",
      value: function (t) {
        var e = t.realIndex,
          i = t.pathFill,
          a = t.lineFill,
          s = t.j,
          r = t.i,
          o = t.groupIndex,
          n = t.pathFrom,
          l = t.pathTo,
          h = t.strokeWidth,
          c = t.elSeries,
          d = t.x,
          g = t.y,
          u = t.y1,
          p = t.y2,
          f = t.series,
          x = t.barHeight,
          b = t.barWidth,
          y = t.barXPosition,
          w = t.barYPosition,
          k = t.elDataLabelsWrap,
          A = t.elGoalsMarkers,
          S = t.elBarShadows,
          C = t.visibleSeries,
          L = t.type,
          P = this.w,
          I = new m(this.ctx);
        a || (a = this.barOptions.distributed ? P.globals.stroke.colors[s] : P.globals.stroke.colors[e]), P.config.series[r].data[s] && P.config.series[r].data[s].strokeColor && (a = P.config.series[r].data[s].strokeColor), this.isNullValue && (i = "none");
        var T = s / P.config.chart.animations.animateGradually.delay * (P.config.chart.animations.speed / P.globals.dataPoints) / 2.4,
          M = I.renderPaths({
            i: r,
            j: s,
            realIndex: e,
            pathFrom: n,
            pathTo: l,
            stroke: a,
            strokeWidth: h,
            strokeLineCap: P.config.stroke.lineCap,
            fill: i,
            animationDelay: T,
            initialSpeed: P.config.chart.animations.speed,
            dataChangeSpeed: P.config.chart.animations.dynamicAnimation.speed,
            className: "apexcharts-".concat(L, "-area")
          });
        M.attr("clip-path", "url(#gridRectMask".concat(P.globals.cuid, ")"));
        var X = P.config.forecastDataPoints;
        X.count > 0 && s >= P.globals.dataPoints - X.count && (M.node.setAttribute("stroke-dasharray", X.dashArray), M.node.setAttribute("stroke-width", X.strokeWidth), M.node.setAttribute("fill-opacity", X.fillOpacity)), void 0 !== u && void 0 !== p && (M.attr("data-range-y1", u), M.attr("data-range-y2", p)), new v(this.ctx).setSelectionFilter(M, e, s), c.add(M);
        var z = new vt(this).handleBarDataLabels({
          x: d,
          y: g,
          y1: u,
          y2: p,
          i: r,
          j: s,
          series: f,
          realIndex: e,
          groupIndex: o,
          barHeight: x,
          barWidth: b,
          barXPosition: y,
          barYPosition: w,
          renderedPath: M,
          visibleSeries: C
        });
        return null !== z.dataLabels && k.add(z.dataLabels), z.totalDataLabels && k.add(z.totalDataLabels), c.add(k), A && c.add(A), S && c.add(S), c;
      }
    }, {
      key: "drawBarPaths",
      value: function (t) {
        var e,
          i = t.indexes,
          a = t.barHeight,
          s = t.strokeWidth,
          r = t.zeroW,
          o = t.x,
          n = t.y,
          l = t.yDivision,
          h = t.elSeries,
          c = this.w,
          d = i.i,
          g = i.j;
        if (c.globals.isXNumeric) e = (n = (c.globals.seriesX[d][g] - c.globals.minX) / this.invertedXRatio - a) + a * this.visibleI;else if (c.config.plotOptions.bar.hideZeroBarsWhenGrouped) {
          var u = 0,
            p = 0;
          c.globals.seriesPercent.forEach(function (t, e) {
            t[g] && u++, e < d && 0 === t[g] && p++;
          }), u > 0 && (a = this.seriesLen * a / u), e = n + a * this.visibleI, e -= a * p;
        } else e = n + a * this.visibleI;
        this.isFunnel && (r -= (this.barHelpers.getXForValue(this.series[d][g], r) - r) / 2), o = this.barHelpers.getXForValue(this.series[d][g], r);
        var f = this.barHelpers.getBarpaths({
          barYPosition: e,
          barHeight: a,
          x1: r,
          x2: o,
          strokeWidth: s,
          series: this.series,
          realIndex: i.realIndex,
          i: d,
          j: g,
          w: c
        });
        return c.globals.isXNumeric || (n += l), this.barHelpers.barBackground({
          j: g,
          i: d,
          y1: e - a * this.visibleI,
          y2: a * this.seriesLen,
          elSeries: h
        }), {
          pathTo: f.pathTo,
          pathFrom: f.pathFrom,
          x1: r,
          x: o,
          y: n,
          goalX: this.barHelpers.getGoalValues("x", r, null, d, g),
          barYPosition: e,
          barHeight: a
        };
      }
    }, {
      key: "drawColumnPaths",
      value: function (t) {
        var e,
          i = t.indexes,
          a = t.x,
          s = t.y,
          r = t.xDivision,
          o = t.barWidth,
          n = t.zeroH,
          l = t.strokeWidth,
          h = t.elSeries,
          c = this.w,
          d = i.realIndex,
          g = i.i,
          u = i.j,
          p = i.bc;
        if (c.globals.isXNumeric) {
          var f = d;
          c.globals.seriesX[d].length || (f = c.globals.maxValsInArrayIndex), c.globals.seriesX[f][u] && (a = (c.globals.seriesX[f][u] - c.globals.minX) / this.xRatio - o * this.seriesLen / 2), e = a + o * this.visibleI;
        } else if (c.config.plotOptions.bar.hideZeroBarsWhenGrouped) {
          var x = 0,
            b = 0;
          c.globals.seriesPercent.forEach(function (t, e) {
            t[u] && x++, e < g && 0 === t[u] && b++;
          }), x > 0 && (o = this.seriesLen * o / x), e = a + o * this.visibleI, e -= o * b;
        } else e = a + o * this.visibleI;
        s = this.barHelpers.getYForValue(this.series[g][u], n);
        var v = this.barHelpers.getColumnPaths({
          barXPosition: e,
          barWidth: o,
          y1: n,
          y2: s,
          strokeWidth: l,
          series: this.series,
          realIndex: i.realIndex,
          i: g,
          j: u,
          w: c
        });
        return c.globals.isXNumeric || (a += r), this.barHelpers.barBackground({
          bc: p,
          j: u,
          i: g,
          x1: e - l / 2 - o * this.visibleI,
          x2: o * this.seriesLen + l / 2,
          elSeries: h
        }), {
          pathTo: v.pathTo,
          pathFrom: v.pathFrom,
          x: a,
          y: s,
          goalY: this.barHelpers.getGoalValues("y", null, n, g, u),
          barXPosition: e,
          barWidth: o
        };
      }
    }, {
      key: "getPreviousPath",
      value: function (t, e) {
        for (var i, a = this.w, s = 0; s < a.globals.previousPaths.length; s++) {
          var r = a.globals.previousPaths[s];
          r.paths && r.paths.length > 0 && parseInt(r.realIndex, 10) === parseInt(t, 10) && void 0 !== a.globals.previousPaths[s].paths[e] && (i = a.globals.previousPaths[s].paths[e].d);
        }
        return i;
      }
    }]), t;
  }(),
  wt = function (t) {
    n(s, yt);
    var i = d(s);
    function s() {
      return a(this, s), i.apply(this, arguments);
    }
    return r(s, [{
      key: "draw",
      value: function (t, i) {
        var a = this,
          s = this.w;
        this.graphics = new m(this.ctx), this.bar = new yt(this.ctx, this.xyRatios);
        var r = new y(this.ctx, s);
        t = r.getLogSeries(t), this.yRatio = r.getLogYRatios(this.yRatio), this.barHelpers.initVariables(t), "100%" === s.config.chart.stackType && (t = s.globals.seriesPercent.slice()), this.series = t, this.barHelpers.initializeStackedPrevVars(this);
        for (var o = this.graphics.group({
            class: "apexcharts-bar-series apexcharts-plot-series"
          }), n = 0, l = 0, h = function (r, h) {
            var c = void 0,
              d = void 0,
              g = void 0,
              u = void 0,
              p = -1;
            a.groupCtx = a, s.globals.seriesGroups.forEach(function (t, e) {
              t.indexOf(s.config.series[r].name) > -1 && (p = e);
            }), -1 !== p && (a.groupCtx = a[s.globals.seriesGroups[p]]);
            var f = [],
              b = [],
              v = s.globals.comboCharts ? i[r] : r;
            a.yRatio.length > 1 && (a.yaxisIndex = v), a.isReversed = s.config.yaxis[a.yaxisIndex] && s.config.yaxis[a.yaxisIndex].reversed;
            var m = a.graphics.group({
              class: "apexcharts-series",
              seriesName: x.escapeString(s.globals.seriesNames[v]),
              rel: r + 1,
              "data:realIndex": v
            });
            a.ctx.series.addCollapsedClassToSeries(m, v);
            var y = a.graphics.group({
                class: "apexcharts-datalabels",
                "data:realIndex": v
              }),
              w = a.graphics.group({
                class: "apexcharts-bar-goals-markers",
                style: "pointer-events: none"
              }),
              k = 0,
              A = 0,
              S = a.initialPositions(n, l, c, d, g, u);
            l = S.y, k = S.barHeight, d = S.yDivision, u = S.zeroW, n = S.x, A = S.barWidth, c = S.xDivision, g = S.zeroH, a.barHelpers.initializeStackedXYVars(a), 1 === a.groupCtx.prevY.length && a.groupCtx.prevY[0].every(function (t) {
              return isNaN(t);
            }) && (a.groupCtx.prevY[0] = a.groupCtx.prevY[0].map(function (t) {
              return g;
            }), a.groupCtx.prevYF[0] = a.groupCtx.prevYF[0].map(function (t) {
              return 0;
            }));
            for (var C = 0; C < s.globals.dataPoints; C++) {
              var L = a.barHelpers.getStrokeWidth(r, C, v),
                P = {
                  indexes: {
                    i: r,
                    j: C,
                    realIndex: v,
                    bc: h
                  },
                  strokeWidth: L,
                  x: n,
                  y: l,
                  elSeries: m,
                  groupIndex: p,
                  seriesGroup: s.globals.seriesGroups[p]
                },
                I = null;
              a.isHorizontal ? (I = a.drawStackedBarPaths(e(e({}, P), {}, {
                zeroW: u,
                barHeight: k,
                yDivision: d
              })), A = a.series[r][C] / a.invertedYRatio) : (I = a.drawStackedColumnPaths(e(e({}, P), {}, {
                xDivision: c,
                barWidth: A,
                zeroH: g
              })), k = a.series[r][C] / a.yRatio[a.yaxisIndex]);
              var T = a.barHelpers.drawGoalLine({
                barXPosition: I.barXPosition,
                barYPosition: I.barYPosition,
                goalX: I.goalX,
                goalY: I.goalY,
                barHeight: k,
                barWidth: A
              });
              T && w.add(T), l = I.y, n = I.x, f.push(n), b.push(l);
              var M = a.barHelpers.getPathFillColor(t, r, C, v);
              m = a.renderSeries({
                realIndex: v,
                pathFill: M,
                j: C,
                i: r,
                groupIndex: p,
                pathFrom: I.pathFrom,
                pathTo: I.pathTo,
                strokeWidth: L,
                elSeries: m,
                x: n,
                y: l,
                series: t,
                barHeight: k,
                barWidth: A,
                elDataLabelsWrap: y,
                elGoalsMarkers: w,
                type: "bar",
                visibleSeries: 0
              });
            }
            s.globals.seriesXvalues[v] = f, s.globals.seriesYvalues[v] = b, a.groupCtx.prevY.push(a.groupCtx.yArrj), a.groupCtx.prevYF.push(a.groupCtx.yArrjF), a.groupCtx.prevYVal.push(a.groupCtx.yArrjVal), a.groupCtx.prevX.push(a.groupCtx.xArrj), a.groupCtx.prevXF.push(a.groupCtx.xArrjF), a.groupCtx.prevXVal.push(a.groupCtx.xArrjVal), o.add(m);
          }, c = 0, d = 0; c < t.length; c++, d++) h(c, d);
        return o;
      }
    }, {
      key: "initialPositions",
      value: function (t, e, i, a, s, r) {
        var o,
          n,
          l,
          h,
          c = this.w;
        return this.isHorizontal ? (l = (l = a = c.globals.gridHeight / c.globals.dataPoints) * parseInt(c.config.plotOptions.bar.barHeight, 10) / 100, -1 === String(c.config.plotOptions.bar.barHeight).indexOf("%") && (l = parseInt(c.config.plotOptions.bar.barHeight, 10)), r = this.baseLineInvertedY + c.globals.padHorizontal + (this.isReversed ? c.globals.gridWidth : 0) - (this.isReversed ? 2 * this.baseLineInvertedY : 0), e = (a - l) / 2) : (h = i = c.globals.gridWidth / c.globals.dataPoints, h = c.globals.isXNumeric && c.globals.dataPoints > 1 ? (i = c.globals.minXDiff / this.xRatio) * parseInt(this.barOptions.columnWidth, 10) / 100 : h * parseInt(c.config.plotOptions.bar.columnWidth, 10) / 100, -1 === String(c.config.plotOptions.bar.columnWidth).indexOf("%") && (h = parseInt(c.config.plotOptions.bar.columnWidth, 10)), s = c.globals.gridHeight - this.baseLineY[this.yaxisIndex] - (this.isReversed ? c.globals.gridHeight : 0) + (this.isReversed ? 2 * this.baseLineY[this.yaxisIndex] : 0), t = c.globals.padHorizontal + (i - h) / 2), {
          x: t,
          y: e,
          yDivision: a,
          xDivision: i,
          barHeight: null !== (o = c.globals.seriesGroups) && void 0 !== o && o.length ? l / c.globals.seriesGroups.length : l,
          barWidth: null !== (n = c.globals.seriesGroups) && void 0 !== n && n.length ? h / c.globals.seriesGroups.length : h,
          zeroH: s,
          zeroW: r
        };
      }
    }, {
      key: "drawStackedBarPaths",
      value: function (t) {
        for (var e, i = t.indexes, a = t.barHeight, s = t.strokeWidth, r = t.zeroW, o = t.x, n = t.y, l = t.groupIndex, h = t.seriesGroup, c = t.yDivision, d = t.elSeries, g = this.w, u = n + (-1 !== l ? l * a : 0), p = i.i, f = i.j, x = 0, b = 0; b < this.groupCtx.prevXF.length; b++) x += this.groupCtx.prevXF[b][f];
        var v = p;
        if (h && (v = h.indexOf(g.config.series[p].name)), v > 0) {
          var m = r;
          this.groupCtx.prevXVal[v - 1][f] < 0 ? m = this.series[p][f] >= 0 ? this.groupCtx.prevX[v - 1][f] + x - 2 * (this.isReversed ? x : 0) : this.groupCtx.prevX[v - 1][f] : this.groupCtx.prevXVal[v - 1][f] >= 0 && (m = this.series[p][f] >= 0 ? this.groupCtx.prevX[v - 1][f] : this.groupCtx.prevX[v - 1][f] - x + 2 * (this.isReversed ? x : 0)), e = m;
        } else e = r;
        o = null === this.series[p][f] ? e : e + this.series[p][f] / this.invertedYRatio - 2 * (this.isReversed ? this.series[p][f] / this.invertedYRatio : 0);
        var y = this.barHelpers.getBarpaths({
          barYPosition: u,
          barHeight: a,
          x1: e,
          x2: o,
          strokeWidth: s,
          series: this.series,
          realIndex: i.realIndex,
          seriesGroup: h,
          i: p,
          j: f,
          w: g
        });
        return this.barHelpers.barBackground({
          j: f,
          i: p,
          y1: u,
          y2: a,
          elSeries: d
        }), n += c, {
          pathTo: y.pathTo,
          pathFrom: y.pathFrom,
          goalX: this.barHelpers.getGoalValues("x", r, null, p, f),
          barYPosition: u,
          x: o,
          y: n
        };
      }
    }, {
      key: "drawStackedColumnPaths",
      value: function (t) {
        var e = t.indexes,
          i = t.x,
          a = t.y,
          s = t.xDivision,
          r = t.barWidth,
          o = t.zeroH,
          n = t.groupIndex,
          l = t.seriesGroup,
          h = t.elSeries,
          c = this.w,
          d = e.i,
          g = e.j,
          u = e.bc;
        if (c.globals.isXNumeric) {
          var p = c.globals.seriesX[d][g];
          p || (p = 0), i = (p - c.globals.minX) / this.xRatio - r / 2, c.globals.seriesGroups.length && (i = (p - c.globals.minX) / this.xRatio - r / 2 * c.globals.seriesGroups.length);
        }
        for (var f, x = i + (-1 !== n ? n * r : 0), b = 0, v = 0; v < this.groupCtx.prevYF.length; v++) b += isNaN(this.groupCtx.prevYF[v][g]) ? 0 : this.groupCtx.prevYF[v][g];
        var m = d;
        if (l && (m = l.indexOf(c.config.series[d].name)), m > 0 && !c.globals.isXNumeric || m > 0 && c.globals.isXNumeric && c.globals.seriesX[d - 1][g] === c.globals.seriesX[d][g]) {
          var y,
            w,
            k,
            A = Math.min(this.yRatio.length + 1, d + 1);
          if (void 0 !== this.groupCtx.prevY[m - 1] && this.groupCtx.prevY[m - 1].length) for (var S = 1; S < A; S++) {
            var C;
            if (!isNaN(null === (C = this.groupCtx.prevY[m - S]) || void 0 === C ? void 0 : C[g])) {
              k = this.groupCtx.prevY[m - S][g];
              break;
            }
          }
          for (var L = 1; L < A; L++) {
            var P, I;
            if ((null === (P = this.groupCtx.prevYVal[m - L]) || void 0 === P ? void 0 : P[g]) < 0) {
              w = this.series[d][g] >= 0 ? k - b + 2 * (this.isReversed ? b : 0) : k;
              break;
            }
            if ((null === (I = this.groupCtx.prevYVal[m - L]) || void 0 === I ? void 0 : I[g]) >= 0) {
              w = this.series[d][g] >= 0 ? k : k + b - 2 * (this.isReversed ? b : 0);
              break;
            }
          }
          void 0 === w && (w = c.globals.gridHeight), f = null !== (y = this.groupCtx.prevYF[0]) && void 0 !== y && y.every(function (t) {
            return 0 === t;
          }) && this.groupCtx.prevYF.slice(1, m).every(function (t) {
            return t.every(function (t) {
              return isNaN(t);
            });
          }) ? o : w;
        } else f = o;
        a = this.series[d][g] ? f - this.series[d][g] / this.yRatio[this.yaxisIndex] + 2 * (this.isReversed ? this.series[d][g] / this.yRatio[this.yaxisIndex] : 0) : f;
        var T = this.barHelpers.getColumnPaths({
          barXPosition: x,
          barWidth: r,
          y1: f,
          y2: a,
          yRatio: this.yRatio[this.yaxisIndex],
          strokeWidth: this.strokeWidth,
          series: this.series,
          seriesGroup: l,
          realIndex: e.realIndex,
          i: d,
          j: g,
          w: c
        });
        return this.barHelpers.barBackground({
          bc: u,
          j: g,
          i: d,
          x1: x,
          x2: r,
          elSeries: h
        }), i += s, {
          pathTo: T.pathTo,
          pathFrom: T.pathFrom,
          goalY: this.barHelpers.getGoalValues("y", null, o, d, g),
          barXPosition: x,
          x: c.globals.isXNumeric ? i - s : i,
          y: a
        };
      }
    }]), s;
  }(),
  kt = function (t) {
    n(s, yt);
    var i = d(s);
    function s() {
      return a(this, s), i.apply(this, arguments);
    }
    return r(s, [{
      key: "draw",
      value: function (t, i, a) {
        var s = this,
          r = this.w,
          o = new m(this.ctx),
          n = r.globals.comboCharts ? i : r.config.chart.type,
          l = new R(this.ctx);
        this.candlestickOptions = this.w.config.plotOptions.candlestick, this.boxOptions = this.w.config.plotOptions.boxPlot, this.isHorizontal = r.config.plotOptions.bar.horizontal;
        var h = new y(this.ctx, r);
        t = h.getLogSeries(t), this.series = t, this.yRatio = h.getLogYRatios(this.yRatio), this.barHelpers.initVariables(t);
        for (var c = o.group({
            class: "apexcharts-".concat(n, "-series apexcharts-plot-series")
          }), d = function (i) {
            s.isBoxPlot = "boxPlot" === r.config.chart.type || "boxPlot" === r.config.series[i].type;
            var n,
              h,
              d,
              g,
              u = void 0,
              p = void 0,
              f = [],
              b = [],
              v = r.globals.comboCharts ? a[i] : i,
              m = o.group({
                class: "apexcharts-series",
                seriesName: x.escapeString(r.globals.seriesNames[v]),
                rel: i + 1,
                "data:realIndex": v
              });
            s.ctx.series.addCollapsedClassToSeries(m, v), t[i].length > 0 && (s.visibleI = s.visibleI + 1);
            var y, w;
            s.yRatio.length > 1 && (s.yaxisIndex = v);
            var k = s.barHelpers.initialPositions();
            p = k.y, y = k.barHeight, h = k.yDivision, g = k.zeroW, u = k.x, w = k.barWidth, n = k.xDivision, d = k.zeroH, b.push(u + w / 2);
            for (var A = o.group({
                class: "apexcharts-datalabels",
                "data:realIndex": v
              }), S = function (a) {
                var o = s.barHelpers.getStrokeWidth(i, a, v),
                  c = null,
                  x = {
                    indexes: {
                      i: i,
                      j: a,
                      realIndex: v
                    },
                    x: u,
                    y: p,
                    strokeWidth: o,
                    elSeries: m
                  };
                c = s.isHorizontal ? s.drawHorizontalBoxPaths(e(e({}, x), {}, {
                  yDivision: h,
                  barHeight: y,
                  zeroW: g
                })) : s.drawVerticalBoxPaths(e(e({}, x), {}, {
                  xDivision: n,
                  barWidth: w,
                  zeroH: d
                })), p = c.y, u = c.x, a > 0 && b.push(u + w / 2), f.push(p), c.pathTo.forEach(function (e, n) {
                  var h = !s.isBoxPlot && s.candlestickOptions.wick.useFillColor ? c.color[n] : r.globals.stroke.colors[i],
                    d = l.fillPath({
                      seriesNumber: v,
                      dataPointIndex: a,
                      color: c.color[n],
                      value: t[i][a]
                    });
                  s.renderSeries({
                    realIndex: v,
                    pathFill: d,
                    lineFill: h,
                    j: a,
                    i: i,
                    pathFrom: c.pathFrom,
                    pathTo: e,
                    strokeWidth: o,
                    elSeries: m,
                    x: u,
                    y: p,
                    series: t,
                    barHeight: y,
                    barWidth: w,
                    elDataLabelsWrap: A,
                    visibleSeries: s.visibleI,
                    type: r.config.chart.type
                  });
                });
              }, C = 0; C < r.globals.dataPoints; C++) S(C);
            r.globals.seriesXvalues[v] = b, r.globals.seriesYvalues[v] = f, c.add(m);
          }, g = 0; g < t.length; g++) d(g);
        return c;
      }
    }, {
      key: "drawVerticalBoxPaths",
      value: function (t) {
        var e = t.indexes,
          i = t.x;
        t.y;
        var a = t.xDivision,
          s = t.barWidth,
          r = t.zeroH,
          o = t.strokeWidth,
          n = this.w,
          l = new m(this.ctx),
          h = e.i,
          c = e.j,
          d = !0,
          g = n.config.plotOptions.candlestick.colors.upward,
          u = n.config.plotOptions.candlestick.colors.downward,
          p = "";
        this.isBoxPlot && (p = [this.boxOptions.colors.lower, this.boxOptions.colors.upper]);
        var f = this.yRatio[this.yaxisIndex],
          x = e.realIndex,
          b = this.getOHLCValue(x, c),
          v = r,
          y = r;
        b.o > b.c && (d = !1);
        var w = Math.min(b.o, b.c),
          k = Math.max(b.o, b.c),
          A = b.m;
        n.globals.isXNumeric && (i = (n.globals.seriesX[x][c] - n.globals.minX) / this.xRatio - s / 2);
        var S = i + s * this.visibleI;
        void 0 === this.series[h][c] || null === this.series[h][c] ? (w = r, k = r) : (w = r - w / f, k = r - k / f, v = r - b.h / f, y = r - b.l / f, A = r - b.m / f);
        var C = l.move(S, r),
          L = l.move(S + s / 2, w);
        return n.globals.previousPaths.length > 0 && (L = this.getPreviousPath(x, c, !0)), C = this.isBoxPlot ? [l.move(S, w) + l.line(S + s / 2, w) + l.line(S + s / 2, v) + l.line(S + s / 4, v) + l.line(S + s - s / 4, v) + l.line(S + s / 2, v) + l.line(S + s / 2, w) + l.line(S + s, w) + l.line(S + s, A) + l.line(S, A) + l.line(S, w + o / 2), l.move(S, A) + l.line(S + s, A) + l.line(S + s, k) + l.line(S + s / 2, k) + l.line(S + s / 2, y) + l.line(S + s - s / 4, y) + l.line(S + s / 4, y) + l.line(S + s / 2, y) + l.line(S + s / 2, k) + l.line(S, k) + l.line(S, A) + "z"] : [l.move(S, k) + l.line(S + s / 2, k) + l.line(S + s / 2, v) + l.line(S + s / 2, k) + l.line(S + s, k) + l.line(S + s, w) + l.line(S + s / 2, w) + l.line(S + s / 2, y) + l.line(S + s / 2, w) + l.line(S, w) + l.line(S, k - o / 2)], L += l.move(S, w), n.globals.isXNumeric || (i += a), {
          pathTo: C,
          pathFrom: L,
          x: i,
          y: k,
          barXPosition: S,
          color: this.isBoxPlot ? p : d ? [g] : [u]
        };
      }
    }, {
      key: "drawHorizontalBoxPaths",
      value: function (t) {
        var e = t.indexes;
        t.x;
        var i = t.y,
          a = t.yDivision,
          s = t.barHeight,
          r = t.zeroW,
          o = t.strokeWidth,
          n = this.w,
          l = new m(this.ctx),
          h = e.i,
          c = e.j,
          d = this.boxOptions.colors.lower;
        this.isBoxPlot && (d = [this.boxOptions.colors.lower, this.boxOptions.colors.upper]);
        var g = this.invertedYRatio,
          u = e.realIndex,
          p = this.getOHLCValue(u, c),
          f = r,
          x = r,
          b = Math.min(p.o, p.c),
          v = Math.max(p.o, p.c),
          y = p.m;
        n.globals.isXNumeric && (i = (n.globals.seriesX[u][c] - n.globals.minX) / this.invertedXRatio - s / 2);
        var w = i + s * this.visibleI;
        void 0 === this.series[h][c] || null === this.series[h][c] ? (b = r, v = r) : (b = r + b / g, v = r + v / g, f = r + p.h / g, x = r + p.l / g, y = r + p.m / g);
        var k = l.move(r, w),
          A = l.move(b, w + s / 2);
        return n.globals.previousPaths.length > 0 && (A = this.getPreviousPath(u, c, !0)), k = [l.move(b, w) + l.line(b, w + s / 2) + l.line(f, w + s / 2) + l.line(f, w + s / 2 - s / 4) + l.line(f, w + s / 2 + s / 4) + l.line(f, w + s / 2) + l.line(b, w + s / 2) + l.line(b, w + s) + l.line(y, w + s) + l.line(y, w) + l.line(b + o / 2, w), l.move(y, w) + l.line(y, w + s) + l.line(v, w + s) + l.line(v, w + s / 2) + l.line(x, w + s / 2) + l.line(x, w + s - s / 4) + l.line(x, w + s / 4) + l.line(x, w + s / 2) + l.line(v, w + s / 2) + l.line(v, w) + l.line(y, w) + "z"], A += l.move(b, w), n.globals.isXNumeric || (i += a), {
          pathTo: k,
          pathFrom: A,
          x: v,
          y: i,
          barYPosition: w,
          color: d
        };
      }
    }, {
      key: "getOHLCValue",
      value: function (t, e) {
        var i = this.w;
        return {
          o: this.isBoxPlot ? i.globals.seriesCandleH[t][e] : i.globals.seriesCandleO[t][e],
          h: this.isBoxPlot ? i.globals.seriesCandleO[t][e] : i.globals.seriesCandleH[t][e],
          m: i.globals.seriesCandleM[t][e],
          l: this.isBoxPlot ? i.globals.seriesCandleC[t][e] : i.globals.seriesCandleL[t][e],
          c: this.isBoxPlot ? i.globals.seriesCandleL[t][e] : i.globals.seriesCandleC[t][e]
        };
      }
    }]), s;
  }(),
  At = function () {
    function t(e) {
      a(this, t), this.ctx = e, this.w = e.w;
    }
    return r(t, [{
      key: "checkColorRange",
      value: function () {
        var t = this.w,
          e = !1,
          i = t.config.plotOptions[t.config.chart.type];
        return i.colorScale.ranges.length > 0 && i.colorScale.ranges.map(function (t, i) {
          t.from <= 0 && (e = !0);
        }), e;
      }
    }, {
      key: "getShadeColor",
      value: function (t, e, i, a) {
        var s = this.w,
          r = 1,
          o = s.config.plotOptions[t].shadeIntensity,
          n = this.determineColor(t, e, i);
        s.globals.hasNegs || a ? r = s.config.plotOptions[t].reverseNegativeShade ? n.percent < 0 ? n.percent / 100 * (1.25 * o) : (1 - n.percent / 100) * (1.25 * o) : n.percent <= 0 ? 1 - (1 + n.percent / 100) * o : (1 - n.percent / 100) * o : (r = 1 - n.percent / 100, "treemap" === t && (r = (1 - n.percent / 100) * (1.25 * o)));
        var l = n.color,
          h = new x();
        return s.config.plotOptions[t].enableShades && (l = "dark" === this.w.config.theme.mode ? x.hexToRgba(h.shadeColor(-1 * r, n.color), s.config.fill.opacity) : x.hexToRgba(h.shadeColor(r, n.color), s.config.fill.opacity)), {
          color: l,
          colorProps: n
        };
      }
    }, {
      key: "determineColor",
      value: function (t, e, i) {
        var a = this.w,
          s = a.globals.series[e][i],
          r = a.config.plotOptions[t],
          o = r.colorScale.inverse ? i : e;
        r.distributed && "treemap" === a.config.chart.type && (o = i);
        var n = a.globals.colors[o],
          l = null,
          h = Math.min.apply(Math, u(a.globals.series[e])),
          c = Math.max.apply(Math, u(a.globals.series[e]));
        r.distributed || "heatmap" !== t || (h = a.globals.minY, c = a.globals.maxY), void 0 !== r.colorScale.min && (h = r.colorScale.min < a.globals.minY ? r.colorScale.min : a.globals.minY, c = r.colorScale.max > a.globals.maxY ? r.colorScale.max : a.globals.maxY);
        var d = Math.abs(c) + Math.abs(h),
          g = 100 * s / (0 === d ? d - 1e-6 : d);
        r.colorScale.ranges.length > 0 && r.colorScale.ranges.map(function (t, e) {
          if (s >= t.from && s <= t.to) {
            n = t.color, l = t.foreColor ? t.foreColor : null, h = t.from, c = t.to;
            var i = Math.abs(c) + Math.abs(h);
            g = 100 * s / (0 === i ? i - 1e-6 : i);
          }
        });
        return {
          color: n,
          foreColor: l,
          percent: g
        };
      }
    }, {
      key: "calculateDataLabels",
      value: function (t) {
        var e = t.text,
          i = t.x,
          a = t.y,
          s = t.i,
          r = t.j,
          o = t.colorProps,
          n = t.fontSize,
          l = this.w.config.dataLabels,
          h = new m(this.ctx),
          c = new O(this.ctx),
          d = null;
        if (l.enabled) {
          d = h.group({
            class: "apexcharts-data-labels"
          });
          var g = l.offsetX,
            u = l.offsetY,
            p = i + g,
            f = a + parseFloat(l.style.fontSize) / 3 + u;
          c.plotDataLabelsText({
            x: p,
            y: f,
            text: e,
            i: s,
            j: r,
            color: o.foreColor,
            parent: d,
            fontSize: n,
            dataLabelsConfig: l
          });
        }
        return d;
      }
    }, {
      key: "addListeners",
      value: function (t) {
        var e = new m(this.ctx);
        t.node.addEventListener("mouseenter", e.pathMouseEnter.bind(this, t)), t.node.addEventListener("mouseleave", e.pathMouseLeave.bind(this, t)), t.node.addEventListener("mousedown", e.pathMouseDown.bind(this, t));
      }
    }]), t;
  }(),
  St = function () {
    function t(e, i) {
      a(this, t), this.ctx = e, this.w = e.w, this.xRatio = i.xRatio, this.yRatio = i.yRatio, this.dynamicAnim = this.w.config.chart.animations.dynamicAnimation, this.helpers = new At(e), this.rectRadius = this.w.config.plotOptions.heatmap.radius, this.strokeWidth = this.w.config.stroke.show ? this.w.config.stroke.width : 0;
    }
    return r(t, [{
      key: "draw",
      value: function (t) {
        var e = this.w,
          i = new m(this.ctx),
          a = i.group({
            class: "apexcharts-heatmap"
          });
        a.attr("clip-path", "url(#gridRectMask".concat(e.globals.cuid, ")"));
        var s = e.globals.gridWidth / e.globals.dataPoints,
          r = e.globals.gridHeight / e.globals.series.length,
          o = 0,
          n = !1;
        this.negRange = this.helpers.checkColorRange();
        var l = t.slice();
        e.config.yaxis[0].reversed && (n = !0, l.reverse());
        for (var h = n ? 0 : l.length - 1; n ? h < l.length : h >= 0; n ? h++ : h--) {
          var c = i.group({
            class: "apexcharts-series apexcharts-heatmap-series",
            seriesName: x.escapeString(e.globals.seriesNames[h]),
            rel: h + 1,
            "data:realIndex": h
          });
          if (this.ctx.series.addCollapsedClassToSeries(c, h), e.config.chart.dropShadow.enabled) {
            var d = e.config.chart.dropShadow;
            new v(this.ctx).dropShadow(c, d, h);
          }
          for (var g = 0, u = e.config.plotOptions.heatmap.shadeIntensity, p = 0; p < l[h].length; p++) {
            var f = this.helpers.getShadeColor(e.config.chart.type, h, p, this.negRange),
              b = f.color,
              y = f.colorProps;
            if ("image" === e.config.fill.type) b = new R(this.ctx).fillPath({
              seriesNumber: h,
              dataPointIndex: p,
              opacity: e.globals.hasNegs ? y.percent < 0 ? 1 - (1 + y.percent / 100) : u + y.percent / 100 : y.percent / 100,
              patternID: x.randomId(),
              width: e.config.fill.image.width ? e.config.fill.image.width : s,
              height: e.config.fill.image.height ? e.config.fill.image.height : r
            });
            var w = this.rectRadius,
              k = i.drawRect(g, o, s, r, w);
            if (k.attr({
              cx: g,
              cy: o
            }), k.node.classList.add("apexcharts-heatmap-rect"), c.add(k), k.attr({
              fill: b,
              i: h,
              index: h,
              j: p,
              val: l[h][p],
              "stroke-width": this.strokeWidth,
              stroke: e.config.plotOptions.heatmap.useFillColorAsStroke ? b : e.globals.stroke.colors[0],
              color: b
            }), this.helpers.addListeners(k), e.config.chart.animations.enabled && !e.globals.dataChanged) {
              var A = 1;
              e.globals.resized || (A = e.config.chart.animations.speed), this.animateHeatMap(k, g, o, s, r, A);
            }
            if (e.globals.dataChanged) {
              var S = 1;
              if (this.dynamicAnim.enabled && e.globals.shouldAnimate) {
                S = this.dynamicAnim.speed;
                var C = e.globals.previousPaths[h] && e.globals.previousPaths[h][p] && e.globals.previousPaths[h][p].color;
                C || (C = "rgba(255, 255, 255, 0)"), this.animateHeatColor(k, x.isColorHex(C) ? C : x.rgb2hex(C), x.isColorHex(b) ? b : x.rgb2hex(b), S);
              }
            }
            var L = (0, e.config.dataLabels.formatter)(e.globals.series[h][p], {
                value: e.globals.series[h][p],
                seriesIndex: h,
                dataPointIndex: p,
                w: e
              }),
              P = this.helpers.calculateDataLabels({
                text: L,
                x: g + s / 2,
                y: o + r / 2,
                i: h,
                j: p,
                colorProps: y,
                series: l
              });
            null !== P && c.add(P), g += s;
          }
          o += r, a.add(c);
        }
        var I = e.globals.yAxisScale[0].result.slice();
        e.config.yaxis[0].reversed ? I.unshift("") : I.push(""), e.globals.yAxisScale[0].result = I;
        var T = e.globals.gridHeight / e.globals.series.length;
        return e.config.yaxis[0].labels.offsetY = -T / 2, a;
      }
    }, {
      key: "animateHeatMap",
      value: function (t, e, i, a, s, r) {
        var o = new b(this.ctx);
        o.animateRect(t, {
          x: e + a / 2,
          y: i + s / 2,
          width: 0,
          height: 0
        }, {
          x: e,
          y: i,
          width: a,
          height: s
        }, r, function () {
          o.animationCompleted(t);
        });
      }
    }, {
      key: "animateHeatColor",
      value: function (t, e, i, a) {
        t.attr({
          fill: e
        }).animate(a).attr({
          fill: i
        });
      }
    }]), t;
  }(),
  Ct = function () {
    function t(e) {
      a(this, t), this.ctx = e, this.w = e.w;
    }
    return r(t, [{
      key: "drawYAxisTexts",
      value: function (t, e, i, a) {
        var s = this.w,
          r = s.config.yaxis[0],
          o = s.globals.yLabelFormatters[0];
        return new m(this.ctx).drawText({
          x: t + r.labels.offsetX,
          y: e + r.labels.offsetY,
          text: o(a, i),
          textAnchor: "middle",
          fontSize: r.labels.style.fontSize,
          fontFamily: r.labels.style.fontFamily,
          foreColor: Array.isArray(r.labels.style.colors) ? r.labels.style.colors[i] : r.labels.style.colors
        });
      }
    }]), t;
  }(),
  Lt = function () {
    function t(e) {
      a(this, t), this.ctx = e, this.w = e.w;
      var i = this.w;
      this.chartType = this.w.config.chart.type, this.initialAnim = this.w.config.chart.animations.enabled, this.dynamicAnim = this.initialAnim && this.w.config.chart.animations.dynamicAnimation.enabled, this.animBeginArr = [0], this.animDur = 0, this.donutDataLabels = this.w.config.plotOptions.pie.donut.labels, this.lineColorArr = void 0 !== i.globals.stroke.colors ? i.globals.stroke.colors : i.globals.colors, this.defaultSize = Math.min(i.globals.gridWidth, i.globals.gridHeight), this.centerY = this.defaultSize / 2, this.centerX = i.globals.gridWidth / 2, "radialBar" === i.config.chart.type ? this.fullAngle = 360 : this.fullAngle = Math.abs(i.config.plotOptions.pie.endAngle - i.config.plotOptions.pie.startAngle), this.initialAngle = i.config.plotOptions.pie.startAngle % this.fullAngle, i.globals.radialSize = this.defaultSize / 2.05 - i.config.stroke.width - (i.config.chart.sparkline.enabled ? 0 : i.config.chart.dropShadow.blur), this.donutSize = i.globals.radialSize * parseInt(i.config.plotOptions.pie.donut.size, 10) / 100, this.maxY = 0, this.sliceLabels = [], this.sliceSizes = [], this.prevSectorAngleArr = [];
    }
    return r(t, [{
      key: "draw",
      value: function (t) {
        var e = this,
          i = this.w,
          a = new m(this.ctx);
        if (this.ret = a.group({
          class: "apexcharts-pie"
        }), i.globals.noData) return this.ret;
        for (var s = 0, r = 0; r < t.length; r++) s += x.negToZero(t[r]);
        var o = [],
          n = a.group();
        0 === s && (s = 1e-5), t.forEach(function (t) {
          e.maxY = Math.max(e.maxY, t);
        }), i.config.yaxis[0].max && (this.maxY = i.config.yaxis[0].max), "back" === i.config.grid.position && "polarArea" === this.chartType && this.drawPolarElements(this.ret);
        for (var l = 0; l < t.length; l++) {
          var h = this.fullAngle * x.negToZero(t[l]) / s;
          o.push(h), "polarArea" === this.chartType ? (o[l] = this.fullAngle / t.length, this.sliceSizes.push(i.globals.radialSize * t[l] / this.maxY)) : this.sliceSizes.push(i.globals.radialSize);
        }
        if (i.globals.dataChanged) {
          for (var c, d = 0, g = 0; g < i.globals.previousPaths.length; g++) d += x.negToZero(i.globals.previousPaths[g]);
          for (var u = 0; u < i.globals.previousPaths.length; u++) c = this.fullAngle * x.negToZero(i.globals.previousPaths[u]) / d, this.prevSectorAngleArr.push(c);
        }
        this.donutSize < 0 && (this.donutSize = 0);
        var p = i.config.plotOptions.pie.customScale,
          f = i.globals.gridWidth / 2,
          b = i.globals.gridHeight / 2,
          v = f - i.globals.gridWidth / 2 * p,
          y = b - i.globals.gridHeight / 2 * p;
        if ("donut" === this.chartType) {
          var w = a.drawCircle(this.donutSize);
          w.attr({
            cx: this.centerX,
            cy: this.centerY,
            fill: i.config.plotOptions.pie.donut.background ? i.config.plotOptions.pie.donut.background : "transparent"
          }), n.add(w);
        }
        var k = this.drawArcs(o, t);
        if (this.sliceLabels.forEach(function (t) {
          k.add(t);
        }), n.attr({
          transform: "translate(".concat(v, ", ").concat(y, ") scale(").concat(p, ")")
        }), n.add(k), this.ret.add(n), this.donutDataLabels.show) {
          var A = this.renderInnerDataLabels(this.donutDataLabels, {
            hollowSize: this.donutSize,
            centerX: this.centerX,
            centerY: this.centerY,
            opacity: this.donutDataLabels.show,
            translateX: v,
            translateY: y
          });
          this.ret.add(A);
        }
        return "front" === i.config.grid.position && "polarArea" === this.chartType && this.drawPolarElements(this.ret), this.ret;
      }
    }, {
      key: "drawArcs",
      value: function (t, e) {
        var i = this.w,
          a = new v(this.ctx),
          s = new m(this.ctx),
          r = new R(this.ctx),
          o = s.group({
            class: "apexcharts-slices"
          }),
          n = this.initialAngle,
          l = this.initialAngle,
          h = this.initialAngle,
          c = this.initialAngle;
        this.strokeWidth = i.config.stroke.show ? i.config.stroke.width : 0;
        for (var d = 0; d < t.length; d++) {
          var g = s.group({
            class: "apexcharts-series apexcharts-pie-series",
            seriesName: x.escapeString(i.globals.seriesNames[d]),
            rel: d + 1,
            "data:realIndex": d
          });
          o.add(g), l = c, h = (n = h) + t[d], c = l + this.prevSectorAngleArr[d];
          var u = h < n ? this.fullAngle + h - n : h - n,
            p = r.fillPath({
              seriesNumber: d,
              size: this.sliceSizes[d],
              value: e[d]
            }),
            f = this.getChangedPath(l, c),
            b = s.drawPath({
              d: f,
              stroke: Array.isArray(this.lineColorArr) ? this.lineColorArr[d] : this.lineColorArr,
              strokeWidth: 0,
              fill: p,
              fillOpacity: i.config.fill.opacity,
              classes: "apexcharts-pie-area apexcharts-".concat(this.chartType.toLowerCase(), "-slice-").concat(d)
            });
          if (b.attr({
            index: 0,
            j: d
          }), a.setSelectionFilter(b, 0, d), i.config.chart.dropShadow.enabled) {
            var y = i.config.chart.dropShadow;
            a.dropShadow(b, y, d);
          }
          this.addListeners(b, this.donutDataLabels), m.setAttrs(b.node, {
            "data:angle": u,
            "data:startAngle": n,
            "data:strokeWidth": this.strokeWidth,
            "data:value": e[d]
          });
          var w = {
            x: 0,
            y: 0
          };
          "pie" === this.chartType || "polarArea" === this.chartType ? w = x.polarToCartesian(this.centerX, this.centerY, i.globals.radialSize / 1.25 + i.config.plotOptions.pie.dataLabels.offset, (n + u / 2) % this.fullAngle) : "donut" === this.chartType && (w = x.polarToCartesian(this.centerX, this.centerY, (i.globals.radialSize + this.donutSize) / 2 + i.config.plotOptions.pie.dataLabels.offset, (n + u / 2) % this.fullAngle)), g.add(b);
          var k = 0;
          if (!this.initialAnim || i.globals.resized || i.globals.dataChanged ? this.animBeginArr.push(0) : (0 === (k = u / this.fullAngle * i.config.chart.animations.speed) && (k = 1), this.animDur = k + this.animDur, this.animBeginArr.push(this.animDur)), this.dynamicAnim && i.globals.dataChanged ? this.animatePaths(b, {
            size: this.sliceSizes[d],
            endAngle: h,
            startAngle: n,
            prevStartAngle: l,
            prevEndAngle: c,
            animateStartingPos: !0,
            i: d,
            animBeginArr: this.animBeginArr,
            shouldSetPrevPaths: !0,
            dur: i.config.chart.animations.dynamicAnimation.speed
          }) : this.animatePaths(b, {
            size: this.sliceSizes[d],
            endAngle: h,
            startAngle: n,
            i: d,
            totalItems: t.length - 1,
            animBeginArr: this.animBeginArr,
            dur: k
          }), i.config.plotOptions.pie.expandOnClick && "polarArea" !== this.chartType && b.click(this.pieClicked.bind(this, d)), void 0 !== i.globals.selectedDataPoints[0] && i.globals.selectedDataPoints[0].indexOf(d) > -1 && this.pieClicked(d), i.config.dataLabels.enabled) {
            var A = w.x,
              S = w.y,
              C = 100 * u / this.fullAngle + "%";
            if (0 !== u && i.config.plotOptions.pie.dataLabels.minAngleToShowLabel < t[d]) {
              var L = i.config.dataLabels.formatter;
              void 0 !== L && (C = L(i.globals.seriesPercent[d][0], {
                seriesIndex: d,
                w: i
              }));
              var P = i.globals.dataLabels.style.colors[d],
                I = s.group({
                  class: "apexcharts-datalabels"
                }),
                T = s.drawText({
                  x: A,
                  y: S,
                  text: C,
                  textAnchor: "middle",
                  fontSize: i.config.dataLabels.style.fontSize,
                  fontFamily: i.config.dataLabels.style.fontFamily,
                  fontWeight: i.config.dataLabels.style.fontWeight,
                  foreColor: P
                });
              if (I.add(T), i.config.dataLabels.dropShadow.enabled) {
                var M = i.config.dataLabels.dropShadow;
                a.dropShadow(T, M);
              }
              T.node.classList.add("apexcharts-pie-label"), i.config.chart.animations.animate && !1 === i.globals.resized && (T.node.classList.add("apexcharts-pie-label-delay"), T.node.style.animationDelay = i.config.chart.animations.speed / 940 + "s"), this.sliceLabels.push(I);
            }
          }
        }
        return o;
      }
    }, {
      key: "addListeners",
      value: function (t, e) {
        var i = new m(this.ctx);
        t.node.addEventListener("mouseenter", i.pathMouseEnter.bind(this, t)), t.node.addEventListener("mouseleave", i.pathMouseLeave.bind(this, t)), t.node.addEventListener("mouseleave", this.revertDataLabelsInner.bind(this, t.node, e)), t.node.addEventListener("mousedown", i.pathMouseDown.bind(this, t)), this.donutDataLabels.total.showAlways || (t.node.addEventListener("mouseenter", this.printDataLabelsInner.bind(this, t.node, e)), t.node.addEventListener("mousedown", this.printDataLabelsInner.bind(this, t.node, e)));
      }
    }, {
      key: "animatePaths",
      value: function (t, e) {
        var i = this.w,
          a = e.endAngle < e.startAngle ? this.fullAngle + e.endAngle - e.startAngle : e.endAngle - e.startAngle,
          s = a,
          r = e.startAngle,
          o = e.startAngle;
        void 0 !== e.prevStartAngle && void 0 !== e.prevEndAngle && (r = e.prevEndAngle, s = e.prevEndAngle < e.prevStartAngle ? this.fullAngle + e.prevEndAngle - e.prevStartAngle : e.prevEndAngle - e.prevStartAngle), e.i === i.config.series.length - 1 && (a + o > this.fullAngle ? e.endAngle = e.endAngle - (a + o) : a + o < this.fullAngle && (e.endAngle = e.endAngle + (this.fullAngle - (a + o)))), a === this.fullAngle && (a = this.fullAngle - .01), this.animateArc(t, r, o, a, s, e);
      }
    }, {
      key: "animateArc",
      value: function (t, e, i, a, s, r) {
        var o,
          n = this,
          l = this.w,
          h = new b(this.ctx),
          c = r.size;
        (isNaN(e) || isNaN(s)) && (e = i, s = a, r.dur = 0);
        var d = a,
          g = i,
          u = e < i ? this.fullAngle + e - i : e - i;
        l.globals.dataChanged && r.shouldSetPrevPaths && r.prevEndAngle && (o = n.getPiePath({
          me: n,
          startAngle: r.prevStartAngle,
          angle: r.prevEndAngle < r.prevStartAngle ? this.fullAngle + r.prevEndAngle - r.prevStartAngle : r.prevEndAngle - r.prevStartAngle,
          size: c
        }), t.attr({
          d: o
        })), 0 !== r.dur ? t.animate(r.dur, l.globals.easing, r.animBeginArr[r.i]).afterAll(function () {
          "pie" !== n.chartType && "donut" !== n.chartType && "polarArea" !== n.chartType || this.animate(l.config.chart.animations.dynamicAnimation.speed).attr({
            "stroke-width": n.strokeWidth
          }), r.i === l.config.series.length - 1 && h.animationCompleted(t);
        }).during(function (l) {
          d = u + (a - u) * l, r.animateStartingPos && (d = s + (a - s) * l, g = e - s + (i - (e - s)) * l), o = n.getPiePath({
            me: n,
            startAngle: g,
            angle: d,
            size: c
          }), t.node.setAttribute("data:pathOrig", o), t.attr({
            d: o
          });
        }) : (o = n.getPiePath({
          me: n,
          startAngle: g,
          angle: a,
          size: c
        }), r.isTrack || (l.globals.animationEnded = !0), t.node.setAttribute("data:pathOrig", o), t.attr({
          d: o,
          "stroke-width": n.strokeWidth
        }));
      }
    }, {
      key: "pieClicked",
      value: function (t) {
        var e,
          i = this.w,
          a = this,
          s = a.sliceSizes[t] + (i.config.plotOptions.pie.expandOnClick ? 4 : 0),
          r = i.globals.dom.Paper.select(".apexcharts-".concat(a.chartType.toLowerCase(), "-slice-").concat(t)).members[0];
        if ("true" !== r.attr("data:pieClicked")) {
          var o = i.globals.dom.baseEl.getElementsByClassName("apexcharts-pie-area");
          Array.prototype.forEach.call(o, function (t) {
            t.setAttribute("data:pieClicked", "false");
            var e = t.getAttribute("data:pathOrig");
            e && t.setAttribute("d", e);
          }), r.attr("data:pieClicked", "true");
          var n = parseInt(r.attr("data:startAngle"), 10),
            l = parseInt(r.attr("data:angle"), 10);
          e = a.getPiePath({
            me: a,
            startAngle: n,
            angle: l,
            size: s
          }), 360 !== l && r.plot(e);
        } else {
          r.attr({
            "data:pieClicked": "false"
          }), this.revertDataLabelsInner(r.node, this.donutDataLabels);
          var h = r.attr("data:pathOrig");
          r.attr({
            d: h
          });
        }
      }
    }, {
      key: "getChangedPath",
      value: function (t, e) {
        var i = "";
        return this.dynamicAnim && this.w.globals.dataChanged && (i = this.getPiePath({
          me: this,
          startAngle: t,
          angle: e - t,
          size: this.size
        })), i;
      }
    }, {
      key: "getPiePath",
      value: function (t) {
        var e = t.me,
          i = t.startAngle,
          a = t.angle,
          s = t.size,
          r = i,
          o = Math.PI * (r - 90) / 180,
          n = a + i;
        Math.ceil(n) >= this.fullAngle + this.w.config.plotOptions.pie.startAngle % this.fullAngle && (n = this.fullAngle + this.w.config.plotOptions.pie.startAngle % this.fullAngle - .01), Math.ceil(n) > this.fullAngle && (n -= this.fullAngle);
        var l = Math.PI * (n - 90) / 180,
          h = e.centerX + s * Math.cos(o),
          c = e.centerY + s * Math.sin(o),
          d = e.centerX + s * Math.cos(l),
          g = e.centerY + s * Math.sin(l),
          u = x.polarToCartesian(e.centerX, e.centerY, e.donutSize, n),
          p = x.polarToCartesian(e.centerX, e.centerY, e.donutSize, r),
          f = a > 180 ? 1 : 0,
          b = ["M", h, c, "A", s, s, 0, f, 1, d, g];
        return "donut" === e.chartType ? [].concat(b, ["L", u.x, u.y, "A", e.donutSize, e.donutSize, 0, f, 0, p.x, p.y, "L", h, c, "z"]).join(" ") : "pie" === e.chartType || "polarArea" === e.chartType ? [].concat(b, ["L", e.centerX, e.centerY, "L", h, c]).join(" ") : [].concat(b).join(" ");
      }
    }, {
      key: "drawPolarElements",
      value: function (t) {
        var e = this.w,
          i = new _(this.ctx),
          a = new m(this.ctx),
          s = new Ct(this.ctx),
          r = a.group(),
          o = a.group(),
          n = i.niceScale(0, Math.ceil(this.maxY), e.config.yaxis[0].tickAmount, 0, !0),
          l = n.result.reverse(),
          h = n.result.length;
        this.maxY = n.niceMax;
        for (var c = e.globals.radialSize, d = c / (h - 1), g = 0; g < h - 1; g++) {
          var u = a.drawCircle(c);
          if (u.attr({
            cx: this.centerX,
            cy: this.centerY,
            fill: "none",
            "stroke-width": e.config.plotOptions.polarArea.rings.strokeWidth,
            stroke: e.config.plotOptions.polarArea.rings.strokeColor
          }), e.config.yaxis[0].show) {
            var p = s.drawYAxisTexts(this.centerX, this.centerY - c + parseInt(e.config.yaxis[0].labels.style.fontSize, 10) / 2, g, l[g]);
            o.add(p);
          }
          r.add(u), c -= d;
        }
        this.drawSpokes(t), t.add(r), t.add(o);
      }
    }, {
      key: "renderInnerDataLabels",
      value: function (t, e) {
        var i = this.w,
          a = new m(this.ctx),
          s = a.group({
            class: "apexcharts-datalabels-group",
            transform: "translate(".concat(e.translateX ? e.translateX : 0, ", ").concat(e.translateY ? e.translateY : 0, ") scale(").concat(i.config.plotOptions.pie.customScale, ")")
          }),
          r = t.total.show;
        s.node.style.opacity = e.opacity;
        var o,
          n,
          l = e.centerX,
          h = e.centerY;
        o = void 0 === t.name.color ? i.globals.colors[0] : t.name.color;
        var c = t.name.fontSize,
          d = t.name.fontFamily,
          g = t.name.fontWeight;
        n = void 0 === t.value.color ? i.config.chart.foreColor : t.value.color;
        var u = t.value.formatter,
          p = "",
          f = "";
        if (r ? (o = t.total.color, c = t.total.fontSize, d = t.total.fontFamily, g = t.total.fontWeight, f = t.total.label, p = t.total.formatter(i)) : 1 === i.globals.series.length && (p = u(i.globals.series[0], i), f = i.globals.seriesNames[0]), f && (f = t.name.formatter(f, t.total.show, i)), t.name.show) {
          var x = a.drawText({
            x: l,
            y: h + parseFloat(t.name.offsetY),
            text: f,
            textAnchor: "middle",
            foreColor: o,
            fontSize: c,
            fontWeight: g,
            fontFamily: d
          });
          x.node.classList.add("apexcharts-datalabel-label"), s.add(x);
        }
        if (t.value.show) {
          var b = t.name.show ? parseFloat(t.value.offsetY) + 16 : t.value.offsetY,
            v = a.drawText({
              x: l,
              y: h + b,
              text: p,
              textAnchor: "middle",
              foreColor: n,
              fontWeight: t.value.fontWeight,
              fontSize: t.value.fontSize,
              fontFamily: t.value.fontFamily
            });
          v.node.classList.add("apexcharts-datalabel-value"), s.add(v);
        }
        return s;
      }
    }, {
      key: "printInnerLabels",
      value: function (t, e, i, a) {
        var s,
          r = this.w;
        a ? s = void 0 === t.name.color ? r.globals.colors[parseInt(a.parentNode.getAttribute("rel"), 10) - 1] : t.name.color : r.globals.series.length > 1 && t.total.show && (s = t.total.color);
        var o = r.globals.dom.baseEl.querySelector(".apexcharts-datalabel-label"),
          n = r.globals.dom.baseEl.querySelector(".apexcharts-datalabel-value");
        i = (0, t.value.formatter)(i, r), a || "function" != typeof t.total.formatter || (i = t.total.formatter(r));
        var l = e === t.total.label;
        e = t.name.formatter(e, l, r), null !== o && (o.textContent = e), null !== n && (n.textContent = i), null !== o && (o.style.fill = s);
      }
    }, {
      key: "printDataLabelsInner",
      value: function (t, e) {
        var i = this.w,
          a = t.getAttribute("data:value"),
          s = i.globals.seriesNames[parseInt(t.parentNode.getAttribute("rel"), 10) - 1];
        i.globals.series.length > 1 && this.printInnerLabels(e, s, a, t);
        var r = i.globals.dom.baseEl.querySelector(".apexcharts-datalabels-group");
        null !== r && (r.style.opacity = 1);
      }
    }, {
      key: "drawSpokes",
      value: function (t) {
        var e = this,
          i = this.w,
          a = new m(this.ctx),
          s = i.config.plotOptions.polarArea.spokes;
        if (0 !== s.strokeWidth) {
          for (var r = [], o = 360 / i.globals.series.length, n = 0; n < i.globals.series.length; n++) r.push(x.polarToCartesian(this.centerX, this.centerY, i.globals.radialSize, i.config.plotOptions.pie.startAngle + o * n));
          r.forEach(function (i, r) {
            var o = a.drawLine(i.x, i.y, e.centerX, e.centerY, Array.isArray(s.connectorColors) ? s.connectorColors[r] : s.connectorColors);
            t.add(o);
          });
        }
      }
    }, {
      key: "revertDataLabelsInner",
      value: function (t, e, i) {
        var a = this,
          s = this.w,
          r = s.globals.dom.baseEl.querySelector(".apexcharts-datalabels-group"),
          o = !1,
          n = s.globals.dom.baseEl.getElementsByClassName("apexcharts-pie-area"),
          l = function (t) {
            var i = t.makeSliceOut,
              s = t.printLabel;
            Array.prototype.forEach.call(n, function (t) {
              "true" === t.getAttribute("data:pieClicked") && (i && (o = !0), s && a.printDataLabelsInner(t, e));
            });
          };
        if (l({
          makeSliceOut: !0,
          printLabel: !1
        }), e.total.show && s.globals.series.length > 1) o && !e.total.showAlways ? l({
          makeSliceOut: !1,
          printLabel: !0
        }) : this.printInnerLabels(e, e.total.label, e.total.formatter(s));else if (l({
          makeSliceOut: !1,
          printLabel: !0
        }), !o) if (s.globals.selectedDataPoints.length && s.globals.series.length > 1) {
          if (s.globals.selectedDataPoints[0].length > 0) {
            var h = s.globals.selectedDataPoints[0],
              c = s.globals.dom.baseEl.querySelector(".apexcharts-".concat(this.chartType.toLowerCase(), "-slice-").concat(h));
            this.printDataLabelsInner(c, e);
          } else r && s.globals.selectedDataPoints.length && 0 === s.globals.selectedDataPoints[0].length && (r.style.opacity = 0);
        } else r && s.globals.series.length > 1 && (r.style.opacity = 0);
      }
    }]), t;
  }(),
  Pt = function () {
    function t(e) {
      a(this, t), this.ctx = e, this.w = e.w, this.chartType = this.w.config.chart.type, this.initialAnim = this.w.config.chart.animations.enabled, this.dynamicAnim = this.initialAnim && this.w.config.chart.animations.dynamicAnimation.enabled, this.animDur = 0;
      var i = this.w;
      this.graphics = new m(this.ctx), this.lineColorArr = void 0 !== i.globals.stroke.colors ? i.globals.stroke.colors : i.globals.colors, this.defaultSize = i.globals.svgHeight < i.globals.svgWidth ? i.globals.gridHeight + 1.5 * i.globals.goldenPadding : i.globals.gridWidth, this.isLog = i.config.yaxis[0].logarithmic, this.coreUtils = new y(this.ctx), this.maxValue = this.isLog ? this.coreUtils.getLogVal(i.globals.maxY, 0) : i.globals.maxY, this.minValue = this.isLog ? this.coreUtils.getLogVal(this.w.globals.minY, 0) : i.globals.minY, this.polygons = i.config.plotOptions.radar.polygons, this.strokeWidth = i.config.stroke.show ? i.config.stroke.width : 0, this.size = this.defaultSize / 2.1 - this.strokeWidth - i.config.chart.dropShadow.blur, i.config.xaxis.labels.show && (this.size = this.size - i.globals.xAxisLabelsWidth / 1.75), void 0 !== i.config.plotOptions.radar.size && (this.size = i.config.plotOptions.radar.size), this.dataRadiusOfPercent = [], this.dataRadius = [], this.angleArr = [], this.yaxisLabelsTextsPos = [];
    }
    return r(t, [{
      key: "draw",
      value: function (t) {
        var i = this,
          a = this.w,
          s = new R(this.ctx),
          r = [],
          o = new O(this.ctx);
        t.length && (this.dataPointsLen = t[a.globals.maxValsInArrayIndex].length), this.disAngle = 2 * Math.PI / this.dataPointsLen;
        var n = a.globals.gridWidth / 2,
          l = a.globals.gridHeight / 2,
          h = n + a.config.plotOptions.radar.offsetX,
          c = l + a.config.plotOptions.radar.offsetY,
          d = this.graphics.group({
            class: "apexcharts-radar-series apexcharts-plot-series",
            transform: "translate(".concat(h || 0, ", ").concat(c || 0, ")")
          }),
          g = [],
          u = null,
          p = null;
        if (this.yaxisLabels = this.graphics.group({
          class: "apexcharts-yaxis"
        }), t.forEach(function (t, n) {
          var l = t.length === a.globals.dataPoints,
            h = i.graphics.group().attr({
              class: "apexcharts-series",
              "data:longestSeries": l,
              seriesName: x.escapeString(a.globals.seriesNames[n]),
              rel: n + 1,
              "data:realIndex": n
            });
          i.dataRadiusOfPercent[n] = [], i.dataRadius[n] = [], i.angleArr[n] = [], t.forEach(function (t, e) {
            var a = Math.abs(i.maxValue - i.minValue);
            t += Math.abs(i.minValue), i.isLog && (t = i.coreUtils.getLogVal(t, 0)), i.dataRadiusOfPercent[n][e] = t / a, i.dataRadius[n][e] = i.dataRadiusOfPercent[n][e] * i.size, i.angleArr[n][e] = e * i.disAngle;
          }), g = i.getDataPointsPos(i.dataRadius[n], i.angleArr[n]);
          var c = i.createPaths(g, {
            x: 0,
            y: 0
          });
          u = i.graphics.group({
            class: "apexcharts-series-markers-wrap apexcharts-element-hidden"
          }), p = i.graphics.group({
            class: "apexcharts-datalabels",
            "data:realIndex": n
          }), a.globals.delayedElements.push({
            el: u.node,
            index: n
          });
          var d = {
              i: n,
              realIndex: n,
              animationDelay: n,
              initialSpeed: a.config.chart.animations.speed,
              dataChangeSpeed: a.config.chart.animations.dynamicAnimation.speed,
              className: "apexcharts-radar",
              shouldClipToGrid: !1,
              bindEventsOnPaths: !1,
              stroke: a.globals.stroke.colors[n],
              strokeLineCap: a.config.stroke.lineCap
            },
            f = null;
          a.globals.previousPaths.length > 0 && (f = i.getPreviousPath(n));
          for (var b = 0; b < c.linePathsTo.length; b++) {
            var m = i.graphics.renderPaths(e(e({}, d), {}, {
              pathFrom: null === f ? c.linePathsFrom[b] : f,
              pathTo: c.linePathsTo[b],
              strokeWidth: Array.isArray(i.strokeWidth) ? i.strokeWidth[n] : i.strokeWidth,
              fill: "none",
              drawShadow: !1
            }));
            h.add(m);
            var y = s.fillPath({
                seriesNumber: n
              }),
              w = i.graphics.renderPaths(e(e({}, d), {}, {
                pathFrom: null === f ? c.areaPathsFrom[b] : f,
                pathTo: c.areaPathsTo[b],
                strokeWidth: 0,
                fill: y,
                drawShadow: !1
              }));
            if (a.config.chart.dropShadow.enabled) {
              var k = new v(i.ctx),
                A = a.config.chart.dropShadow;
              k.dropShadow(w, Object.assign({}, A, {
                noUserSpaceOnUse: !0
              }), n);
            }
            h.add(w);
          }
          t.forEach(function (t, s) {
            var r = new H(i.ctx).getMarkerConfig({
                cssClass: "apexcharts-marker",
                seriesIndex: n,
                dataPointIndex: s
              }),
              l = i.graphics.drawMarker(g[s].x, g[s].y, r);
            l.attr("rel", s), l.attr("j", s), l.attr("index", n), l.node.setAttribute("default-marker-size", r.pSize);
            var c = i.graphics.group({
              class: "apexcharts-series-markers"
            });
            c && c.add(l), u.add(c), h.add(u);
            var d = a.config.dataLabels;
            if (d.enabled) {
              var f = d.formatter(a.globals.series[n][s], {
                seriesIndex: n,
                dataPointIndex: s,
                w: a
              });
              o.plotDataLabelsText({
                x: g[s].x,
                y: g[s].y,
                text: f,
                textAnchor: "middle",
                i: n,
                j: n,
                parent: p,
                offsetCorrection: !1,
                dataLabelsConfig: e({}, d)
              });
            }
            h.add(p);
          }), r.push(h);
        }), this.drawPolygons({
          parent: d
        }), a.config.xaxis.labels.show) {
          var f = this.drawXAxisTexts();
          d.add(f);
        }
        return r.forEach(function (t) {
          d.add(t);
        }), d.add(this.yaxisLabels), d;
      }
    }, {
      key: "drawPolygons",
      value: function (t) {
        for (var e = this, i = this.w, a = t.parent, s = new Ct(this.ctx), r = i.globals.yAxisScale[0].result.reverse(), o = r.length, n = [], l = this.size / (o - 1), h = 0; h < o; h++) n[h] = l * h;
        n.reverse();
        var c = [],
          d = [];
        n.forEach(function (t, i) {
          var a = x.getPolygonPos(t, e.dataPointsLen),
            s = "";
          a.forEach(function (t, a) {
            if (0 === i) {
              var r = e.graphics.drawLine(t.x, t.y, 0, 0, Array.isArray(e.polygons.connectorColors) ? e.polygons.connectorColors[a] : e.polygons.connectorColors);
              d.push(r);
            }
            0 === a && e.yaxisLabelsTextsPos.push({
              x: t.x,
              y: t.y
            }), s += t.x + "," + t.y + " ";
          }), c.push(s);
        }), c.forEach(function (t, s) {
          var r = e.polygons.strokeColors,
            o = e.polygons.strokeWidth,
            n = e.graphics.drawPolygon(t, Array.isArray(r) ? r[s] : r, Array.isArray(o) ? o[s] : o, i.globals.radarPolygons.fill.colors[s]);
          a.add(n);
        }), d.forEach(function (t) {
          a.add(t);
        }), i.config.yaxis[0].show && this.yaxisLabelsTextsPos.forEach(function (t, i) {
          var a = s.drawYAxisTexts(t.x, t.y, i, r[i]);
          e.yaxisLabels.add(a);
        });
      }
    }, {
      key: "drawXAxisTexts",
      value: function () {
        var t = this,
          i = this.w,
          a = i.config.xaxis.labels,
          s = this.graphics.group({
            class: "apexcharts-xaxis"
          }),
          r = x.getPolygonPos(this.size, this.dataPointsLen);
        return i.globals.labels.forEach(function (o, n) {
          var l = i.config.xaxis.labels.formatter,
            h = new O(t.ctx);
          if (r[n]) {
            var c = t.getTextPos(r[n], t.size),
              d = l(o, {
                seriesIndex: -1,
                dataPointIndex: n,
                w: i
              });
            h.plotDataLabelsText({
              x: c.newX,
              y: c.newY,
              text: d,
              textAnchor: c.textAnchor,
              i: n,
              j: n,
              parent: s,
              color: Array.isArray(a.style.colors) && a.style.colors[n] ? a.style.colors[n] : "#a8a8a8",
              dataLabelsConfig: e({
                textAnchor: c.textAnchor,
                dropShadow: {
                  enabled: !1
                }
              }, a),
              offsetCorrection: !1
            });
          }
        }), s;
      }
    }, {
      key: "createPaths",
      value: function (t, e) {
        var i = this,
          a = [],
          s = [],
          r = [],
          o = [];
        if (t.length) {
          s = [this.graphics.move(e.x, e.y)], o = [this.graphics.move(e.x, e.y)];
          var n = this.graphics.move(t[0].x, t[0].y),
            l = this.graphics.move(t[0].x, t[0].y);
          t.forEach(function (e, a) {
            n += i.graphics.line(e.x, e.y), l += i.graphics.line(e.x, e.y), a === t.length - 1 && (n += "Z", l += "Z");
          }), a.push(n), r.push(l);
        }
        return {
          linePathsFrom: s,
          linePathsTo: a,
          areaPathsFrom: o,
          areaPathsTo: r
        };
      }
    }, {
      key: "getTextPos",
      value: function (t, e) {
        var i = "middle",
          a = t.x,
          s = t.y;
        return Math.abs(t.x) >= 10 ? t.x > 0 ? (i = "start", a += 10) : t.x < 0 && (i = "end", a -= 10) : i = "middle", Math.abs(t.y) >= e - 10 && (t.y < 0 ? s -= 10 : t.y > 0 && (s += 10)), {
          textAnchor: i,
          newX: a,
          newY: s
        };
      }
    }, {
      key: "getPreviousPath",
      value: function (t) {
        for (var e = this.w, i = null, a = 0; a < e.globals.previousPaths.length; a++) {
          var s = e.globals.previousPaths[a];
          s.paths.length > 0 && parseInt(s.realIndex, 10) === parseInt(t, 10) && void 0 !== e.globals.previousPaths[a].paths[0] && (i = e.globals.previousPaths[a].paths[0].d);
        }
        return i;
      }
    }, {
      key: "getDataPointsPos",
      value: function (t, e) {
        var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : this.dataPointsLen;
        t = t || [], e = e || [];
        for (var a = [], s = 0; s < i; s++) {
          var r = {};
          r.x = t[s] * Math.sin(e[s]), r.y = -t[s] * Math.cos(e[s]), a.push(r);
        }
        return a;
      }
    }]), t;
  }(),
  It = function (t) {
    n(i, Lt);
    var e = d(i);
    function i(t) {
      var s;
      a(this, i), (s = e.call(this, t)).ctx = t, s.w = t.w, s.animBeginArr = [0], s.animDur = 0;
      var r = s.w;
      return s.startAngle = r.config.plotOptions.radialBar.startAngle, s.endAngle = r.config.plotOptions.radialBar.endAngle, s.totalAngle = Math.abs(r.config.plotOptions.radialBar.endAngle - r.config.plotOptions.radialBar.startAngle), s.trackStartAngle = r.config.plotOptions.radialBar.track.startAngle, s.trackEndAngle = r.config.plotOptions.radialBar.track.endAngle, s.donutDataLabels = s.w.config.plotOptions.radialBar.dataLabels, s.radialDataLabels = s.donutDataLabels, s.trackStartAngle || (s.trackStartAngle = s.startAngle), s.trackEndAngle || (s.trackEndAngle = s.endAngle), 360 === s.endAngle && (s.endAngle = 359.99), s.margin = parseInt(r.config.plotOptions.radialBar.track.margin, 10), s;
    }
    return r(i, [{
      key: "draw",
      value: function (t) {
        var e = this.w,
          i = new m(this.ctx),
          a = i.group({
            class: "apexcharts-radialbar"
          });
        if (e.globals.noData) return a;
        var s = i.group(),
          r = this.defaultSize / 2,
          o = e.globals.gridWidth / 2,
          n = this.defaultSize / 2.05;
        e.config.chart.sparkline.enabled || (n = n - e.config.stroke.width - e.config.chart.dropShadow.blur);
        var l = e.globals.fill.colors;
        if (e.config.plotOptions.radialBar.track.show) {
          var h = this.drawTracks({
            size: n,
            centerX: o,
            centerY: r,
            colorArr: l,
            series: t
          });
          s.add(h);
        }
        var c = this.drawArcs({
            size: n,
            centerX: o,
            centerY: r,
            colorArr: l,
            series: t
          }),
          d = 360;
        e.config.plotOptions.radialBar.startAngle < 0 && (d = this.totalAngle);
        var g = (360 - d) / 360;
        if (e.globals.radialSize = n - n * g, this.radialDataLabels.value.show) {
          var u = Math.max(this.radialDataLabels.value.offsetY, this.radialDataLabels.name.offsetY);
          e.globals.radialSize += u * g;
        }
        return s.add(c.g), "front" === e.config.plotOptions.radialBar.hollow.position && (c.g.add(c.elHollow), c.dataLabels && c.g.add(c.dataLabels)), a.add(s), a;
      }
    }, {
      key: "drawTracks",
      value: function (t) {
        var e = this.w,
          i = new m(this.ctx),
          a = i.group({
            class: "apexcharts-tracks"
          }),
          s = new v(this.ctx),
          r = new R(this.ctx),
          o = this.getStrokeWidth(t);
        t.size = t.size - o / 2;
        for (var n = 0; n < t.series.length; n++) {
          var l = i.group({
            class: "apexcharts-radialbar-track apexcharts-track"
          });
          a.add(l), l.attr({
            rel: n + 1
          }), t.size = t.size - o - this.margin;
          var h = e.config.plotOptions.radialBar.track,
            c = r.fillPath({
              seriesNumber: 0,
              size: t.size,
              fillColors: Array.isArray(h.background) ? h.background[n] : h.background,
              solid: !0
            }),
            d = this.trackStartAngle,
            g = this.trackEndAngle;
          Math.abs(g) + Math.abs(d) >= 360 && (g = 360 - Math.abs(this.startAngle) - .1);
          var u = i.drawPath({
            d: "",
            stroke: c,
            strokeWidth: o * parseInt(h.strokeWidth, 10) / 100,
            fill: "none",
            strokeOpacity: h.opacity,
            classes: "apexcharts-radialbar-area"
          });
          if (h.dropShadow.enabled) {
            var p = h.dropShadow;
            s.dropShadow(u, p);
          }
          l.add(u), u.attr("id", "apexcharts-radialbarTrack-" + n), this.animatePaths(u, {
            centerX: t.centerX,
            centerY: t.centerY,
            endAngle: g,
            startAngle: d,
            size: t.size,
            i: n,
            totalItems: 2,
            animBeginArr: 0,
            dur: 0,
            isTrack: !0,
            easing: e.globals.easing
          });
        }
        return a;
      }
    }, {
      key: "drawArcs",
      value: function (t) {
        var e = this.w,
          i = new m(this.ctx),
          a = new R(this.ctx),
          s = new v(this.ctx),
          r = i.group(),
          o = this.getStrokeWidth(t);
        t.size = t.size - o / 2;
        var n = e.config.plotOptions.radialBar.hollow.background,
          l = t.size - o * t.series.length - this.margin * t.series.length - o * parseInt(e.config.plotOptions.radialBar.track.strokeWidth, 10) / 100 / 2,
          h = l - e.config.plotOptions.radialBar.hollow.margin;
        void 0 !== e.config.plotOptions.radialBar.hollow.image && (n = this.drawHollowImage(t, r, l, n));
        var c = this.drawHollow({
          size: h,
          centerX: t.centerX,
          centerY: t.centerY,
          fill: n || "transparent"
        });
        if (e.config.plotOptions.radialBar.hollow.dropShadow.enabled) {
          var d = e.config.plotOptions.radialBar.hollow.dropShadow;
          s.dropShadow(c, d);
        }
        var g = 1;
        !this.radialDataLabels.total.show && e.globals.series.length > 1 && (g = 0);
        var u = null;
        this.radialDataLabels.show && (u = this.renderInnerDataLabels(this.radialDataLabels, {
          hollowSize: l,
          centerX: t.centerX,
          centerY: t.centerY,
          opacity: g
        })), "back" === e.config.plotOptions.radialBar.hollow.position && (r.add(c), u && r.add(u));
        var p = !1;
        e.config.plotOptions.radialBar.inverseOrder && (p = !0);
        for (var f = p ? t.series.length - 1 : 0; p ? f >= 0 : f < t.series.length; p ? f-- : f++) {
          var b = i.group({
            class: "apexcharts-series apexcharts-radial-series",
            seriesName: x.escapeString(e.globals.seriesNames[f])
          });
          r.add(b), b.attr({
            rel: f + 1,
            "data:realIndex": f
          }), this.ctx.series.addCollapsedClassToSeries(b, f), t.size = t.size - o - this.margin;
          var y = a.fillPath({
              seriesNumber: f,
              size: t.size,
              value: t.series[f]
            }),
            w = this.startAngle,
            k = void 0,
            A = x.negToZero(t.series[f] > 100 ? 100 : t.series[f]) / 100,
            S = Math.round(this.totalAngle * A) + this.startAngle,
            C = void 0;
          e.globals.dataChanged && (k = this.startAngle, C = Math.round(this.totalAngle * x.negToZero(e.globals.previousPaths[f]) / 100) + k), Math.abs(S) + Math.abs(w) >= 360 && (S -= .01), Math.abs(C) + Math.abs(k) >= 360 && (C -= .01);
          var L = S - w,
            P = Array.isArray(e.config.stroke.dashArray) ? e.config.stroke.dashArray[f] : e.config.stroke.dashArray,
            I = i.drawPath({
              d: "",
              stroke: y,
              strokeWidth: o,
              fill: "none",
              fillOpacity: e.config.fill.opacity,
              classes: "apexcharts-radialbar-area apexcharts-radialbar-slice-" + f,
              strokeDashArray: P
            });
          if (m.setAttrs(I.node, {
            "data:angle": L,
            "data:value": t.series[f]
          }), e.config.chart.dropShadow.enabled) {
            var T = e.config.chart.dropShadow;
            s.dropShadow(I, T, f);
          }
          s.setSelectionFilter(I, 0, f), this.addListeners(I, this.radialDataLabels), b.add(I), I.attr({
            index: 0,
            j: f
          });
          var M = 0;
          !this.initialAnim || e.globals.resized || e.globals.dataChanged || (M = e.config.chart.animations.speed), e.globals.dataChanged && (M = e.config.chart.animations.dynamicAnimation.speed), this.animDur = M / (1.2 * t.series.length) + this.animDur, this.animBeginArr.push(this.animDur), this.animatePaths(I, {
            centerX: t.centerX,
            centerY: t.centerY,
            endAngle: S,
            startAngle: w,
            prevEndAngle: C,
            prevStartAngle: k,
            size: t.size,
            i: f,
            totalItems: 2,
            animBeginArr: this.animBeginArr,
            dur: M,
            shouldSetPrevPaths: !0,
            easing: e.globals.easing
          });
        }
        return {
          g: r,
          elHollow: c,
          dataLabels: u
        };
      }
    }, {
      key: "drawHollow",
      value: function (t) {
        var e = new m(this.ctx).drawCircle(2 * t.size);
        return e.attr({
          class: "apexcharts-radialbar-hollow",
          cx: t.centerX,
          cy: t.centerY,
          r: t.size,
          fill: t.fill
        }), e;
      }
    }, {
      key: "drawHollowImage",
      value: function (t, e, i, a) {
        var s = this.w,
          r = new R(this.ctx),
          o = x.randomId(),
          n = s.config.plotOptions.radialBar.hollow.image;
        if (s.config.plotOptions.radialBar.hollow.imageClipped) r.clippedImgArea({
          width: i,
          height: i,
          image: n,
          patternID: "pattern".concat(s.globals.cuid).concat(o)
        }), a = "url(#pattern".concat(s.globals.cuid).concat(o, ")");else {
          var l = s.config.plotOptions.radialBar.hollow.imageWidth,
            h = s.config.plotOptions.radialBar.hollow.imageHeight;
          if (void 0 === l && void 0 === h) {
            var c = s.globals.dom.Paper.image(n).loaded(function (e) {
              this.move(t.centerX - e.width / 2 + s.config.plotOptions.radialBar.hollow.imageOffsetX, t.centerY - e.height / 2 + s.config.plotOptions.radialBar.hollow.imageOffsetY);
            });
            e.add(c);
          } else {
            var d = s.globals.dom.Paper.image(n).loaded(function (e) {
              this.move(t.centerX - l / 2 + s.config.plotOptions.radialBar.hollow.imageOffsetX, t.centerY - h / 2 + s.config.plotOptions.radialBar.hollow.imageOffsetY), this.size(l, h);
            });
            e.add(d);
          }
        }
        return a;
      }
    }, {
      key: "getStrokeWidth",
      value: function (t) {
        var e = this.w;
        return t.size * (100 - parseInt(e.config.plotOptions.radialBar.hollow.size, 10)) / 100 / (t.series.length + 1) - this.margin;
      }
    }]), i;
  }(),
  Tt = function (t) {
    n(s, yt);
    var i = d(s);
    function s() {
      return a(this, s), i.apply(this, arguments);
    }
    return r(s, [{
      key: "draw",
      value: function (t, i) {
        var a = this.w,
          s = new m(this.ctx);
        this.rangeBarOptions = this.w.config.plotOptions.rangeBar, this.series = t, this.seriesRangeStart = a.globals.seriesRangeStart, this.seriesRangeEnd = a.globals.seriesRangeEnd, this.barHelpers.initVariables(t);
        for (var r = s.group({
            class: "apexcharts-rangebar-series apexcharts-plot-series"
          }), n = 0; n < t.length; n++) {
          var l,
            h,
            c,
            d,
            g = void 0,
            u = void 0,
            p = a.globals.comboCharts ? i[n] : n,
            f = s.group({
              class: "apexcharts-series",
              seriesName: x.escapeString(a.globals.seriesNames[p]),
              rel: n + 1,
              "data:realIndex": p
            });
          this.ctx.series.addCollapsedClassToSeries(f, p), t[n].length > 0 && (this.visibleI = this.visibleI + 1);
          var b = 0,
            v = 0;
          this.yRatio.length > 1 && (this.yaxisIndex = p);
          var y = this.barHelpers.initialPositions();
          u = y.y, d = y.zeroW, g = y.x, v = y.barWidth, b = y.barHeight, l = y.xDivision, h = y.yDivision, c = y.zeroH;
          for (var w = s.group({
              class: "apexcharts-datalabels",
              "data:realIndex": p
            }), k = s.group({
              class: "apexcharts-rangebar-goals-markers",
              style: "pointer-events: none"
            }), A = 0; A < a.globals.dataPoints; A++) {
            var S,
              C = this.barHelpers.getStrokeWidth(n, A, p),
              L = this.seriesRangeStart[n][A],
              P = this.seriesRangeEnd[n][A],
              I = null,
              T = null,
              M = null,
              X = {
                x: g,
                y: u,
                strokeWidth: C,
                elSeries: f
              },
              z = this.seriesLen;
            if (a.config.plotOptions.bar.rangeBarGroupRows && (z = 1), void 0 === a.config.series[n].data[A]) break;
            if (this.isHorizontal) {
              M = u + b * this.visibleI;
              var E = (h - b * z) / 2;
              if (a.config.series[n].data[A].x) {
                var Y = this.detectOverlappingBars({
                  i: n,
                  j: A,
                  barYPosition: M,
                  srty: E,
                  barHeight: b,
                  yDivision: h,
                  initPositions: y
                });
                b = Y.barHeight, M = Y.barYPosition;
              }
              v = (I = this.drawRangeBarPaths(e({
                indexes: {
                  i: n,
                  j: A,
                  realIndex: p
                },
                barHeight: b,
                barYPosition: M,
                zeroW: d,
                yDivision: h,
                y1: L,
                y2: P
              }, X))).barWidth;
            } else {
              a.globals.isXNumeric && (g = (a.globals.seriesX[n][A] - a.globals.minX) / this.xRatio - v / 2), T = g + v * this.visibleI;
              var F = (l - v * z) / 2;
              if (a.config.series[n].data[A].x) {
                var R = this.detectOverlappingBars({
                  i: n,
                  j: A,
                  barXPosition: T,
                  srtx: F,
                  barWidth: v,
                  xDivision: l,
                  initPositions: y
                });
                v = R.barWidth, T = R.barXPosition;
              }
              b = (I = this.drawRangeColumnPaths(e({
                indexes: {
                  i: n,
                  j: A,
                  realIndex: p
                },
                barWidth: v,
                barXPosition: T,
                zeroH: c,
                xDivision: l
              }, X))).barHeight;
            }
            var H = this.barHelpers.drawGoalLine({
              barXPosition: I.barXPosition,
              barYPosition: M,
              goalX: I.goalX,
              goalY: I.goalY,
              barHeight: b,
              barWidth: v
            });
            H && k.add(H), u = I.y, g = I.x;
            var D = this.barHelpers.getPathFillColor(t, n, A, p),
              O = a.globals.stroke.colors[p];
            this.renderSeries((o(S = {
              realIndex: p,
              pathFill: D,
              lineFill: O,
              j: A,
              i: n,
              x: g,
              y: u,
              y1: L,
              y2: P,
              pathFrom: I.pathFrom,
              pathTo: I.pathTo,
              strokeWidth: C,
              elSeries: f,
              series: t,
              barHeight: b,
              barWidth: v,
              barXPosition: T,
              barYPosition: M
            }, "barWidth", v), o(S, "elDataLabelsWrap", w), o(S, "elGoalsMarkers", k), o(S, "visibleSeries", this.visibleI), o(S, "type", "rangebar"), S));
          }
          r.add(f);
        }
        return r;
      }
    }, {
      key: "detectOverlappingBars",
      value: function (t) {
        var e = t.i,
          i = t.j,
          a = t.barYPosition,
          s = t.barXPosition,
          r = t.srty,
          o = t.srtx,
          n = t.barHeight,
          l = t.barWidth,
          h = t.yDivision,
          c = t.xDivision,
          d = t.initPositions,
          g = this.w,
          u = [],
          p = g.config.series[e].data[i].rangeName,
          f = g.config.series[e].data[i].x,
          x = Array.isArray(f) ? f.join(" ") : f,
          b = g.globals.labels.map(function (t) {
            return Array.isArray(t) ? t.join(" ") : t;
          }).indexOf(x),
          v = g.globals.seriesRange[e].findIndex(function (t) {
            return t.x === x && t.overlaps.length > 0;
          });
        return this.isHorizontal ? (a = g.config.plotOptions.bar.rangeBarGroupRows ? r + h * b : r + n * this.visibleI + h * b, v > -1 && !g.config.plotOptions.bar.rangeBarOverlap && (u = g.globals.seriesRange[e][v].overlaps).indexOf(p) > -1 && (a = (n = d.barHeight / u.length) * this.visibleI + h * (100 - parseInt(this.barOptions.barHeight, 10)) / 100 / 2 + n * (this.visibleI + u.indexOf(p)) + h * b)) : (b > -1 && (s = g.config.plotOptions.bar.rangeBarGroupRows ? o + c * b : o + l * this.visibleI + c * b), v > -1 && !g.config.plotOptions.bar.rangeBarOverlap && (u = g.globals.seriesRange[e][v].overlaps).indexOf(p) > -1 && (s = (l = d.barWidth / u.length) * this.visibleI + c * (100 - parseInt(this.barOptions.barWidth, 10)) / 100 / 2 + l * (this.visibleI + u.indexOf(p)) + c * b)), {
          barYPosition: a,
          barXPosition: s,
          barHeight: n,
          barWidth: l
        };
      }
    }, {
      key: "drawRangeColumnPaths",
      value: function (t) {
        var e = t.indexes,
          i = t.x,
          a = t.xDivision,
          s = t.barWidth,
          r = t.barXPosition,
          o = t.zeroH,
          n = this.w,
          l = e.i,
          h = e.j,
          c = this.yRatio[this.yaxisIndex],
          d = e.realIndex,
          g = this.getRangeValue(d, h),
          u = Math.min(g.start, g.end),
          p = Math.max(g.start, g.end);
        void 0 === this.series[l][h] || null === this.series[l][h] ? u = o : (u = o - u / c, p = o - p / c);
        var f = Math.abs(p - u),
          x = this.barHelpers.getColumnPaths({
            barXPosition: r,
            barWidth: s,
            y1: u,
            y2: p,
            strokeWidth: this.strokeWidth,
            series: this.seriesRangeEnd,
            realIndex: e.realIndex,
            i: d,
            j: h,
            w: n
          });
        return n.globals.isXNumeric || (i += a), {
          pathTo: x.pathTo,
          pathFrom: x.pathFrom,
          barHeight: f,
          x: i,
          y: p,
          goalY: this.barHelpers.getGoalValues("y", null, o, l, h),
          barXPosition: r
        };
      }
    }, {
      key: "drawRangeBarPaths",
      value: function (t) {
        var e = t.indexes,
          i = t.y,
          a = t.y1,
          s = t.y2,
          r = t.yDivision,
          o = t.barHeight,
          n = t.barYPosition,
          l = t.zeroW,
          h = this.w,
          c = l + a / this.invertedYRatio,
          d = l + s / this.invertedYRatio,
          g = Math.abs(d - c),
          u = this.barHelpers.getBarpaths({
            barYPosition: n,
            barHeight: o,
            x1: c,
            x2: d,
            strokeWidth: this.strokeWidth,
            series: this.seriesRangeEnd,
            i: e.realIndex,
            realIndex: e.realIndex,
            j: e.j,
            w: h
          });
        return h.globals.isXNumeric || (i += r), {
          pathTo: u.pathTo,
          pathFrom: u.pathFrom,
          barWidth: g,
          x: d,
          goalX: this.barHelpers.getGoalValues("x", l, null, e.realIndex, e.j),
          y: i
        };
      }
    }, {
      key: "getRangeValue",
      value: function (t, e) {
        var i = this.w;
        return {
          start: i.globals.seriesRangeStart[t][e],
          end: i.globals.seriesRangeEnd[t][e]
        };
      }
    }]), s;
  }(),
  Mt = function () {
    function t(e) {
      a(this, t), this.w = e.w, this.lineCtx = e;
    }
    return r(t, [{
      key: "sameValueSeriesFix",
      value: function (t, e) {
        var i = this.w;
        if (("gradient" === i.config.fill.type || "gradient" === i.config.fill.type[t]) && new y(this.lineCtx.ctx, i).seriesHaveSameValues(t)) {
          var a = e[t].slice();
          a[a.length - 1] = a[a.length - 1] + 1e-6, e[t] = a;
        }
        return e;
      }
    }, {
      key: "calculatePoints",
      value: function (t) {
        var e = t.series,
          i = t.realIndex,
          a = t.x,
          s = t.y,
          r = t.i,
          o = t.j,
          n = t.prevY,
          l = this.w,
          h = [],
          c = [];
        if (0 === o) {
          var d = this.lineCtx.categoryAxisCorrection + l.config.markers.offsetX;
          l.globals.isXNumeric && (d = (l.globals.seriesX[i][0] - l.globals.minX) / this.lineCtx.xRatio + l.config.markers.offsetX), h.push(d), c.push(x.isNumber(e[r][0]) ? n + l.config.markers.offsetY : null), h.push(a + l.config.markers.offsetX), c.push(x.isNumber(e[r][o + 1]) ? s + l.config.markers.offsetY : null);
        } else h.push(a + l.config.markers.offsetX), c.push(x.isNumber(e[r][o + 1]) ? s + l.config.markers.offsetY : null);
        return {
          x: h,
          y: c
        };
      }
    }, {
      key: "checkPreviousPaths",
      value: function (t) {
        for (var e = t.pathFromLine, i = t.pathFromArea, a = t.realIndex, s = this.w, r = 0; r < s.globals.previousPaths.length; r++) {
          var o = s.globals.previousPaths[r];
          ("line" === o.type || "area" === o.type) && o.paths.length > 0 && parseInt(o.realIndex, 10) === parseInt(a, 10) && ("line" === o.type ? (this.lineCtx.appendPathFrom = !1, e = s.globals.previousPaths[r].paths[0].d) : "area" === o.type && (this.lineCtx.appendPathFrom = !1, i = s.globals.previousPaths[r].paths[0].d, s.config.stroke.show && s.globals.previousPaths[r].paths[1] && (e = s.globals.previousPaths[r].paths[1].d)));
        }
        return {
          pathFromLine: e,
          pathFromArea: i
        };
      }
    }, {
      key: "determineFirstPrevY",
      value: function (t) {
        var e,
          i = t.i,
          a = t.series,
          s = t.prevY,
          r = t.lineYPosition,
          o = this.w;
        if (void 0 !== (null === (e = a[i]) || void 0 === e ? void 0 : e[0])) s = (r = o.config.chart.stacked && i > 0 ? this.lineCtx.prevSeriesY[i - 1][0] : this.lineCtx.zeroY) - a[i][0] / this.lineCtx.yRatio[this.lineCtx.yaxisIndex] + 2 * (this.lineCtx.isReversed ? a[i][0] / this.lineCtx.yRatio[this.lineCtx.yaxisIndex] : 0);else if (o.config.chart.stacked && i > 0 && void 0 === a[i][0]) for (var n = i - 1; n >= 0; n--) if (null !== a[n][0] && void 0 !== a[n][0]) {
          s = r = this.lineCtx.prevSeriesY[n][0];
          break;
        }
        return {
          prevY: s,
          lineYPosition: r
        };
      }
    }]), t;
  }(),
  Xt = function () {
    function t(e, i, s) {
      a(this, t), this.ctx = e, this.w = e.w, this.xyRatios = i, this.pointsChart = !("bubble" !== this.w.config.chart.type && "scatter" !== this.w.config.chart.type) || s, this.scatter = new D(this.ctx), this.noNegatives = this.w.globals.minX === Number.MAX_VALUE, this.lineHelpers = new Mt(this), this.markers = new H(this.ctx), this.prevSeriesY = [], this.categoryAxisCorrection = 0, this.yaxisIndex = 0;
    }
    return r(t, [{
      key: "draw",
      value: function (t, i, a, s) {
        var r = this.w,
          o = new m(this.ctx),
          n = r.globals.comboCharts ? i : r.config.chart.type,
          l = o.group({
            class: "apexcharts-".concat(n, "-series apexcharts-plot-series")
          }),
          h = new y(this.ctx, r);
        this.yRatio = this.xyRatios.yRatio, this.zRatio = this.xyRatios.zRatio, this.xRatio = this.xyRatios.xRatio, this.baseLineY = this.xyRatios.baseLineY, t = h.getLogSeries(t), this.yRatio = h.getLogYRatios(this.yRatio);
        for (var c = [], d = 0; d < t.length; d++) {
          t = this.lineHelpers.sameValueSeriesFix(d, t);
          var g = r.globals.comboCharts ? a[d] : d;
          this._initSerieVariables(t, d, g);
          var u = [],
            p = [],
            f = r.globals.padHorizontal + this.categoryAxisCorrection;
          this.ctx.series.addCollapsedClassToSeries(this.elSeries, g), r.globals.isXNumeric && r.globals.seriesX.length > 0 && (f = (r.globals.seriesX[g][0] - r.globals.minX) / this.xRatio), p.push(f);
          var x,
            b = f,
            v = void 0,
            w = b,
            k = this.zeroY,
            A = this.zeroY;
          k = this.lineHelpers.determineFirstPrevY({
            i: d,
            series: t,
            prevY: k,
            lineYPosition: 0
          }).prevY, u.push(k), x = k;
          "rangeArea" === n && (v = A = this.lineHelpers.determineFirstPrevY({
            i: d,
            series: s,
            prevY: A,
            lineYPosition: 0
          }).prevY);
          var S = {
              type: n,
              series: t,
              realIndex: g,
              i: d,
              x: f,
              y: 1,
              pX: b,
              pY: x,
              pathsFrom: this._calculatePathsFrom({
                type: n,
                series: t,
                i: d,
                realIndex: g,
                prevX: w,
                prevY: k,
                prevY2: A
              }),
              linePaths: [],
              areaPaths: [],
              seriesIndex: a,
              lineYPosition: 0,
              xArrj: p,
              yArrj: u,
              seriesRangeEnd: s
            },
            C = this._iterateOverDataPoints(e(e({}, S), {}, {
              iterations: "rangeArea" === n ? t[d].length - 1 : void 0,
              isRangeStart: !0
            }));
          if ("rangeArea" === n) {
            var L = this._calculatePathsFrom({
                series: s,
                i: d,
                realIndex: g,
                prevX: w,
                prevY: A
              }),
              P = this._iterateOverDataPoints(e(e({}, S), {}, {
                series: s,
                pY: v,
                pathsFrom: L,
                iterations: s[d].length - 1,
                isRangeStart: !1
              }));
            C.linePaths[0] = P.linePath + C.linePath, C.pathFromLine = P.pathFromLine + C.pathFromLine;
          }
          this._handlePaths({
            type: n,
            realIndex: g,
            i: d,
            paths: C
          }), this.elSeries.add(this.elPointsMain), this.elSeries.add(this.elDataLabelsWrap), c.push(this.elSeries);
        }
        if (r.config.chart.stacked) for (var I = c.length; I > 0; I--) l.add(c[I - 1]);else for (var T = 0; T < c.length; T++) l.add(c[T]);
        return l;
      }
    }, {
      key: "_initSerieVariables",
      value: function (t, e, i) {
        var a = this.w,
          s = new m(this.ctx);
        this.xDivision = a.globals.gridWidth / (a.globals.dataPoints - ("on" === a.config.xaxis.tickPlacement ? 1 : 0)), this.strokeWidth = Array.isArray(a.config.stroke.width) ? a.config.stroke.width[i] : a.config.stroke.width, this.yRatio.length > 1 && (this.yaxisIndex = i), this.isReversed = a.config.yaxis[this.yaxisIndex] && a.config.yaxis[this.yaxisIndex].reversed, this.zeroY = a.globals.gridHeight - this.baseLineY[this.yaxisIndex] - (this.isReversed ? a.globals.gridHeight : 0) + (this.isReversed ? 2 * this.baseLineY[this.yaxisIndex] : 0), this.areaBottomY = this.zeroY, (this.zeroY > a.globals.gridHeight || "end" === a.config.plotOptions.area.fillTo) && (this.areaBottomY = a.globals.gridHeight), this.categoryAxisCorrection = this.xDivision / 2, this.elSeries = s.group({
          class: "apexcharts-series",
          seriesName: x.escapeString(a.globals.seriesNames[i])
        }), this.elPointsMain = s.group({
          class: "apexcharts-series-markers-wrap",
          "data:realIndex": i
        }), this.elDataLabelsWrap = s.group({
          class: "apexcharts-datalabels",
          "data:realIndex": i
        });
        var r = t[e].length === a.globals.dataPoints;
        this.elSeries.attr({
          "data:longestSeries": r,
          rel: e + 1,
          "data:realIndex": i
        }), this.appendPathFrom = !0;
      }
    }, {
      key: "_calculatePathsFrom",
      value: function (t) {
        var e,
          i,
          a,
          s,
          r = t.type,
          o = t.series,
          n = t.i,
          l = t.realIndex,
          h = t.prevX,
          c = t.prevY,
          d = t.prevY2,
          g = this.w,
          u = new m(this.ctx);
        if (null === o[n][0]) {
          for (var p = 0; p < o[n].length; p++) if (null !== o[n][p]) {
            h = this.xDivision * p, c = this.zeroY - o[n][p] / this.yRatio[this.yaxisIndex], e = u.move(h, c), i = u.move(h, this.areaBottomY);
            break;
          }
        } else e = u.move(h, c), "rangeArea" === r && (e = u.move(h, d) + u.line(h, c)), i = u.move(h, this.areaBottomY) + u.line(h, c);
        if (a = u.move(-1, this.zeroY) + u.line(-1, this.zeroY), s = u.move(-1, this.zeroY) + u.line(-1, this.zeroY), g.globals.previousPaths.length > 0) {
          var f = this.lineHelpers.checkPreviousPaths({
            pathFromLine: a,
            pathFromArea: s,
            realIndex: l
          });
          a = f.pathFromLine, s = f.pathFromArea;
        }
        return {
          prevX: h,
          prevY: c,
          linePath: e,
          areaPath: i,
          pathFromLine: a,
          pathFromArea: s
        };
      }
    }, {
      key: "_handlePaths",
      value: function (t) {
        var i = t.type,
          a = t.realIndex,
          s = t.i,
          r = t.paths,
          o = this.w,
          n = new m(this.ctx),
          l = new R(this.ctx);
        this.prevSeriesY.push(r.yArrj), o.globals.seriesXvalues[a] = r.xArrj, o.globals.seriesYvalues[a] = r.yArrj;
        var h = o.config.forecastDataPoints;
        if (h.count > 0 && "rangeArea" !== i) {
          var c = o.globals.seriesXvalues[a][o.globals.seriesXvalues[a].length - h.count - 1],
            d = n.drawRect(c, 0, o.globals.gridWidth, o.globals.gridHeight, 0);
          o.globals.dom.elForecastMask.appendChild(d.node);
          var g = n.drawRect(0, 0, c, o.globals.gridHeight, 0);
          o.globals.dom.elNonForecastMask.appendChild(g.node);
        }
        this.pointsChart || o.globals.delayedElements.push({
          el: this.elPointsMain.node,
          index: a
        });
        var u = {
          i: s,
          realIndex: a,
          animationDelay: s,
          initialSpeed: o.config.chart.animations.speed,
          dataChangeSpeed: o.config.chart.animations.dynamicAnimation.speed,
          className: "apexcharts-".concat(i)
        };
        if ("area" === i) for (var p = l.fillPath({
            seriesNumber: a
          }), f = 0; f < r.areaPaths.length; f++) {
          var x = n.renderPaths(e(e({}, u), {}, {
            pathFrom: r.pathFromArea,
            pathTo: r.areaPaths[f],
            stroke: "none",
            strokeWidth: 0,
            strokeLineCap: null,
            fill: p
          }));
          this.elSeries.add(x);
        }
        if (o.config.stroke.show && !this.pointsChart) {
          var b = null;
          if ("line" === i) b = l.fillPath({
            seriesNumber: a,
            i: s
          });else if ("solid" === o.config.stroke.fill.type) b = o.globals.stroke.colors[a];else {
            var v = o.config.fill;
            o.config.fill = o.config.stroke.fill, b = l.fillPath({
              seriesNumber: a,
              i: s
            }), o.config.fill = v;
          }
          for (var y = 0; y < r.linePaths.length; y++) {
            var w = b;
            "rangeArea" === i && (w = l.fillPath({
              seriesNumber: a
            }));
            var k = e(e({}, u), {}, {
                pathFrom: r.pathFromLine,
                pathTo: r.linePaths[y],
                stroke: b,
                strokeWidth: this.strokeWidth,
                strokeLineCap: o.config.stroke.lineCap,
                fill: "rangeArea" === i ? w : "none"
              }),
              A = n.renderPaths(k);
            if (this.elSeries.add(A), A.attr("fill-rule", "evenodd"), h.count > 0 && "rangeArea" !== i) {
              var S = n.renderPaths(k);
              S.node.setAttribute("stroke-dasharray", h.dashArray), h.strokeWidth && S.node.setAttribute("stroke-width", h.strokeWidth), this.elSeries.add(S), S.attr("clip-path", "url(#forecastMask".concat(o.globals.cuid, ")")), A.attr("clip-path", "url(#nonForecastMask".concat(o.globals.cuid, ")"));
            }
          }
        }
      }
    }, {
      key: "_iterateOverDataPoints",
      value: function (t) {
        var e = t.type,
          i = t.series,
          a = t.iterations,
          s = t.realIndex,
          r = t.i,
          o = t.x,
          n = t.y,
          l = t.pX,
          h = t.pY,
          c = t.pathsFrom,
          d = t.linePaths,
          g = t.areaPaths,
          u = t.seriesIndex,
          p = t.lineYPosition,
          f = t.xArrj,
          b = t.yArrj,
          v = t.isRangeStart,
          y = t.seriesRangeEnd,
          w = this.w,
          k = new m(this.ctx),
          A = this.yRatio,
          S = c.prevY,
          C = c.linePath,
          L = c.areaPath,
          P = c.pathFromLine,
          I = c.pathFromArea,
          T = x.isNumber(w.globals.minYArr[s]) ? w.globals.minYArr[s] : w.globals.minY;
        a || (a = w.globals.dataPoints > 1 ? w.globals.dataPoints - 1 : w.globals.dataPoints);
        for (var M = n, X = 0; X < a; X++) {
          var z = void 0 === i[r][X + 1] || null === i[r][X + 1];
          if (w.globals.isXNumeric) {
            var E = w.globals.seriesX[s][X + 1];
            void 0 === w.globals.seriesX[s][X + 1] && (E = w.globals.seriesX[s][a - 1]), o = (E - w.globals.minX) / this.xRatio;
          } else o += this.xDivision;
          if (w.config.chart.stacked) {
            if (r > 0 && w.globals.collapsedSeries.length < w.config.series.length - 1) {
              p = this.prevSeriesY[function (t) {
                for (var e = t, i = 0; i < w.globals.series.length; i++) if (w.globals.collapsedSeriesIndices.indexOf(t) > -1) {
                  e--;
                  break;
                }
                return e >= 0 ? e : 0;
              }(r - 1)][X + 1];
            } else p = this.zeroY;
          } else p = this.zeroY;
          z ? n = p - T / A[this.yaxisIndex] + 2 * (this.isReversed ? T / A[this.yaxisIndex] : 0) : (n = p - i[r][X + 1] / A[this.yaxisIndex] + 2 * (this.isReversed ? i[r][X + 1] / A[this.yaxisIndex] : 0), "rangeArea" === e && (M = p - y[r][X + 1] / A[this.yaxisIndex] + 2 * (this.isReversed ? y[r][X + 1] / A[this.yaxisIndex] : 0))), f.push(o), b.push(n);
          var Y = this.lineHelpers.calculatePoints({
              series: i,
              x: o,
              y: n,
              realIndex: s,
              i: r,
              j: X,
              prevY: S
            }),
            F = this._createPaths({
              type: e,
              series: i,
              i: r,
              realIndex: s,
              j: X,
              x: o,
              y: n,
              y2: M,
              pX: l,
              pY: h,
              linePath: C,
              areaPath: L,
              linePaths: d,
              areaPaths: g,
              seriesIndex: u,
              isRangeStart: v
            });
          g = F.areaPaths, d = F.linePaths, l = F.pX, h = F.pY, L = F.areaPath, C = F.linePath, this.appendPathFrom && (P += k.line(o, this.zeroY), I += k.line(o, this.zeroY)), this.handleNullDataPoints(i, Y, r, X, s), this._handleMarkersAndLabels({
            type: e,
            pointsPos: Y,
            i: r,
            j: X,
            realIndex: s,
            isRangeStart: v
          });
        }
        return {
          yArrj: b,
          xArrj: f,
          pathFromArea: I,
          areaPaths: g,
          pathFromLine: P,
          linePaths: d,
          linePath: C,
          areaPath: L
        };
      }
    }, {
      key: "_handleMarkersAndLabels",
      value: function (t) {
        var e = t.type,
          i = t.pointsPos,
          a = t.isRangeStart,
          s = t.i,
          r = t.j,
          o = t.realIndex,
          n = this.w,
          l = new O(this.ctx);
        if (this.pointsChart) this.scatter.draw(this.elSeries, r, {
          realIndex: o,
          pointsPos: i,
          zRatio: this.zRatio,
          elParent: this.elPointsMain
        });else {
          n.globals.series[s].length > 1 && this.elPointsMain.node.classList.add("apexcharts-element-hidden");
          var h = this.markers.plotChartMarkers(i, o, r + 1);
          null !== h && this.elPointsMain.add(h);
        }
        var c = l.drawDataLabel({
          type: e,
          isRangeStart: a,
          pos: i,
          i: o,
          j: r + 1
        });
        null !== c && this.elDataLabelsWrap.add(c);
      }
    }, {
      key: "_createPaths",
      value: function (t) {
        var e = t.type,
          i = t.series,
          a = t.i,
          s = t.realIndex,
          r = t.j,
          o = t.x,
          n = t.y,
          l = t.y2,
          h = t.pX,
          c = t.pY,
          d = t.linePath,
          g = t.areaPath,
          u = t.linePaths,
          p = t.areaPaths,
          f = t.seriesIndex,
          x = t.isRangeStart,
          b = this.w,
          v = new m(this.ctx),
          y = b.config.stroke.curve,
          w = this.areaBottomY;
        if (Array.isArray(b.config.stroke.curve) && (y = Array.isArray(f) ? b.config.stroke.curve[f[a]] : b.config.stroke.curve[a]), "smooth" === y) {
          var k = .35 * (o - h);
          b.globals.hasNullValues ? (null !== i[a][r] && (null !== i[a][r + 1] ? (d = v.move(h, c) + v.curve(h + k, c, o - k, n, o + 1, n), g = v.move(h + 1, c) + v.curve(h + k, c, o - k, n, o + 1, n) + v.line(o, w) + v.line(h, w) + "z") : (d = v.move(h, c), g = v.move(h, c) + "z")), u.push(d), p.push(g)) : (d += v.curve(h + k, c, o - k, n, o, n), g += v.curve(h + k, c, o - k, n, o, n)), h = o, c = n, r === i[a].length - 2 && (g = g + v.curve(h, c, o, n, o, w) + v.move(o, n) + "z", "rangeArea" === e && x ? d = d + v.curve(h, c, o, n, o, l) + v.move(o, l) + "z" : b.globals.hasNullValues || (u.push(d), p.push(g)));
        } else {
          if (null === i[a][r + 1]) {
            d += v.move(o, n);
            var A = b.globals.isXNumeric ? (b.globals.seriesX[s][r] - b.globals.minX) / this.xRatio : o - this.xDivision;
            g = g + v.line(A, w) + v.move(o, n) + "z";
          }
          null === i[a][r] && (d += v.move(o, n), g += v.move(o, w)), "stepline" === y ? (d = d + v.line(o, null, "H") + v.line(null, n, "V"), g = g + v.line(o, null, "H") + v.line(null, n, "V")) : "straight" === y && (d += v.line(o, n), g += v.line(o, n)), r === i[a].length - 2 && (g = g + v.line(o, w) + v.move(o, n) + "z", "rangeArea" === e && x ? d = d + v.line(o, l) + v.move(o, l) + "z" : (u.push(d), p.push(g)));
        }
        return {
          linePaths: u,
          areaPaths: p,
          pX: h,
          pY: c,
          linePath: d,
          areaPath: g
        };
      }
    }, {
      key: "handleNullDataPoints",
      value: function (t, e, i, a, s) {
        var r = this.w;
        if (null === t[i][a] && r.config.markers.showNullDataPoints || 1 === t[i].length) {
          var o = this.markers.plotChartMarkers(e, s, a + 1, this.strokeWidth - r.config.markers.strokeWidth / 2, !0);
          null !== o && this.elPointsMain.add(o);
        }
      }
    }]), t;
  }();
window.TreemapSquared = {}, window.TreemapSquared.generate = function () {
  function t(e, i, a, s) {
    this.xoffset = e, this.yoffset = i, this.height = s, this.width = a, this.shortestEdge = function () {
      return Math.min(this.height, this.width);
    }, this.getCoordinates = function (t) {
      var e,
        i = [],
        a = this.xoffset,
        s = this.yoffset,
        o = r(t) / this.height,
        n = r(t) / this.width;
      if (this.width >= this.height) for (e = 0; e < t.length; e++) i.push([a, s, a + o, s + t[e] / o]), s += t[e] / o;else for (e = 0; e < t.length; e++) i.push([a, s, a + t[e] / n, s + n]), a += t[e] / n;
      return i;
    }, this.cutArea = function (e) {
      var i;
      if (this.width >= this.height) {
        var a = e / this.height,
          s = this.width - a;
        i = new t(this.xoffset + a, this.yoffset, s, this.height);
      } else {
        var r = e / this.width,
          o = this.height - r;
        i = new t(this.xoffset, this.yoffset + r, this.width, o);
      }
      return i;
    };
  }
  function e(e, a, s, o, n) {
    o = void 0 === o ? 0 : o, n = void 0 === n ? 0 : n;
    var l = i(function (t, e) {
      var i,
        a = [],
        s = e / r(t);
      for (i = 0; i < t.length; i++) a[i] = t[i] * s;
      return a;
    }(e, a * s), [], new t(o, n, a, s), []);
    return function (t) {
      var e,
        i,
        a = [];
      for (e = 0; e < t.length; e++) for (i = 0; i < t[e].length; i++) a.push(t[e][i]);
      return a;
    }(l);
  }
  function i(t, e, s, o) {
    var n, l, h;
    if (0 !== t.length) return n = s.shortestEdge(), function (t, e, i) {
      var s;
      if (0 === t.length) return !0;
      (s = t.slice()).push(e);
      var r = a(t, i),
        o = a(s, i);
      return r >= o;
    }(e, l = t[0], n) ? (e.push(l), i(t.slice(1), e, s, o)) : (h = s.cutArea(r(e), o), o.push(s.getCoordinates(e)), i(t, [], h, o)), o;
    o.push(s.getCoordinates(e));
  }
  function a(t, e) {
    var i = Math.min.apply(Math, t),
      a = Math.max.apply(Math, t),
      s = r(t);
    return Math.max(Math.pow(e, 2) * a / Math.pow(s, 2), Math.pow(s, 2) / (Math.pow(e, 2) * i));
  }
  function s(t) {
    return t && t.constructor === Array;
  }
  function r(t) {
    var e,
      i = 0;
    for (e = 0; e < t.length; e++) i += t[e];
    return i;
  }
  function o(t) {
    var e,
      i = 0;
    if (s(t[0])) for (e = 0; e < t.length; e++) i += o(t[e]);else i = r(t);
    return i;
  }
  return function t(i, a, r, n, l) {
    n = void 0 === n ? 0 : n, l = void 0 === l ? 0 : l;
    var h,
      c,
      d = [],
      g = [];
    if (s(i[0])) {
      for (c = 0; c < i.length; c++) d[c] = o(i[c]);
      for (h = e(d, a, r, n, l), c = 0; c < i.length; c++) g.push(t(i[c], h[c][2] - h[c][0], h[c][3] - h[c][1], h[c][0], h[c][1]));
    } else g = e(i, a, r, n, l);
    return g;
  };
}();
var zt,
  Et,
  Yt = function () {
    function t(e, i) {
      a(this, t), this.ctx = e, this.w = e.w, this.strokeWidth = this.w.config.stroke.width, this.helpers = new At(e), this.dynamicAnim = this.w.config.chart.animations.dynamicAnimation, this.labels = [];
    }
    return r(t, [{
      key: "draw",
      value: function (t) {
        var e = this,
          i = this.w,
          a = new m(this.ctx),
          s = new R(this.ctx),
          r = a.group({
            class: "apexcharts-treemap"
          });
        if (i.globals.noData) return r;
        var o = [];
        return t.forEach(function (t) {
          var e = t.map(function (t) {
            return Math.abs(t);
          });
          o.push(e);
        }), this.negRange = this.helpers.checkColorRange(), i.config.series.forEach(function (t, i) {
          t.data.forEach(function (t) {
            Array.isArray(e.labels[i]) || (e.labels[i] = []), e.labels[i].push(t.x);
          });
        }), window.TreemapSquared.generate(o, i.globals.gridWidth, i.globals.gridHeight).forEach(function (o, n) {
          var l = a.group({
            class: "apexcharts-series apexcharts-treemap-series",
            seriesName: x.escapeString(i.globals.seriesNames[n]),
            rel: n + 1,
            "data:realIndex": n
          });
          if (i.config.chart.dropShadow.enabled) {
            var h = i.config.chart.dropShadow;
            new v(e.ctx).dropShadow(r, h, n);
          }
          var c = a.group({
            class: "apexcharts-data-labels"
          });
          o.forEach(function (r, o) {
            var h = r[0],
              c = r[1],
              d = r[2],
              g = r[3],
              u = a.drawRect(h, c, d - h, g - c, 0, "#fff", 1, e.strokeWidth, i.config.plotOptions.treemap.useFillColorAsStroke ? f : i.globals.stroke.colors[n]);
            u.attr({
              cx: h,
              cy: c,
              index: n,
              i: n,
              j: o,
              width: d - h,
              height: g - c
            });
            var p = e.helpers.getShadeColor(i.config.chart.type, n, o, e.negRange),
              f = p.color;
            void 0 !== i.config.series[n].data[o] && i.config.series[n].data[o].fillColor && (f = i.config.series[n].data[o].fillColor);
            var x = s.fillPath({
              color: f,
              seriesNumber: n,
              dataPointIndex: o
            });
            u.node.classList.add("apexcharts-treemap-rect"), u.attr({
              fill: x
            }), e.helpers.addListeners(u);
            var b = {
                x: h + (d - h) / 2,
                y: c + (g - c) / 2,
                width: 0,
                height: 0
              },
              v = {
                x: h,
                y: c,
                width: d - h,
                height: g - c
              };
            if (i.config.chart.animations.enabled && !i.globals.dataChanged) {
              var m = 1;
              i.globals.resized || (m = i.config.chart.animations.speed), e.animateTreemap(u, b, v, m);
            }
            if (i.globals.dataChanged) {
              var y = 1;
              e.dynamicAnim.enabled && i.globals.shouldAnimate && (y = e.dynamicAnim.speed, i.globals.previousPaths[n] && i.globals.previousPaths[n][o] && i.globals.previousPaths[n][o].rect && (b = i.globals.previousPaths[n][o].rect), e.animateTreemap(u, b, v, y));
            }
            var w = e.getFontSize(r),
              k = i.config.dataLabels.formatter(e.labels[n][o], {
                value: i.globals.series[n][o],
                seriesIndex: n,
                dataPointIndex: o,
                w: i
              }),
              A = e.helpers.calculateDataLabels({
                text: k,
                x: (h + d) / 2,
                y: (c + g) / 2 + e.strokeWidth / 2 + w / 3,
                i: n,
                j: o,
                colorProps: p,
                fontSize: w,
                series: t
              });
            i.config.dataLabels.enabled && A && e.rotateToFitLabel(A, w, k, h, c, d, g), l.add(u), null !== A && l.add(A);
          }), l.add(c), r.add(l);
        }), r;
      }
    }, {
      key: "getFontSize",
      value: function (t) {
        var e = this.w;
        var i,
          a,
          s,
          r,
          o = function t(e) {
            var i,
              a = 0;
            if (Array.isArray(e[0])) for (i = 0; i < e.length; i++) a += t(e[i]);else for (i = 0; i < e.length; i++) a += e[i].length;
            return a;
          }(this.labels) / function t(e) {
            var i,
              a = 0;
            if (Array.isArray(e[0])) for (i = 0; i < e.length; i++) a += t(e[i]);else for (i = 0; i < e.length; i++) a += 1;
            return a;
          }(this.labels);
        return i = t[2] - t[0], a = t[3] - t[1], s = i * a, r = Math.pow(s, .5), Math.min(r / o, parseInt(e.config.dataLabels.style.fontSize, 10));
      }
    }, {
      key: "rotateToFitLabel",
      value: function (t, e, i, a, s, r, o) {
        var n = new m(this.ctx),
          l = n.getTextRects(i, e);
        if (l.width + this.w.config.stroke.width + 5 > r - a && l.width <= o - s) {
          var h = n.rotateAroundCenter(t.node);
          t.node.setAttribute("transform", "rotate(-90 ".concat(h.x, " ").concat(h.y, ")"));
        }
      }
    }, {
      key: "animateTreemap",
      value: function (t, e, i, a) {
        var s = new b(this.ctx);
        s.animateRect(t, {
          x: e.x,
          y: e.y,
          width: e.width,
          height: e.height
        }, {
          x: i.x,
          y: i.y,
          width: i.width,
          height: i.height
        }, a, function () {
          s.animationCompleted(t);
        });
      }
    }]), t;
  }(),
  Ft = 86400,
  Rt = function () {
    function t(e) {
      a(this, t), this.ctx = e, this.w = e.w, this.timeScaleArray = [], this.utc = this.w.config.xaxis.labels.datetimeUTC;
    }
    return r(t, [{
      key: "calculateTimeScaleTicks",
      value: function (t, i) {
        var a = this,
          s = this.w;
        if (s.globals.allSeriesCollapsed) return s.globals.labels = [], s.globals.timescaleLabels = [], [];
        var r = new I(this.ctx),
          o = (i - t) / 864e5;
        this.determineInterval(o), s.globals.disableZoomIn = !1, s.globals.disableZoomOut = !1, o < .00011574074074074075 ? s.globals.disableZoomIn = !0 : o > 5e4 && (s.globals.disableZoomOut = !0);
        var n = r.getTimeUnitsfromTimestamp(t, i, this.utc),
          l = s.globals.gridWidth / o,
          h = l / 24,
          c = h / 60,
          d = c / 60,
          g = Math.floor(24 * o),
          u = Math.floor(1440 * o),
          p = Math.floor(o * Ft),
          f = Math.floor(o),
          x = Math.floor(o / 30),
          b = Math.floor(o / 365),
          v = {
            minMillisecond: n.minMillisecond,
            minSecond: n.minSecond,
            minMinute: n.minMinute,
            minHour: n.minHour,
            minDate: n.minDate,
            minMonth: n.minMonth,
            minYear: n.minYear
          },
          m = {
            firstVal: v,
            currentMillisecond: v.minMillisecond,
            currentSecond: v.minSecond,
            currentMinute: v.minMinute,
            currentHour: v.minHour,
            currentMonthDate: v.minDate,
            currentDate: v.minDate,
            currentMonth: v.minMonth,
            currentYear: v.minYear,
            daysWidthOnXAxis: l,
            hoursWidthOnXAxis: h,
            minutesWidthOnXAxis: c,
            secondsWidthOnXAxis: d,
            numberOfSeconds: p,
            numberOfMinutes: u,
            numberOfHours: g,
            numberOfDays: f,
            numberOfMonths: x,
            numberOfYears: b
          };
        switch (this.tickInterval) {
          case "years":
            this.generateYearScale(m);
            break;
          case "months":
          case "half_year":
            this.generateMonthScale(m);
            break;
          case "months_days":
          case "months_fortnight":
          case "days":
          case "week_days":
            this.generateDayScale(m);
            break;
          case "hours":
            this.generateHourScale(m);
            break;
          case "minutes_fives":
          case "minutes":
            this.generateMinuteScale(m);
            break;
          case "seconds_tens":
          case "seconds_fives":
          case "seconds":
            this.generateSecondScale(m);
        }
        var y = this.timeScaleArray.map(function (t) {
          var i = {
            position: t.position,
            unit: t.unit,
            year: t.year,
            day: t.day ? t.day : 1,
            hour: t.hour ? t.hour : 0,
            month: t.month + 1
          };
          return "month" === t.unit ? e(e({}, i), {}, {
            day: 1,
            value: t.value + 1
          }) : "day" === t.unit || "hour" === t.unit ? e(e({}, i), {}, {
            value: t.value
          }) : "minute" === t.unit ? e(e({}, i), {}, {
            value: t.value,
            minute: t.value
          }) : "second" === t.unit ? e(e({}, i), {}, {
            value: t.value,
            minute: t.minute,
            second: t.second
          }) : t;
        });
        return y.filter(function (t) {
          var e = 1,
            i = Math.ceil(s.globals.gridWidth / 120),
            r = t.value;
          void 0 !== s.config.xaxis.tickAmount && (i = s.config.xaxis.tickAmount), y.length > i && (e = Math.floor(y.length / i));
          var o = !1,
            n = !1;
          switch (a.tickInterval) {
            case "years":
              "year" === t.unit && (o = !0);
              break;
            case "half_year":
              e = 7, "year" === t.unit && (o = !0);
              break;
            case "months":
              e = 1, "year" === t.unit && (o = !0);
              break;
            case "months_fortnight":
              e = 15, "year" !== t.unit && "month" !== t.unit || (o = !0), 30 === r && (n = !0);
              break;
            case "months_days":
              e = 10, "month" === t.unit && (o = !0), 30 === r && (n = !0);
              break;
            case "week_days":
              e = 8, "month" === t.unit && (o = !0);
              break;
            case "days":
              e = 1, "month" === t.unit && (o = !0);
              break;
            case "hours":
              "day" === t.unit && (o = !0);
              break;
            case "minutes_fives":
            case "seconds_fives":
              r % 5 != 0 && (n = !0);
              break;
            case "seconds_tens":
              r % 10 != 0 && (n = !0);
          }
          if ("hours" === a.tickInterval || "minutes_fives" === a.tickInterval || "seconds_tens" === a.tickInterval || "seconds_fives" === a.tickInterval) {
            if (!n) return !0;
          } else if ((r % e == 0 || o) && !n) return !0;
        });
      }
    }, {
      key: "recalcDimensionsBasedOnFormat",
      value: function (t, e) {
        var i = this.w,
          a = this.formatDates(t),
          s = this.removeOverlappingTS(a);
        i.globals.timescaleLabels = s.slice(), new ot(this.ctx).plotCoords();
      }
    }, {
      key: "determineInterval",
      value: function (t) {
        var e = 24 * t,
          i = 60 * e;
        switch (!0) {
          case t / 365 > 5:
            this.tickInterval = "years";
            break;
          case t > 800:
            this.tickInterval = "half_year";
            break;
          case t > 180:
            this.tickInterval = "months";
            break;
          case t > 90:
            this.tickInterval = "months_fortnight";
            break;
          case t > 60:
            this.tickInterval = "months_days";
            break;
          case t > 30:
            this.tickInterval = "week_days";
            break;
          case t > 2:
            this.tickInterval = "days";
            break;
          case e > 2.4:
            this.tickInterval = "hours";
            break;
          case i > 15:
            this.tickInterval = "minutes_fives";
            break;
          case i > 5:
            this.tickInterval = "minutes";
            break;
          case i > 1:
            this.tickInterval = "seconds_tens";
            break;
          case 60 * i > 20:
            this.tickInterval = "seconds_fives";
            break;
          default:
            this.tickInterval = "seconds";
        }
      }
    }, {
      key: "generateYearScale",
      value: function (t) {
        var e = t.firstVal,
          i = t.currentMonth,
          a = t.currentYear,
          s = t.daysWidthOnXAxis,
          r = t.numberOfYears,
          o = e.minYear,
          n = 0,
          l = new I(this.ctx),
          h = "year";
        if (e.minDate > 1 || e.minMonth > 0) {
          var c = l.determineRemainingDaysOfYear(e.minYear, e.minMonth, e.minDate);
          n = (l.determineDaysOfYear(e.minYear) - c + 1) * s, o = e.minYear + 1, this.timeScaleArray.push({
            position: n,
            value: o,
            unit: h,
            year: o,
            month: x.monthMod(i + 1)
          });
        } else 1 === e.minDate && 0 === e.minMonth && this.timeScaleArray.push({
          position: n,
          value: o,
          unit: h,
          year: a,
          month: x.monthMod(i + 1)
        });
        for (var d = o, g = n, u = 0; u < r; u++) d++, g = l.determineDaysOfYear(d - 1) * s + g, this.timeScaleArray.push({
          position: g,
          value: d,
          unit: h,
          year: d,
          month: 1
        });
      }
    }, {
      key: "generateMonthScale",
      value: function (t) {
        var e = t.firstVal,
          i = t.currentMonthDate,
          a = t.currentMonth,
          s = t.currentYear,
          r = t.daysWidthOnXAxis,
          o = t.numberOfMonths,
          n = a,
          l = 0,
          h = new I(this.ctx),
          c = "month",
          d = 0;
        if (e.minDate > 1) {
          l = (h.determineDaysOfMonths(a + 1, e.minYear) - i + 1) * r, n = x.monthMod(a + 1);
          var g = s + d,
            u = x.monthMod(n),
            p = n;
          0 === n && (c = "year", p = g, u = 1, g += d += 1), this.timeScaleArray.push({
            position: l,
            value: p,
            unit: c,
            year: g,
            month: u
          });
        } else this.timeScaleArray.push({
          position: l,
          value: n,
          unit: c,
          year: s,
          month: x.monthMod(a)
        });
        for (var f = n + 1, b = l, v = 0, m = 1; v < o; v++, m++) {
          0 === (f = x.monthMod(f)) ? (c = "year", d += 1) : c = "month";
          var y = this._getYear(s, f, d);
          b = h.determineDaysOfMonths(f, y) * r + b;
          var w = 0 === f ? y : f;
          this.timeScaleArray.push({
            position: b,
            value: w,
            unit: c,
            year: y,
            month: 0 === f ? 1 : f
          }), f++;
        }
      }
    }, {
      key: "generateDayScale",
      value: function (t) {
        var e = t.firstVal,
          i = t.currentMonth,
          a = t.currentYear,
          s = t.hoursWidthOnXAxis,
          r = t.numberOfDays,
          o = new I(this.ctx),
          n = "day",
          l = e.minDate + 1,
          h = l,
          c = function (t, e, i) {
            return t > o.determineDaysOfMonths(e + 1, i) ? (h = 1, n = "month", g = e += 1, e) : e;
          },
          d = (24 - e.minHour) * s,
          g = l,
          u = c(h, i, a);
        0 === e.minHour && 1 === e.minDate ? (d = 0, g = x.monthMod(e.minMonth), n = "month", h = e.minDate, r++) : 1 !== e.minDate && 0 === e.minHour && 0 === e.minMinute && (d = 0, l = e.minDate, g = l, u = c(h = l, i, a)), this.timeScaleArray.push({
          position: d,
          value: g,
          unit: n,
          year: this._getYear(a, u, 0),
          month: x.monthMod(u),
          day: h
        });
        for (var p = d, f = 0; f < r; f++) {
          n = "day", u = c(h += 1, u, this._getYear(a, u, 0));
          var b = this._getYear(a, u, 0);
          p = 24 * s + p;
          var v = 1 === h ? x.monthMod(u) : h;
          this.timeScaleArray.push({
            position: p,
            value: v,
            unit: n,
            year: b,
            month: x.monthMod(u),
            day: v
          });
        }
      }
    }, {
      key: "generateHourScale",
      value: function (t) {
        var e = t.firstVal,
          i = t.currentDate,
          a = t.currentMonth,
          s = t.currentYear,
          r = t.minutesWidthOnXAxis,
          o = t.numberOfHours,
          n = new I(this.ctx),
          l = "hour",
          h = function (t, e) {
            return t > n.determineDaysOfMonths(e + 1, s) && (f = 1, e += 1), {
              month: e,
              date: f
            };
          },
          c = function (t, e) {
            return t > n.determineDaysOfMonths(e + 1, s) ? e += 1 : e;
          },
          d = 60 - (e.minMinute + e.minSecond / 60),
          g = d * r,
          u = e.minHour + 1,
          p = u + 1;
        60 === d && (g = 0, p = (u = e.minHour) + 1);
        var f = i,
          b = c(f, a);
        this.timeScaleArray.push({
          position: g,
          value: u,
          unit: l,
          day: f,
          hour: p,
          year: s,
          month: x.monthMod(b)
        });
        for (var v = g, m = 0; m < o; m++) {
          if (l = "hour", p >= 24) p = 0, l = "day", b = h(f += 1, b).month, b = c(f, b);
          var y = this._getYear(s, b, 0);
          v = 60 * r + v;
          var w = 0 === p ? f : p;
          this.timeScaleArray.push({
            position: v,
            value: w,
            unit: l,
            hour: p,
            day: f,
            year: y,
            month: x.monthMod(b)
          }), p++;
        }
      }
    }, {
      key: "generateMinuteScale",
      value: function (t) {
        for (var e = t.currentMillisecond, i = t.currentSecond, a = t.currentMinute, s = t.currentHour, r = t.currentDate, o = t.currentMonth, n = t.currentYear, l = t.minutesWidthOnXAxis, h = t.secondsWidthOnXAxis, c = t.numberOfMinutes, d = a + 1, g = r, u = o, p = n, f = s, b = (60 - i - e / 1e3) * h, v = 0; v < c; v++) d >= 60 && (d = 0, 24 === (f += 1) && (f = 0)), this.timeScaleArray.push({
          position: b,
          value: d,
          unit: "minute",
          hour: f,
          minute: d,
          day: g,
          year: this._getYear(p, u, 0),
          month: x.monthMod(u)
        }), b += l, d++;
      }
    }, {
      key: "generateSecondScale",
      value: function (t) {
        for (var e = t.currentMillisecond, i = t.currentSecond, a = t.currentMinute, s = t.currentHour, r = t.currentDate, o = t.currentMonth, n = t.currentYear, l = t.secondsWidthOnXAxis, h = t.numberOfSeconds, c = i + 1, d = a, g = r, u = o, p = n, f = s, b = (1e3 - e) / 1e3 * l, v = 0; v < h; v++) c >= 60 && (c = 0, ++d >= 60 && (d = 0, 24 === ++f && (f = 0))), this.timeScaleArray.push({
          position: b,
          value: c,
          unit: "second",
          hour: f,
          minute: d,
          second: c,
          day: g,
          year: this._getYear(p, u, 0),
          month: x.monthMod(u)
        }), b += l, c++;
      }
    }, {
      key: "createRawDateString",
      value: function (t, e) {
        var i = t.year;
        return 0 === t.month && (t.month = 1), i += "-" + ("0" + t.month.toString()).slice(-2), "day" === t.unit ? i += "day" === t.unit ? "-" + ("0" + e).slice(-2) : "-01" : i += "-" + ("0" + (t.day ? t.day : "1")).slice(-2), "hour" === t.unit ? i += "hour" === t.unit ? "T" + ("0" + e).slice(-2) : "T00" : i += "T" + ("0" + (t.hour ? t.hour : "0")).slice(-2), "minute" === t.unit ? i += ":" + ("0" + e).slice(-2) : i += ":" + (t.minute ? ("0" + t.minute).slice(-2) : "00"), "second" === t.unit ? i += ":" + ("0" + e).slice(-2) : i += ":00", this.utc && (i += ".000Z"), i;
      }
    }, {
      key: "formatDates",
      value: function (t) {
        var e = this,
          i = this.w;
        return t.map(function (t) {
          var a = t.value.toString(),
            s = new I(e.ctx),
            r = e.createRawDateString(t, a),
            o = s.getDate(s.parseDate(r));
          if (e.utc || (o = s.getDate(s.parseDateWithTimezone(r))), void 0 === i.config.xaxis.labels.format) {
            var n = "dd MMM",
              l = i.config.xaxis.labels.datetimeFormatter;
            "year" === t.unit && (n = l.year), "month" === t.unit && (n = l.month), "day" === t.unit && (n = l.day), "hour" === t.unit && (n = l.hour), "minute" === t.unit && (n = l.minute), "second" === t.unit && (n = l.second), a = s.formatDate(o, n);
          } else a = s.formatDate(o, i.config.xaxis.labels.format);
          return {
            dateString: r,
            position: t.position,
            value: a,
            unit: t.unit,
            year: t.year,
            month: t.month
          };
        });
      }
    }, {
      key: "removeOverlappingTS",
      value: function (t) {
        var e,
          i = this,
          a = new m(this.ctx),
          s = !1;
        t.length > 0 && t[0].value && t.every(function (e) {
          return e.value.length === t[0].value.length;
        }) && (s = !0, e = a.getTextRects(t[0].value).width);
        var r = 0,
          o = t.map(function (o, n) {
            if (n > 0 && i.w.config.xaxis.labels.hideOverlappingLabels) {
              var l = s ? e : a.getTextRects(t[r].value).width,
                h = t[r].position;
              return o.position > h + l + 10 ? (r = n, o) : null;
            }
            return o;
          });
        return o = o.filter(function (t) {
          return null !== t;
        });
      }
    }, {
      key: "_getYear",
      value: function (t, e, i) {
        return t + Math.floor(e / 12) + i;
      }
    }]), t;
  }(),
  Ht = function () {
    function t(e, i) {
      a(this, t), this.ctx = i, this.w = i.w, this.el = e;
    }
    return r(t, [{
      key: "setupElements",
      value: function () {
        var t = this.w.globals,
          e = this.w.config,
          i = e.chart.type;
        t.axisCharts = ["line", "area", "bar", "rangeBar", "rangeArea", "candlestick", "boxPlot", "scatter", "bubble", "radar", "heatmap", "treemap"].indexOf(i) > -1, t.xyCharts = ["line", "area", "bar", "rangeBar", "rangeArea", "candlestick", "boxPlot", "scatter", "bubble"].indexOf(i) > -1, t.isBarHorizontal = ("bar" === e.chart.type || "rangeBar" === e.chart.type || "boxPlot" === e.chart.type) && e.plotOptions.bar.horizontal, t.chartClass = ".apexcharts" + t.chartID, t.dom.baseEl = this.el, t.dom.elWrap = document.createElement("div"), m.setAttrs(t.dom.elWrap, {
          id: t.chartClass.substring(1),
          class: "apexcharts-canvas " + t.chartClass.substring(1)
        }), this.el.appendChild(t.dom.elWrap), t.dom.Paper = new window.SVG.Doc(t.dom.elWrap), t.dom.Paper.attr({
          class: "apexcharts-svg",
          "xmlns:data": "ApexChartsNS",
          transform: "translate(".concat(e.chart.offsetX, ", ").concat(e.chart.offsetY, ")")
        }), t.dom.Paper.node.style.background = e.chart.background, this.setSVGDimensions(), t.dom.elLegendForeign = document.createElementNS(t.SVGNS, "foreignObject"), m.setAttrs(t.dom.elLegendForeign, {
          x: 0,
          y: 0,
          width: t.svgWidth,
          height: t.svgHeight
        }), t.dom.elLegendWrap = document.createElement("div"), t.dom.elLegendWrap.classList.add("apexcharts-legend"), t.dom.elLegendWrap.setAttribute("xmlns", "http://www.w3.org/1999/xhtml"), t.dom.elLegendForeign.appendChild(t.dom.elLegendWrap), t.dom.Paper.node.appendChild(t.dom.elLegendForeign), t.dom.elGraphical = t.dom.Paper.group().attr({
          class: "apexcharts-inner apexcharts-graphical"
        }), t.dom.elDefs = t.dom.Paper.defs(), t.dom.Paper.add(t.dom.elGraphical), t.dom.elGraphical.add(t.dom.elDefs);
      }
    }, {
      key: "plotChartType",
      value: function (t, e) {
        var i = this.w,
          a = i.config,
          s = i.globals,
          r = {
            series: [],
            i: []
          },
          o = {
            series: [],
            i: []
          },
          n = {
            series: [],
            i: []
          },
          l = {
            series: [],
            i: []
          },
          h = {
            series: [],
            i: []
          },
          c = {
            series: [],
            i: []
          },
          d = {
            series: [],
            i: []
          },
          g = {
            series: [],
            i: []
          },
          u = {
            series: [],
            seriesRangeEnd: [],
            i: []
          };
        s.series.map(function (e, p) {
          var f = 0;
          void 0 !== t[p].type ? ("column" === t[p].type || "bar" === t[p].type ? (s.series.length > 1 && a.plotOptions.bar.horizontal && console.warn("Horizontal bars are not supported in a mixed/combo chart. Please turn off `plotOptions.bar.horizontal`"), h.series.push(e), h.i.push(p), f++, i.globals.columnSeries = h.series) : "area" === t[p].type ? (o.series.push(e), o.i.push(p), f++) : "line" === t[p].type ? (r.series.push(e), r.i.push(p), f++) : "scatter" === t[p].type ? (n.series.push(e), n.i.push(p)) : "bubble" === t[p].type ? (l.series.push(e), l.i.push(p), f++) : "candlestick" === t[p].type ? (c.series.push(e), c.i.push(p), f++) : "boxPlot" === t[p].type ? (d.series.push(e), d.i.push(p), f++) : "rangeBar" === t[p].type ? (g.series.push(e), g.i.push(p), f++) : "rangeArea" === t[p].type ? (u.series.push(s.seriesRangeStart[p]), u.seriesRangeEnd.push(s.seriesRangeEnd[p]), u.i.push(p), f++) : console.warn("You have specified an unrecognized chart type. Available types for this property are line/area/column/bar/scatter/bubble/candlestick/boxPlot/rangeBar/rangeArea"), f > 1 && (s.comboCharts = !0)) : (r.series.push(e), r.i.push(p));
        });
        var p = new Xt(this.ctx, e),
          f = new kt(this.ctx, e);
        this.ctx.pie = new Lt(this.ctx);
        var x = new It(this.ctx);
        this.ctx.rangeBar = new Tt(this.ctx, e);
        var b = new Pt(this.ctx),
          v = [];
        if (s.comboCharts) {
          if (o.series.length > 0 && v.push(p.draw(o.series, "area", o.i)), h.series.length > 0) if (i.config.chart.stacked) {
            var m = new wt(this.ctx, e);
            v.push(m.draw(h.series, h.i));
          } else this.ctx.bar = new yt(this.ctx, e), v.push(this.ctx.bar.draw(h.series, h.i));
          if (u.series.length > 0 && v.push(p.draw(u.series, "rangeArea", u.i, u.seriesRangeEnd)), r.series.length > 0 && v.push(p.draw(r.series, "line", r.i)), c.series.length > 0 && v.push(f.draw(c.series, "candlestick", c.i)), d.series.length > 0 && v.push(f.draw(d.series, "boxPlot", d.i)), g.series.length > 0 && v.push(this.ctx.rangeBar.draw(g.series, g.i)), n.series.length > 0) {
            var y = new Xt(this.ctx, e, !0);
            v.push(y.draw(n.series, "scatter", n.i));
          }
          if (l.series.length > 0) {
            var w = new Xt(this.ctx, e, !0);
            v.push(w.draw(l.series, "bubble", l.i));
          }
        } else switch (a.chart.type) {
          case "line":
            v = p.draw(s.series, "line");
            break;
          case "area":
            v = p.draw(s.series, "area");
            break;
          case "bar":
            if (a.chart.stacked) v = new wt(this.ctx, e).draw(s.series);else this.ctx.bar = new yt(this.ctx, e), v = this.ctx.bar.draw(s.series);
            break;
          case "candlestick":
            v = new kt(this.ctx, e).draw(s.series, "candlestick");
            break;
          case "boxPlot":
            v = new kt(this.ctx, e).draw(s.series, a.chart.type);
            break;
          case "rangeBar":
            v = this.ctx.rangeBar.draw(s.series);
            break;
          case "rangeArea":
            v = p.draw(s.seriesRangeStart, "rangeArea", void 0, s.seriesRangeEnd);
            break;
          case "heatmap":
            v = new St(this.ctx, e).draw(s.series);
            break;
          case "treemap":
            v = new Yt(this.ctx, e).draw(s.series);
            break;
          case "pie":
          case "donut":
          case "polarArea":
            v = this.ctx.pie.draw(s.series);
            break;
          case "radialBar":
            v = x.draw(s.series);
            break;
          case "radar":
            v = b.draw(s.series);
            break;
          default:
            v = p.draw(s.series);
        }
        return v;
      }
    }, {
      key: "setSVGDimensions",
      value: function () {
        var t = this.w.globals,
          e = this.w.config;
        t.svgWidth = e.chart.width, t.svgHeight = e.chart.height;
        var i = x.getDimensions(this.el),
          a = e.chart.width.toString().split(/[0-9]+/g).pop();
        "%" === a ? x.isNumber(i[0]) && (0 === i[0].width && (i = x.getDimensions(this.el.parentNode)), t.svgWidth = i[0] * parseInt(e.chart.width, 10) / 100) : "px" !== a && "" !== a || (t.svgWidth = parseInt(e.chart.width, 10));
        var s = e.chart.height.toString().split(/[0-9]+/g).pop();
        if ("auto" !== t.svgHeight && "" !== t.svgHeight) {
          if ("%" === s) {
            var r = x.getDimensions(this.el.parentNode);
            t.svgHeight = r[1] * parseInt(e.chart.height, 10) / 100;
          } else t.svgHeight = parseInt(e.chart.height, 10);
        } else t.axisCharts ? t.svgHeight = t.svgWidth / 1.61 : t.svgHeight = t.svgWidth / 1.2;
        if (t.svgWidth < 0 && (t.svgWidth = 0), t.svgHeight < 0 && (t.svgHeight = 0), m.setAttrs(t.dom.Paper.node, {
          width: t.svgWidth,
          height: t.svgHeight
        }), "%" !== s) {
          var o = e.chart.sparkline.enabled ? 0 : t.axisCharts ? e.chart.parentHeightOffset : 0;
          t.dom.Paper.node.parentNode.parentNode.style.minHeight = t.svgHeight + o + "px";
        }
        t.dom.elWrap.style.width = t.svgWidth + "px", t.dom.elWrap.style.height = t.svgHeight + "px";
      }
    }, {
      key: "shiftGraphPosition",
      value: function () {
        var t = this.w.globals,
          e = t.translateY,
          i = {
            transform: "translate(" + t.translateX + ", " + e + ")"
          };
        m.setAttrs(t.dom.elGraphical.node, i);
      }
    }, {
      key: "resizeNonAxisCharts",
      value: function () {
        var t = this.w,
          e = t.globals,
          i = 0,
          a = t.config.chart.sparkline.enabled ? 1 : 15;
        a += t.config.grid.padding.bottom, "top" !== t.config.legend.position && "bottom" !== t.config.legend.position || !t.config.legend.show || t.config.legend.floating || (i = new lt(this.ctx).legendHelpers.getLegendBBox().clwh + 10);
        var s = t.globals.dom.baseEl.querySelector(".apexcharts-radialbar, .apexcharts-pie"),
          r = 2.05 * t.globals.radialSize;
        if (s && !t.config.chart.sparkline.enabled && 0 !== t.config.plotOptions.radialBar.startAngle) {
          var o = x.getBoundingClientRect(s);
          r = o.bottom;
          var n = o.bottom - o.top;
          r = Math.max(2.05 * t.globals.radialSize, n);
        }
        var l = r + e.translateY + i + a;
        e.dom.elLegendForeign && e.dom.elLegendForeign.setAttribute("height", l), t.config.chart.height && String(t.config.chart.height).indexOf("%") > 0 || (e.dom.elWrap.style.height = l + "px", m.setAttrs(e.dom.Paper.node, {
          height: l
        }), e.dom.Paper.node.parentNode.parentNode.style.minHeight = l + "px");
      }
    }, {
      key: "coreCalculations",
      value: function () {
        new U(this.ctx).init();
      }
    }, {
      key: "resetGlobals",
      value: function () {
        var t = this,
          e = function () {
            return t.w.config.series.map(function (t) {
              return [];
            });
          },
          i = new Y(),
          a = this.w.globals;
        i.initGlobalVars(a), a.seriesXvalues = e(), a.seriesYvalues = e();
      }
    }, {
      key: "isMultipleY",
      value: function () {
        if (this.w.config.yaxis.constructor === Array && this.w.config.yaxis.length > 1) return this.w.globals.isMultipleYAxis = !0, !0;
      }
    }, {
      key: "xySettings",
      value: function () {
        var t = null,
          e = this.w;
        if (e.globals.axisCharts) {
          if ("back" === e.config.xaxis.crosshairs.position) new Q(this.ctx).drawXCrosshairs();
          if ("back" === e.config.yaxis[0].crosshairs.position) new Q(this.ctx).drawYCrosshairs();
          if ("datetime" === e.config.xaxis.type && void 0 === e.config.xaxis.labels.formatter) {
            this.ctx.timeScale = new Rt(this.ctx);
            var i = [];
            isFinite(e.globals.minX) && isFinite(e.globals.maxX) && !e.globals.isBarHorizontal ? i = this.ctx.timeScale.calculateTimeScaleTicks(e.globals.minX, e.globals.maxX) : e.globals.isBarHorizontal && (i = this.ctx.timeScale.calculateTimeScaleTicks(e.globals.minY, e.globals.maxY)), this.ctx.timeScale.recalcDimensionsBasedOnFormat(i);
          }
          t = new y(this.ctx).getCalculatedRatios();
        }
        return t;
      }
    }, {
      key: "updateSourceChart",
      value: function (t) {
        this.ctx.w.globals.selection = void 0, this.ctx.updateHelpers._updateOptions({
          chart: {
            selection: {
              xaxis: {
                min: t.w.globals.minX,
                max: t.w.globals.maxX
              }
            }
          }
        }, !1, !1);
      }
    }, {
      key: "setupBrushHandler",
      value: function () {
        var t = this,
          i = this.w;
        if (i.config.chart.brush.enabled && "function" != typeof i.config.chart.events.selection) {
          var a = i.config.chart.brush.targets || [i.config.chart.brush.target];
          a.forEach(function (e) {
            var i = ApexCharts.getChartByID(e);
            i.w.globals.brushSource = t.ctx, "function" != typeof i.w.config.chart.events.zoomed && (i.w.config.chart.events.zoomed = function () {
              t.updateSourceChart(i);
            }), "function" != typeof i.w.config.chart.events.scrolled && (i.w.config.chart.events.scrolled = function () {
              t.updateSourceChart(i);
            });
          }), i.config.chart.events.selection = function (t, s) {
            a.forEach(function (t) {
              var a = ApexCharts.getChartByID(t),
                r = x.clone(i.config.yaxis);
              if (i.config.chart.brush.autoScaleYaxis && 1 === a.w.globals.series.length) {
                var o = new _(a);
                r = o.autoScaleY(a, r, s);
              }
              var n = a.w.config.yaxis.reduce(function (t, i, s) {
                return [].concat(u(t), [e(e({}, a.w.config.yaxis[s]), {}, {
                  min: r[0].min,
                  max: r[0].max
                })]);
              }, []);
              a.ctx.updateHelpers._updateOptions({
                xaxis: {
                  min: s.xaxis.min,
                  max: s.xaxis.max
                },
                yaxis: n
              }, !1, !1, !1, !1);
            });
          };
        }
      }
    }]), t;
  }(),
  Dt = function () {
    function t(e) {
      a(this, t), this.ctx = e, this.w = e.w;
    }
    return r(t, [{
      key: "_updateOptions",
      value: function (t) {
        var e = this,
          a = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
          s = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2],
          r = !(arguments.length > 3 && void 0 !== arguments[3]) || arguments[3],
          o = arguments.length > 4 && void 0 !== arguments[4] && arguments[4];
        return new Promise(function (n) {
          var l = [e.ctx];
          r && (l = e.ctx.getSyncedCharts()), e.ctx.w.globals.isExecCalled && (l = [e.ctx], e.ctx.w.globals.isExecCalled = !1), l.forEach(function (r, h) {
            var c = r.w;
            if (c.globals.shouldAnimate = s, a || (c.globals.resized = !0, c.globals.dataChanged = !0, s && r.series.getPreviousPaths()), t && "object" === i(t) && (r.config = new E(t), t = y.extendArrayProps(r.config, t, c), r.w.globals.chartID !== e.ctx.w.globals.chartID && delete t.series, c.config = x.extend(c.config, t), o && (c.globals.lastXAxis = t.xaxis ? x.clone(t.xaxis) : [], c.globals.lastYAxis = t.yaxis ? x.clone(t.yaxis) : [], c.globals.initialConfig = x.extend({}, c.config), c.globals.initialSeries = x.clone(c.config.series), t.series))) {
              for (var d = 0; d < c.globals.collapsedSeriesIndices.length; d++) {
                var g = c.config.series[c.globals.collapsedSeriesIndices[d]];
                c.globals.collapsedSeries[d].data = c.globals.axisCharts ? g.data.slice() : g;
              }
              for (var u = 0; u < c.globals.ancillaryCollapsedSeriesIndices.length; u++) {
                var p = c.config.series[c.globals.ancillaryCollapsedSeriesIndices[u]];
                c.globals.ancillaryCollapsedSeries[u].data = c.globals.axisCharts ? p.data.slice() : p;
              }
              r.series.emptyCollapsedSeries(c.config.series);
            }
            return r.update(t).then(function () {
              h === l.length - 1 && n(r);
            });
          });
        });
      }
    }, {
      key: "_updateSeries",
      value: function (t, e) {
        var i = this,
          a = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
        return new Promise(function (s) {
          var r,
            o = i.w;
          return o.globals.shouldAnimate = e, o.globals.dataChanged = !0, e && i.ctx.series.getPreviousPaths(), o.globals.axisCharts ? (0 === (r = t.map(function (t, e) {
            return i._extendSeries(t, e);
          })).length && (r = [{
            data: []
          }]), o.config.series = r) : o.config.series = t.slice(), a && (o.globals.initialConfig.series = x.clone(o.config.series), o.globals.initialSeries = x.clone(o.config.series)), i.ctx.update().then(function () {
            s(i.ctx);
          });
        });
      }
    }, {
      key: "_extendSeries",
      value: function (t, i) {
        var a = this.w,
          s = a.config.series[i];
        return e(e({}, a.config.series[i]), {}, {
          name: t.name ? t.name : s && s.name,
          color: t.color ? t.color : s && s.color,
          type: t.type ? t.type : s && s.type,
          data: t.data ? t.data : s && s.data
        });
      }
    }, {
      key: "toggleDataPointSelection",
      value: function (t, e) {
        var i = this.w,
          a = null,
          s = ".apexcharts-series[data\\:realIndex='".concat(t, "']");
        return i.globals.axisCharts ? a = i.globals.dom.Paper.select("".concat(s, " path[j='").concat(e, "'], ").concat(s, " circle[j='").concat(e, "'], ").concat(s, " rect[j='").concat(e, "']")).members[0] : void 0 === e && (a = i.globals.dom.Paper.select("".concat(s, " path[j='").concat(t, "']")).members[0], "pie" !== i.config.chart.type && "polarArea" !== i.config.chart.type && "donut" !== i.config.chart.type || this.ctx.pie.pieClicked(t)), a ? (new m(this.ctx).pathMouseDown(a, null), a.node ? a.node : null) : (console.warn("toggleDataPointSelection: Element not found"), null);
      }
    }, {
      key: "forceXAxisUpdate",
      value: function (t) {
        var e = this.w;
        if (["min", "max"].forEach(function (i) {
          void 0 !== t.xaxis[i] && (e.config.xaxis[i] = t.xaxis[i], e.globals.lastXAxis[i] = t.xaxis[i]);
        }), t.xaxis.categories && t.xaxis.categories.length && (e.config.xaxis.categories = t.xaxis.categories), e.config.xaxis.convertedCatToNumeric) {
          var i = new z(t);
          t = i.convertCatToNumericXaxis(t, this.ctx);
        }
        return t;
      }
    }, {
      key: "forceYAxisUpdate",
      value: function (t) {
        return t.chart && t.chart.stacked && "100%" === t.chart.stackType && (Array.isArray(t.yaxis) ? t.yaxis.forEach(function (e, i) {
          t.yaxis[i].min = 0, t.yaxis[i].max = 100;
        }) : (t.yaxis.min = 0, t.yaxis.max = 100)), t;
      }
    }, {
      key: "revertDefaultAxisMinMax",
      value: function (t) {
        var e = this,
          i = this.w,
          a = i.globals.lastXAxis,
          s = i.globals.lastYAxis;
        t && t.xaxis && (a = t.xaxis), t && t.yaxis && (s = t.yaxis), i.config.xaxis.min = a.min, i.config.xaxis.max = a.max;
        var r = function (t) {
          void 0 !== s[t] && (i.config.yaxis[t].min = s[t].min, i.config.yaxis[t].max = s[t].max);
        };
        i.config.yaxis.map(function (t, a) {
          i.globals.zoomed || void 0 !== s[a] ? r(a) : void 0 !== e.ctx.opts.yaxis[a] && (t.min = e.ctx.opts.yaxis[a].min, t.max = e.ctx.opts.yaxis[a].max);
        });
      }
    }]), t;
  }();
zt = "undefined" != typeof window ? window : void 0, Et = function (t, e) {
  var a = (void 0 !== this ? this : t).SVG = function (t) {
    if (a.supported) return t = new a.Doc(t), a.parser.draw || a.prepare(), t;
  };
  if (a.ns = "http://www.w3.org/2000/svg", a.xmlns = "http://www.w3.org/2000/xmlns/", a.xlink = "http://www.w3.org/1999/xlink", a.svgjs = "http://svgjs.dev", a.supported = !0, !a.supported) return !1;
  a.did = 1e3, a.eid = function (t) {
    return "Svgjs" + d(t) + a.did++;
  }, a.create = function (t) {
    var i = e.createElementNS(this.ns, t);
    return i.setAttribute("id", this.eid(t)), i;
  }, a.extend = function () {
    var t, e;
    e = (t = [].slice.call(arguments)).pop();
    for (var i = t.length - 1; i >= 0; i--) if (t[i]) for (var s in e) t[i].prototype[s] = e[s];
    a.Set && a.Set.inherit && a.Set.inherit();
  }, a.invent = function (t) {
    var e = "function" == typeof t.create ? t.create : function () {
      this.constructor.call(this, a.create(t.create));
    };
    return t.inherit && (e.prototype = new t.inherit()), t.extend && a.extend(e, t.extend), t.construct && a.extend(t.parent || a.Container, t.construct), e;
  }, a.adopt = function (e) {
    return e ? e.instance ? e.instance : ((i = "svg" == e.nodeName ? e.parentNode instanceof t.SVGElement ? new a.Nested() : new a.Doc() : "linearGradient" == e.nodeName ? new a.Gradient("linear") : "radialGradient" == e.nodeName ? new a.Gradient("radial") : a[d(e.nodeName)] ? new a[d(e.nodeName)]() : new a.Element(e)).type = e.nodeName, i.node = e, e.instance = i, i instanceof a.Doc && i.namespace().defs(), i.setData(JSON.parse(e.getAttribute("svgjs:data")) || {}), i) : null;
    var i;
  }, a.prepare = function () {
    var t = e.getElementsByTagName("body")[0],
      i = (t ? new a.Doc(t) : a.adopt(e.documentElement).nested()).size(2, 0);
    a.parser = {
      body: t || e.documentElement,
      draw: i.style("opacity:0;position:absolute;left:-100%;top:-100%;overflow:hidden").node,
      poly: i.polyline().node,
      path: i.path().node,
      native: a.create("svg")
    };
  }, a.parser = {
    native: a.create("svg")
  }, e.addEventListener("DOMContentLoaded", function () {
    a.parser.draw || a.prepare();
  }, !1), a.regex = {
    numberAndUnit: /^([+-]?(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?)([a-z%]*)$/i,
    hex: /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i,
    rgb: /rgb\((\d+),(\d+),(\d+)\)/,
    reference: /#([a-z0-9\-_]+)/i,
    transforms: /\)\s*,?\s*/,
    whitespace: /\s/g,
    isHex: /^#[a-f0-9]{3,6}$/i,
    isRgb: /^rgb\(/,
    isCss: /[^:]+:[^;]+;?/,
    isBlank: /^(\s+)?$/,
    isNumber: /^[+-]?(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i,
    isPercent: /^-?[\d\.]+%$/,
    isImage: /\.(jpg|jpeg|png|gif|svg)(\?[^=]+.*)?/i,
    delimiter: /[\s,]+/,
    hyphen: /([^e])\-/gi,
    pathLetters: /[MLHVCSQTAZ]/gi,
    isPathLetter: /[MLHVCSQTAZ]/i,
    numbersWithDots: /((\d?\.\d+(?:e[+-]?\d+)?)((?:\.\d+(?:e[+-]?\d+)?)+))+/gi,
    dots: /\./g
  }, a.utils = {
    map: function (t, e) {
      for (var i = t.length, a = [], s = 0; s < i; s++) a.push(e(t[s]));
      return a;
    },
    filter: function (t, e) {
      for (var i = t.length, a = [], s = 0; s < i; s++) e(t[s]) && a.push(t[s]);
      return a;
    },
    filterSVGElements: function (e) {
      return this.filter(e, function (e) {
        return e instanceof t.SVGElement;
      });
    }
  }, a.defaults = {
    attrs: {
      "fill-opacity": 1,
      "stroke-opacity": 1,
      "stroke-width": 0,
      "stroke-linejoin": "miter",
      "stroke-linecap": "butt",
      fill: "#000000",
      stroke: "#000000",
      opacity: 1,
      x: 0,
      y: 0,
      cx: 0,
      cy: 0,
      width: 0,
      height: 0,
      r: 0,
      rx: 0,
      ry: 0,
      offset: 0,
      "stop-opacity": 1,
      "stop-color": "#000000",
      "font-size": 16,
      "font-family": "Helvetica, Arial, sans-serif",
      "text-anchor": "start"
    }
  }, a.Color = function (t) {
    var e, s;
    this.r = 0, this.g = 0, this.b = 0, t && ("string" == typeof t ? a.regex.isRgb.test(t) ? (e = a.regex.rgb.exec(t.replace(a.regex.whitespace, "")), this.r = parseInt(e[1]), this.g = parseInt(e[2]), this.b = parseInt(e[3])) : a.regex.isHex.test(t) && (e = a.regex.hex.exec(4 == (s = t).length ? ["#", s.substring(1, 2), s.substring(1, 2), s.substring(2, 3), s.substring(2, 3), s.substring(3, 4), s.substring(3, 4)].join("") : s), this.r = parseInt(e[1], 16), this.g = parseInt(e[2], 16), this.b = parseInt(e[3], 16)) : "object" === i(t) && (this.r = t.r, this.g = t.g, this.b = t.b));
  }, a.extend(a.Color, {
    toString: function () {
      return this.toHex();
    },
    toHex: function () {
      return "#" + g(this.r) + g(this.g) + g(this.b);
    },
    toRgb: function () {
      return "rgb(" + [this.r, this.g, this.b].join() + ")";
    },
    brightness: function () {
      return this.r / 255 * .3 + this.g / 255 * .59 + this.b / 255 * .11;
    },
    morph: function (t) {
      return this.destination = new a.Color(t), this;
    },
    at: function (t) {
      return this.destination ? (t = t < 0 ? 0 : t > 1 ? 1 : t, new a.Color({
        r: ~~(this.r + (this.destination.r - this.r) * t),
        g: ~~(this.g + (this.destination.g - this.g) * t),
        b: ~~(this.b + (this.destination.b - this.b) * t)
      })) : this;
    }
  }), a.Color.test = function (t) {
    return t += "", a.regex.isHex.test(t) || a.regex.isRgb.test(t);
  }, a.Color.isRgb = function (t) {
    return t && "number" == typeof t.r && "number" == typeof t.g && "number" == typeof t.b;
  }, a.Color.isColor = function (t) {
    return a.Color.isRgb(t) || a.Color.test(t);
  }, a.Array = function (t, e) {
    0 == (t = (t || []).valueOf()).length && e && (t = e.valueOf()), this.value = this.parse(t);
  }, a.extend(a.Array, {
    toString: function () {
      return this.value.join(" ");
    },
    valueOf: function () {
      return this.value;
    },
    parse: function (t) {
      return t = t.valueOf(), Array.isArray(t) ? t : this.split(t);
    }
  }), a.PointArray = function (t, e) {
    a.Array.call(this, t, e || [[0, 0]]);
  }, a.PointArray.prototype = new a.Array(), a.PointArray.prototype.constructor = a.PointArray;
  for (var s = {
      M: function (t, e, i) {
        return e.x = i.x = t[0], e.y = i.y = t[1], ["M", e.x, e.y];
      },
      L: function (t, e) {
        return e.x = t[0], e.y = t[1], ["L", t[0], t[1]];
      },
      H: function (t, e) {
        return e.x = t[0], ["H", t[0]];
      },
      V: function (t, e) {
        return e.y = t[0], ["V", t[0]];
      },
      C: function (t, e) {
        return e.x = t[4], e.y = t[5], ["C", t[0], t[1], t[2], t[3], t[4], t[5]];
      },
      Q: function (t, e) {
        return e.x = t[2], e.y = t[3], ["Q", t[0], t[1], t[2], t[3]];
      },
      Z: function (t, e, i) {
        return e.x = i.x, e.y = i.y, ["Z"];
      }
    }, r = "mlhvqtcsaz".split(""), o = 0, n = r.length; o < n; ++o) s[r[o]] = function (t) {
    return function (e, i, a) {
      if ("H" == t) e[0] = e[0] + i.x;else if ("V" == t) e[0] = e[0] + i.y;else if ("A" == t) e[5] = e[5] + i.x, e[6] = e[6] + i.y;else for (var r = 0, o = e.length; r < o; ++r) e[r] = e[r] + (r % 2 ? i.y : i.x);
      if (s && "function" == typeof s[t]) return s[t](e, i, a);
    };
  }(r[o].toUpperCase());
  a.PathArray = function (t, e) {
    a.Array.call(this, t, e || [["M", 0, 0]]);
  }, a.PathArray.prototype = new a.Array(), a.PathArray.prototype.constructor = a.PathArray, a.extend(a.PathArray, {
    toString: function () {
      return function (t) {
        for (var e = 0, i = t.length, a = ""; e < i; e++) a += t[e][0], null != t[e][1] && (a += t[e][1], null != t[e][2] && (a += " ", a += t[e][2], null != t[e][3] && (a += " ", a += t[e][3], a += " ", a += t[e][4], null != t[e][5] && (a += " ", a += t[e][5], a += " ", a += t[e][6], null != t[e][7] && (a += " ", a += t[e][7])))));
        return a + " ";
      }(this.value);
    },
    move: function (t, e) {
      var i = this.bbox();
      return i.x, i.y, this;
    },
    at: function (t) {
      if (!this.destination) return this;
      for (var e = this.value, i = this.destination.value, s = [], r = new a.PathArray(), o = 0, n = e.length; o < n; o++) {
        s[o] = [e[o][0]];
        for (var l = 1, h = e[o].length; l < h; l++) s[o][l] = e[o][l] + (i[o][l] - e[o][l]) * t;
        "A" === s[o][0] && (s[o][4] = +(0 != s[o][4]), s[o][5] = +(0 != s[o][5]));
      }
      return r.value = s, r;
    },
    parse: function (t) {
      if (t instanceof a.PathArray) return t.valueOf();
      var e,
        i = {
          M: 2,
          L: 2,
          H: 1,
          V: 1,
          C: 6,
          S: 4,
          Q: 4,
          T: 2,
          A: 7,
          Z: 0
        };
      t = "string" == typeof t ? t.replace(a.regex.numbersWithDots, h).replace(a.regex.pathLetters, " $& ").replace(a.regex.hyphen, "$1 -").trim().split(a.regex.delimiter) : t.reduce(function (t, e) {
        return [].concat.call(t, e);
      }, []);
      var r = [],
        o = new a.Point(),
        n = new a.Point(),
        l = 0,
        c = t.length;
      do {
        a.regex.isPathLetter.test(t[l]) ? (e = t[l], ++l) : "M" == e ? e = "L" : "m" == e && (e = "l"), r.push(s[e].call(null, t.slice(l, l += i[e.toUpperCase()]).map(parseFloat), o, n));
      } while (c > l);
      return r;
    },
    bbox: function () {
      return a.parser.draw || a.prepare(), a.parser.path.setAttribute("d", this.toString()), a.parser.path.getBBox();
    }
  }), a.Number = a.invent({
    create: function (t, e) {
      this.value = 0, this.unit = e || "", "number" == typeof t ? this.value = isNaN(t) ? 0 : isFinite(t) ? t : t < 0 ? -34e37 : 34e37 : "string" == typeof t ? (e = t.match(a.regex.numberAndUnit)) && (this.value = parseFloat(e[1]), "%" == e[5] ? this.value /= 100 : "s" == e[5] && (this.value *= 1e3), this.unit = e[5]) : t instanceof a.Number && (this.value = t.valueOf(), this.unit = t.unit);
    },
    extend: {
      toString: function () {
        return ("%" == this.unit ? ~~(1e8 * this.value) / 1e6 : "s" == this.unit ? this.value / 1e3 : this.value) + this.unit;
      },
      toJSON: function () {
        return this.toString();
      },
      valueOf: function () {
        return this.value;
      },
      plus: function (t) {
        return t = new a.Number(t), new a.Number(this + t, this.unit || t.unit);
      },
      minus: function (t) {
        return t = new a.Number(t), new a.Number(this - t, this.unit || t.unit);
      },
      times: function (t) {
        return t = new a.Number(t), new a.Number(this * t, this.unit || t.unit);
      },
      divide: function (t) {
        return t = new a.Number(t), new a.Number(this / t, this.unit || t.unit);
      },
      to: function (t) {
        var e = new a.Number(this);
        return "string" == typeof t && (e.unit = t), e;
      },
      morph: function (t) {
        return this.destination = new a.Number(t), t.relative && (this.destination.value += this.value), this;
      },
      at: function (t) {
        return this.destination ? new a.Number(this.destination).minus(this).times(t).plus(this) : this;
      }
    }
  }), a.Element = a.invent({
    create: function (t) {
      this._stroke = a.defaults.attrs.stroke, this._event = null, this.dom = {}, (this.node = t) && (this.type = t.nodeName, this.node.instance = this, this._stroke = t.getAttribute("stroke") || this._stroke);
    },
    extend: {
      x: function (t) {
        return this.attr("x", t);
      },
      y: function (t) {
        return this.attr("y", t);
      },
      cx: function (t) {
        return null == t ? this.x() + this.width() / 2 : this.x(t - this.width() / 2);
      },
      cy: function (t) {
        return null == t ? this.y() + this.height() / 2 : this.y(t - this.height() / 2);
      },
      move: function (t, e) {
        return this.x(t).y(e);
      },
      center: function (t, e) {
        return this.cx(t).cy(e);
      },
      width: function (t) {
        return this.attr("width", t);
      },
      height: function (t) {
        return this.attr("height", t);
      },
      size: function (t, e) {
        var i = u(this, t, e);
        return this.width(new a.Number(i.width)).height(new a.Number(i.height));
      },
      clone: function (t) {
        this.writeDataToDom();
        var e = x(this.node.cloneNode(!0));
        return t ? t.add(e) : this.after(e), e;
      },
      remove: function () {
        return this.parent() && this.parent().removeElement(this), this;
      },
      replace: function (t) {
        return this.after(t).remove(), t;
      },
      addTo: function (t) {
        return t.put(this);
      },
      putIn: function (t) {
        return t.add(this);
      },
      id: function (t) {
        return this.attr("id", t);
      },
      show: function () {
        return this.style("display", "");
      },
      hide: function () {
        return this.style("display", "none");
      },
      visible: function () {
        return "none" != this.style("display");
      },
      toString: function () {
        return this.attr("id");
      },
      classes: function () {
        var t = this.attr("class");
        return null == t ? [] : t.trim().split(a.regex.delimiter);
      },
      hasClass: function (t) {
        return -1 != this.classes().indexOf(t);
      },
      addClass: function (t) {
        if (!this.hasClass(t)) {
          var e = this.classes();
          e.push(t), this.attr("class", e.join(" "));
        }
        return this;
      },
      removeClass: function (t) {
        return this.hasClass(t) && this.attr("class", this.classes().filter(function (e) {
          return e != t;
        }).join(" ")), this;
      },
      toggleClass: function (t) {
        return this.hasClass(t) ? this.removeClass(t) : this.addClass(t);
      },
      reference: function (t) {
        return a.get(this.attr(t));
      },
      parent: function (e) {
        var i = this;
        if (!i.node.parentNode) return null;
        if (i = a.adopt(i.node.parentNode), !e) return i;
        for (; i && i.node instanceof t.SVGElement;) {
          if ("string" == typeof e ? i.matches(e) : i instanceof e) return i;
          if (!i.node.parentNode || "#document" == i.node.parentNode.nodeName) return null;
          i = a.adopt(i.node.parentNode);
        }
      },
      doc: function () {
        return this instanceof a.Doc ? this : this.parent(a.Doc);
      },
      parents: function (t) {
        var e = [],
          i = this;
        do {
          if (!(i = i.parent(t)) || !i.node) break;
          e.push(i);
        } while (i.parent);
        return e;
      },
      matches: function (t) {
        return function (t, e) {
          return (t.matches || t.matchesSelector || t.msMatchesSelector || t.mozMatchesSelector || t.webkitMatchesSelector || t.oMatchesSelector).call(t, e);
        }(this.node, t);
      },
      native: function () {
        return this.node;
      },
      svg: function (t) {
        var i = e.createElement("svg");
        if (!(t && this instanceof a.Parent)) return i.appendChild(t = e.createElement("svg")), this.writeDataToDom(), t.appendChild(this.node.cloneNode(!0)), i.innerHTML.replace(/^<svg>/, "").replace(/<\/svg>$/, "");
        i.innerHTML = "<svg>" + t.replace(/\n/, "").replace(/<([\w:-]+)([^<]+?)\/>/g, "<$1$2></$1>") + "</svg>";
        for (var s = 0, r = i.firstChild.childNodes.length; s < r; s++) this.node.appendChild(i.firstChild.firstChild);
        return this;
      },
      writeDataToDom: function () {
        return (this.each || this.lines) && (this.each ? this : this.lines()).each(function () {
          this.writeDataToDom();
        }), this.node.removeAttribute("svgjs:data"), Object.keys(this.dom).length && this.node.setAttribute("svgjs:data", JSON.stringify(this.dom)), this;
      },
      setData: function (t) {
        return this.dom = t, this;
      },
      is: function (t) {
        return function (t, e) {
          return t instanceof e;
        }(this, t);
      }
    }
  }), a.easing = {
    "-": function (t) {
      return t;
    },
    "<>": function (t) {
      return -Math.cos(t * Math.PI) / 2 + .5;
    },
    ">": function (t) {
      return Math.sin(t * Math.PI / 2);
    },
    "<": function (t) {
      return 1 - Math.cos(t * Math.PI / 2);
    }
  }, a.morph = function (t) {
    return function (e, i) {
      return new a.MorphObj(e, i).at(t);
    };
  }, a.Situation = a.invent({
    create: function (t) {
      this.init = !1, this.reversed = !1, this.reversing = !1, this.duration = new a.Number(t.duration).valueOf(), this.delay = new a.Number(t.delay).valueOf(), this.start = +new Date() + this.delay, this.finish = this.start + this.duration, this.ease = t.ease, this.loop = 0, this.loops = !1, this.animations = {}, this.attrs = {}, this.styles = {}, this.transforms = [], this.once = {};
    }
  }), a.FX = a.invent({
    create: function (t) {
      this._target = t, this.situations = [], this.active = !1, this.situation = null, this.paused = !1, this.lastPos = 0, this.pos = 0, this.absPos = 0, this._speed = 1;
    },
    extend: {
      animate: function (t, e, s) {
        "object" === i(t) && (e = t.ease, s = t.delay, t = t.duration);
        var r = new a.Situation({
          duration: t || 1e3,
          delay: s || 0,
          ease: a.easing[e || "-"] || e
        });
        return this.queue(r), this;
      },
      target: function (t) {
        return t && t instanceof a.Element ? (this._target = t, this) : this._target;
      },
      timeToAbsPos: function (t) {
        return (t - this.situation.start) / (this.situation.duration / this._speed);
      },
      absPosToTime: function (t) {
        return this.situation.duration / this._speed * t + this.situation.start;
      },
      startAnimFrame: function () {
        this.stopAnimFrame(), this.animationFrame = t.requestAnimationFrame(function () {
          this.step();
        }.bind(this));
      },
      stopAnimFrame: function () {
        t.cancelAnimationFrame(this.animationFrame);
      },
      start: function () {
        return !this.active && this.situation && (this.active = !0, this.startCurrent()), this;
      },
      startCurrent: function () {
        return this.situation.start = +new Date() + this.situation.delay / this._speed, this.situation.finish = this.situation.start + this.situation.duration / this._speed, this.initAnimations().step();
      },
      queue: function (t) {
        return ("function" == typeof t || t instanceof a.Situation) && this.situations.push(t), this.situation || (this.situation = this.situations.shift()), this;
      },
      dequeue: function () {
        return this.stop(), this.situation = this.situations.shift(), this.situation && (this.situation instanceof a.Situation ? this.start() : this.situation.call(this)), this;
      },
      initAnimations: function () {
        var t,
          e = this.situation;
        if (e.init) return this;
        for (var i in e.animations) {
          t = this.target()[i](), Array.isArray(t) || (t = [t]), Array.isArray(e.animations[i]) || (e.animations[i] = [e.animations[i]]);
          for (var s = t.length; s--;) e.animations[i][s] instanceof a.Number && (t[s] = new a.Number(t[s])), e.animations[i][s] = t[s].morph(e.animations[i][s]);
        }
        for (var i in e.attrs) e.attrs[i] = new a.MorphObj(this.target().attr(i), e.attrs[i]);
        for (var i in e.styles) e.styles[i] = new a.MorphObj(this.target().style(i), e.styles[i]);
        return e.initialTransformation = this.target().matrixify(), e.init = !0, this;
      },
      clearQueue: function () {
        return this.situations = [], this;
      },
      clearCurrent: function () {
        return this.situation = null, this;
      },
      stop: function (t, e) {
        var i = this.active;
        return this.active = !1, e && this.clearQueue(), t && this.situation && (!i && this.startCurrent(), this.atEnd()), this.stopAnimFrame(), this.clearCurrent();
      },
      after: function (t) {
        var e = this.last();
        return this.target().on("finished.fx", function i(a) {
          a.detail.situation == e && (t.call(this, e), this.off("finished.fx", i));
        }), this._callStart();
      },
      during: function (t) {
        var e = this.last(),
          i = function (i) {
            i.detail.situation == e && t.call(this, i.detail.pos, a.morph(i.detail.pos), i.detail.eased, e);
          };
        return this.target().off("during.fx", i).on("during.fx", i), this.after(function () {
          this.off("during.fx", i);
        }), this._callStart();
      },
      afterAll: function (t) {
        var e = function e(i) {
          t.call(this), this.off("allfinished.fx", e);
        };
        return this.target().off("allfinished.fx", e).on("allfinished.fx", e), this._callStart();
      },
      last: function () {
        return this.situations.length ? this.situations[this.situations.length - 1] : this.situation;
      },
      add: function (t, e, i) {
        return this.last()[i || "animations"][t] = e, this._callStart();
      },
      step: function (t) {
        var e, i, a;
        t || (this.absPos = this.timeToAbsPos(+new Date())), !1 !== this.situation.loops ? (e = Math.max(this.absPos, 0), i = Math.floor(e), !0 === this.situation.loops || i < this.situation.loops ? (this.pos = e - i, a = this.situation.loop, this.situation.loop = i) : (this.absPos = this.situation.loops, this.pos = 1, a = this.situation.loop - 1, this.situation.loop = this.situation.loops), this.situation.reversing && (this.situation.reversed = this.situation.reversed != Boolean((this.situation.loop - a) % 2))) : (this.absPos = Math.min(this.absPos, 1), this.pos = this.absPos), this.pos < 0 && (this.pos = 0), this.situation.reversed && (this.pos = 1 - this.pos);
        var s = this.situation.ease(this.pos);
        for (var r in this.situation.once) r > this.lastPos && r <= s && (this.situation.once[r].call(this.target(), this.pos, s), delete this.situation.once[r]);
        return this.active && this.target().fire("during", {
          pos: this.pos,
          eased: s,
          fx: this,
          situation: this.situation
        }), this.situation ? (this.eachAt(), 1 == this.pos && !this.situation.reversed || this.situation.reversed && 0 == this.pos ? (this.stopAnimFrame(), this.target().fire("finished", {
          fx: this,
          situation: this.situation
        }), this.situations.length || (this.target().fire("allfinished"), this.situations.length || (this.target().off(".fx"), this.active = !1)), this.active ? this.dequeue() : this.clearCurrent()) : !this.paused && this.active && this.startAnimFrame(), this.lastPos = s, this) : this;
      },
      eachAt: function () {
        var t,
          e = this,
          i = this.target(),
          s = this.situation;
        for (var r in s.animations) t = [].concat(s.animations[r]).map(function (t) {
          return "string" != typeof t && t.at ? t.at(s.ease(e.pos), e.pos) : t;
        }), i[r].apply(i, t);
        for (var r in s.attrs) t = [r].concat(s.attrs[r]).map(function (t) {
          return "string" != typeof t && t.at ? t.at(s.ease(e.pos), e.pos) : t;
        }), i.attr.apply(i, t);
        for (var r in s.styles) t = [r].concat(s.styles[r]).map(function (t) {
          return "string" != typeof t && t.at ? t.at(s.ease(e.pos), e.pos) : t;
        }), i.style.apply(i, t);
        if (s.transforms.length) {
          t = s.initialTransformation, r = 0;
          for (var o = s.transforms.length; r < o; r++) {
            var n = s.transforms[r];
            n instanceof a.Matrix ? t = n.relative ? t.multiply(new a.Matrix().morph(n).at(s.ease(this.pos))) : t.morph(n).at(s.ease(this.pos)) : (n.relative || n.undo(t.extract()), t = t.multiply(n.at(s.ease(this.pos))));
          }
          i.matrix(t);
        }
        return this;
      },
      once: function (t, e, i) {
        var a = this.last();
        return i || (t = a.ease(t)), a.once[t] = e, this;
      },
      _callStart: function () {
        return setTimeout(function () {
          this.start();
        }.bind(this), 0), this;
      }
    },
    parent: a.Element,
    construct: {
      animate: function (t, e, i) {
        return (this.fx || (this.fx = new a.FX(this))).animate(t, e, i);
      },
      delay: function (t) {
        return (this.fx || (this.fx = new a.FX(this))).delay(t);
      },
      stop: function (t, e) {
        return this.fx && this.fx.stop(t, e), this;
      },
      finish: function () {
        return this.fx && this.fx.finish(), this;
      }
    }
  }), a.MorphObj = a.invent({
    create: function (t, e) {
      return a.Color.isColor(e) ? new a.Color(t).morph(e) : a.regex.delimiter.test(t) ? a.regex.pathLetters.test(t) ? new a.PathArray(t).morph(e) : new a.Array(t).morph(e) : a.regex.numberAndUnit.test(e) ? new a.Number(t).morph(e) : (this.value = t, void (this.destination = e));
    },
    extend: {
      at: function (t, e) {
        return e < 1 ? this.value : this.destination;
      },
      valueOf: function () {
        return this.value;
      }
    }
  }), a.extend(a.FX, {
    attr: function (t, e, a) {
      if ("object" === i(t)) for (var s in t) this.attr(s, t[s]);else this.add(t, e, "attrs");
      return this;
    },
    plot: function (t, e, i, a) {
      return 4 == arguments.length ? this.plot([t, e, i, a]) : this.add("plot", new (this.target().morphArray)(t));
    }
  }), a.Box = a.invent({
    create: function (t, e, s, r) {
      if (!("object" !== i(t) || t instanceof a.Element)) return a.Box.call(this, null != t.left ? t.left : t.x, null != t.top ? t.top : t.y, t.width, t.height);
      var o;
      4 == arguments.length && (this.x = t, this.y = e, this.width = s, this.height = r), null == (o = this).x && (o.x = 0, o.y = 0, o.width = 0, o.height = 0), o.w = o.width, o.h = o.height, o.x2 = o.x + o.width, o.y2 = o.y + o.height, o.cx = o.x + o.width / 2, o.cy = o.y + o.height / 2;
    }
  }), a.BBox = a.invent({
    create: function (t) {
      if (a.Box.apply(this, [].slice.call(arguments)), t instanceof a.Element) {
        var i;
        try {
          if (!e.documentElement.contains) {
            for (var s = t.node; s.parentNode;) s = s.parentNode;
            if (s != e) throw new Error("Element not in the dom");
          }
          i = t.node.getBBox();
        } catch (e) {
          if (t instanceof a.Shape) {
            a.parser.draw || a.prepare();
            var r = t.clone(a.parser.draw.instance).show();
            r && r.node && "function" == typeof r.node.getBBox && (i = r.node.getBBox()), r && "function" == typeof r.remove && r.remove();
          } else i = {
            x: t.node.clientLeft,
            y: t.node.clientTop,
            width: t.node.clientWidth,
            height: t.node.clientHeight
          };
        }
        a.Box.call(this, i);
      }
    },
    inherit: a.Box,
    parent: a.Element,
    construct: {
      bbox: function () {
        return new a.BBox(this);
      }
    }
  }), a.BBox.prototype.constructor = a.BBox, a.Matrix = a.invent({
    create: function (t) {
      var e = f([1, 0, 0, 1, 0, 0]);
      t = null === t ? e : t instanceof a.Element ? t.matrixify() : "string" == typeof t ? f(t.split(a.regex.delimiter).map(parseFloat)) : 6 == arguments.length ? f([].slice.call(arguments)) : Array.isArray(t) ? f(t) : t && "object" === i(t) ? t : e;
      for (var s = v.length - 1; s >= 0; --s) this[v[s]] = null != t[v[s]] ? t[v[s]] : e[v[s]];
    },
    extend: {
      extract: function () {
        var t = p(this, 0, 1);
        p(this, 1, 0);
        var e = 180 / Math.PI * Math.atan2(t.y, t.x) - 90;
        return {
          x: this.e,
          y: this.f,
          transformedX: (this.e * Math.cos(e * Math.PI / 180) + this.f * Math.sin(e * Math.PI / 180)) / Math.sqrt(this.a * this.a + this.b * this.b),
          transformedY: (this.f * Math.cos(e * Math.PI / 180) + this.e * Math.sin(-e * Math.PI / 180)) / Math.sqrt(this.c * this.c + this.d * this.d),
          rotation: e,
          a: this.a,
          b: this.b,
          c: this.c,
          d: this.d,
          e: this.e,
          f: this.f,
          matrix: new a.Matrix(this)
        };
      },
      clone: function () {
        return new a.Matrix(this);
      },
      morph: function (t) {
        return this.destination = new a.Matrix(t), this;
      },
      multiply: function (t) {
        return new a.Matrix(this.native().multiply(function (t) {
          return t instanceof a.Matrix || (t = new a.Matrix(t)), t;
        }(t).native()));
      },
      inverse: function () {
        return new a.Matrix(this.native().inverse());
      },
      translate: function (t, e) {
        return new a.Matrix(this.native().translate(t || 0, e || 0));
      },
      native: function () {
        for (var t = a.parser.native.createSVGMatrix(), e = v.length - 1; e >= 0; e--) t[v[e]] = this[v[e]];
        return t;
      },
      toString: function () {
        return "matrix(" + b(this.a) + "," + b(this.b) + "," + b(this.c) + "," + b(this.d) + "," + b(this.e) + "," + b(this.f) + ")";
      }
    },
    parent: a.Element,
    construct: {
      ctm: function () {
        return new a.Matrix(this.node.getCTM());
      },
      screenCTM: function () {
        if (this instanceof a.Nested) {
          var t = this.rect(1, 1),
            e = t.node.getScreenCTM();
          return t.remove(), new a.Matrix(e);
        }
        return new a.Matrix(this.node.getScreenCTM());
      }
    }
  }), a.Point = a.invent({
    create: function (t, e) {
      var a;
      a = Array.isArray(t) ? {
        x: t[0],
        y: t[1]
      } : "object" === i(t) ? {
        x: t.x,
        y: t.y
      } : null != t ? {
        x: t,
        y: null != e ? e : t
      } : {
        x: 0,
        y: 0
      }, this.x = a.x, this.y = a.y;
    },
    extend: {
      clone: function () {
        return new a.Point(this);
      },
      morph: function (t, e) {
        return this.destination = new a.Point(t, e), this;
      }
    }
  }), a.extend(a.Element, {
    point: function (t, e) {
      return new a.Point(t, e).transform(this.screenCTM().inverse());
    }
  }), a.extend(a.Element, {
    attr: function (t, e, s) {
      if (null == t) {
        for (t = {}, s = (e = this.node.attributes).length - 1; s >= 0; s--) t[e[s].nodeName] = a.regex.isNumber.test(e[s].nodeValue) ? parseFloat(e[s].nodeValue) : e[s].nodeValue;
        return t;
      }
      if ("object" === i(t)) for (var r in t) this.attr(r, t[r]);else if (null === e) this.node.removeAttribute(t);else {
        if (null == e) return null == (e = this.node.getAttribute(t)) ? a.defaults.attrs[t] : a.regex.isNumber.test(e) ? parseFloat(e) : e;
        "stroke-width" == t ? this.attr("stroke", parseFloat(e) > 0 ? this._stroke : null) : "stroke" == t && (this._stroke = e), "fill" != t && "stroke" != t || (a.regex.isImage.test(e) && (e = this.doc().defs().image(e, 0, 0)), e instanceof a.Image && (e = this.doc().defs().pattern(0, 0, function () {
          this.add(e);
        }))), "number" == typeof e ? e = new a.Number(e) : a.Color.isColor(e) ? e = new a.Color(e) : Array.isArray(e) && (e = new a.Array(e)), "leading" == t ? this.leading && this.leading(e) : "string" == typeof s ? this.node.setAttributeNS(s, t, e.toString()) : this.node.setAttribute(t, e.toString()), !this.rebuild || "font-size" != t && "x" != t || this.rebuild(t, e);
      }
      return this;
    }
  }), a.extend(a.Element, {
    transform: function (t, e) {
      var s;
      return "object" !== i(t) ? (s = new a.Matrix(this).extract(), "string" == typeof t ? s[t] : s) : (s = new a.Matrix(this), e = !!e || !!t.relative, null != t.a && (s = e ? s.multiply(new a.Matrix(t)) : new a.Matrix(t)), this.attr("transform", s));
    }
  }), a.extend(a.Element, {
    untransform: function () {
      return this.attr("transform", null);
    },
    matrixify: function () {
      return (this.attr("transform") || "").split(a.regex.transforms).slice(0, -1).map(function (t) {
        var e = t.trim().split("(");
        return [e[0], e[1].split(a.regex.delimiter).map(function (t) {
          return parseFloat(t);
        })];
      }).reduce(function (t, e) {
        return "matrix" == e[0] ? t.multiply(f(e[1])) : t[e[0]].apply(t, e[1]);
      }, new a.Matrix());
    },
    toParent: function (t) {
      if (this == t) return this;
      var e = this.screenCTM(),
        i = t.screenCTM().inverse();
      return this.addTo(t).untransform().transform(i.multiply(e)), this;
    },
    toDoc: function () {
      return this.toParent(this.doc());
    }
  }), a.Transformation = a.invent({
    create: function (t, e) {
      if (arguments.length > 1 && "boolean" != typeof e) return this.constructor.call(this, [].slice.call(arguments));
      if (Array.isArray(t)) for (var a = 0, s = this.arguments.length; a < s; ++a) this[this.arguments[a]] = t[a];else if (t && "object" === i(t)) for (a = 0, s = this.arguments.length; a < s; ++a) this[this.arguments[a]] = t[this.arguments[a]];
      this.inversed = !1, !0 === e && (this.inversed = !0);
    }
  }), a.Translate = a.invent({
    parent: a.Matrix,
    inherit: a.Transformation,
    create: function (t, e) {
      this.constructor.apply(this, [].slice.call(arguments));
    },
    extend: {
      arguments: ["transformedX", "transformedY"],
      method: "translate"
    }
  }), a.extend(a.Element, {
    style: function (t, e) {
      if (0 == arguments.length) return this.node.style.cssText || "";
      if (arguments.length < 2) {
        if ("object" === i(t)) for (var s in t) this.style(s, t[s]);else {
          if (!a.regex.isCss.test(t)) return this.node.style[c(t)];
          for (t = t.split(/\s*;\s*/).filter(function (t) {
            return !!t;
          }).map(function (t) {
            return t.split(/\s*:\s*/);
          }); e = t.pop();) this.style(e[0], e[1]);
        }
      } else this.node.style[c(t)] = null === e || a.regex.isBlank.test(e) ? "" : e;
      return this;
    }
  }), a.Parent = a.invent({
    create: function (t) {
      this.constructor.call(this, t);
    },
    inherit: a.Element,
    extend: {
      children: function () {
        return a.utils.map(a.utils.filterSVGElements(this.node.childNodes), function (t) {
          return a.adopt(t);
        });
      },
      add: function (t, e) {
        return null == e ? this.node.appendChild(t.node) : t.node != this.node.childNodes[e] && this.node.insertBefore(t.node, this.node.childNodes[e]), this;
      },
      put: function (t, e) {
        return this.add(t, e), t;
      },
      has: function (t) {
        return this.index(t) >= 0;
      },
      index: function (t) {
        return [].slice.call(this.node.childNodes).indexOf(t.node);
      },
      get: function (t) {
        return a.adopt(this.node.childNodes[t]);
      },
      first: function () {
        return this.get(0);
      },
      last: function () {
        return this.get(this.node.childNodes.length - 1);
      },
      each: function (t, e) {
        for (var i = this.children(), s = 0, r = i.length; s < r; s++) i[s] instanceof a.Element && t.apply(i[s], [s, i]), e && i[s] instanceof a.Container && i[s].each(t, e);
        return this;
      },
      removeElement: function (t) {
        return this.node.removeChild(t.node), this;
      },
      clear: function () {
        for (; this.node.hasChildNodes();) this.node.removeChild(this.node.lastChild);
        return delete this._defs, this;
      },
      defs: function () {
        return this.doc().defs();
      }
    }
  }), a.extend(a.Parent, {
    ungroup: function (t, e) {
      return 0 === e || this instanceof a.Defs || this.node == a.parser.draw || (t = t || (this instanceof a.Doc ? this : this.parent(a.Parent)), e = e || 1 / 0, this.each(function () {
        return this instanceof a.Defs ? this : this instanceof a.Parent ? this.ungroup(t, e - 1) : this.toParent(t);
      }), this.node.firstChild || this.remove()), this;
    },
    flatten: function (t, e) {
      return this.ungroup(t, e);
    }
  }), a.Container = a.invent({
    create: function (t) {
      this.constructor.call(this, t);
    },
    inherit: a.Parent
  }), a.ViewBox = a.invent({
    parent: a.Container,
    construct: {}
  }), ["click", "dblclick", "mousedown", "mouseup", "mouseover", "mouseout", "mousemove", "touchstart", "touchmove", "touchleave", "touchend", "touchcancel"].forEach(function (t) {
    a.Element.prototype[t] = function (e) {
      return a.on(this.node, t, e), this;
    };
  }), a.listeners = [], a.handlerMap = [], a.listenerId = 0, a.on = function (t, e, i, s, r) {
    var o = i.bind(s || t.instance || t),
      n = (a.handlerMap.indexOf(t) + 1 || a.handlerMap.push(t)) - 1,
      l = e.split(".")[0],
      h = e.split(".")[1] || "*";
    a.listeners[n] = a.listeners[n] || {}, a.listeners[n][l] = a.listeners[n][l] || {}, a.listeners[n][l][h] = a.listeners[n][l][h] || {}, i._svgjsListenerId || (i._svgjsListenerId = ++a.listenerId), a.listeners[n][l][h][i._svgjsListenerId] = o, t.addEventListener(l, o, r || {
      passive: !0
    });
  }, a.off = function (t, e, i) {
    var s = a.handlerMap.indexOf(t),
      r = e && e.split(".")[0],
      o = e && e.split(".")[1],
      n = "";
    if (-1 != s) if (i) {
      if ("function" == typeof i && (i = i._svgjsListenerId), !i) return;
      a.listeners[s][r] && a.listeners[s][r][o || "*"] && (t.removeEventListener(r, a.listeners[s][r][o || "*"][i], !1), delete a.listeners[s][r][o || "*"][i]);
    } else if (o && r) {
      if (a.listeners[s][r] && a.listeners[s][r][o]) {
        for (var l in a.listeners[s][r][o]) a.off(t, [r, o].join("."), l);
        delete a.listeners[s][r][o];
      }
    } else if (o) for (var h in a.listeners[s]) for (var n in a.listeners[s][h]) o === n && a.off(t, [h, o].join("."));else if (r) {
      if (a.listeners[s][r]) {
        for (var n in a.listeners[s][r]) a.off(t, [r, n].join("."));
        delete a.listeners[s][r];
      }
    } else {
      for (var h in a.listeners[s]) a.off(t, h);
      delete a.listeners[s], delete a.handlerMap[s];
    }
  }, a.extend(a.Element, {
    on: function (t, e, i, s) {
      return a.on(this.node, t, e, i, s), this;
    },
    off: function (t, e) {
      return a.off(this.node, t, e), this;
    },
    fire: function (e, i) {
      return e instanceof t.Event ? this.node.dispatchEvent(e) : this.node.dispatchEvent(e = new a.CustomEvent(e, {
        detail: i,
        cancelable: !0
      })), this._event = e, this;
    },
    event: function () {
      return this._event;
    }
  }), a.Defs = a.invent({
    create: "defs",
    inherit: a.Container
  }), a.G = a.invent({
    create: "g",
    inherit: a.Container,
    extend: {
      x: function (t) {
        return null == t ? this.transform("x") : this.transform({
          x: t - this.x()
        }, !0);
      }
    },
    construct: {
      group: function () {
        return this.put(new a.G());
      }
    }
  }), a.Doc = a.invent({
    create: function (t) {
      t && ("svg" == (t = "string" == typeof t ? e.getElementById(t) : t).nodeName ? this.constructor.call(this, t) : (this.constructor.call(this, a.create("svg")), t.appendChild(this.node), this.size("100%", "100%")), this.namespace().defs());
    },
    inherit: a.Container,
    extend: {
      namespace: function () {
        return this.attr({
          xmlns: a.ns,
          version: "1.1"
        }).attr("xmlns:xlink", a.xlink, a.xmlns).attr("xmlns:svgjs", a.svgjs, a.xmlns);
      },
      defs: function () {
        var t;
        return this._defs || ((t = this.node.getElementsByTagName("defs")[0]) ? this._defs = a.adopt(t) : this._defs = new a.Defs(), this.node.appendChild(this._defs.node)), this._defs;
      },
      parent: function () {
        return this.node.parentNode && "#document" != this.node.parentNode.nodeName ? this.node.parentNode : null;
      },
      remove: function () {
        return this.parent() && this.parent().removeChild(this.node), this;
      },
      clear: function () {
        for (; this.node.hasChildNodes();) this.node.removeChild(this.node.lastChild);
        return delete this._defs, a.parser.draw && !a.parser.draw.parentNode && this.node.appendChild(a.parser.draw), this;
      },
      clone: function (t) {
        this.writeDataToDom();
        var e = this.node,
          i = x(e.cloneNode(!0));
        return t ? (t.node || t).appendChild(i.node) : e.parentNode.insertBefore(i.node, e.nextSibling), i;
      }
    }
  }), a.extend(a.Element, {}), a.Gradient = a.invent({
    create: function (t) {
      this.constructor.call(this, a.create(t + "Gradient")), this.type = t;
    },
    inherit: a.Container,
    extend: {
      at: function (t, e, i) {
        return this.put(new a.Stop()).update(t, e, i);
      },
      update: function (t) {
        return this.clear(), "function" == typeof t && t.call(this, this), this;
      },
      fill: function () {
        return "url(#" + this.id() + ")";
      },
      toString: function () {
        return this.fill();
      },
      attr: function (t, e, i) {
        return "transform" == t && (t = "gradientTransform"), a.Container.prototype.attr.call(this, t, e, i);
      }
    },
    construct: {
      gradient: function (t, e) {
        return this.defs().gradient(t, e);
      }
    }
  }), a.extend(a.Gradient, a.FX, {
    from: function (t, e) {
      return "radial" == (this._target || this).type ? this.attr({
        fx: new a.Number(t),
        fy: new a.Number(e)
      }) : this.attr({
        x1: new a.Number(t),
        y1: new a.Number(e)
      });
    },
    to: function (t, e) {
      return "radial" == (this._target || this).type ? this.attr({
        cx: new a.Number(t),
        cy: new a.Number(e)
      }) : this.attr({
        x2: new a.Number(t),
        y2: new a.Number(e)
      });
    }
  }), a.extend(a.Defs, {
    gradient: function (t, e) {
      return this.put(new a.Gradient(t)).update(e);
    }
  }), a.Stop = a.invent({
    create: "stop",
    inherit: a.Element,
    extend: {
      update: function (t) {
        return ("number" == typeof t || t instanceof a.Number) && (t = {
          offset: arguments[0],
          color: arguments[1],
          opacity: arguments[2]
        }), null != t.opacity && this.attr("stop-opacity", t.opacity), null != t.color && this.attr("stop-color", t.color), null != t.offset && this.attr("offset", new a.Number(t.offset)), this;
      }
    }
  }), a.Pattern = a.invent({
    create: "pattern",
    inherit: a.Container,
    extend: {
      fill: function () {
        return "url(#" + this.id() + ")";
      },
      update: function (t) {
        return this.clear(), "function" == typeof t && t.call(this, this), this;
      },
      toString: function () {
        return this.fill();
      },
      attr: function (t, e, i) {
        return "transform" == t && (t = "patternTransform"), a.Container.prototype.attr.call(this, t, e, i);
      }
    },
    construct: {
      pattern: function (t, e, i) {
        return this.defs().pattern(t, e, i);
      }
    }
  }), a.extend(a.Defs, {
    pattern: function (t, e, i) {
      return this.put(new a.Pattern()).update(i).attr({
        x: 0,
        y: 0,
        width: t,
        height: e,
        patternUnits: "userSpaceOnUse"
      });
    }
  }), a.Shape = a.invent({
    create: function (t) {
      this.constructor.call(this, t);
    },
    inherit: a.Element
  }), a.Symbol = a.invent({
    create: "symbol",
    inherit: a.Container,
    construct: {
      symbol: function () {
        return this.put(new a.Symbol());
      }
    }
  }), a.Use = a.invent({
    create: "use",
    inherit: a.Shape,
    extend: {
      element: function (t, e) {
        return this.attr("href", (e || "") + "#" + t, a.xlink);
      }
    },
    construct: {
      use: function (t, e) {
        return this.put(new a.Use()).element(t, e);
      }
    }
  }), a.Rect = a.invent({
    create: "rect",
    inherit: a.Shape,
    construct: {
      rect: function (t, e) {
        return this.put(new a.Rect()).size(t, e);
      }
    }
  }), a.Circle = a.invent({
    create: "circle",
    inherit: a.Shape,
    construct: {
      circle: function (t) {
        return this.put(new a.Circle()).rx(new a.Number(t).divide(2)).move(0, 0);
      }
    }
  }), a.extend(a.Circle, a.FX, {
    rx: function (t) {
      return this.attr("r", t);
    },
    ry: function (t) {
      return this.rx(t);
    }
  }), a.Ellipse = a.invent({
    create: "ellipse",
    inherit: a.Shape,
    construct: {
      ellipse: function (t, e) {
        return this.put(new a.Ellipse()).size(t, e).move(0, 0);
      }
    }
  }), a.extend(a.Ellipse, a.Rect, a.FX, {
    rx: function (t) {
      return this.attr("rx", t);
    },
    ry: function (t) {
      return this.attr("ry", t);
    }
  }), a.extend(a.Circle, a.Ellipse, {
    x: function (t) {
      return null == t ? this.cx() - this.rx() : this.cx(t + this.rx());
    },
    y: function (t) {
      return null == t ? this.cy() - this.ry() : this.cy(t + this.ry());
    },
    cx: function (t) {
      return null == t ? this.attr("cx") : this.attr("cx", t);
    },
    cy: function (t) {
      return null == t ? this.attr("cy") : this.attr("cy", t);
    },
    width: function (t) {
      return null == t ? 2 * this.rx() : this.rx(new a.Number(t).divide(2));
    },
    height: function (t) {
      return null == t ? 2 * this.ry() : this.ry(new a.Number(t).divide(2));
    },
    size: function (t, e) {
      var i = u(this, t, e);
      return this.rx(new a.Number(i.width).divide(2)).ry(new a.Number(i.height).divide(2));
    }
  }), a.Line = a.invent({
    create: "line",
    inherit: a.Shape,
    extend: {
      array: function () {
        return new a.PointArray([[this.attr("x1"), this.attr("y1")], [this.attr("x2"), this.attr("y2")]]);
      },
      plot: function (t, e, i, s) {
        return null == t ? this.array() : (t = void 0 !== e ? {
          x1: t,
          y1: e,
          x2: i,
          y2: s
        } : new a.PointArray(t).toLine(), this.attr(t));
      },
      move: function (t, e) {
        return this.attr(this.array().move(t, e).toLine());
      },
      size: function (t, e) {
        var i = u(this, t, e);
        return this.attr(this.array().size(i.width, i.height).toLine());
      }
    },
    construct: {
      line: function (t, e, i, s) {
        return a.Line.prototype.plot.apply(this.put(new a.Line()), null != t ? [t, e, i, s] : [0, 0, 0, 0]);
      }
    }
  }), a.Polyline = a.invent({
    create: "polyline",
    inherit: a.Shape,
    construct: {
      polyline: function (t) {
        return this.put(new a.Polyline()).plot(t || new a.PointArray());
      }
    }
  }), a.Polygon = a.invent({
    create: "polygon",
    inherit: a.Shape,
    construct: {
      polygon: function (t) {
        return this.put(new a.Polygon()).plot(t || new a.PointArray());
      }
    }
  }), a.extend(a.Polyline, a.Polygon, {
    array: function () {
      return this._array || (this._array = new a.PointArray(this.attr("points")));
    },
    plot: function (t) {
      return null == t ? this.array() : this.clear().attr("points", "string" == typeof t ? t : this._array = new a.PointArray(t));
    },
    clear: function () {
      return delete this._array, this;
    },
    move: function (t, e) {
      return this.attr("points", this.array().move(t, e));
    },
    size: function (t, e) {
      var i = u(this, t, e);
      return this.attr("points", this.array().size(i.width, i.height));
    }
  }), a.extend(a.Line, a.Polyline, a.Polygon, {
    morphArray: a.PointArray,
    x: function (t) {
      return null == t ? this.bbox().x : this.move(t, this.bbox().y);
    },
    y: function (t) {
      return null == t ? this.bbox().y : this.move(this.bbox().x, t);
    },
    width: function (t) {
      var e = this.bbox();
      return null == t ? e.width : this.size(t, e.height);
    },
    height: function (t) {
      var e = this.bbox();
      return null == t ? e.height : this.size(e.width, t);
    }
  }), a.Path = a.invent({
    create: "path",
    inherit: a.Shape,
    extend: {
      morphArray: a.PathArray,
      array: function () {
        return this._array || (this._array = new a.PathArray(this.attr("d")));
      },
      plot: function (t) {
        return null == t ? this.array() : this.clear().attr("d", "string" == typeof t ? t : this._array = new a.PathArray(t));
      },
      clear: function () {
        return delete this._array, this;
      }
    },
    construct: {
      path: function (t) {
        return this.put(new a.Path()).plot(t || new a.PathArray());
      }
    }
  }), a.Image = a.invent({
    create: "image",
    inherit: a.Shape,
    extend: {
      load: function (e) {
        if (!e) return this;
        var i = this,
          s = new t.Image();
        return a.on(s, "load", function () {
          a.off(s);
          var t = i.parent(a.Pattern);
          null !== t && (0 == i.width() && 0 == i.height() && i.size(s.width, s.height), t && 0 == t.width() && 0 == t.height() && t.size(i.width(), i.height()), "function" == typeof i._loaded && i._loaded.call(i, {
            width: s.width,
            height: s.height,
            ratio: s.width / s.height,
            url: e
          }));
        }), a.on(s, "error", function (t) {
          a.off(s), "function" == typeof i._error && i._error.call(i, t);
        }), this.attr("href", s.src = this.src = e, a.xlink);
      },
      loaded: function (t) {
        return this._loaded = t, this;
      },
      error: function (t) {
        return this._error = t, this;
      }
    },
    construct: {
      image: function (t, e, i) {
        return this.put(new a.Image()).load(t).size(e || 0, i || e || 0);
      }
    }
  }), a.Text = a.invent({
    create: function () {
      this.constructor.call(this, a.create("text")), this.dom.leading = new a.Number(1.3), this._rebuild = !0, this._build = !1, this.attr("font-family", a.defaults.attrs["font-family"]);
    },
    inherit: a.Shape,
    extend: {
      x: function (t) {
        return null == t ? this.attr("x") : this.attr("x", t);
      },
      text: function (t) {
        if (void 0 === t) {
          t = "";
          for (var e = this.node.childNodes, i = 0, s = e.length; i < s; ++i) 0 != i && 3 != e[i].nodeType && 1 == a.adopt(e[i]).dom.newLined && (t += "\n"), t += e[i].textContent;
          return t;
        }
        if (this.clear().build(!0), "function" == typeof t) t.call(this, this);else {
          i = 0;
          for (var r = (t = t.split("\n")).length; i < r; i++) this.tspan(t[i]).newLine();
        }
        return this.build(!1).rebuild();
      },
      size: function (t) {
        return this.attr("font-size", t).rebuild();
      },
      leading: function (t) {
        return null == t ? this.dom.leading : (this.dom.leading = new a.Number(t), this.rebuild());
      },
      lines: function () {
        var t = (this.textPath && this.textPath() || this).node,
          e = a.utils.map(a.utils.filterSVGElements(t.childNodes), function (t) {
            return a.adopt(t);
          });
        return new a.Set(e);
      },
      rebuild: function (t) {
        if ("boolean" == typeof t && (this._rebuild = t), this._rebuild) {
          var e = this,
            i = 0,
            s = this.dom.leading * new a.Number(this.attr("font-size"));
          this.lines().each(function () {
            this.dom.newLined && (e.textPath() || this.attr("x", e.attr("x")), "\n" == this.text() ? i += s : (this.attr("dy", s + i), i = 0));
          }), this.fire("rebuild");
        }
        return this;
      },
      build: function (t) {
        return this._build = !!t, this;
      },
      setData: function (t) {
        return this.dom = t, this.dom.leading = new a.Number(t.leading || 1.3), this;
      }
    },
    construct: {
      text: function (t) {
        return this.put(new a.Text()).text(t);
      },
      plain: function (t) {
        return this.put(new a.Text()).plain(t);
      }
    }
  }), a.Tspan = a.invent({
    create: "tspan",
    inherit: a.Shape,
    extend: {
      text: function (t) {
        return null == t ? this.node.textContent + (this.dom.newLined ? "\n" : "") : ("function" == typeof t ? t.call(this, this) : this.plain(t), this);
      },
      dx: function (t) {
        return this.attr("dx", t);
      },
      dy: function (t) {
        return this.attr("dy", t);
      },
      newLine: function () {
        var t = this.parent(a.Text);
        return this.dom.newLined = !0, this.dy(t.dom.leading * t.attr("font-size")).attr("x", t.x());
      }
    }
  }), a.extend(a.Text, a.Tspan, {
    plain: function (t) {
      return !1 === this._build && this.clear(), this.node.appendChild(e.createTextNode(t)), this;
    },
    tspan: function (t) {
      var e = (this.textPath && this.textPath() || this).node,
        i = new a.Tspan();
      return !1 === this._build && this.clear(), e.appendChild(i.node), i.text(t);
    },
    clear: function () {
      for (var t = (this.textPath && this.textPath() || this).node; t.hasChildNodes();) t.removeChild(t.lastChild);
      return this;
    },
    length: function () {
      return this.node.getComputedTextLength();
    }
  }), a.TextPath = a.invent({
    create: "textPath",
    inherit: a.Parent,
    parent: a.Text,
    construct: {
      morphArray: a.PathArray,
      array: function () {
        var t = this.track();
        return t ? t.array() : null;
      },
      plot: function (t) {
        var e = this.track(),
          i = null;
        return e && (i = e.plot(t)), null == t ? i : this;
      },
      track: function () {
        var t = this.textPath();
        if (t) return t.reference("href");
      },
      textPath: function () {
        if (this.node.firstChild && "textPath" == this.node.firstChild.nodeName) return a.adopt(this.node.firstChild);
      }
    }
  }), a.Nested = a.invent({
    create: function () {
      this.constructor.call(this, a.create("svg")), this.style("overflow", "visible");
    },
    inherit: a.Container,
    construct: {
      nested: function () {
        return this.put(new a.Nested());
      }
    }
  });
  var l = {
    stroke: ["color", "width", "opacity", "linecap", "linejoin", "miterlimit", "dasharray", "dashoffset"],
    fill: ["color", "opacity", "rule"],
    prefix: function (t, e) {
      return "color" == e ? t : t + "-" + e;
    }
  };
  function h(t, e, i, s) {
    return i + s.replace(a.regex.dots, " .");
  }
  function c(t) {
    return t.toLowerCase().replace(/-(.)/g, function (t, e) {
      return e.toUpperCase();
    });
  }
  function d(t) {
    return t.charAt(0).toUpperCase() + t.slice(1);
  }
  function g(t) {
    var e = t.toString(16);
    return 1 == e.length ? "0" + e : e;
  }
  function u(t, e, i) {
    if (null == e || null == i) {
      var a = t.bbox();
      null == e ? e = a.width / a.height * i : null == i && (i = a.height / a.width * e);
    }
    return {
      width: e,
      height: i
    };
  }
  function p(t, e, i) {
    return {
      x: e * t.a + i * t.c + 0,
      y: e * t.b + i * t.d + 0
    };
  }
  function f(t) {
    return {
      a: t[0],
      b: t[1],
      c: t[2],
      d: t[3],
      e: t[4],
      f: t[5]
    };
  }
  function x(e) {
    for (var i = e.childNodes.length - 1; i >= 0; i--) e.childNodes[i] instanceof t.SVGElement && x(e.childNodes[i]);
    return a.adopt(e).id(a.eid(e.nodeName));
  }
  function b(t) {
    return Math.abs(t) > 1e-37 ? t : 0;
  }
  ["fill", "stroke"].forEach(function (t) {
    var e = {};
    e[t] = function (e) {
      if (void 0 === e) return this;
      if ("string" == typeof e || a.Color.isRgb(e) || e && "function" == typeof e.fill) this.attr(t, e);else for (var i = l[t].length - 1; i >= 0; i--) null != e[l[t][i]] && this.attr(l.prefix(t, l[t][i]), e[l[t][i]]);
      return this;
    }, a.extend(a.Element, a.FX, e);
  }), a.extend(a.Element, a.FX, {
    translate: function (t, e) {
      return this.transform({
        x: t,
        y: e
      });
    },
    matrix: function (t) {
      return this.attr("transform", new a.Matrix(6 == arguments.length ? [].slice.call(arguments) : t));
    },
    opacity: function (t) {
      return this.attr("opacity", t);
    },
    dx: function (t) {
      return this.x(new a.Number(t).plus(this instanceof a.FX ? 0 : this.x()), !0);
    },
    dy: function (t) {
      return this.y(new a.Number(t).plus(this instanceof a.FX ? 0 : this.y()), !0);
    }
  }), a.extend(a.Path, {
    length: function () {
      return this.node.getTotalLength();
    },
    pointAt: function (t) {
      return this.node.getPointAtLength(t);
    }
  }), a.Set = a.invent({
    create: function (t) {
      Array.isArray(t) ? this.members = t : this.clear();
    },
    extend: {
      add: function () {
        for (var t = [].slice.call(arguments), e = 0, i = t.length; e < i; e++) this.members.push(t[e]);
        return this;
      },
      remove: function (t) {
        var e = this.index(t);
        return e > -1 && this.members.splice(e, 1), this;
      },
      each: function (t) {
        for (var e = 0, i = this.members.length; e < i; e++) t.apply(this.members[e], [e, this.members]);
        return this;
      },
      clear: function () {
        return this.members = [], this;
      },
      length: function () {
        return this.members.length;
      },
      has: function (t) {
        return this.index(t) >= 0;
      },
      index: function (t) {
        return this.members.indexOf(t);
      },
      get: function (t) {
        return this.members[t];
      },
      first: function () {
        return this.get(0);
      },
      last: function () {
        return this.get(this.members.length - 1);
      },
      valueOf: function () {
        return this.members;
      }
    },
    construct: {
      set: function (t) {
        return new a.Set(t);
      }
    }
  }), a.FX.Set = a.invent({
    create: function (t) {
      this.set = t;
    }
  }), a.Set.inherit = function () {
    var t = [];
    for (var e in a.Shape.prototype) "function" == typeof a.Shape.prototype[e] && "function" != typeof a.Set.prototype[e] && t.push(e);
    for (var e in t.forEach(function (t) {
      a.Set.prototype[t] = function () {
        for (var e = 0, i = this.members.length; e < i; e++) this.members[e] && "function" == typeof this.members[e][t] && this.members[e][t].apply(this.members[e], arguments);
        return "animate" == t ? this.fx || (this.fx = new a.FX.Set(this)) : this;
      };
    }), t = [], a.FX.prototype) "function" == typeof a.FX.prototype[e] && "function" != typeof a.FX.Set.prototype[e] && t.push(e);
    t.forEach(function (t) {
      a.FX.Set.prototype[t] = function () {
        for (var e = 0, i = this.set.members.length; e < i; e++) this.set.members[e].fx[t].apply(this.set.members[e].fx, arguments);
        return this;
      };
    });
  }, a.extend(a.Element, {}), a.extend(a.Element, {
    remember: function (t, e) {
      if ("object" === i(arguments[0])) for (var a in t) this.remember(a, t[a]);else {
        if (1 == arguments.length) return this.memory()[t];
        this.memory()[t] = e;
      }
      return this;
    },
    forget: function () {
      if (0 == arguments.length) this._memory = {};else for (var t = arguments.length - 1; t >= 0; t--) delete this.memory()[arguments[t]];
      return this;
    },
    memory: function () {
      return this._memory || (this._memory = {});
    }
  }), a.get = function (t) {
    var i = e.getElementById(function (t) {
      var e = (t || "").toString().match(a.regex.reference);
      if (e) return e[1];
    }(t) || t);
    return a.adopt(i);
  }, a.select = function (t, i) {
    return new a.Set(a.utils.map((i || e).querySelectorAll(t), function (t) {
      return a.adopt(t);
    }));
  }, a.extend(a.Parent, {
    select: function (t) {
      return a.select(t, this.node);
    }
  });
  var v = "abcdef".split("");
  if ("function" != typeof t.CustomEvent) {
    var m = function (t, i) {
      i = i || {
        bubbles: !1,
        cancelable: !1,
        detail: void 0
      };
      var a = e.createEvent("CustomEvent");
      return a.initCustomEvent(t, i.bubbles, i.cancelable, i.detail), a;
    };
    m.prototype = t.Event.prototype, a.CustomEvent = m;
  } else a.CustomEvent = t.CustomEvent;
  return a;
},  true ? !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {
  return Et(zt, zt.document);
}).call(exports, __webpack_require__, exports, module),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : 0,
/*! svg.filter.js - v2.0.2 - 2016-02-24
* https://github.com/wout/svg.filter.js
* Copyright (c) 2016 Wout Fierens; Licensed MIT */
function () {
  SVG.Filter = SVG.invent({
    create: "filter",
    inherit: SVG.Parent,
    extend: {
      source: "SourceGraphic",
      sourceAlpha: "SourceAlpha",
      background: "BackgroundImage",
      backgroundAlpha: "BackgroundAlpha",
      fill: "FillPaint",
      stroke: "StrokePaint",
      autoSetIn: !0,
      put: function (t, e) {
        return this.add(t, e), !t.attr("in") && this.autoSetIn && t.attr("in", this.source), t.attr("result") || t.attr("result", t), t;
      },
      blend: function (t, e, i) {
        return this.put(new SVG.BlendEffect(t, e, i));
      },
      colorMatrix: function (t, e) {
        return this.put(new SVG.ColorMatrixEffect(t, e));
      },
      convolveMatrix: function (t) {
        return this.put(new SVG.ConvolveMatrixEffect(t));
      },
      componentTransfer: function (t) {
        return this.put(new SVG.ComponentTransferEffect(t));
      },
      composite: function (t, e, i) {
        return this.put(new SVG.CompositeEffect(t, e, i));
      },
      flood: function (t, e) {
        return this.put(new SVG.FloodEffect(t, e));
      },
      offset: function (t, e) {
        return this.put(new SVG.OffsetEffect(t, e));
      },
      image: function (t) {
        return this.put(new SVG.ImageEffect(t));
      },
      merge: function () {
        var t = [void 0];
        for (var e in arguments) t.push(arguments[e]);
        return this.put(new (SVG.MergeEffect.bind.apply(SVG.MergeEffect, t))());
      },
      gaussianBlur: function (t, e) {
        return this.put(new SVG.GaussianBlurEffect(t, e));
      },
      morphology: function (t, e) {
        return this.put(new SVG.MorphologyEffect(t, e));
      },
      diffuseLighting: function (t, e, i) {
        return this.put(new SVG.DiffuseLightingEffect(t, e, i));
      },
      displacementMap: function (t, e, i, a, s) {
        return this.put(new SVG.DisplacementMapEffect(t, e, i, a, s));
      },
      specularLighting: function (t, e, i, a) {
        return this.put(new SVG.SpecularLightingEffect(t, e, i, a));
      },
      tile: function () {
        return this.put(new SVG.TileEffect());
      },
      turbulence: function (t, e, i, a, s) {
        return this.put(new SVG.TurbulenceEffect(t, e, i, a, s));
      },
      toString: function () {
        return "url(#" + this.attr("id") + ")";
      }
    }
  }), SVG.extend(SVG.Defs, {
    filter: function (t) {
      var e = this.put(new SVG.Filter());
      return "function" == typeof t && t.call(e, e), e;
    }
  }), SVG.extend(SVG.Container, {
    filter: function (t) {
      return this.defs().filter(t);
    }
  }), SVG.extend(SVG.Element, SVG.G, SVG.Nested, {
    filter: function (t) {
      return this.filterer = t instanceof SVG.Element ? t : this.doc().filter(t), this.doc() && this.filterer.doc() !== this.doc() && this.doc().defs().add(this.filterer), this.attr("filter", this.filterer), this.filterer;
    },
    unfilter: function (t) {
      return this.filterer && !0 === t && this.filterer.remove(), delete this.filterer, this.attr("filter", null);
    }
  }), SVG.Effect = SVG.invent({
    create: function () {
      this.constructor.call(this);
    },
    inherit: SVG.Element,
    extend: {
      in: function (t) {
        return null == t ? this.parent() && this.parent().select('[result="' + this.attr("in") + '"]').get(0) || this.attr("in") : this.attr("in", t);
      },
      result: function (t) {
        return null == t ? this.attr("result") : this.attr("result", t);
      },
      toString: function () {
        return this.result();
      }
    }
  }), SVG.ParentEffect = SVG.invent({
    create: function () {
      this.constructor.call(this);
    },
    inherit: SVG.Parent,
    extend: {
      in: function (t) {
        return null == t ? this.parent() && this.parent().select('[result="' + this.attr("in") + '"]').get(0) || this.attr("in") : this.attr("in", t);
      },
      result: function (t) {
        return null == t ? this.attr("result") : this.attr("result", t);
      },
      toString: function () {
        return this.result();
      }
    }
  });
  var t = {
    blend: function (t, e) {
      return this.parent() && this.parent().blend(this, t, e);
    },
    colorMatrix: function (t, e) {
      return this.parent() && this.parent().colorMatrix(t, e).in(this);
    },
    convolveMatrix: function (t) {
      return this.parent() && this.parent().convolveMatrix(t).in(this);
    },
    componentTransfer: function (t) {
      return this.parent() && this.parent().componentTransfer(t).in(this);
    },
    composite: function (t, e) {
      return this.parent() && this.parent().composite(this, t, e);
    },
    flood: function (t, e) {
      return this.parent() && this.parent().flood(t, e);
    },
    offset: function (t, e) {
      return this.parent() && this.parent().offset(t, e).in(this);
    },
    image: function (t) {
      return this.parent() && this.parent().image(t);
    },
    merge: function () {
      return this.parent() && this.parent().merge.apply(this.parent(), [this].concat(arguments));
    },
    gaussianBlur: function (t, e) {
      return this.parent() && this.parent().gaussianBlur(t, e).in(this);
    },
    morphology: function (t, e) {
      return this.parent() && this.parent().morphology(t, e).in(this);
    },
    diffuseLighting: function (t, e, i) {
      return this.parent() && this.parent().diffuseLighting(t, e, i).in(this);
    },
    displacementMap: function (t, e, i, a) {
      return this.parent() && this.parent().displacementMap(this, t, e, i, a);
    },
    specularLighting: function (t, e, i, a) {
      return this.parent() && this.parent().specularLighting(t, e, i, a).in(this);
    },
    tile: function () {
      return this.parent() && this.parent().tile().in(this);
    },
    turbulence: function (t, e, i, a, s) {
      return this.parent() && this.parent().turbulence(t, e, i, a, s).in(this);
    }
  };
  SVG.extend(SVG.Effect, t), SVG.extend(SVG.ParentEffect, t), SVG.ChildEffect = SVG.invent({
    create: function () {
      this.constructor.call(this);
    },
    inherit: SVG.Element,
    extend: {
      in: function (t) {
        this.attr("in", t);
      }
    }
  });
  var e = {
      blend: function (t, e, i) {
        this.attr({
          in: t,
          in2: e,
          mode: i || "normal"
        });
      },
      colorMatrix: function (t, e) {
        "matrix" == t && (e = s(e)), this.attr({
          type: t,
          values: void 0 === e ? null : e
        });
      },
      convolveMatrix: function (t) {
        t = s(t), this.attr({
          order: Math.sqrt(t.split(" ").length),
          kernelMatrix: t
        });
      },
      composite: function (t, e, i) {
        this.attr({
          in: t,
          in2: e,
          operator: i
        });
      },
      flood: function (t, e) {
        this.attr("flood-color", t), null != e && this.attr("flood-opacity", e);
      },
      offset: function (t, e) {
        this.attr({
          dx: t,
          dy: e
        });
      },
      image: function (t) {
        this.attr("href", t, SVG.xlink);
      },
      displacementMap: function (t, e, i, a, s) {
        this.attr({
          in: t,
          in2: e,
          scale: i,
          xChannelSelector: a,
          yChannelSelector: s
        });
      },
      gaussianBlur: function (t, e) {
        null != t || null != e ? this.attr("stdDeviation", function (t) {
          if (!Array.isArray(t)) return t;
          for (var e = 0, i = t.length, a = []; e < i; e++) a.push(t[e]);
          return a.join(" ");
        }(Array.prototype.slice.call(arguments))) : this.attr("stdDeviation", "0 0");
      },
      morphology: function (t, e) {
        this.attr({
          operator: t,
          radius: e
        });
      },
      tile: function () {},
      turbulence: function (t, e, i, a, s) {
        this.attr({
          numOctaves: e,
          seed: i,
          stitchTiles: a,
          baseFrequency: t,
          type: s
        });
      }
    },
    i = {
      merge: function () {
        var t;
        if (arguments[0] instanceof SVG.Set) {
          var e = this;
          arguments[0].each(function (t) {
            this instanceof SVG.MergeNode ? e.put(this) : (this instanceof SVG.Effect || this instanceof SVG.ParentEffect) && e.put(new SVG.MergeNode(this));
          });
        } else {
          t = Array.isArray(arguments[0]) ? arguments[0] : arguments;
          for (var i = 0; i < t.length; i++) t[i] instanceof SVG.MergeNode ? this.put(t[i]) : this.put(new SVG.MergeNode(t[i]));
        }
      },
      componentTransfer: function (t) {
        if (this.rgb = new SVG.Set(), ["r", "g", "b", "a"].forEach(function (t) {
          this[t] = new SVG["Func" + t.toUpperCase()]("identity"), this.rgb.add(this[t]), this.node.appendChild(this[t].node);
        }.bind(this)), t) for (var e in t.rgb && (["r", "g", "b"].forEach(function (e) {
          this[e].attr(t.rgb);
        }.bind(this)), delete t.rgb), t) this[e].attr(t[e]);
      },
      diffuseLighting: function (t, e, i) {
        this.attr({
          surfaceScale: t,
          diffuseConstant: e,
          kernelUnitLength: i
        });
      },
      specularLighting: function (t, e, i, a) {
        this.attr({
          surfaceScale: t,
          diffuseConstant: e,
          specularExponent: i,
          kernelUnitLength: a
        });
      }
    },
    a = {
      distantLight: function (t, e) {
        this.attr({
          azimuth: t,
          elevation: e
        });
      },
      pointLight: function (t, e, i) {
        this.attr({
          x: t,
          y: e,
          z: i
        });
      },
      spotLight: function (t, e, i, a, s, r) {
        this.attr({
          x: t,
          y: e,
          z: i,
          pointsAtX: a,
          pointsAtY: s,
          pointsAtZ: r
        });
      },
      mergeNode: function (t) {
        this.attr("in", t);
      }
    };
  function s(t) {
    return Array.isArray(t) && (t = new SVG.Array(t)), t.toString().replace(/^\s+/, "").replace(/\s+$/, "").replace(/\s+/g, " ");
  }
  function r() {
    var t = function () {};
    for (var e in "function" == typeof arguments[arguments.length - 1] && (t = arguments[arguments.length - 1], Array.prototype.splice.call(arguments, arguments.length - 1, 1)), arguments) for (var i in arguments[e]) t(arguments[e][i], i, arguments[e]);
  }
  ["r", "g", "b", "a"].forEach(function (t) {
    a["Func" + t.toUpperCase()] = function (t) {
      switch (this.attr("type", t), t) {
        case "table":
          this.attr("tableValues", arguments[1]);
          break;
        case "linear":
          this.attr("slope", arguments[1]), this.attr("intercept", arguments[2]);
          break;
        case "gamma":
          this.attr("amplitude", arguments[1]), this.attr("exponent", arguments[2]), this.attr("offset", arguments[2]);
      }
    };
  }), r(e, function (t, e) {
    var i = e.charAt(0).toUpperCase() + e.slice(1);
    SVG[i + "Effect"] = SVG.invent({
      create: function () {
        this.constructor.call(this, SVG.create("fe" + i)), t.apply(this, arguments), this.result(this.attr("id") + "Out");
      },
      inherit: SVG.Effect,
      extend: {}
    });
  }), r(i, function (t, e) {
    var i = e.charAt(0).toUpperCase() + e.slice(1);
    SVG[i + "Effect"] = SVG.invent({
      create: function () {
        this.constructor.call(this, SVG.create("fe" + i)), t.apply(this, arguments), this.result(this.attr("id") + "Out");
      },
      inherit: SVG.ParentEffect,
      extend: {}
    });
  }), r(a, function (t, e) {
    var i = e.charAt(0).toUpperCase() + e.slice(1);
    SVG[i] = SVG.invent({
      create: function () {
        this.constructor.call(this, SVG.create("fe" + i)), t.apply(this, arguments);
      },
      inherit: SVG.ChildEffect,
      extend: {}
    });
  }), SVG.extend(SVG.MergeEffect, {
    in: function (t) {
      return t instanceof SVG.MergeNode ? this.add(t, 0) : this.add(new SVG.MergeNode(t), 0), this;
    }
  }), SVG.extend(SVG.CompositeEffect, SVG.BlendEffect, SVG.DisplacementMapEffect, {
    in2: function (t) {
      return null == t ? this.parent() && this.parent().select('[result="' + this.attr("in2") + '"]').get(0) || this.attr("in2") : this.attr("in2", t);
    }
  }), SVG.filter = {
    sepiatone: [.343, .669, .119, 0, 0, .249, .626, .13, 0, 0, .172, .334, .111, 0, 0, 0, 0, 0, 1, 0]
  };
}.call(void 0), function () {
  function t(t, s, r, o, n, l, h) {
    for (var c = t.slice(s, r || h), d = o.slice(n, l || h), g = 0, u = {
        pos: [0, 0],
        start: [0, 0]
      }, p = {
        pos: [0, 0],
        start: [0, 0]
      };;) {
      if (c[g] = e.call(u, c[g]), d[g] = e.call(p, d[g]), c[g][0] != d[g][0] || "M" == c[g][0] || "A" == c[g][0] && (c[g][4] != d[g][4] || c[g][5] != d[g][5]) ? (Array.prototype.splice.apply(c, [g, 1].concat(a.call(u, c[g]))), Array.prototype.splice.apply(d, [g, 1].concat(a.call(p, d[g])))) : (c[g] = i.call(u, c[g]), d[g] = i.call(p, d[g])), ++g == c.length && g == d.length) break;
      g == c.length && c.push(["C", u.pos[0], u.pos[1], u.pos[0], u.pos[1], u.pos[0], u.pos[1]]), g == d.length && d.push(["C", p.pos[0], p.pos[1], p.pos[0], p.pos[1], p.pos[0], p.pos[1]]);
    }
    return {
      start: c,
      dest: d
    };
  }
  function e(t) {
    switch (t[0]) {
      case "z":
      case "Z":
        t[0] = "L", t[1] = this.start[0], t[2] = this.start[1];
        break;
      case "H":
        t[0] = "L", t[2] = this.pos[1];
        break;
      case "V":
        t[0] = "L", t[2] = t[1], t[1] = this.pos[0];
        break;
      case "T":
        t[0] = "Q", t[3] = t[1], t[4] = t[2], t[1] = this.reflection[1], t[2] = this.reflection[0];
        break;
      case "S":
        t[0] = "C", t[6] = t[4], t[5] = t[3], t[4] = t[2], t[3] = t[1], t[2] = this.reflection[1], t[1] = this.reflection[0];
    }
    return t;
  }
  function i(t) {
    var e = t.length;
    return this.pos = [t[e - 2], t[e - 1]], -1 != "SCQT".indexOf(t[0]) && (this.reflection = [2 * this.pos[0] - t[e - 4], 2 * this.pos[1] - t[e - 3]]), t;
  }
  function a(t) {
    var e = [t];
    switch (t[0]) {
      case "M":
        return this.pos = this.start = [t[1], t[2]], e;
      case "L":
        t[5] = t[3] = t[1], t[6] = t[4] = t[2], t[1] = this.pos[0], t[2] = this.pos[1];
        break;
      case "Q":
        t[6] = t[4], t[5] = t[3], t[4] = 1 * t[4] / 3 + 2 * t[2] / 3, t[3] = 1 * t[3] / 3 + 2 * t[1] / 3, t[2] = 1 * this.pos[1] / 3 + 2 * t[2] / 3, t[1] = 1 * this.pos[0] / 3 + 2 * t[1] / 3;
        break;
      case "A":
        e = function (t, e) {
          var i,
            a,
            s,
            r,
            o,
            n,
            l,
            h,
            c,
            d,
            g,
            u,
            p,
            f,
            x,
            b,
            v,
            m,
            y,
            w,
            k,
            A,
            S,
            C,
            L,
            P,
            I = Math.abs(e[1]),
            T = Math.abs(e[2]),
            M = e[3] % 360,
            X = e[4],
            z = e[5],
            E = e[6],
            Y = e[7],
            F = new SVG.Point(t),
            R = new SVG.Point(E, Y),
            H = [];
          if (0 === I || 0 === T || F.x === R.x && F.y === R.y) return [["C", F.x, F.y, R.x, R.y, R.x, R.y]];
          i = new SVG.Point((F.x - R.x) / 2, (F.y - R.y) / 2).transform(new SVG.Matrix().rotate(M)), (a = i.x * i.x / (I * I) + i.y * i.y / (T * T)) > 1 && (I *= a = Math.sqrt(a), T *= a);
          s = new SVG.Matrix().rotate(M).scale(1 / I, 1 / T).rotate(-M), F = F.transform(s), R = R.transform(s), r = [R.x - F.x, R.y - F.y], n = r[0] * r[0] + r[1] * r[1], o = Math.sqrt(n), r[0] /= o, r[1] /= o, l = n < 4 ? Math.sqrt(1 - n / 4) : 0, X === z && (l *= -1);
          h = new SVG.Point((R.x + F.x) / 2 + l * -r[1], (R.y + F.y) / 2 + l * r[0]), c = new SVG.Point(F.x - h.x, F.y - h.y), d = new SVG.Point(R.x - h.x, R.y - h.y), g = Math.acos(c.x / Math.sqrt(c.x * c.x + c.y * c.y)), c.y < 0 && (g *= -1);
          u = Math.acos(d.x / Math.sqrt(d.x * d.x + d.y * d.y)), d.y < 0 && (u *= -1);
          z && g > u && (u += 2 * Math.PI);
          !z && g < u && (u -= 2 * Math.PI);
          for (f = Math.ceil(2 * Math.abs(g - u) / Math.PI), b = [], v = g, p = (u - g) / f, x = 4 * Math.tan(p / 4) / 3, k = 0; k <= f; k++) y = Math.cos(v), m = Math.sin(v), w = new SVG.Point(h.x + y, h.y + m), b[k] = [new SVG.Point(w.x + x * m, w.y - x * y), w, new SVG.Point(w.x - x * m, w.y + x * y)], v += p;
          for (b[0][0] = b[0][1].clone(), b[b.length - 1][2] = b[b.length - 1][1].clone(), s = new SVG.Matrix().rotate(M).scale(I, T).rotate(-M), k = 0, A = b.length; k < A; k++) b[k][0] = b[k][0].transform(s), b[k][1] = b[k][1].transform(s), b[k][2] = b[k][2].transform(s);
          for (k = 1, A = b.length; k < A; k++) S = (w = b[k - 1][2]).x, C = w.y, L = (w = b[k][0]).x, P = w.y, E = (w = b[k][1]).x, Y = w.y, H.push(["C", S, C, L, P, E, Y]);
          return H;
        }(this.pos, t), t = e[0];
    }
    return t[0] = "C", this.pos = [t[5], t[6]], this.reflection = [2 * t[5] - t[3], 2 * t[6] - t[4]], e;
  }
  function s(t, e) {
    if (!1 === e) return !1;
    for (var i = e, a = t.length; i < a; ++i) if ("M" == t[i][0]) return i;
    return !1;
  }
  SVG.extend(SVG.PathArray, {
    morph: function (e) {
      for (var i = this.value, a = this.parse(e), r = 0, o = 0, n = !1, l = !1; !1 !== r || !1 !== o;) {
        var h;
        n = s(i, !1 !== r && r + 1), l = s(a, !1 !== o && o + 1), !1 === r && (r = 0 == (h = new SVG.PathArray(c.start).bbox()).height || 0 == h.width ? i.push(i[0]) - 1 : i.push(["M", h.x + h.width / 2, h.y + h.height / 2]) - 1), !1 === o && (o = 0 == (h = new SVG.PathArray(c.dest).bbox()).height || 0 == h.width ? a.push(a[0]) - 1 : a.push(["M", h.x + h.width / 2, h.y + h.height / 2]) - 1);
        var c = t(i, r, n, a, o, l);
        i = i.slice(0, r).concat(c.start, !1 === n ? [] : i.slice(n)), a = a.slice(0, o).concat(c.dest, !1 === l ? [] : a.slice(l)), r = !1 !== n && r + c.start.length, o = !1 !== l && o + c.dest.length;
      }
      return this.value = i, this.destination = new SVG.PathArray(), this.destination.value = a, this;
    }
  });
}(),
/*! svg.draggable.js - v2.2.2 - 2019-01-08
* https://github.com/svgdotjs/svg.draggable.js
* Copyright (c) 2019 Wout Fierens; Licensed MIT */
function () {
  function t(t) {
    t.remember("_draggable", this), this.el = t;
  }
  t.prototype.init = function (t, e) {
    var i = this;
    this.constraint = t, this.value = e, this.el.on("mousedown.drag", function (t) {
      i.start(t);
    }), this.el.on("touchstart.drag", function (t) {
      i.start(t);
    });
  }, t.prototype.transformPoint = function (t, e) {
    var i = (t = t || window.event).changedTouches && t.changedTouches[0] || t;
    return this.p.x = i.clientX - (e || 0), this.p.y = i.clientY, this.p.matrixTransform(this.m);
  }, t.prototype.getBBox = function () {
    var t = this.el.bbox();
    return this.el instanceof SVG.Nested && (t = this.el.rbox()), (this.el instanceof SVG.G || this.el instanceof SVG.Use || this.el instanceof SVG.Nested) && (t.x = this.el.x(), t.y = this.el.y()), t;
  }, t.prototype.start = function (t) {
    if ("click" != t.type && "mousedown" != t.type && "mousemove" != t.type || 1 == (t.which || t.buttons)) {
      var e = this;
      if (this.el.fire("beforedrag", {
        event: t,
        handler: this
      }), !this.el.event().defaultPrevented) {
        t.preventDefault(), t.stopPropagation(), this.parent = this.parent || this.el.parent(SVG.Nested) || this.el.parent(SVG.Doc), this.p = this.parent.node.createSVGPoint(), this.m = this.el.node.getScreenCTM().inverse();
        var i,
          a = this.getBBox();
        if (this.el instanceof SVG.Text) switch (i = this.el.node.getComputedTextLength(), this.el.attr("text-anchor")) {
          case "middle":
            i /= 2;
            break;
          case "start":
            i = 0;
        }
        this.startPoints = {
          point: this.transformPoint(t, i),
          box: a,
          transform: this.el.transform()
        }, SVG.on(window, "mousemove.drag", function (t) {
          e.drag(t);
        }), SVG.on(window, "touchmove.drag", function (t) {
          e.drag(t);
        }), SVG.on(window, "mouseup.drag", function (t) {
          e.end(t);
        }), SVG.on(window, "touchend.drag", function (t) {
          e.end(t);
        }), this.el.fire("dragstart", {
          event: t,
          p: this.startPoints.point,
          m: this.m,
          handler: this
        });
      }
    }
  }, t.prototype.drag = function (t) {
    var e = this.getBBox(),
      i = this.transformPoint(t),
      a = this.startPoints.box.x + i.x - this.startPoints.point.x,
      s = this.startPoints.box.y + i.y - this.startPoints.point.y,
      r = this.constraint,
      o = i.x - this.startPoints.point.x,
      n = i.y - this.startPoints.point.y;
    if (this.el.fire("dragmove", {
      event: t,
      p: i,
      m: this.m,
      handler: this
    }), this.el.event().defaultPrevented) return i;
    if ("function" == typeof r) {
      var l = r.call(this.el, a, s, this.m);
      "boolean" == typeof l && (l = {
        x: l,
        y: l
      }), !0 === l.x ? this.el.x(a) : !1 !== l.x && this.el.x(l.x), !0 === l.y ? this.el.y(s) : !1 !== l.y && this.el.y(l.y);
    } else "object" == typeof r && (null != r.minX && a < r.minX ? o = (a = r.minX) - this.startPoints.box.x : null != r.maxX && a > r.maxX - e.width && (o = (a = r.maxX - e.width) - this.startPoints.box.x), null != r.minY && s < r.minY ? n = (s = r.minY) - this.startPoints.box.y : null != r.maxY && s > r.maxY - e.height && (n = (s = r.maxY - e.height) - this.startPoints.box.y), null != r.snapToGrid && (a -= a % r.snapToGrid, s -= s % r.snapToGrid, o -= o % r.snapToGrid, n -= n % r.snapToGrid), this.el instanceof SVG.G ? this.el.matrix(this.startPoints.transform).transform({
      x: o,
      y: n
    }, !0) : this.el.move(a, s));
    return i;
  }, t.prototype.end = function (t) {
    var e = this.drag(t);
    this.el.fire("dragend", {
      event: t,
      p: e,
      m: this.m,
      handler: this
    }), SVG.off(window, "mousemove.drag"), SVG.off(window, "touchmove.drag"), SVG.off(window, "mouseup.drag"), SVG.off(window, "touchend.drag");
  }, SVG.extend(SVG.Element, {
    draggable: function (e, i) {
      "function" != typeof e && "object" != typeof e || (i = e, e = !0);
      var a = this.remember("_draggable") || new t(this);
      return (e = void 0 === e || e) ? a.init(i || {}, e) : (this.off("mousedown.drag"), this.off("touchstart.drag")), this;
    }
  });
}.call(void 0), function () {
  function t(t) {
    this.el = t, t.remember("_selectHandler", this), this.pointSelection = {
      isSelected: !1
    }, this.rectSelection = {
      isSelected: !1
    }, this.pointsList = {
      lt: [0, 0],
      rt: ["width", 0],
      rb: ["width", "height"],
      lb: [0, "height"],
      t: ["width", 0],
      r: ["width", "height"],
      b: ["width", "height"],
      l: [0, "height"]
    }, this.pointCoord = function (t, e, i) {
      var a = "string" != typeof t ? t : e[t];
      return i ? a / 2 : a;
    }, this.pointCoords = function (t, e) {
      var i = this.pointsList[t];
      return {
        x: this.pointCoord(i[0], e, "t" === t || "b" === t),
        y: this.pointCoord(i[1], e, "r" === t || "l" === t)
      };
    };
  }
  t.prototype.init = function (t, e) {
    var i = this.el.bbox();
    this.options = {};
    var a = this.el.selectize.defaults.points;
    for (var s in this.el.selectize.defaults) this.options[s] = this.el.selectize.defaults[s], void 0 !== e[s] && (this.options[s] = e[s]);
    var r = ["points", "pointsExclude"];
    for (var s in r) {
      var o = this.options[r[s]];
      "string" == typeof o ? o = o.length > 0 ? o.split(/\s*,\s*/i) : [] : "boolean" == typeof o && "points" === r[s] && (o = o ? a : []), this.options[r[s]] = o;
    }
    this.options.points = [a, this.options.points].reduce(function (t, e) {
      return t.filter(function (t) {
        return e.indexOf(t) > -1;
      });
    }), this.options.points = [this.options.points, this.options.pointsExclude].reduce(function (t, e) {
      return t.filter(function (t) {
        return e.indexOf(t) < 0;
      });
    }), this.parent = this.el.parent(), this.nested = this.nested || this.parent.group(), this.nested.matrix(new SVG.Matrix(this.el).translate(i.x, i.y)), this.options.deepSelect && -1 !== ["line", "polyline", "polygon"].indexOf(this.el.type) ? this.selectPoints(t) : this.selectRect(t), this.observe(), this.cleanup();
  }, t.prototype.selectPoints = function (t) {
    return this.pointSelection.isSelected = t, this.pointSelection.set || (this.pointSelection.set = this.parent.set(), this.drawPoints()), this;
  }, t.prototype.getPointArray = function () {
    var t = this.el.bbox();
    return this.el.array().valueOf().map(function (e) {
      return [e[0] - t.x, e[1] - t.y];
    });
  }, t.prototype.drawPoints = function () {
    for (var t = this, e = this.getPointArray(), i = 0, a = e.length; i < a; ++i) {
      var s = function (e) {
          return function (i) {
            (i = i || window.event).preventDefault ? i.preventDefault() : i.returnValue = !1, i.stopPropagation();
            var a = i.pageX || i.touches[0].pageX,
              s = i.pageY || i.touches[0].pageY;
            t.el.fire("point", {
              x: a,
              y: s,
              i: e,
              event: i
            });
          };
        }(i),
        r = this.drawPoint(e[i][0], e[i][1]).addClass(this.options.classPoints).addClass(this.options.classPoints + "_point").on("touchstart", s).on("mousedown", s);
      this.pointSelection.set.add(r);
    }
  }, t.prototype.drawPoint = function (t, e) {
    var i = this.options.pointType;
    switch (i) {
      case "circle":
        return this.drawCircle(t, e);
      case "rect":
        return this.drawRect(t, e);
      default:
        if ("function" == typeof i) return i.call(this, t, e);
        throw new Error("Unknown " + i + " point type!");
    }
  }, t.prototype.drawCircle = function (t, e) {
    return this.nested.circle(this.options.pointSize).center(t, e);
  }, t.prototype.drawRect = function (t, e) {
    return this.nested.rect(this.options.pointSize, this.options.pointSize).center(t, e);
  }, t.prototype.updatePointSelection = function () {
    var t = this.getPointArray();
    this.pointSelection.set.each(function (e) {
      this.cx() === t[e][0] && this.cy() === t[e][1] || this.center(t[e][0], t[e][1]);
    });
  }, t.prototype.updateRectSelection = function () {
    var t = this,
      e = this.el.bbox();
    if (this.rectSelection.set.get(0).attr({
      width: e.width,
      height: e.height
    }), this.options.points.length && this.options.points.map(function (i, a) {
      var s = t.pointCoords(i, e);
      t.rectSelection.set.get(a + 1).center(s.x, s.y);
    }), this.options.rotationPoint) {
      var i = this.rectSelection.set.length();
      this.rectSelection.set.get(i - 1).center(e.width / 2, 20);
    }
  }, t.prototype.selectRect = function (t) {
    var e = this,
      i = this.el.bbox();
    function a(t) {
      return function (i) {
        (i = i || window.event).preventDefault ? i.preventDefault() : i.returnValue = !1, i.stopPropagation();
        var a = i.pageX || i.touches[0].pageX,
          s = i.pageY || i.touches[0].pageY;
        e.el.fire(t, {
          x: a,
          y: s,
          event: i
        });
      };
    }
    if (this.rectSelection.isSelected = t, this.rectSelection.set = this.rectSelection.set || this.parent.set(), this.rectSelection.set.get(0) || this.rectSelection.set.add(this.nested.rect(i.width, i.height).addClass(this.options.classRect)), this.options.points.length && this.rectSelection.set.length() < 2) {
      this.options.points.map(function (t, s) {
        var r = e.pointCoords(t, i),
          o = e.drawPoint(r.x, r.y).attr("class", e.options.classPoints + "_" + t).on("mousedown", a(t)).on("touchstart", a(t));
        e.rectSelection.set.add(o);
      }), this.rectSelection.set.each(function () {
        this.addClass(e.options.classPoints);
      });
    }
    if (this.options.rotationPoint && (this.options.points && !this.rectSelection.set.get(9) || !this.options.points && !this.rectSelection.set.get(1))) {
      var s = function (t) {
          (t = t || window.event).preventDefault ? t.preventDefault() : t.returnValue = !1, t.stopPropagation();
          var i = t.pageX || t.touches[0].pageX,
            a = t.pageY || t.touches[0].pageY;
          e.el.fire("rot", {
            x: i,
            y: a,
            event: t
          });
        },
        r = this.drawPoint(i.width / 2, 20).attr("class", this.options.classPoints + "_rot").on("touchstart", s).on("mousedown", s);
      this.rectSelection.set.add(r);
    }
  }, t.prototype.handler = function () {
    var t = this.el.bbox();
    this.nested.matrix(new SVG.Matrix(this.el).translate(t.x, t.y)), this.rectSelection.isSelected && this.updateRectSelection(), this.pointSelection.isSelected && this.updatePointSelection();
  }, t.prototype.observe = function () {
    var t = this;
    if (MutationObserver) {
      if (this.rectSelection.isSelected || this.pointSelection.isSelected) this.observerInst = this.observerInst || new MutationObserver(function () {
        t.handler();
      }), this.observerInst.observe(this.el.node, {
        attributes: !0
      });else try {
        this.observerInst.disconnect(), delete this.observerInst;
      } catch (t) {}
    } else this.el.off("DOMAttrModified.select"), (this.rectSelection.isSelected || this.pointSelection.isSelected) && this.el.on("DOMAttrModified.select", function () {
      t.handler();
    });
  }, t.prototype.cleanup = function () {
    !this.rectSelection.isSelected && this.rectSelection.set && (this.rectSelection.set.each(function () {
      this.remove();
    }), this.rectSelection.set.clear(), delete this.rectSelection.set), !this.pointSelection.isSelected && this.pointSelection.set && (this.pointSelection.set.each(function () {
      this.remove();
    }), this.pointSelection.set.clear(), delete this.pointSelection.set), this.pointSelection.isSelected || this.rectSelection.isSelected || (this.nested.remove(), delete this.nested);
  }, SVG.extend(SVG.Element, {
    selectize: function (e, i) {
      return "object" == typeof e && (i = e, e = !0), (this.remember("_selectHandler") || new t(this)).init(void 0 === e || e, i || {}), this;
    }
  }), SVG.Element.prototype.selectize.defaults = {
    points: ["lt", "rt", "rb", "lb", "t", "r", "b", "l"],
    pointsExclude: [],
    classRect: "svg_select_boundingRect",
    classPoints: "svg_select_points",
    pointSize: 7,
    rotationPoint: !0,
    deepSelect: !1,
    pointType: "circle"
  };
}(), function () {
  (function () {
    function t(t) {
      t.remember("_resizeHandler", this), this.el = t, this.parameters = {}, this.lastUpdateCall = null, this.p = t.doc().node.createSVGPoint();
    }
    t.prototype.transformPoint = function (t, e, i) {
      return this.p.x = t - (this.offset.x - window.pageXOffset), this.p.y = e - (this.offset.y - window.pageYOffset), this.p.matrixTransform(i || this.m);
    }, t.prototype._extractPosition = function (t) {
      return {
        x: null != t.clientX ? t.clientX : t.touches[0].clientX,
        y: null != t.clientY ? t.clientY : t.touches[0].clientY
      };
    }, t.prototype.init = function (t) {
      var e = this;
      if (this.stop(), "stop" !== t) {
        for (var i in this.options = {}, this.el.resize.defaults) this.options[i] = this.el.resize.defaults[i], void 0 !== t[i] && (this.options[i] = t[i]);
        this.el.on("lt.resize", function (t) {
          e.resize(t || window.event);
        }), this.el.on("rt.resize", function (t) {
          e.resize(t || window.event);
        }), this.el.on("rb.resize", function (t) {
          e.resize(t || window.event);
        }), this.el.on("lb.resize", function (t) {
          e.resize(t || window.event);
        }), this.el.on("t.resize", function (t) {
          e.resize(t || window.event);
        }), this.el.on("r.resize", function (t) {
          e.resize(t || window.event);
        }), this.el.on("b.resize", function (t) {
          e.resize(t || window.event);
        }), this.el.on("l.resize", function (t) {
          e.resize(t || window.event);
        }), this.el.on("rot.resize", function (t) {
          e.resize(t || window.event);
        }), this.el.on("point.resize", function (t) {
          e.resize(t || window.event);
        }), this.update();
      }
    }, t.prototype.stop = function () {
      return this.el.off("lt.resize"), this.el.off("rt.resize"), this.el.off("rb.resize"), this.el.off("lb.resize"), this.el.off("t.resize"), this.el.off("r.resize"), this.el.off("b.resize"), this.el.off("l.resize"), this.el.off("rot.resize"), this.el.off("point.resize"), this;
    }, t.prototype.resize = function (t) {
      var e = this;
      this.m = this.el.node.getScreenCTM().inverse(), this.offset = {
        x: window.pageXOffset,
        y: window.pageYOffset
      };
      var i = this._extractPosition(t.detail.event);
      if (this.parameters = {
        type: this.el.type,
        p: this.transformPoint(i.x, i.y),
        x: t.detail.x,
        y: t.detail.y,
        box: this.el.bbox(),
        rotation: this.el.transform().rotation
      }, "text" === this.el.type && (this.parameters.fontSize = this.el.attr()["font-size"]), void 0 !== t.detail.i) {
        var a = this.el.array().valueOf();
        this.parameters.i = t.detail.i, this.parameters.pointCoords = [a[t.detail.i][0], a[t.detail.i][1]];
      }
      switch (t.type) {
        case "lt":
          this.calc = function (t, e) {
            var i = this.snapToGrid(t, e);
            if (this.parameters.box.width - i[0] > 0 && this.parameters.box.height - i[1] > 0) {
              if ("text" === this.parameters.type) return this.el.move(this.parameters.box.x + i[0], this.parameters.box.y), void this.el.attr("font-size", this.parameters.fontSize - i[0]);
              i = this.checkAspectRatio(i), this.el.move(this.parameters.box.x + i[0], this.parameters.box.y + i[1]).size(this.parameters.box.width - i[0], this.parameters.box.height - i[1]);
            }
          };
          break;
        case "rt":
          this.calc = function (t, e) {
            var i = this.snapToGrid(t, e, 2);
            if (this.parameters.box.width + i[0] > 0 && this.parameters.box.height - i[1] > 0) {
              if ("text" === this.parameters.type) return this.el.move(this.parameters.box.x - i[0], this.parameters.box.y), void this.el.attr("font-size", this.parameters.fontSize + i[0]);
              i = this.checkAspectRatio(i, !0), this.el.move(this.parameters.box.x, this.parameters.box.y + i[1]).size(this.parameters.box.width + i[0], this.parameters.box.height - i[1]);
            }
          };
          break;
        case "rb":
          this.calc = function (t, e) {
            var i = this.snapToGrid(t, e, 0);
            if (this.parameters.box.width + i[0] > 0 && this.parameters.box.height + i[1] > 0) {
              if ("text" === this.parameters.type) return this.el.move(this.parameters.box.x - i[0], this.parameters.box.y), void this.el.attr("font-size", this.parameters.fontSize + i[0]);
              i = this.checkAspectRatio(i), this.el.move(this.parameters.box.x, this.parameters.box.y).size(this.parameters.box.width + i[0], this.parameters.box.height + i[1]);
            }
          };
          break;
        case "lb":
          this.calc = function (t, e) {
            var i = this.snapToGrid(t, e, 1);
            if (this.parameters.box.width - i[0] > 0 && this.parameters.box.height + i[1] > 0) {
              if ("text" === this.parameters.type) return this.el.move(this.parameters.box.x + i[0], this.parameters.box.y), void this.el.attr("font-size", this.parameters.fontSize - i[0]);
              i = this.checkAspectRatio(i, !0), this.el.move(this.parameters.box.x + i[0], this.parameters.box.y).size(this.parameters.box.width - i[0], this.parameters.box.height + i[1]);
            }
          };
          break;
        case "t":
          this.calc = function (t, e) {
            var i = this.snapToGrid(t, e, 2);
            if (this.parameters.box.height - i[1] > 0) {
              if ("text" === this.parameters.type) return;
              this.el.move(this.parameters.box.x, this.parameters.box.y + i[1]).height(this.parameters.box.height - i[1]);
            }
          };
          break;
        case "r":
          this.calc = function (t, e) {
            var i = this.snapToGrid(t, e, 0);
            if (this.parameters.box.width + i[0] > 0) {
              if ("text" === this.parameters.type) return;
              this.el.move(this.parameters.box.x, this.parameters.box.y).width(this.parameters.box.width + i[0]);
            }
          };
          break;
        case "b":
          this.calc = function (t, e) {
            var i = this.snapToGrid(t, e, 0);
            if (this.parameters.box.height + i[1] > 0) {
              if ("text" === this.parameters.type) return;
              this.el.move(this.parameters.box.x, this.parameters.box.y).height(this.parameters.box.height + i[1]);
            }
          };
          break;
        case "l":
          this.calc = function (t, e) {
            var i = this.snapToGrid(t, e, 1);
            if (this.parameters.box.width - i[0] > 0) {
              if ("text" === this.parameters.type) return;
              this.el.move(this.parameters.box.x + i[0], this.parameters.box.y).width(this.parameters.box.width - i[0]);
            }
          };
          break;
        case "rot":
          this.calc = function (t, e) {
            var i = t + this.parameters.p.x,
              a = e + this.parameters.p.y,
              s = Math.atan2(this.parameters.p.y - this.parameters.box.y - this.parameters.box.height / 2, this.parameters.p.x - this.parameters.box.x - this.parameters.box.width / 2),
              r = Math.atan2(a - this.parameters.box.y - this.parameters.box.height / 2, i - this.parameters.box.x - this.parameters.box.width / 2),
              o = this.parameters.rotation + 180 * (r - s) / Math.PI + this.options.snapToAngle / 2;
            this.el.center(this.parameters.box.cx, this.parameters.box.cy).rotate(o - o % this.options.snapToAngle, this.parameters.box.cx, this.parameters.box.cy);
          };
          break;
        case "point":
          this.calc = function (t, e) {
            var i = this.snapToGrid(t, e, this.parameters.pointCoords[0], this.parameters.pointCoords[1]),
              a = this.el.array().valueOf();
            a[this.parameters.i][0] = this.parameters.pointCoords[0] + i[0], a[this.parameters.i][1] = this.parameters.pointCoords[1] + i[1], this.el.plot(a);
          };
      }
      this.el.fire("resizestart", {
        dx: this.parameters.x,
        dy: this.parameters.y,
        event: t
      }), SVG.on(window, "touchmove.resize", function (t) {
        e.update(t || window.event);
      }), SVG.on(window, "touchend.resize", function () {
        e.done();
      }), SVG.on(window, "mousemove.resize", function (t) {
        e.update(t || window.event);
      }), SVG.on(window, "mouseup.resize", function () {
        e.done();
      });
    }, t.prototype.update = function (t) {
      if (t) {
        var e = this._extractPosition(t),
          i = this.transformPoint(e.x, e.y),
          a = i.x - this.parameters.p.x,
          s = i.y - this.parameters.p.y;
        this.lastUpdateCall = [a, s], this.calc(a, s), this.el.fire("resizing", {
          dx: a,
          dy: s,
          event: t
        });
      } else this.lastUpdateCall && this.calc(this.lastUpdateCall[0], this.lastUpdateCall[1]);
    }, t.prototype.done = function () {
      this.lastUpdateCall = null, SVG.off(window, "mousemove.resize"), SVG.off(window, "mouseup.resize"), SVG.off(window, "touchmove.resize"), SVG.off(window, "touchend.resize"), this.el.fire("resizedone");
    }, t.prototype.snapToGrid = function (t, e, i, a) {
      var s;
      return void 0 !== a ? s = [(i + t) % this.options.snapToGrid, (a + e) % this.options.snapToGrid] : (i = null == i ? 3 : i, s = [(this.parameters.box.x + t + (1 & i ? 0 : this.parameters.box.width)) % this.options.snapToGrid, (this.parameters.box.y + e + (2 & i ? 0 : this.parameters.box.height)) % this.options.snapToGrid]), t < 0 && (s[0] -= this.options.snapToGrid), e < 0 && (s[1] -= this.options.snapToGrid), t -= Math.abs(s[0]) < this.options.snapToGrid / 2 ? s[0] : s[0] - (t < 0 ? -this.options.snapToGrid : this.options.snapToGrid), e -= Math.abs(s[1]) < this.options.snapToGrid / 2 ? s[1] : s[1] - (e < 0 ? -this.options.snapToGrid : this.options.snapToGrid), this.constraintToBox(t, e, i, a);
    }, t.prototype.constraintToBox = function (t, e, i, a) {
      var s,
        r,
        o = this.options.constraint || {};
      return void 0 !== a ? (s = i, r = a) : (s = this.parameters.box.x + (1 & i ? 0 : this.parameters.box.width), r = this.parameters.box.y + (2 & i ? 0 : this.parameters.box.height)), void 0 !== o.minX && s + t < o.minX && (t = o.minX - s), void 0 !== o.maxX && s + t > o.maxX && (t = o.maxX - s), void 0 !== o.minY && r + e < o.minY && (e = o.minY - r), void 0 !== o.maxY && r + e > o.maxY && (e = o.maxY - r), [t, e];
    }, t.prototype.checkAspectRatio = function (t, e) {
      if (!this.options.saveAspectRatio) return t;
      var i = t.slice(),
        a = this.parameters.box.width / this.parameters.box.height,
        s = this.parameters.box.width + t[0],
        r = this.parameters.box.height - t[1],
        o = s / r;
      return o < a ? (i[1] = s / a - this.parameters.box.height, e && (i[1] = -i[1])) : o > a && (i[0] = this.parameters.box.width - r * a, e && (i[0] = -i[0])), i;
    }, SVG.extend(SVG.Element, {
      resize: function (e) {
        return (this.remember("_resizeHandler") || new t(this)).init(e || {}), this;
      }
    }), SVG.Element.prototype.resize.defaults = {
      snapToAngle: .1,
      snapToGrid: 1,
      constraint: {},
      saveAspectRatio: !1
    };
  }).call(this);
}(), void 0 === window.Apex && (window.Apex = {});
var Ot = function () {
    function t(e) {
      a(this, t), this.ctx = e, this.w = e.w;
    }
    return r(t, [{
      key: "initModules",
      value: function () {
        this.ctx.publicMethods = ["updateOptions", "updateSeries", "appendData", "appendSeries", "toggleSeries", "showSeries", "hideSeries", "setLocale", "resetSeries", "zoomX", "toggleDataPointSelection", "dataURI", "exportToCSV", "addXaxisAnnotation", "addYaxisAnnotation", "addPointAnnotation", "clearAnnotations", "removeAnnotation", "paper", "destroy"], this.ctx.eventList = ["click", "mousedown", "mousemove", "mouseleave", "touchstart", "touchmove", "touchleave", "mouseup", "touchend"], this.ctx.animations = new b(this.ctx), this.ctx.axes = new J(this.ctx), this.ctx.core = new Ht(this.ctx.el, this.ctx), this.ctx.config = new E({}), this.ctx.data = new W(this.ctx), this.ctx.grid = new j(this.ctx), this.ctx.graphics = new m(this.ctx), this.ctx.coreUtils = new y(this.ctx), this.ctx.crosshairs = new Q(this.ctx), this.ctx.events = new Z(this.ctx), this.ctx.exports = new G(this.ctx), this.ctx.localization = new $(this.ctx), this.ctx.options = new L(), this.ctx.responsive = new K(this.ctx), this.ctx.series = new N(this.ctx), this.ctx.theme = new tt(this.ctx), this.ctx.formatters = new T(this.ctx), this.ctx.titleSubtitle = new et(this.ctx), this.ctx.legend = new lt(this.ctx), this.ctx.toolbar = new ht(this.ctx), this.ctx.tooltip = new bt(this.ctx), this.ctx.dimensions = new ot(this.ctx), this.ctx.updateHelpers = new Dt(this.ctx), this.ctx.zoomPanSelection = new ct(this.ctx), this.ctx.w.globals.tooltip = new bt(this.ctx);
      }
    }]), t;
  }(),
  Nt = function () {
    function t(e) {
      a(this, t), this.ctx = e, this.w = e.w;
    }
    return r(t, [{
      key: "clear",
      value: function (t) {
        var e = t.isUpdating;
        this.ctx.zoomPanSelection && this.ctx.zoomPanSelection.destroy(), this.ctx.toolbar && this.ctx.toolbar.destroy(), this.ctx.animations = null, this.ctx.axes = null, this.ctx.annotations = null, this.ctx.core = null, this.ctx.data = null, this.ctx.grid = null, this.ctx.series = null, this.ctx.responsive = null, this.ctx.theme = null, this.ctx.formatters = null, this.ctx.titleSubtitle = null, this.ctx.legend = null, this.ctx.dimensions = null, this.ctx.options = null, this.ctx.crosshairs = null, this.ctx.zoomPanSelection = null, this.ctx.updateHelpers = null, this.ctx.toolbar = null, this.ctx.localization = null, this.ctx.w.globals.tooltip = null, this.clearDomElements({
          isUpdating: e
        });
      }
    }, {
      key: "killSVG",
      value: function (t) {
        t.each(function (t, e) {
          this.removeClass("*"), this.off(), this.stop();
        }, !0), t.ungroup(), t.clear();
      }
    }, {
      key: "clearDomElements",
      value: function (t) {
        var e = this,
          i = t.isUpdating,
          a = this.w.globals.dom.Paper.node;
        a.parentNode && a.parentNode.parentNode && !i && (a.parentNode.parentNode.style.minHeight = "unset");
        var s = this.w.globals.dom.baseEl;
        s && this.ctx.eventList.forEach(function (t) {
          s.removeEventListener(t, e.ctx.events.documentEvent);
        });
        var r = this.w.globals.dom;
        if (null !== this.ctx.el) for (; this.ctx.el.firstChild;) this.ctx.el.removeChild(this.ctx.el.firstChild);
        this.killSVG(r.Paper), r.Paper.remove(), r.elWrap = null, r.elGraphical = null, r.elLegendWrap = null, r.elLegendForeign = null, r.baseEl = null, r.elGridRect = null, r.elGridRectMask = null, r.elGridRectMarkerMask = null, r.elForecastMask = null, r.elNonForecastMask = null, r.elDefs = null;
      }
    }]), t;
  }(),
  Wt = new WeakMap();
var Bt = function () {
  function t(e, i) {
    a(this, t), this.opts = i, this.ctx = this, this.w = new F(i).init(), this.el = e, this.w.globals.cuid = x.randomId(), this.w.globals.chartID = this.w.config.chart.id ? x.escapeString(this.w.config.chart.id) : this.w.globals.cuid, new Ot(this).initModules(), this.create = x.bind(this.create, this), this.windowResizeHandler = this._windowResizeHandler.bind(this), this.parentResizeHandler = this._parentResizeCallback.bind(this);
  }
  return r(t, [{
    key: "render",
    value: function () {
      var t = this;
      return new Promise(function (e, i) {
        if (null !== t.el) {
          void 0 === Apex._chartInstances && (Apex._chartInstances = []), t.w.config.chart.id && Apex._chartInstances.push({
            id: t.w.globals.chartID,
            group: t.w.config.chart.group,
            chart: t
          }), t.setLocale(t.w.config.chart.defaultLocale);
          var a = t.w.config.chart.events.beforeMount;
          if ("function" == typeof a && a(t, t.w), t.events.fireEvent("beforeMount", [t, t.w]), window.addEventListener("resize", t.windowResizeHandler), function (t, e) {
            var i = !1;
            if (t.nodeType !== Node.DOCUMENT_FRAGMENT_NODE) {
              var a = t.getBoundingClientRect();
              "none" !== t.style.display && 0 !== a.width || (i = !0);
            }
            var s = new ResizeObserver(function (a) {
              i && e.call(t, a), i = !0;
            });
            t.nodeType === Node.DOCUMENT_FRAGMENT_NODE ? Array.from(t.children).forEach(function (t) {
              return s.observe(t);
            }) : s.observe(t), Wt.set(e, s);
          }(t.el.parentNode, t.parentResizeHandler), !t.css) {
            var s = t.el.getRootNode && t.el.getRootNode(),
              r = x.is("ShadowRoot", s),
              o = t.el.ownerDocument,
              n = o.getElementById("apexcharts-css");
            !r && n || (t.css = document.createElement("style"), t.css.id = "apexcharts-css", t.css.textContent = '@keyframes opaque {\n  0% {\n      opacity: 0\n  }\n\n  to {\n      opacity: 1\n  }\n}\n\n@keyframes resizeanim {\n  0%,to {\n      opacity: 0\n  }\n}\n\n.apexcharts-canvas {\n  position: relative;\n  user-select: none\n}\n\n.apexcharts-canvas ::-webkit-scrollbar {\n  -webkit-appearance: none;\n  width: 6px\n}\n\n.apexcharts-canvas ::-webkit-scrollbar-thumb {\n  border-radius: 4px;\n  background-color: rgba(0,0,0,.5);\n  box-shadow: 0 0 1px rgba(255,255,255,.5);\n  -webkit-box-shadow: 0 0 1px rgba(255,255,255,.5)\n}\n\n.apexcharts-inner {\n  position: relative\n}\n\n.apexcharts-text tspan {\n  font-family: inherit\n}\n\n.legend-mouseover-inactive {\n  transition: .15s ease all;\n  opacity: .2\n}\n\n.apexcharts-legend-text {\n  padding-left: 15px;\n  margin-left: -15px;\n}\n\n.apexcharts-series-collapsed {\n  opacity: 0\n}\n\n.apexcharts-tooltip {\n  border-radius: 5px;\n  box-shadow: 2px 2px 6px -4px #999;\n  cursor: default;\n  font-size: 14px;\n  left: 62px;\n  opacity: 0;\n  pointer-events: none;\n  position: absolute;\n  top: 20px;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  white-space: nowrap;\n  z-index: 12;\n  transition: .15s ease all\n}\n\n.apexcharts-tooltip.apexcharts-active {\n  opacity: 1;\n  transition: .15s ease all\n}\n\n.apexcharts-tooltip.apexcharts-theme-light {\n  border: 1px solid #e3e3e3;\n  background: rgba(255,255,255,.96)\n}\n\n.apexcharts-tooltip.apexcharts-theme-dark {\n  color: #fff;\n  background: rgba(30,30,30,.8)\n}\n\n.apexcharts-tooltip * {\n  font-family: inherit\n}\n\n.apexcharts-tooltip-title {\n  padding: 6px;\n  font-size: 15px;\n  margin-bottom: 4px\n}\n\n.apexcharts-tooltip.apexcharts-theme-light .apexcharts-tooltip-title {\n  background: #eceff1;\n  border-bottom: 1px solid #ddd\n}\n\n.apexcharts-tooltip.apexcharts-theme-dark .apexcharts-tooltip-title {\n  background: rgba(0,0,0,.7);\n  border-bottom: 1px solid #333\n}\n\n.apexcharts-tooltip-text-goals-value,.apexcharts-tooltip-text-y-value,.apexcharts-tooltip-text-z-value {\n  display: inline-block;\n  margin-left: 5px;\n  font-weight: 600\n}\n\n.apexcharts-tooltip-text-goals-label:empty,.apexcharts-tooltip-text-goals-value:empty,.apexcharts-tooltip-text-y-label:empty,.apexcharts-tooltip-text-y-value:empty,.apexcharts-tooltip-text-z-value:empty,.apexcharts-tooltip-title:empty {\n  display: none\n}\n\n.apexcharts-tooltip-text-goals-label,.apexcharts-tooltip-text-goals-value {\n  padding: 6px 0 5px\n}\n\n.apexcharts-tooltip-goals-group,.apexcharts-tooltip-text-goals-label,.apexcharts-tooltip-text-goals-value {\n  display: flex\n}\n\n.apexcharts-tooltip-text-goals-label:not(:empty),.apexcharts-tooltip-text-goals-value:not(:empty) {\n  margin-top: -6px\n}\n\n.apexcharts-tooltip-marker {\n  width: 12px;\n  height: 12px;\n  position: relative;\n  top: 0;\n  margin-right: 10px;\n  border-radius: 50%\n}\n\n.apexcharts-tooltip-series-group {\n  padding: 0 10px;\n  display: none;\n  text-align: left;\n  justify-content: left;\n  align-items: center\n}\n\n.apexcharts-tooltip-series-group.apexcharts-active .apexcharts-tooltip-marker {\n  opacity: 1\n}\n\n.apexcharts-tooltip-series-group.apexcharts-active,.apexcharts-tooltip-series-group:last-child {\n  padding-bottom: 4px\n}\n\n.apexcharts-tooltip-series-group-hidden {\n  opacity: 0;\n  height: 0;\n  line-height: 0;\n  padding: 0!important\n}\n\n.apexcharts-tooltip-y-group {\n  padding: 6px 0 5px\n}\n\n.apexcharts-custom-tooltip,.apexcharts-tooltip-box {\n  padding: 4px 8px\n}\n\n.apexcharts-tooltip-boxPlot {\n  display: flex;\n  flex-direction: column-reverse\n}\n\n.apexcharts-tooltip-box>div {\n  margin: 4px 0\n}\n\n.apexcharts-tooltip-box span.value {\n  font-weight: 700\n}\n\n.apexcharts-tooltip-rangebar {\n  padding: 5px 8px\n}\n\n.apexcharts-tooltip-rangebar .category {\n  font-weight: 600;\n  color: #777\n}\n\n.apexcharts-tooltip-rangebar .series-name {\n  font-weight: 700;\n  display: block;\n  margin-bottom: 5px\n}\n\n.apexcharts-xaxistooltip,.apexcharts-yaxistooltip {\n  opacity: 0;\n  pointer-events: none;\n  color: #373d3f;\n  font-size: 13px;\n  text-align: center;\n  border-radius: 2px;\n  position: absolute;\n  z-index: 10;\n  background: #eceff1;\n  border: 1px solid #90a4ae\n}\n\n.apexcharts-xaxistooltip {\n  padding: 9px 10px;\n  transition: .15s ease all\n}\n\n.apexcharts-xaxistooltip.apexcharts-theme-dark {\n  background: rgba(0,0,0,.7);\n  border: 1px solid rgba(0,0,0,.5);\n  color: #fff\n}\n\n.apexcharts-xaxistooltip:after,.apexcharts-xaxistooltip:before {\n  left: 50%;\n  border: solid transparent;\n  content: " ";\n  height: 0;\n  width: 0;\n  position: absolute;\n  pointer-events: none\n}\n\n.apexcharts-xaxistooltip:after {\n  border-color: transparent;\n  border-width: 6px;\n  margin-left: -6px\n}\n\n.apexcharts-xaxistooltip:before {\n  border-color: transparent;\n  border-width: 7px;\n  margin-left: -7px\n}\n\n.apexcharts-xaxistooltip-bottom:after,.apexcharts-xaxistooltip-bottom:before {\n  bottom: 100%\n}\n\n.apexcharts-xaxistooltip-top:after,.apexcharts-xaxistooltip-top:before {\n  top: 100%\n}\n\n.apexcharts-xaxistooltip-bottom:after {\n  border-bottom-color: #eceff1\n}\n\n.apexcharts-xaxistooltip-bottom:before {\n  border-bottom-color: #90a4ae\n}\n\n.apexcharts-xaxistooltip-bottom.apexcharts-theme-dark:after,.apexcharts-xaxistooltip-bottom.apexcharts-theme-dark:before {\n  border-bottom-color: rgba(0,0,0,.5)\n}\n\n.apexcharts-xaxistooltip-top:after {\n  border-top-color: #eceff1\n}\n\n.apexcharts-xaxistooltip-top:before {\n  border-top-color: #90a4ae\n}\n\n.apexcharts-xaxistooltip-top.apexcharts-theme-dark:after,.apexcharts-xaxistooltip-top.apexcharts-theme-dark:before {\n  border-top-color: rgba(0,0,0,.5)\n}\n\n.apexcharts-xaxistooltip.apexcharts-active {\n  opacity: 1;\n  transition: .15s ease all\n}\n\n.apexcharts-yaxistooltip {\n  padding: 4px 10px\n}\n\n.apexcharts-yaxistooltip.apexcharts-theme-dark {\n  background: rgba(0,0,0,.7);\n  border: 1px solid rgba(0,0,0,.5);\n  color: #fff\n}\n\n.apexcharts-yaxistooltip:after,.apexcharts-yaxistooltip:before {\n  top: 50%;\n  border: solid transparent;\n  content: " ";\n  height: 0;\n  width: 0;\n  position: absolute;\n  pointer-events: none\n}\n\n.apexcharts-yaxistooltip:after {\n  border-color: transparent;\n  border-width: 6px;\n  margin-top: -6px\n}\n\n.apexcharts-yaxistooltip:before {\n  border-color: transparent;\n  border-width: 7px;\n  margin-top: -7px\n}\n\n.apexcharts-yaxistooltip-left:after,.apexcharts-yaxistooltip-left:before {\n  left: 100%\n}\n\n.apexcharts-yaxistooltip-right:after,.apexcharts-yaxistooltip-right:before {\n  right: 100%\n}\n\n.apexcharts-yaxistooltip-left:after {\n  border-left-color: #eceff1\n}\n\n.apexcharts-yaxistooltip-left:before {\n  border-left-color: #90a4ae\n}\n\n.apexcharts-yaxistooltip-left.apexcharts-theme-dark:after,.apexcharts-yaxistooltip-left.apexcharts-theme-dark:before {\n  border-left-color: rgba(0,0,0,.5)\n}\n\n.apexcharts-yaxistooltip-right:after {\n  border-right-color: #eceff1\n}\n\n.apexcharts-yaxistooltip-right:before {\n  border-right-color: #90a4ae\n}\n\n.apexcharts-yaxistooltip-right.apexcharts-theme-dark:after,.apexcharts-yaxistooltip-right.apexcharts-theme-dark:before {\n  border-right-color: rgba(0,0,0,.5)\n}\n\n.apexcharts-yaxistooltip.apexcharts-active {\n  opacity: 1\n}\n\n.apexcharts-yaxistooltip-hidden {\n  display: none\n}\n\n.apexcharts-xcrosshairs,.apexcharts-ycrosshairs {\n  pointer-events: none;\n  opacity: 0;\n  transition: .15s ease all\n}\n\n.apexcharts-xcrosshairs.apexcharts-active,.apexcharts-ycrosshairs.apexcharts-active {\n  opacity: 1;\n  transition: .15s ease all\n}\n\n.apexcharts-ycrosshairs-hidden {\n  opacity: 0\n}\n\n.apexcharts-selection-rect {\n  cursor: move\n}\n\n.svg_select_boundingRect,.svg_select_points_rot {\n  pointer-events: none;\n  opacity: 0;\n  visibility: hidden\n}\n\n.apexcharts-selection-rect+g .svg_select_boundingRect,.apexcharts-selection-rect+g .svg_select_points_rot {\n  opacity: 0;\n  visibility: hidden\n}\n\n.apexcharts-selection-rect+g .svg_select_points_l,.apexcharts-selection-rect+g .svg_select_points_r {\n  cursor: ew-resize;\n  opacity: 1;\n  visibility: visible\n}\n\n.svg_select_points {\n  fill: #efefef;\n  stroke: #333;\n  rx: 2\n}\n\n.apexcharts-svg.apexcharts-zoomable.hovering-zoom {\n  cursor: crosshair\n}\n\n.apexcharts-svg.apexcharts-zoomable.hovering-pan {\n  cursor: move\n}\n\n.apexcharts-menu-icon,.apexcharts-pan-icon,.apexcharts-reset-icon,.apexcharts-selection-icon,.apexcharts-toolbar-custom-icon,.apexcharts-zoom-icon,.apexcharts-zoomin-icon,.apexcharts-zoomout-icon {\n  cursor: pointer;\n  width: 20px;\n  height: 20px;\n  line-height: 24px;\n  color: #6e8192;\n  text-align: center\n}\n\n.apexcharts-menu-icon svg,.apexcharts-reset-icon svg,.apexcharts-zoom-icon svg,.apexcharts-zoomin-icon svg,.apexcharts-zoomout-icon svg {\n  fill: #6e8192\n}\n\n.apexcharts-selection-icon svg {\n  fill: #444;\n  transform: scale(.76)\n}\n\n.apexcharts-theme-dark .apexcharts-menu-icon svg,.apexcharts-theme-dark .apexcharts-pan-icon svg,.apexcharts-theme-dark .apexcharts-reset-icon svg,.apexcharts-theme-dark .apexcharts-selection-icon svg,.apexcharts-theme-dark .apexcharts-toolbar-custom-icon svg,.apexcharts-theme-dark .apexcharts-zoom-icon svg,.apexcharts-theme-dark .apexcharts-zoomin-icon svg,.apexcharts-theme-dark .apexcharts-zoomout-icon svg {\n  fill: #f3f4f5\n}\n\n.apexcharts-canvas .apexcharts-reset-zoom-icon.apexcharts-selected svg,.apexcharts-canvas .apexcharts-selection-icon.apexcharts-selected svg,.apexcharts-canvas .apexcharts-zoom-icon.apexcharts-selected svg {\n  fill: #008ffb\n}\n\n.apexcharts-theme-light .apexcharts-menu-icon:hover svg,.apexcharts-theme-light .apexcharts-reset-icon:hover svg,.apexcharts-theme-light .apexcharts-selection-icon:not(.apexcharts-selected):hover svg,.apexcharts-theme-light .apexcharts-zoom-icon:not(.apexcharts-selected):hover svg,.apexcharts-theme-light .apexcharts-zoomin-icon:hover svg,.apexcharts-theme-light .apexcharts-zoomout-icon:hover svg {\n  fill: #333\n}\n\n.apexcharts-menu-icon,.apexcharts-selection-icon {\n  position: relative\n}\n\n.apexcharts-reset-icon {\n  margin-left: 5px\n}\n\n.apexcharts-menu-icon,.apexcharts-reset-icon,.apexcharts-zoom-icon {\n  transform: scale(.85)\n}\n\n.apexcharts-zoomin-icon,.apexcharts-zoomout-icon {\n  transform: scale(.7)\n}\n\n.apexcharts-zoomout-icon {\n  margin-right: 3px\n}\n\n.apexcharts-pan-icon {\n  transform: scale(.62);\n  position: relative;\n  left: 1px;\n  top: 0\n}\n\n.apexcharts-pan-icon svg {\n  fill: #fff;\n  stroke: #6e8192;\n  stroke-width: 2\n}\n\n.apexcharts-pan-icon.apexcharts-selected svg {\n  stroke: #008ffb\n}\n\n.apexcharts-pan-icon:not(.apexcharts-selected):hover svg {\n  stroke: #333\n}\n\n.apexcharts-toolbar {\n  position: absolute;\n  z-index: 11;\n  max-width: 176px;\n  text-align: right;\n  border-radius: 3px;\n  padding: 0 6px 2px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center\n}\n\n.apexcharts-menu {\n  background: #fff;\n  position: absolute;\n  top: 100%;\n  border: 1px solid #ddd;\n  border-radius: 3px;\n  padding: 3px;\n  right: 10px;\n  opacity: 0;\n  min-width: 110px;\n  transition: .15s ease all;\n  pointer-events: none\n}\n\n.apexcharts-menu.apexcharts-menu-open {\n  opacity: 1;\n  pointer-events: all;\n  transition: .15s ease all\n}\n\n.apexcharts-menu-item {\n  padding: 6px 7px;\n  font-size: 12px;\n  cursor: pointer\n}\n\n.apexcharts-theme-light .apexcharts-menu-item:hover {\n  background: #eee\n}\n\n.apexcharts-theme-dark .apexcharts-menu {\n  background: rgba(0,0,0,.7);\n  color: #fff\n}\n\n@media screen and (min-width:768px) {\n  .apexcharts-canvas:hover .apexcharts-toolbar {\n      opacity: 1\n  }\n}\n\n.apexcharts-canvas .apexcharts-element-hidden,.apexcharts-datalabel.apexcharts-element-hidden,.apexcharts-hide .apexcharts-series-points {\n  opacity: 0\n}\n\n.apexcharts-hidden-element-shown {\n  opacity: 1;\n  transition: 0.25s ease all;\n}\n.apexcharts-datalabel,.apexcharts-datalabel-label,.apexcharts-datalabel-value,.apexcharts-datalabels,.apexcharts-pie-label {\n  cursor: default;\n  pointer-events: none\n}\n\n.apexcharts-pie-label-delay {\n  opacity: 0;\n  animation-name: opaque;\n  animation-duration: .3s;\n  animation-fill-mode: forwards;\n  animation-timing-function: ease\n}\n\n.apexcharts-annotation-rect,.apexcharts-area-series .apexcharts-area,.apexcharts-area-series .apexcharts-series-markers .apexcharts-marker.no-pointer-events,.apexcharts-gridline,.apexcharts-line,.apexcharts-line-series .apexcharts-series-markers .apexcharts-marker.no-pointer-events,.apexcharts-point-annotation-label,.apexcharts-radar-series path,.apexcharts-radar-series polygon,.apexcharts-toolbar svg,.apexcharts-tooltip .apexcharts-marker,.apexcharts-xaxis-annotation-label,.apexcharts-yaxis-annotation-label,.apexcharts-zoom-rect {\n  pointer-events: none\n}\n\n.apexcharts-marker {\n  transition: .15s ease all\n}\n\n.resize-triggers {\n  animation: 1ms resizeanim;\n  visibility: hidden;\n  opacity: 0;\n  height: 100%;\n  width: 100%;\n  overflow: hidden\n}\n\n.contract-trigger:before,.resize-triggers,.resize-triggers>div {\n  content: " ";\n  display: block;\n  position: absolute;\n  top: 0;\n  left: 0\n}\n\n.resize-triggers>div {\n  height: 100%;\n  width: 100%;\n  background: #eee;\n  overflow: auto\n}\n\n.contract-trigger:before {\n  overflow: hidden;\n  width: 200%;\n  height: 200%\n}\n', r ? s.prepend(t.css) : o.head.appendChild(t.css));
          }
          var l = t.create(t.w.config.series, {});
          if (!l) return e(t);
          t.mount(l).then(function () {
            "function" == typeof t.w.config.chart.events.mounted && t.w.config.chart.events.mounted(t, t.w), t.events.fireEvent("mounted", [t, t.w]), e(l);
          }).catch(function (t) {
            i(t);
          });
        } else i(new Error("Element not found"));
      });
    }
  }, {
    key: "create",
    value: function (t, e) {
      var i = this.w;
      new Ot(this).initModules();
      var a = this.w.globals;
      (a.noData = !1, a.animationEnded = !1, this.responsive.checkResponsiveConfig(e), i.config.xaxis.convertedCatToNumeric) && new z(i.config).convertCatToNumericXaxis(i.config, this.ctx);
      if (null === this.el) return a.animationEnded = !0, null;
      if (this.core.setupElements(), "treemap" === i.config.chart.type && (i.config.grid.show = !1, i.config.yaxis[0].show = !1), 0 === a.svgWidth) return a.animationEnded = !0, null;
      var s = y.checkComboSeries(t);
      a.comboCharts = s.comboCharts, a.comboBarCount = s.comboBarCount;
      var r = t.every(function (t) {
        return t.data && 0 === t.data.length;
      });
      (0 === t.length || r) && this.series.handleNoData(), this.events.setupEventHandlers(), this.data.parseData(t), this.theme.init(), new H(this).setGlobalMarkerSize(), this.formatters.setLabelFormatters(), this.titleSubtitle.draw(), a.noData && a.collapsedSeries.length !== a.series.length && !i.config.legend.showForSingleSeries || this.legend.init(), this.series.hasAllSeriesEqualX(), a.axisCharts && (this.core.coreCalculations(), "category" !== i.config.xaxis.type && this.formatters.setLabelFormatters(), this.ctx.toolbar.minX = i.globals.minX, this.ctx.toolbar.maxX = i.globals.maxX), this.formatters.heatmapLabelFormatters(), new y(this).getLargestMarkerSize(), this.dimensions.plotCoords();
      var o = this.core.xySettings();
      this.grid.createGridMask();
      var n = this.core.plotChartType(t, o),
        l = new O(this);
      return l.bringForward(), i.config.dataLabels.background.enabled && l.dataLabelsBackground(), this.core.shiftGraphPosition(), {
        elGraph: n,
        xyRatios: o,
        dimensions: {
          plot: {
            left: i.globals.translateX,
            top: i.globals.translateY,
            width: i.globals.gridWidth,
            height: i.globals.gridHeight
          }
        }
      };
    }
  }, {
    key: "mount",
    value: function () {
      var t = this,
        e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null,
        i = this,
        a = i.w;
      return new Promise(function (s, r) {
        if (null === i.el) return r(new Error("Not enough data to display or target element not found"));
        (null === e || a.globals.allSeriesCollapsed) && i.series.handleNoData(), i.grid = new j(i);
        var o = i.grid.drawGrid();
        if (i.annotations = new P(i), i.annotations.drawImageAnnos(), i.annotations.drawTextAnnos(), "back" === a.config.grid.position && o && a.globals.dom.elGraphical.add(o.el), Array.isArray(e.elGraph)) for (var n = 0; n < e.elGraph.length; n++) a.globals.dom.elGraphical.add(e.elGraph[n]);else a.globals.dom.elGraphical.add(e.elGraph);
        "front" === a.config.grid.position && o && a.globals.dom.elGraphical.add(o.el), o && o.elGridBorders && o.elGridBorders.node && a.globals.dom.elGraphical.add(o.elGridBorders), "front" === a.config.xaxis.crosshairs.position && i.crosshairs.drawXCrosshairs(), "front" === a.config.yaxis[0].crosshairs.position && i.crosshairs.drawYCrosshairs(), "treemap" !== a.config.chart.type && i.axes.drawAxis(a.config.chart.type, o);
        var l = new V(t.ctx, o),
          h = new q(t.ctx, o);
        if (null !== o && (l.xAxisLabelCorrections(o.xAxisTickWidth), h.setYAxisTextAlignments(), a.config.yaxis.map(function (t, e) {
          -1 === a.globals.ignoreYAxisIndexes.indexOf(e) && h.yAxisTitleRotate(e, t.opposite);
        })), i.annotations.drawAxesAnnotations(), !a.globals.noData) {
          if (a.config.tooltip.enabled && !a.globals.noData && i.w.globals.tooltip.drawTooltip(e.xyRatios), a.globals.axisCharts && (a.globals.isXNumeric || a.config.xaxis.convertedCatToNumeric || a.globals.isRangeBar)) (a.config.chart.zoom.enabled || a.config.chart.selection && a.config.chart.selection.enabled || a.config.chart.pan && a.config.chart.pan.enabled) && i.zoomPanSelection.init({
            xyRatios: e.xyRatios
          });else {
            var c = a.config.chart.toolbar.tools;
            ["zoom", "zoomin", "zoomout", "selection", "pan", "reset"].forEach(function (t) {
              c[t] = !1;
            });
          }
          a.config.chart.toolbar.show && !a.globals.allSeriesCollapsed && i.toolbar.createToolbar();
        }
        a.globals.memory.methodsToExec.length > 0 && a.globals.memory.methodsToExec.forEach(function (t) {
          t.method(t.params, !1, t.context);
        }), a.globals.axisCharts || a.globals.noData || i.core.resizeNonAxisCharts(), s(i);
      });
    }
  }, {
    key: "destroy",
    value: function () {
      var t, e;
      window.removeEventListener("resize", this.windowResizeHandler), this.el.parentNode, t = this.parentResizeHandler, (e = Wt.get(t)) && (e.disconnect(), Wt.delete(t));
      var i = this.w.config.chart.id;
      i && Apex._chartInstances.forEach(function (t, e) {
        t.id === x.escapeString(i) && Apex._chartInstances.splice(e, 1);
      }), new Nt(this.ctx).clear({
        isUpdating: !1
      });
    }
  }, {
    key: "updateOptions",
    value: function (t) {
      var e = this,
        i = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
        a = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2],
        s = !(arguments.length > 3 && void 0 !== arguments[3]) || arguments[3],
        r = !(arguments.length > 4 && void 0 !== arguments[4]) || arguments[4],
        o = this.w;
      return o.globals.selection = void 0, t.series && (this.series.resetSeries(!1, !0, !1), t.series.length && t.series[0].data && (t.series = t.series.map(function (t, i) {
        return e.updateHelpers._extendSeries(t, i);
      })), this.updateHelpers.revertDefaultAxisMinMax()), t.xaxis && (t = this.updateHelpers.forceXAxisUpdate(t)), t.yaxis && (t = this.updateHelpers.forceYAxisUpdate(t)), o.globals.collapsedSeriesIndices.length > 0 && this.series.clearPreviousPaths(), t.theme && (t = this.theme.updateThemeOptions(t)), this.updateHelpers._updateOptions(t, i, a, s, r);
    }
  }, {
    key: "updateSeries",
    value: function () {
      var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [],
        e = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1],
        i = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2];
      return this.series.resetSeries(!1), this.updateHelpers.revertDefaultAxisMinMax(), this.updateHelpers._updateSeries(t, e, i);
    }
  }, {
    key: "appendSeries",
    value: function (t) {
      var e = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1],
        i = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2],
        a = this.w.config.series.slice();
      return a.push(t), this.series.resetSeries(!1), this.updateHelpers.revertDefaultAxisMinMax(), this.updateHelpers._updateSeries(a, e, i);
    }
  }, {
    key: "appendData",
    value: function (t) {
      var e = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1],
        i = this;
      i.w.globals.dataChanged = !0, i.series.getPreviousPaths();
      for (var a = i.w.config.series.slice(), s = 0; s < a.length; s++) if (null !== t[s] && void 0 !== t[s]) for (var r = 0; r < t[s].data.length; r++) a[s].data.push(t[s].data[r]);
      return i.w.config.series = a, e && (i.w.globals.initialSeries = x.clone(i.w.config.series)), this.update();
    }
  }, {
    key: "update",
    value: function (t) {
      var e = this;
      return new Promise(function (i, a) {
        new Nt(e.ctx).clear({
          isUpdating: !0
        });
        var s = e.create(e.w.config.series, t);
        if (!s) return i(e);
        e.mount(s).then(function () {
          "function" == typeof e.w.config.chart.events.updated && e.w.config.chart.events.updated(e, e.w), e.events.fireEvent("updated", [e, e.w]), e.w.globals.isDirty = !0, i(e);
        }).catch(function (t) {
          a(t);
        });
      });
    }
  }, {
    key: "getSyncedCharts",
    value: function () {
      var t = this.getGroupedCharts(),
        e = [this];
      return t.length && (e = [], t.forEach(function (t) {
        e.push(t);
      })), e;
    }
  }, {
    key: "getGroupedCharts",
    value: function () {
      var t = this;
      return Apex._chartInstances.filter(function (t) {
        if (t.group) return !0;
      }).map(function (e) {
        return t.w.config.chart.group === e.group ? e.chart : t;
      });
    }
  }, {
    key: "toggleSeries",
    value: function (t) {
      return this.series.toggleSeries(t);
    }
  }, {
    key: "highlightSeriesOnLegendHover",
    value: function (t, e) {
      return this.series.toggleSeriesOnHover(t, e);
    }
  }, {
    key: "showSeries",
    value: function (t) {
      this.series.showSeries(t);
    }
  }, {
    key: "hideSeries",
    value: function (t) {
      this.series.hideSeries(t);
    }
  }, {
    key: "resetSeries",
    value: function () {
      var t = !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0],
        e = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1];
      this.series.resetSeries(t, e);
    }
  }, {
    key: "addEventListener",
    value: function (t, e) {
      this.events.addEventListener(t, e);
    }
  }, {
    key: "removeEventListener",
    value: function (t, e) {
      this.events.removeEventListener(t, e);
    }
  }, {
    key: "addXaxisAnnotation",
    value: function (t) {
      var e = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1],
        i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : void 0,
        a = this;
      i && (a = i), a.annotations.addXaxisAnnotationExternal(t, e, a);
    }
  }, {
    key: "addYaxisAnnotation",
    value: function (t) {
      var e = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1],
        i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : void 0,
        a = this;
      i && (a = i), a.annotations.addYaxisAnnotationExternal(t, e, a);
    }
  }, {
    key: "addPointAnnotation",
    value: function (t) {
      var e = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1],
        i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : void 0,
        a = this;
      i && (a = i), a.annotations.addPointAnnotationExternal(t, e, a);
    }
  }, {
    key: "clearAnnotations",
    value: function () {
      var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : void 0,
        e = this;
      t && (e = t), e.annotations.clearAnnotations(e);
    }
  }, {
    key: "removeAnnotation",
    value: function (t) {
      var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : void 0,
        i = this;
      e && (i = e), i.annotations.removeAnnotation(i, t);
    }
  }, {
    key: "getChartArea",
    value: function () {
      return this.w.globals.dom.baseEl.querySelector(".apexcharts-inner");
    }
  }, {
    key: "getSeriesTotalXRange",
    value: function (t, e) {
      return this.coreUtils.getSeriesTotalsXRange(t, e);
    }
  }, {
    key: "getHighestValueInSeries",
    value: function () {
      var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0;
      return new U(this.ctx).getMinYMaxY(t).highestY;
    }
  }, {
    key: "getLowestValueInSeries",
    value: function () {
      var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0;
      return new U(this.ctx).getMinYMaxY(t).lowestY;
    }
  }, {
    key: "getSeriesTotal",
    value: function () {
      return this.w.globals.seriesTotals;
    }
  }, {
    key: "toggleDataPointSelection",
    value: function (t, e) {
      return this.updateHelpers.toggleDataPointSelection(t, e);
    }
  }, {
    key: "zoomX",
    value: function (t, e) {
      this.ctx.toolbar.zoomUpdateOptions(t, e);
    }
  }, {
    key: "setLocale",
    value: function (t) {
      this.localization.setCurrentLocaleValues(t);
    }
  }, {
    key: "dataURI",
    value: function (t) {
      return new G(this.ctx).dataURI(t);
    }
  }, {
    key: "exportToCSV",
    value: function () {
      var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
      return new G(this.ctx).exportToCSV(t);
    }
  }, {
    key: "paper",
    value: function () {
      return this.w.globals.dom.Paper;
    }
  }, {
    key: "_parentResizeCallback",
    value: function () {
      this.w.globals.animationEnded && this.w.config.chart.redrawOnParentResize && this._windowResize();
    }
  }, {
    key: "_windowResize",
    value: function () {
      var t = this;
      clearTimeout(this.w.globals.resizeTimer), this.w.globals.resizeTimer = window.setTimeout(function () {
        t.w.globals.resized = !0, t.w.globals.dataChanged = !1, t.ctx.update();
      }, 150);
    }
  }, {
    key: "_windowResizeHandler",
    value: function () {
      var t = this.w.config.chart.redrawOnWindowResize;
      "function" == typeof t && (t = t()), t && this._windowResize();
    }
  }], [{
    key: "getChartByID",
    value: function (t) {
      var e = x.escapeString(t),
        i = Apex._chartInstances.filter(function (t) {
          return t.id === e;
        })[0];
      return i && i.chart;
    }
  }, {
    key: "initOnLoad",
    value: function () {
      for (var e = document.querySelectorAll("[data-apexcharts]"), i = 0; i < e.length; i++) {
        new t(e[i], JSON.parse(e[i].getAttribute("data-options"))).render();
      }
    }
  }, {
    key: "exec",
    value: function (t, e) {
      var i = this.getChartByID(t);
      if (i) {
        i.w.globals.isExecCalled = !0;
        var a = null;
        if (-1 !== i.publicMethods.indexOf(e)) {
          for (var s = arguments.length, r = new Array(s > 2 ? s - 2 : 0), o = 2; o < s; o++) r[o - 2] = arguments[o];
          a = i[e].apply(i, r);
        }
        return a;
      }
    }
  }, {
    key: "merge",
    value: function (t, e) {
      return x.extend(t, e);
    }
  }]), t;
}();
module.exports = Bt;

/***/ }),

/***/ 6778:
/*!*******************************************************!*\
  !*** ./node_modules/file-saver/dist/FileSaver.min.js ***!
  \*******************************************************/
/***/ (function(module, exports) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (a, b) {
  if (true) !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (b),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));else {}
})(this, function () {
  "use strict";

  function b(a, b) {
    return "undefined" == typeof b ? b = {
      autoBom: !1
    } : "object" != typeof b && (console.warn("Deprecated: Expected third argument to be a object"), b = {
      autoBom: !b
    }), b.autoBom && /^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(a.type) ? new Blob(["\uFEFF", a], {
      type: a.type
    }) : a;
  }
  function c(a, b, c) {
    var d = new XMLHttpRequest();
    d.open("GET", a), d.responseType = "blob", d.onload = function () {
      g(d.response, b, c);
    }, d.onerror = function () {
      console.error("could not download file");
    }, d.send();
  }
  function d(a) {
    var b = new XMLHttpRequest();
    b.open("HEAD", a, !1);
    try {
      b.send();
    } catch (a) {}
    return 200 <= b.status && 299 >= b.status;
  }
  function e(a) {
    try {
      a.dispatchEvent(new MouseEvent("click"));
    } catch (c) {
      var b = document.createEvent("MouseEvents");
      b.initMouseEvent("click", !0, !0, window, 0, 0, 0, 80, 20, !1, !1, !1, !1, 0, null), a.dispatchEvent(b);
    }
  }
  var f = "object" == typeof window && window.window === window ? window : "object" == typeof self && self.self === self ? self : "object" == typeof global && global.global === global ? global : void 0,
    a = f.navigator && /Macintosh/.test(navigator.userAgent) && /AppleWebKit/.test(navigator.userAgent) && !/Safari/.test(navigator.userAgent),
    g = f.saveAs || ("object" != typeof window || window !== f ? function () {} : "download" in HTMLAnchorElement.prototype && !a ? function (b, g, h) {
      var i = f.URL || f.webkitURL,
        j = document.createElement("a");
      g = g || b.name || "download", j.download = g, j.rel = "noopener", "string" == typeof b ? (j.href = b, j.origin === location.origin ? e(j) : d(j.href) ? c(b, g, h) : e(j, j.target = "_blank")) : (j.href = i.createObjectURL(b), setTimeout(function () {
        i.revokeObjectURL(j.href);
      }, 4E4), setTimeout(function () {
        e(j);
      }, 0));
    } : "msSaveOrOpenBlob" in navigator ? function (f, g, h) {
      if (g = g || f.name || "download", "string" != typeof f) navigator.msSaveOrOpenBlob(b(f, h), g);else if (d(f)) c(f, g, h);else {
        var i = document.createElement("a");
        i.href = f, i.target = "_blank", setTimeout(function () {
          e(i);
        });
      }
    } : function (b, d, e, g) {
      if (g = g || open("", "_blank"), g && (g.document.title = g.document.body.innerText = "downloading..."), "string" == typeof b) return c(b, d, e);
      var h = "application/octet-stream" === b.type,
        i = /constructor/i.test(f.HTMLElement) || f.safari,
        j = /CriOS\/[\d]+/.test(navigator.userAgent);
      if ((j || h && i || a) && "undefined" != typeof FileReader) {
        var k = new FileReader();
        k.onloadend = function () {
          var a = k.result;
          a = j ? a : a.replace(/^data:[^;]*;/, "data:attachment/file;"), g ? g.location.href = a : location = a, g = null;
        }, k.readAsDataURL(b);
      } else {
        var l = f.URL || f.webkitURL,
          m = l.createObjectURL(b);
        g ? g.location = m : location.href = m, g = null, setTimeout(function () {
          l.revokeObjectURL(m);
        }, 4E4);
      }
    });
  f.saveAs = g.saveAs = g,  true && (module.exports = g);
});

/***/ }),

/***/ 7104:
/*!********************************************!*\
  !*** ./node_modules/ngx-lightbox/index.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   LIGHTBOX_EVENT: () => (/* reexport safe */ _lightbox_event_service__WEBPACK_IMPORTED_MODULE_2__.LIGHTBOX_EVENT),
/* harmony export */   Lightbox: () => (/* reexport safe */ _lightbox_service__WEBPACK_IMPORTED_MODULE_0__.Lightbox),
/* harmony export */   LightboxConfig: () => (/* reexport safe */ _lightbox_config_service__WEBPACK_IMPORTED_MODULE_1__.LightboxConfig),
/* harmony export */   LightboxEvent: () => (/* reexport safe */ _lightbox_event_service__WEBPACK_IMPORTED_MODULE_2__.LightboxEvent),
/* harmony export */   LightboxModule: () => (/* reexport safe */ _lightbox_module__WEBPACK_IMPORTED_MODULE_3__.LightboxModule)
/* harmony export */ });
/* harmony import */ var _lightbox_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lightbox.service */ 5990);
/* harmony import */ var _lightbox_config_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lightbox-config.service */ 8525);
/* harmony import */ var _lightbox_event_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lightbox-event.service */ 5336);
/* harmony import */ var _lightbox_module__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lightbox.module */ 4360);





/***/ }),

/***/ 8525:
/*!**************************************************************!*\
  !*** ./node_modules/ngx-lightbox/lightbox-config.service.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   LightboxConfig: () => (/* binding */ LightboxConfig)
/* harmony export */ });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ 1699);


class LightboxConfig {
  constructor() {
    this.fadeDuration = 0.7;
    this.resizeDuration = 0.5;
    this.fitImageInViewPort = true;
    this.positionFromTop = 20;
    this.showImageNumberLabel = false;
    this.alwaysShowNavOnTouchDevices = false;
    this.wrapAround = false;
    this.disableKeyboardNav = false;
    this.disableScrolling = false;
    this.centerVertically = false;
    this.enableTransition = true;
    this.albumLabel = 'Image %1 of %2';
    this.showZoom = false;
    this.showRotate = false;
    this.containerElementResolver = documentRef => documentRef.querySelector('body');
  }
}
LightboxConfig.ɵfac = function LightboxConfig_Factory(t) {
  return new (t || LightboxConfig)();
};
LightboxConfig.ɵprov = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({
  token: LightboxConfig,
  factory: LightboxConfig.ɵfac
});
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](LightboxConfig, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Injectable
  }], function () {
    return [];
  }, null);
})();

/***/ }),

/***/ 5336:
/*!*************************************************************!*\
  !*** ./node_modules/ngx-lightbox/lightbox-event.service.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   LIGHTBOX_EVENT: () => (/* binding */ LIGHTBOX_EVENT),
/* harmony export */   LightboxEvent: () => (/* binding */ LightboxEvent),
/* harmony export */   LightboxWindowRef: () => (/* binding */ LightboxWindowRef)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! rxjs */ 2513);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ 1699);



const LIGHTBOX_EVENT = {
  CHANGE_PAGE: 1,
  CLOSE: 2,
  OPEN: 3,
  ZOOM_IN: 4,
  ZOOM_OUT: 5,
  ROTATE_LEFT: 6,
  ROTATE_RIGHT: 7
};
class LightboxEvent {
  constructor() {
    this._lightboxEventSource = new rxjs__WEBPACK_IMPORTED_MODULE_0__.Subject();
    this.lightboxEvent$ = this._lightboxEventSource.asObservable();
  }
  broadcastLightboxEvent(event) {
    this._lightboxEventSource.next(event);
  }
}
LightboxEvent.ɵfac = function LightboxEvent_Factory(t) {
  return new (t || LightboxEvent)();
};
LightboxEvent.ɵprov = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjectable"]({
  token: LightboxEvent,
  factory: LightboxEvent.ɵfac
});
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](LightboxEvent, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Injectable
  }], function () {
    return [];
  }, null);
})();
function getWindow() {
  return window;
}
class LightboxWindowRef {
  get nativeWindow() {
    return getWindow();
  }
}
LightboxWindowRef.ɵfac = function LightboxWindowRef_Factory(t) {
  return new (t || LightboxWindowRef)();
};
LightboxWindowRef.ɵprov = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjectable"]({
  token: LightboxWindowRef,
  factory: LightboxWindowRef.ɵfac
});
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](LightboxWindowRef, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Injectable
  }], null, null);
})();

/***/ }),

/***/ 2274:
/*!*****************************************************************!*\
  !*** ./node_modules/ngx-lightbox/lightbox-overlay.component.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   LightboxOverlayComponent: () => (/* binding */ LightboxOverlayComponent)
/* harmony export */ });
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common */ 6575);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ 1699);
/* harmony import */ var _lightbox_event_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lightbox-event.service */ 5336);





const _c0 = ["lb-overlay", ""];
class LightboxOverlayComponent {
  constructor(_elemRef, _rendererRef, _lightboxEvent, _documentRef) {
    this._elemRef = _elemRef;
    this._rendererRef = _rendererRef;
    this._lightboxEvent = _lightboxEvent;
    this._documentRef = _documentRef;
    this.classList = 'lightboxOverlay animation fadeInOverlay';
    this._subscription = this._lightboxEvent.lightboxEvent$.subscribe(event => this._onReceivedEvent(event));
  }
  close() {
    // broadcast to itself and all others subscriber including the components
    this._lightboxEvent.broadcastLightboxEvent({
      id: _lightbox_event_service__WEBPACK_IMPORTED_MODULE_0__.LIGHTBOX_EVENT.CLOSE,
      data: null
    });
  }
  ngAfterViewInit() {
    const fadeDuration = this.options.fadeDuration;
    this._rendererRef.setStyle(this._elemRef.nativeElement, '-webkit-animation-duration', `${fadeDuration}s`);
    this._rendererRef.setStyle(this._elemRef.nativeElement, 'animation-duration', `${fadeDuration}s`);
    this._sizeOverlay();
  }
  onResize() {
    this._sizeOverlay();
  }
  ngOnDestroy() {
    this._subscription.unsubscribe();
  }
  _sizeOverlay() {
    const width = this._getOverlayWidth();
    const height = this._getOverlayHeight();
    this._rendererRef.setStyle(this._elemRef.nativeElement, 'width', `${width}px`);
    this._rendererRef.setStyle(this._elemRef.nativeElement, 'height', `${height}px`);
  }
  _onReceivedEvent(event) {
    switch (event.id) {
      case _lightbox_event_service__WEBPACK_IMPORTED_MODULE_0__.LIGHTBOX_EVENT.CLOSE:
        this._end();
        break;
      default:
        break;
    }
  }
  _end() {
    this.classList = 'lightboxOverlay animation fadeOutOverlay';
    // queue self destruction after the animation has finished
    // FIXME: not sure if there is any way better than this
    setTimeout(() => {
      this.cmpRef.destroy();
    }, this.options.fadeDuration * 1000);
  }
  _getOverlayWidth() {
    return Math.max(this._documentRef.body.scrollWidth, this._documentRef.body.offsetWidth, this._documentRef.documentElement.clientWidth, this._documentRef.documentElement.scrollWidth, this._documentRef.documentElement.offsetWidth);
  }
  _getOverlayHeight() {
    return Math.max(this._documentRef.body.scrollHeight, this._documentRef.body.offsetHeight, this._documentRef.documentElement.clientHeight, this._documentRef.documentElement.scrollHeight, this._documentRef.documentElement.offsetHeight);
  }
}
LightboxOverlayComponent.ɵfac = function LightboxOverlayComponent_Factory(t) {
  return new (t || LightboxOverlayComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__.ElementRef), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__.Renderer2), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_lightbox_event_service__WEBPACK_IMPORTED_MODULE_0__.LightboxEvent), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_common__WEBPACK_IMPORTED_MODULE_2__.DOCUMENT));
};
LightboxOverlayComponent.ɵcmp = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineComponent"]({
  type: LightboxOverlayComponent,
  selectors: [["", "lb-overlay", ""]],
  hostVars: 2,
  hostBindings: function LightboxOverlayComponent_HostBindings(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("click", function LightboxOverlayComponent_click_HostBindingHandler() {
        return ctx.close();
      })("resize", function LightboxOverlayComponent_resize_HostBindingHandler() {
        return ctx.onResize();
      }, false, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵresolveWindow"]);
    }
    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵclassMap"](ctx.classList);
    }
  },
  inputs: {
    options: "options",
    cmpRef: "cmpRef"
  },
  attrs: _c0,
  decls: 0,
  vars: 0,
  template: function LightboxOverlayComponent_Template(rf, ctx) {},
  encapsulation: 2
});
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](LightboxOverlayComponent, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Component,
    args: [{
      selector: '[lb-overlay]',
      template: '',
      host: {
        '[class]': 'classList'
      }
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ElementRef
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Renderer2
    }, {
      type: _lightbox_event_service__WEBPACK_IMPORTED_MODULE_0__.LightboxEvent
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Inject,
        args: [_angular_common__WEBPACK_IMPORTED_MODULE_2__.DOCUMENT]
      }]
    }];
  }, {
    options: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input
    }],
    cmpRef: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input
    }],
    close: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.HostListener,
      args: ['click']
    }],
    onResize: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.HostListener,
      args: ['window:resize']
    }]
  });
})();

/***/ }),

/***/ 646:
/*!*********************************************************!*\
  !*** ./node_modules/ngx-lightbox/lightbox.component.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   LightboxComponent: () => (/* binding */ LightboxComponent)
/* harmony export */ });
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/common */ 6575);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ 1699);
/* harmony import */ var _lightbox_event_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lightbox-event.service */ 5336);
/* harmony import */ var ngx_filesaver__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ngx-filesaver */ 1882);
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/platform-browser */ 6480);









const _c0 = ["outerContainer"];
const _c1 = ["container"];
const _c2 = ["leftArrow"];
const _c3 = ["rightArrow"];
const _c4 = ["navArrow"];
const _c5 = ["dataContainer"];
const _c6 = ["image"];
const _c7 = ["caption"];
const _c8 = ["number"];
const _c9 = ["lb-content", ""];
class LightboxComponent {
  constructor(_elemRef, _rendererRef, _lightboxEvent, _lightboxElem, _lightboxWindowRef, _fileSaverService, _sanitizer, _documentRef) {
    this._elemRef = _elemRef;
    this._rendererRef = _rendererRef;
    this._lightboxEvent = _lightboxEvent;
    this._lightboxElem = _lightboxElem;
    this._lightboxWindowRef = _lightboxWindowRef;
    this._fileSaverService = _fileSaverService;
    this._sanitizer = _sanitizer;
    this._documentRef = _documentRef;
    // initialize data
    this.options = this.options || {};
    this.album = this.album || [];
    this.currentImageIndex = this.currentImageIndex || 0;
    this._windowRef = this._lightboxWindowRef.nativeWindow;
    // control the interactive of the directive
    this.ui = {
      // control the appear of the reloader
      // false: image has loaded completely and ready to be shown
      // true: image is still loading
      showReloader: true,
      // control the appear of the nav arrow
      // the arrowNav is the parent of both left and right arrow
      // in some cases, the parent shows but the child does not show
      showLeftArrow: false,
      showRightArrow: false,
      showArrowNav: false,
      // control the appear of the zoom and rotate buttons
      showZoomButton: false,
      showRotateButton: false,
      // control whether to show the
      // page number or not
      showPageNumber: false,
      showCaption: false,
      // control whether to show the download button or not
      showDownloadButton: false,
      classList: 'lightbox animation fadeIn'
    };
    this.content = {
      pageNumber: ''
    };
    this._event = {};
    this._lightboxElem = this._elemRef;
    this._event.subscription = this._lightboxEvent.lightboxEvent$.subscribe(event => this._onReceivedEvent(event));
    this.rotate = 0;
  }
  ngOnInit() {
    this.album.forEach(album => {
      if (album.caption) {
        album.caption = this._sanitizer.sanitize(_angular_core__WEBPACK_IMPORTED_MODULE_1__.SecurityContext.HTML, album.caption);
      }
    });
  }
  ngAfterViewInit() {
    // need to init css value here, after the view ready
    // actually these values are always 0
    this._cssValue = {
      containerTopPadding: Math.round(this._getCssStyleValue(this._containerElem, 'padding-top')),
      containerRightPadding: Math.round(this._getCssStyleValue(this._containerElem, 'padding-right')),
      containerBottomPadding: Math.round(this._getCssStyleValue(this._containerElem, 'padding-bottom')),
      containerLeftPadding: Math.round(this._getCssStyleValue(this._containerElem, 'padding-left')),
      imageBorderWidthTop: Math.round(this._getCssStyleValue(this._imageElem, 'border-top-width')),
      imageBorderWidthBottom: Math.round(this._getCssStyleValue(this._imageElem, 'border-bottom-width')),
      imageBorderWidthLeft: Math.round(this._getCssStyleValue(this._imageElem, 'border-left-width')),
      imageBorderWidthRight: Math.round(this._getCssStyleValue(this._imageElem, 'border-right-width'))
    };
    if (this._validateInputData()) {
      this._prepareComponent();
      this._registerImageLoadingEvent();
    }
  }
  ngOnDestroy() {
    if (!this.options.disableKeyboardNav) {
      // unbind keyboard event
      this._disableKeyboardNav();
    }
    this._event.subscription.unsubscribe();
  }
  close($event) {
    $event.stopPropagation();
    if ($event.target.classList.contains('lightbox') || $event.target.classList.contains('lb-loader') || $event.target.classList.contains('lb-close')) {
      this._lightboxEvent.broadcastLightboxEvent({
        id: _lightbox_event_service__WEBPACK_IMPORTED_MODULE_0__.LIGHTBOX_EVENT.CLOSE,
        data: null
      });
    }
  }
  download($event) {
    $event.stopPropagation();
    const url = this.album[this.currentImageIndex].src;
    const downloadUrl = this.album[this.currentImageIndex].downloadUrl;
    const parts = url.split('/');
    const fileName = parts[parts.length - 1];
    const canvas = document.createElement('canvas');
    const ctx = canvas.getContext('2d');
    const preloader = new Image();
    const _this = this;
    preloader.onload = function () {
      // @ts-ignore
      canvas.width = this.naturalWidth;
      // @ts-ignore
      canvas.height = this.naturalHeight;
      // @ts-ignore
      ctx.drawImage(this, 0, 0);
      canvas.toBlob(function (blob) {
        _this._fileSaverService.save(blob, fileName);
      }, 'image/jpeg', 0.75);
    };
    preloader.crossOrigin = '';
    if (downloadUrl && downloadUrl.length > 0) preloader.src = this._sanitizer.sanitize(_angular_core__WEBPACK_IMPORTED_MODULE_1__.SecurityContext.URL, downloadUrl);else preloader.src = this._sanitizer.sanitize(_angular_core__WEBPACK_IMPORTED_MODULE_1__.SecurityContext.URL, url);
  }
  control($event) {
    $event.stopPropagation();
    let height;
    let width;
    if ($event.target.classList.contains('lb-turnLeft')) {
      this.rotate = this.rotate - 90;
      this._rotateContainer();
      this._calcTransformPoint();
      this._documentRef.getElementById('image').style.transform = `rotate(${this.rotate}deg)`;
      this._documentRef.getElementById('image').style.webkitTransform = `rotate(${this.rotate}deg)`;
      this._lightboxEvent.broadcastLightboxEvent({
        id: _lightbox_event_service__WEBPACK_IMPORTED_MODULE_0__.LIGHTBOX_EVENT.ROTATE_LEFT,
        data: null
      });
    } else if ($event.target.classList.contains('lb-turnRight')) {
      this.rotate = this.rotate + 90;
      this._rotateContainer();
      this._calcTransformPoint();
      this._documentRef.getElementById('image').style.transform = `rotate(${this.rotate}deg)`;
      this._documentRef.getElementById('image').style.webkitTransform = `rotate(${this.rotate}deg)`;
      this._lightboxEvent.broadcastLightboxEvent({
        id: _lightbox_event_service__WEBPACK_IMPORTED_MODULE_0__.LIGHTBOX_EVENT.ROTATE_RIGHT,
        data: null
      });
    } else if ($event.target.classList.contains('lb-zoomOut')) {
      height = parseInt(this._documentRef.getElementById('outerContainer').style.height, 10) / 1.5;
      width = parseInt(this._documentRef.getElementById('outerContainer').style.width, 10) / 1.5;
      this._documentRef.getElementById('outerContainer').style.height = height + 'px';
      this._documentRef.getElementById('outerContainer').style.width = width + 'px';
      height = parseInt(this._documentRef.getElementById('image').style.height, 10) / 1.5;
      width = parseInt(this._documentRef.getElementById('image').style.width, 10) / 1.5;
      this._documentRef.getElementById('image').style.height = height + 'px';
      this._documentRef.getElementById('image').style.width = width + 'px';
      this._lightboxEvent.broadcastLightboxEvent({
        id: _lightbox_event_service__WEBPACK_IMPORTED_MODULE_0__.LIGHTBOX_EVENT.ZOOM_OUT,
        data: null
      });
    } else if ($event.target.classList.contains('lb-zoomIn')) {
      height = parseInt(this._documentRef.getElementById('outerContainer').style.height, 10) * 1.5;
      width = parseInt(this._documentRef.getElementById('outerContainer').style.width, 10) * 1.5;
      this._documentRef.getElementById('outerContainer').style.height = height + 'px';
      this._documentRef.getElementById('outerContainer').style.width = width + 'px';
      height = parseInt(this._documentRef.getElementById('image').style.height, 10) * 1.5;
      width = parseInt(this._documentRef.getElementById('image').style.width, 10) * 1.5;
      this._documentRef.getElementById('image').style.height = height + 'px';
      this._documentRef.getElementById('image').style.width = width + 'px';
      this._lightboxEvent.broadcastLightboxEvent({
        id: _lightbox_event_service__WEBPACK_IMPORTED_MODULE_0__.LIGHTBOX_EVENT.ZOOM_IN,
        data: null
      });
    }
  }
  _rotateContainer() {
    let temp = this.rotate;
    if (temp < 0) {
      temp *= -1;
    }
    if (temp / 90 % 4 === 1 || temp / 90 % 4 === 3) {
      this._documentRef.getElementById('outerContainer').style.height = this._documentRef.getElementById('image').style.width;
      this._documentRef.getElementById('outerContainer').style.width = this._documentRef.getElementById('image').style.height;
      this._documentRef.getElementById('container').style.height = this._documentRef.getElementById('image').style.width;
      this._documentRef.getElementById('container').style.width = this._documentRef.getElementById('image').style.height;
    } else {
      this._documentRef.getElementById('outerContainer').style.height = this._documentRef.getElementById('image').style.height;
      this._documentRef.getElementById('outerContainer').style.width = this._documentRef.getElementById('image').style.width;
      this._documentRef.getElementById('container').style.height = this._documentRef.getElementById('image').style.width;
      this._documentRef.getElementById('container').style.width = this._documentRef.getElementById('image').style.height;
    }
  }
  _resetImage() {
    this.rotate = 0;
    this._documentRef.getElementById('image').style.transform = `rotate(${this.rotate}deg)`;
    this._documentRef.getElementById('image').style.webkitTransform = `rotate(${this.rotate}deg)`;
  }
  _calcTransformPoint() {
    let height = parseInt(this._documentRef.getElementById('image').style.height, 10);
    let width = parseInt(this._documentRef.getElementById('image').style.width, 10);
    let temp = this.rotate % 360;
    if (temp < 0) {
      temp = 360 + temp;
    }
    if (temp === 90) {
      this._documentRef.getElementById('image').style.transformOrigin = height / 2 + 'px ' + height / 2 + 'px';
    } else if (temp === 180) {
      this._documentRef.getElementById('image').style.transformOrigin = width / 2 + 'px ' + height / 2 + 'px';
    } else if (temp === 270) {
      this._documentRef.getElementById('image').style.transformOrigin = width / 2 + 'px ' + width / 2 + 'px';
    }
  }
  nextImage() {
    if (this.album.length === 1) {
      return;
    } else if (this.currentImageIndex === this.album.length - 1) {
      this._changeImage(0);
    } else {
      this._changeImage(this.currentImageIndex + 1);
    }
  }
  prevImage() {
    if (this.album.length === 1) {
      return;
    } else if (this.currentImageIndex === 0 && this.album.length > 1) {
      this._changeImage(this.album.length - 1);
    } else {
      this._changeImage(this.currentImageIndex - 1);
    }
  }
  _validateInputData() {
    if (this.album && this.album instanceof Array && this.album.length > 0) {
      for (let i = 0; i < this.album.length; i++) {
        // check whether each _nside
        // album has src data or not
        if (this.album[i].src) {
          continue;
        }
        throw new Error('One of the album data does not have source data');
      }
    } else {
      throw new Error('No album data or album data is not correct in type');
    }
    // to prevent data understand as string
    // convert it to number
    if (isNaN(this.currentImageIndex)) {
      throw new Error('Current image index is not a number');
    } else {
      this.currentImageIndex = Number(this.currentImageIndex);
    }
    return true;
  }
  _registerImageLoadingEvent() {
    const preloader = new Image();
    preloader.onload = () => {
      this._onLoadImageSuccess();
    };
    const src = this.album[this.currentImageIndex].src;
    preloader.src = this._sanitizer.sanitize(_angular_core__WEBPACK_IMPORTED_MODULE_1__.SecurityContext.URL, src);
  }
  /**
   * Fire when the image is loaded
   */
  _onLoadImageSuccess() {
    if (!this.options.disableKeyboardNav) {
      // unbind keyboard event during transition
      this._disableKeyboardNav();
    }
    let imageHeight;
    let imageWidth;
    let maxImageHeight;
    let maxImageWidth;
    let windowHeight;
    let windowWidth;
    let naturalImageWidth;
    let naturalImageHeight;
    // set default width and height of image to be its natural
    imageWidth = naturalImageWidth = this._imageElem.nativeElement.naturalWidth;
    imageHeight = naturalImageHeight = this._imageElem.nativeElement.naturalHeight;
    if (this.options.fitImageInViewPort) {
      windowWidth = this._windowRef.innerWidth;
      windowHeight = this._windowRef.innerHeight;
      maxImageWidth = windowWidth - this._cssValue.containerLeftPadding - this._cssValue.containerRightPadding - this._cssValue.imageBorderWidthLeft - this._cssValue.imageBorderWidthRight - 20;
      maxImageHeight = windowHeight - this._cssValue.containerTopPadding - this._cssValue.containerTopPadding - this._cssValue.imageBorderWidthTop - this._cssValue.imageBorderWidthBottom - 120;
      if (naturalImageWidth > maxImageWidth || naturalImageHeight > maxImageHeight) {
        if (naturalImageWidth / maxImageWidth > naturalImageHeight / maxImageHeight) {
          imageWidth = maxImageWidth;
          imageHeight = Math.round(naturalImageHeight / (naturalImageWidth / imageWidth));
        } else {
          imageHeight = maxImageHeight;
          imageWidth = Math.round(naturalImageWidth / (naturalImageHeight / imageHeight));
        }
      }
      this._rendererRef.setStyle(this._imageElem.nativeElement, 'width', `${imageWidth}px`);
      this._rendererRef.setStyle(this._imageElem.nativeElement, 'height', `${imageHeight}px`);
    }
    this._sizeContainer(imageWidth, imageHeight);
    if (this.options.centerVertically) {
      this._centerVertically(imageWidth, imageHeight);
    }
  }
  _centerVertically(imageWidth, imageHeight) {
    const scrollOffset = this._documentRef.documentElement.scrollTop;
    const windowHeight = this._windowRef.innerHeight;
    const viewOffset = windowHeight / 2 - imageHeight / 2;
    const topDistance = scrollOffset + viewOffset;
    this._rendererRef.setStyle(this._lightboxElem.nativeElement, 'top', `${topDistance}px`);
  }
  _sizeContainer(imageWidth, imageHeight) {
    const oldWidth = this._outerContainerElem.nativeElement.offsetWidth;
    const oldHeight = this._outerContainerElem.nativeElement.offsetHeight;
    const newWidth = imageWidth + this._cssValue.containerRightPadding + this._cssValue.containerLeftPadding + this._cssValue.imageBorderWidthLeft + this._cssValue.imageBorderWidthRight;
    const newHeight = imageHeight + this._cssValue.containerTopPadding + this._cssValue.containerBottomPadding + this._cssValue.imageBorderWidthTop + this._cssValue.imageBorderWidthBottom;
    // make sure that distances are large enough for transitionend event to be fired, at least 5px.
    if (Math.abs(oldWidth - newWidth) + Math.abs(oldHeight - newHeight) > 5) {
      this._rendererRef.setStyle(this._outerContainerElem.nativeElement, 'width', `${newWidth}px`);
      this._rendererRef.setStyle(this._outerContainerElem.nativeElement, 'height', `${newHeight}px`);
      // bind resize event to outer container
      // use enableTransition to prevent infinite loader
      if (this.options.enableTransition) {
        this._event.transitions = [];
        ['transitionend', 'webkitTransitionEnd', 'oTransitionEnd', 'MSTransitionEnd'].forEach(eventName => {
          this._event.transitions.push(this._rendererRef.listen(this._outerContainerElem.nativeElement, eventName, event => {
            if (event.target === event.currentTarget) {
              this._postResize(newWidth, newHeight);
            }
          }));
        });
      } else {
        this._postResize(newWidth, newHeight);
      }
    } else {
      this._postResize(newWidth, newHeight);
    }
  }
  _postResize(newWidth, newHeight) {
    // unbind resize event
    if (Array.isArray(this._event.transitions)) {
      this._event.transitions.forEach(eventHandler => {
        eventHandler();
      });
      this._event.transitions = [];
    }
    this._rendererRef.setStyle(this._dataContainerElem.nativeElement, 'width', `${newWidth}px`);
    this._showImage();
  }
  _showImage() {
    this.ui.showReloader = false;
    this._updateNav();
    this._updateDetails();
    if (!this.options.disableKeyboardNav) {
      this._enableKeyboardNav();
    }
  }
  _prepareComponent() {
    // add css3 animation
    this._addCssAnimation();
    // position the image according to user's option
    this._positionLightBox();
    // update controls visibility on next view generation
    setTimeout(() => {
      this.ui.showZoomButton = this.options.showZoom;
      this.ui.showRotateButton = this.options.showRotate;
      this.ui.showDownloadButton = this.options.showDownloadButton;
    }, 0);
  }
  _positionLightBox() {
    // @see https://stackoverflow.com/questions/3464876/javascript-get-window-x-y-position-for-scroll
    const top = (this._windowRef.pageYOffset || this._documentRef.documentElement.scrollTop) + this.options.positionFromTop;
    const left = this._windowRef.pageXOffset || this._documentRef.documentElement.scrollLeft;
    if (!this.options.centerVertically) {
      this._rendererRef.setStyle(this._lightboxElem.nativeElement, 'top', `${top}px`);
    }
    this._rendererRef.setStyle(this._lightboxElem.nativeElement, 'left', `${left}px`);
    this._rendererRef.setStyle(this._lightboxElem.nativeElement, 'display', 'block');
    // disable scrolling of the page while open
    if (this.options.disableScrolling) {
      this._rendererRef.addClass(this._documentRef.documentElement, 'lb-disable-scrolling');
    }
  }
  /**
   * addCssAnimation add css3 classes for animate lightbox
   */
  _addCssAnimation() {
    const resizeDuration = this.options.resizeDuration;
    const fadeDuration = this.options.fadeDuration;
    this._rendererRef.setStyle(this._lightboxElem.nativeElement, '-webkit-animation-duration', `${fadeDuration}s`);
    this._rendererRef.setStyle(this._lightboxElem.nativeElement, 'animation-duration', `${fadeDuration}s`);
    this._rendererRef.setStyle(this._outerContainerElem.nativeElement, '-webkit-transition-duration', `${resizeDuration}s`);
    this._rendererRef.setStyle(this._outerContainerElem.nativeElement, 'transition-duration', `${resizeDuration}s`);
    this._rendererRef.setStyle(this._dataContainerElem.nativeElement, '-webkit-animation-duration', `${fadeDuration}s`);
    this._rendererRef.setStyle(this._dataContainerElem.nativeElement, 'animation-duration', `${fadeDuration}s`);
    this._rendererRef.setStyle(this._imageElem.nativeElement, '-webkit-animation-duration', `${fadeDuration}s`);
    this._rendererRef.setStyle(this._imageElem.nativeElement, 'animation-duration', `${fadeDuration}s`);
    this._rendererRef.setStyle(this._captionElem.nativeElement, '-webkit-animation-duration', `${fadeDuration}s`);
    this._rendererRef.setStyle(this._captionElem.nativeElement, 'animation-duration', `${fadeDuration}s`);
    this._rendererRef.setStyle(this._numberElem.nativeElement, '-webkit-animation-duration', `${fadeDuration}s`);
    this._rendererRef.setStyle(this._numberElem.nativeElement, 'animation-duration', `${fadeDuration}s`);
  }
  _end() {
    this.ui.classList = 'lightbox animation fadeOut';
    if (this.options.disableScrolling) {
      this._rendererRef.removeClass(this._documentRef.documentElement, 'lb-disable-scrolling');
    }
    setTimeout(() => {
      this.cmpRef.destroy();
    }, this.options.fadeDuration * 1000);
  }
  _updateDetails() {
    // update the caption
    if (typeof this.album[this.currentImageIndex].caption !== 'undefined' && this.album[this.currentImageIndex].caption !== '') {
      this.ui.showCaption = true;
    }
    // update the page number if user choose to do so
    // does not perform numbering the page if the
    // array length in album <= 1
    if (this.album.length > 1 && this.options.showImageNumberLabel) {
      this.ui.showPageNumber = true;
      this.content.pageNumber = this._albumLabel();
    }
  }
  _albumLabel() {
    // due to {this.currentImageIndex} is set from 0 to {this.album.length} - 1
    return this.options.albumLabel.replace(/%1/g, Number(this.currentImageIndex + 1)).replace(/%2/g, this.album.length);
  }
  _changeImage(newIndex) {
    this._resetImage();
    this.currentImageIndex = newIndex;
    this._hideImage();
    this._registerImageLoadingEvent();
    this._lightboxEvent.broadcastLightboxEvent({
      id: _lightbox_event_service__WEBPACK_IMPORTED_MODULE_0__.LIGHTBOX_EVENT.CHANGE_PAGE,
      data: newIndex
    });
  }
  _hideImage() {
    this.ui.showReloader = true;
    this.ui.showArrowNav = false;
    this.ui.showLeftArrow = false;
    this.ui.showRightArrow = false;
    this.ui.showPageNumber = false;
    this.ui.showCaption = false;
  }
  _updateNav() {
    let alwaysShowNav = false;
    // check to see the browser support touch event
    try {
      this._documentRef.createEvent('TouchEvent');
      alwaysShowNav = this.options.alwaysShowNavOnTouchDevices ? true : false;
    } catch (e) {
      // noop
    }
    // initially show the arrow nav
    // which is the parent of both left and right nav
    this._showArrowNav();
    if (this.album.length > 1) {
      if (this.options.wrapAround) {
        if (alwaysShowNav) {
          // alternatives this.$lightbox.find('.lb-prev, .lb-next').css('opacity', '1');
          this._rendererRef.setStyle(this._leftArrowElem.nativeElement, 'opacity', '1');
          this._rendererRef.setStyle(this._rightArrowElem.nativeElement, 'opacity', '1');
        }
        // alternatives this.$lightbox.find('.lb-prev, .lb-next').show();
        this._showLeftArrowNav();
        this._showRightArrowNav();
      } else {
        if (this.currentImageIndex > 0) {
          // alternatives this.$lightbox.find('.lb-prev').show();
          this._showLeftArrowNav();
          if (alwaysShowNav) {
            // alternatives this.$lightbox.find('.lb-prev').css('opacity', '1');
            this._rendererRef.setStyle(this._leftArrowElem.nativeElement, 'opacity', '1');
          }
        }
        if (this.currentImageIndex < this.album.length - 1) {
          // alternatives this.$lightbox.find('.lb-next').show();
          this._showRightArrowNav();
          if (alwaysShowNav) {
            // alternatives this.$lightbox.find('.lb-next').css('opacity', '1');
            this._rendererRef.setStyle(this._rightArrowElem.nativeElement, 'opacity', '1');
          }
        }
      }
    }
  }
  _showLeftArrowNav() {
    this.ui.showLeftArrow = true;
  }
  _showRightArrowNav() {
    this.ui.showRightArrow = true;
  }
  _showArrowNav() {
    this.ui.showArrowNav = this.album.length !== 1;
  }
  _enableKeyboardNav() {
    this._event.keyup = this._rendererRef.listen('document', 'keyup', event => {
      this._keyboardAction(event);
    });
  }
  _disableKeyboardNav() {
    if (this._event.keyup) {
      this._event.keyup();
    }
  }
  _keyboardAction($event) {
    const KEYCODE_ESC = 27;
    const KEYCODE_LEFTARROW = 37;
    const KEYCODE_RIGHTARROW = 39;
    const keycode = $event.keyCode;
    const key = String.fromCharCode(keycode).toLowerCase();
    if (keycode === KEYCODE_ESC || key.match(/x|o|c/)) {
      this._lightboxEvent.broadcastLightboxEvent({
        id: _lightbox_event_service__WEBPACK_IMPORTED_MODULE_0__.LIGHTBOX_EVENT.CLOSE,
        data: null
      });
    } else if (key === 'p' || keycode === KEYCODE_LEFTARROW) {
      if (this.currentImageIndex !== 0) {
        this._changeImage(this.currentImageIndex - 1);
      } else if (this.options.wrapAround && this.album.length > 1) {
        this._changeImage(this.album.length - 1);
      }
    } else if (key === 'n' || keycode === KEYCODE_RIGHTARROW) {
      if (this.currentImageIndex !== this.album.length - 1) {
        this._changeImage(this.currentImageIndex + 1);
      } else if (this.options.wrapAround && this.album.length > 1) {
        this._changeImage(0);
      }
    }
  }
  _getCssStyleValue(elem, propertyName) {
    return parseFloat(this._windowRef.getComputedStyle(elem.nativeElement, null).getPropertyValue(propertyName));
  }
  _onReceivedEvent(event) {
    switch (event.id) {
      case _lightbox_event_service__WEBPACK_IMPORTED_MODULE_0__.LIGHTBOX_EVENT.CLOSE:
        this._end();
        break;
      default:
        break;
    }
  }
}
LightboxComponent.ɵfac = function LightboxComponent_Factory(t) {
  return new (t || LightboxComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__.ElementRef), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__.Renderer2), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_lightbox_event_service__WEBPACK_IMPORTED_MODULE_0__.LightboxEvent), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__.ElementRef), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_lightbox_event_service__WEBPACK_IMPORTED_MODULE_0__.LightboxWindowRef), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](ngx_filesaver__WEBPACK_IMPORTED_MODULE_2__.FileSaverService), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__.DomSanitizer), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_common__WEBPACK_IMPORTED_MODULE_4__.DOCUMENT));
};
LightboxComponent.ɵcmp = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineComponent"]({
  type: LightboxComponent,
  selectors: [["", "lb-content", ""]],
  viewQuery: function LightboxComponent_Query(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵviewQuery"](_c0, 5);
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵviewQuery"](_c1, 5);
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵviewQuery"](_c2, 5);
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵviewQuery"](_c3, 5);
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵviewQuery"](_c4, 5);
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵviewQuery"](_c5, 5);
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵviewQuery"](_c6, 5);
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵviewQuery"](_c7, 5);
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵviewQuery"](_c8, 5);
    }
    if (rf & 2) {
      let _t;
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵloadQuery"]()) && (ctx._outerContainerElem = _t.first);
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵloadQuery"]()) && (ctx._containerElem = _t.first);
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵloadQuery"]()) && (ctx._leftArrowElem = _t.first);
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵloadQuery"]()) && (ctx._rightArrowElem = _t.first);
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵloadQuery"]()) && (ctx._navArrowElem = _t.first);
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵloadQuery"]()) && (ctx._dataContainerElem = _t.first);
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵloadQuery"]()) && (ctx._imageElem = _t.first);
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵloadQuery"]()) && (ctx._captionElem = _t.first);
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵloadQuery"]()) && (ctx._numberElem = _t.first);
    }
  },
  hostVars: 2,
  hostBindings: function LightboxComponent_HostBindings(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("click", function LightboxComponent_click_HostBindingHandler($event) {
        return ctx.close($event);
      });
    }
    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵclassMap"](ctx.ui.classList);
    }
  },
  inputs: {
    album: "album",
    currentImageIndex: "currentImageIndex",
    options: "options",
    cmpRef: "cmpRef"
  },
  attrs: _c9,
  decls: 34,
  vars: 14,
  consts: [["id", "outerContainer", 1, "lb-outerContainer", "transition"], ["outerContainer", ""], ["id", "container", 1, "lb-container"], ["container", ""], ["id", "image", 1, "lb-image", "animation", "fadeIn", 3, "src", "hidden"], ["image", ""], [1, "lb-nav", 3, "hidden"], ["navArrow", ""], [1, "lb-prev", 3, "hidden", "click"], ["leftArrow", ""], [1, "lb-next", 3, "hidden", "click"], ["rightArrow", ""], [1, "lb-loader", 3, "hidden", "click"], [1, "lb-cancel"], [1, "lb-dataContainer", 3, "hidden"], ["dataContainer", ""], [1, "lb-data"], [1, "lb-details"], [1, "lb-caption", "animation", "fadeIn", 3, "hidden", "innerHtml"], ["caption", ""], [1, "lb-number", "animation", "fadeIn", 3, "hidden"], ["number", ""], [1, "lb-controlContainer"], [1, "lb-closeContainer"], [1, "lb-close", 3, "click"], [1, "lb-downloadContainer", 3, "hidden"], [1, "lb-download", 3, "click"], [1, "lb-turnContainer", 3, "hidden"], [1, "lb-turnLeft", 3, "click"], [1, "lb-turnRight", 3, "click"], [1, "lb-zoomContainer", 3, "hidden"], [1, "lb-zoomOut", 3, "click"], [1, "lb-zoomIn", 3, "click"]],
  template: function LightboxComponent_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div", 0, 1)(2, "div", 2, 3);
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](4, "img", 4, 5);
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](6, "div", 6, 7)(8, "a", 8, 9);
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("click", function LightboxComponent_Template_a_click_8_listener() {
        return ctx.prevImage();
      });
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](10, "a", 10, 11);
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("click", function LightboxComponent_Template_a_click_10_listener() {
        return ctx.nextImage();
      });
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]()();
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](12, "div", 12);
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("click", function LightboxComponent_Template_div_click_12_listener($event) {
        return ctx.close($event);
      });
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](13, "a", 13);
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]()()();
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](14, "div", 14, 15)(16, "div", 16)(17, "div", 17);
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](18, "span", 18, 19);
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](20, "span", 20, 21);
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](22);
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]()();
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](23, "div", 22)(24, "div", 23)(25, "a", 24);
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("click", function LightboxComponent_Template_a_click_25_listener($event) {
        return ctx.close($event);
      });
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]()();
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](26, "div", 25)(27, "a", 26);
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("click", function LightboxComponent_Template_a_click_27_listener($event) {
        return ctx.download($event);
      });
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]()();
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](28, "div", 27)(29, "a", 28);
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("click", function LightboxComponent_Template_a_click_29_listener($event) {
        return ctx.control($event);
      });
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](30, "a", 29);
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("click", function LightboxComponent_Template_a_click_30_listener($event) {
        return ctx.control($event);
      });
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]()();
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](31, "div", 30)(32, "a", 31);
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("click", function LightboxComponent_Template_a_click_32_listener($event) {
        return ctx.control($event);
      });
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](33, "a", 32);
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("click", function LightboxComponent_Template_a_click_33_listener($event) {
        return ctx.control($event);
      });
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]()()()()();
    }
    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](4);
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("src", ctx.album[ctx.currentImageIndex].src, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵsanitizeUrl"])("hidden", ctx.ui.showReloader);
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](2);
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("hidden", !ctx.ui.showArrowNav);
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](2);
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("hidden", !ctx.ui.showLeftArrow);
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](2);
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("hidden", !ctx.ui.showRightArrow);
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](2);
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("hidden", !ctx.ui.showReloader);
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](2);
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("hidden", ctx.ui.showReloader);
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](4);
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("hidden", !ctx.ui.showCaption)("innerHtml", ctx.album[ctx.currentImageIndex].caption, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵsanitizeHtml"]);
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](2);
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("hidden", !ctx.ui.showPageNumber);
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](2);
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtextInterpolate"](ctx.content.pageNumber);
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](4);
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("hidden", !ctx.ui.showDownloadButton);
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](2);
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("hidden", !ctx.ui.showRotateButton);
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵadvance"](3);
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("hidden", !ctx.ui.showZoomButton);
    }
  },
  encapsulation: 2
});
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](LightboxComponent, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Component,
    args: [{
      template: `
    <div class="lb-outerContainer transition" #outerContainer id="outerContainer">
      <div class="lb-container" #container id="container">
        <img class="lb-image"
             id="image"
             [src]="album[currentImageIndex].src"
             class="lb-image animation fadeIn"
             [hidden]="ui.showReloader"
             #image>
        <div class="lb-nav" [hidden]="!ui.showArrowNav" #navArrow>
          <a class="lb-prev" [hidden]="!ui.showLeftArrow" (click)="prevImage()" #leftArrow></a>
          <a class="lb-next" [hidden]="!ui.showRightArrow" (click)="nextImage()" #rightArrow></a>
        </div>
        <div class="lb-loader" [hidden]="!ui.showReloader" (click)="close($event)">
          <a class="lb-cancel"></a>
        </div>
      </div>
    </div>
    <div class="lb-dataContainer" [hidden]="ui.showReloader" #dataContainer>
      <div class="lb-data">
        <div class="lb-details">
          <span class="lb-caption animation fadeIn" [hidden]="!ui.showCaption" [innerHtml]="album[currentImageIndex].caption" #caption>
          </span>
          <span class="lb-number animation fadeIn" [hidden]="!ui.showPageNumber" #number>{{ content.pageNumber }}</span>
        </div>
        <div class="lb-controlContainer">
          <div class="lb-closeContainer">
            <a class="lb-close" (click)="close($event)"></a>
          </div>
          <div class="lb-downloadContainer" [hidden]="!ui.showDownloadButton">
            <a class="lb-download" (click)="download($event)"></a>
          </div>
          <div class="lb-turnContainer" [hidden]="!ui.showRotateButton">
            <a class="lb-turnLeft" (click)="control($event)"></a>
            <a class="lb-turnRight" (click)="control($event)"></a>
          </div>
          <div class="lb-zoomContainer" [hidden]="!ui.showZoomButton">
            <a class="lb-zoomOut" (click)="control($event)"></a>
            <a class="lb-zoomIn" (click)="control($event)"></a>
          </div>
        </div>
      </div>
    </div>`,
      selector: '[lb-content]',
      host: {
        '(click)': 'close($event)',
        '[class]': 'ui.classList'
      }
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ElementRef
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Renderer2
    }, {
      type: _lightbox_event_service__WEBPACK_IMPORTED_MODULE_0__.LightboxEvent
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ElementRef
    }, {
      type: _lightbox_event_service__WEBPACK_IMPORTED_MODULE_0__.LightboxWindowRef
    }, {
      type: ngx_filesaver__WEBPACK_IMPORTED_MODULE_2__.FileSaverService
    }, {
      type: _angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__.DomSanitizer
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Inject,
        args: [_angular_common__WEBPACK_IMPORTED_MODULE_4__.DOCUMENT]
      }]
    }];
  }, {
    album: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input
    }],
    currentImageIndex: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input
    }],
    options: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input
    }],
    cmpRef: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input
    }],
    _outerContainerElem: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ViewChild,
      args: ['outerContainer', {
        static: false
      }]
    }],
    _containerElem: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ViewChild,
      args: ['container', {
        static: false
      }]
    }],
    _leftArrowElem: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ViewChild,
      args: ['leftArrow', {
        static: false
      }]
    }],
    _rightArrowElem: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ViewChild,
      args: ['rightArrow', {
        static: false
      }]
    }],
    _navArrowElem: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ViewChild,
      args: ['navArrow', {
        static: false
      }]
    }],
    _dataContainerElem: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ViewChild,
      args: ['dataContainer', {
        static: false
      }]
    }],
    _imageElem: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ViewChild,
      args: ['image', {
        static: false
      }]
    }],
    _captionElem: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ViewChild,
      args: ['caption', {
        static: false
      }]
    }],
    _numberElem: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ViewChild,
      args: ['number', {
        static: false
      }]
    }]
  });
})();

/***/ }),

/***/ 4360:
/*!******************************************************!*\
  !*** ./node_modules/ngx-lightbox/lightbox.module.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   LightboxModule: () => (/* binding */ LightboxModule)
/* harmony export */ });
/* harmony import */ var ngx_filesaver__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ngx-filesaver */ 1882);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/core */ 1699);
/* harmony import */ var _lightbox_config_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lightbox-config.service */ 8525);
/* harmony import */ var _lightbox_event_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lightbox-event.service */ 5336);
/* harmony import */ var _lightbox_overlay_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lightbox-overlay.component */ 2274);
/* harmony import */ var _lightbox_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lightbox.component */ 646);
/* harmony import */ var _lightbox_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./lightbox.service */ 5990);








class LightboxModule {}
LightboxModule.ɵfac = function LightboxModule_Factory(t) {
  return new (t || LightboxModule)();
};
LightboxModule.ɵmod = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdefineNgModule"]({
  type: LightboxModule
});
LightboxModule.ɵinj = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdefineInjector"]({
  providers: [_lightbox_service__WEBPACK_IMPORTED_MODULE_4__.Lightbox, _lightbox_config_service__WEBPACK_IMPORTED_MODULE_0__.LightboxConfig, _lightbox_event_service__WEBPACK_IMPORTED_MODULE_1__.LightboxEvent, _lightbox_event_service__WEBPACK_IMPORTED_MODULE_1__.LightboxWindowRef],
  imports: [ngx_filesaver__WEBPACK_IMPORTED_MODULE_6__.FileSaverModule]
});
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵsetClassMetadata"](LightboxModule, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__.NgModule,
    args: [{
      declarations: [_lightbox_overlay_component__WEBPACK_IMPORTED_MODULE_2__.LightboxOverlayComponent, _lightbox_component__WEBPACK_IMPORTED_MODULE_3__.LightboxComponent],
      providers: [_lightbox_service__WEBPACK_IMPORTED_MODULE_4__.Lightbox, _lightbox_config_service__WEBPACK_IMPORTED_MODULE_0__.LightboxConfig, _lightbox_event_service__WEBPACK_IMPORTED_MODULE_1__.LightboxEvent, _lightbox_event_service__WEBPACK_IMPORTED_MODULE_1__.LightboxWindowRef],
      entryComponents: [_lightbox_overlay_component__WEBPACK_IMPORTED_MODULE_2__.LightboxOverlayComponent, _lightbox_component__WEBPACK_IMPORTED_MODULE_3__.LightboxComponent],
      imports: [ngx_filesaver__WEBPACK_IMPORTED_MODULE_6__.FileSaverModule]
    }]
  }], null, null);
})();
(function () {
  (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵsetNgModuleScope"](LightboxModule, {
    declarations: [_lightbox_overlay_component__WEBPACK_IMPORTED_MODULE_2__.LightboxOverlayComponent, _lightbox_component__WEBPACK_IMPORTED_MODULE_3__.LightboxComponent],
    imports: [ngx_filesaver__WEBPACK_IMPORTED_MODULE_6__.FileSaverModule]
  });
})();

/***/ }),

/***/ 5990:
/*!*******************************************************!*\
  !*** ./node_modules/ngx-lightbox/lightbox.service.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Lightbox: () => (/* binding */ Lightbox)
/* harmony export */ });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 1699);
/* harmony import */ var _lightbox_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lightbox.component */ 646);
/* harmony import */ var _lightbox_config_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lightbox-config.service */ 8525);
/* harmony import */ var _lightbox_event_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lightbox-event.service */ 5336);
/* harmony import */ var _lightbox_overlay_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lightbox-overlay.component */ 2274);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/common */ 6575);









class Lightbox {
  constructor(_componentFactoryResolver, _injector, _applicationRef, _lightboxConfig, _lightboxEvent, _documentRef) {
    this._componentFactoryResolver = _componentFactoryResolver;
    this._injector = _injector;
    this._applicationRef = _applicationRef;
    this._lightboxConfig = _lightboxConfig;
    this._lightboxEvent = _lightboxEvent;
    this._documentRef = _documentRef;
  }
  open(album, curIndex = 0, options = {}) {
    const overlayComponentRef = this._createComponent(_lightbox_overlay_component__WEBPACK_IMPORTED_MODULE_3__.LightboxOverlayComponent);
    const componentRef = this._createComponent(_lightbox_component__WEBPACK_IMPORTED_MODULE_0__.LightboxComponent);
    const newOptions = {};
    // broadcast open event
    this._lightboxEvent.broadcastLightboxEvent({
      id: _lightbox_event_service__WEBPACK_IMPORTED_MODULE_2__.LIGHTBOX_EVENT.OPEN
    });
    Object.assign(newOptions, this._lightboxConfig, options);
    // attach input to lightbox
    componentRef.instance.album = album;
    componentRef.instance.currentImageIndex = curIndex;
    componentRef.instance.options = newOptions;
    componentRef.instance.cmpRef = componentRef;
    // attach input to overlay
    overlayComponentRef.instance.options = newOptions;
    overlayComponentRef.instance.cmpRef = overlayComponentRef;
    // FIXME: not sure why last event is broadcasted (which is CLOSED) and make
    // lightbox can not be opened the second time.
    // Need to timeout so that the OPEN event is set before component is initialized
    setTimeout(() => {
      this._applicationRef.attachView(overlayComponentRef.hostView);
      this._applicationRef.attachView(componentRef.hostView);
      overlayComponentRef.onDestroy(() => {
        this._applicationRef.detachView(overlayComponentRef.hostView);
      });
      componentRef.onDestroy(() => {
        this._applicationRef.detachView(componentRef.hostView);
      });
      const containerElement = newOptions.containerElementResolver(this._documentRef);
      containerElement.appendChild(overlayComponentRef.location.nativeElement);
      containerElement.appendChild(componentRef.location.nativeElement);
    });
  }
  close() {
    if (this._lightboxEvent) {
      this._lightboxEvent.broadcastLightboxEvent({
        id: _lightbox_event_service__WEBPACK_IMPORTED_MODULE_2__.LIGHTBOX_EVENT.CLOSE
      });
    }
  }
  _createComponent(ComponentClass) {
    const factory = this._componentFactoryResolver.resolveComponentFactory(ComponentClass);
    const component = factory.create(this._injector);
    return component;
  }
}
Lightbox.ɵfac = function Lightbox_Factory(t) {
  return new (t || Lightbox)(_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵinject"](_angular_core__WEBPACK_IMPORTED_MODULE_4__.ComponentFactoryResolver), _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵinject"](_angular_core__WEBPACK_IMPORTED_MODULE_4__.Injector), _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵinject"](_angular_core__WEBPACK_IMPORTED_MODULE_4__.ApplicationRef), _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵinject"](_lightbox_config_service__WEBPACK_IMPORTED_MODULE_1__.LightboxConfig), _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵinject"](_lightbox_event_service__WEBPACK_IMPORTED_MODULE_2__.LightboxEvent), _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵinject"](_angular_common__WEBPACK_IMPORTED_MODULE_5__.DOCUMENT));
};
Lightbox.ɵprov = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdefineInjectable"]({
  token: Lightbox,
  factory: Lightbox.ɵfac
});
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵsetClassMetadata"](Lightbox, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Injectable
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.ComponentFactoryResolver
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Injector
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.ApplicationRef
    }, {
      type: _lightbox_config_service__WEBPACK_IMPORTED_MODULE_1__.LightboxConfig
    }, {
      type: _lightbox_event_service__WEBPACK_IMPORTED_MODULE_2__.LightboxEvent
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_4__.Inject,
        args: [_angular_common__WEBPACK_IMPORTED_MODULE_5__.DOCUMENT]
      }]
    }];
  }, null);
})();

/***/ }),

/***/ 5662:
/*!**********************************************************!*\
  !*** ./node_modules/preact/compat/dist/compat.module.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Children: () => (/* binding */ O),
/* harmony export */   Component: () => (/* reexport safe */ preact__WEBPACK_IMPORTED_MODULE_0__.Component),
/* harmony export */   Fragment: () => (/* reexport safe */ preact__WEBPACK_IMPORTED_MODULE_0__.Fragment),
/* harmony export */   PureComponent: () => (/* binding */ w),
/* harmony export */   StrictMode: () => (/* binding */ vn),
/* harmony export */   Suspense: () => (/* binding */ D),
/* harmony export */   SuspenseList: () => (/* binding */ V),
/* harmony export */   __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: () => (/* binding */ rn),
/* harmony export */   cloneElement: () => (/* binding */ cn),
/* harmony export */   createContext: () => (/* reexport safe */ preact__WEBPACK_IMPORTED_MODULE_0__.createContext),
/* harmony export */   createElement: () => (/* reexport safe */ preact__WEBPACK_IMPORTED_MODULE_0__.createElement),
/* harmony export */   createFactory: () => (/* binding */ on),
/* harmony export */   createPortal: () => (/* binding */ j),
/* harmony export */   createRef: () => (/* reexport safe */ preact__WEBPACK_IMPORTED_MODULE_0__.createRef),
/* harmony export */   "default": () => (/* binding */ bn),
/* harmony export */   findDOMNode: () => (/* binding */ an),
/* harmony export */   flushSync: () => (/* binding */ hn),
/* harmony export */   forwardRef: () => (/* binding */ k),
/* harmony export */   hydrate: () => (/* binding */ q),
/* harmony export */   isValidElement: () => (/* binding */ ln),
/* harmony export */   lazy: () => (/* binding */ M),
/* harmony export */   memo: () => (/* binding */ R),
/* harmony export */   render: () => (/* binding */ Y),
/* harmony export */   startTransition: () => (/* binding */ dn),
/* harmony export */   unmountComponentAtNode: () => (/* binding */ fn),
/* harmony export */   unstable_batchedUpdates: () => (/* binding */ sn),
/* harmony export */   useCallback: () => (/* reexport safe */ preact_hooks__WEBPACK_IMPORTED_MODULE_1__.useCallback),
/* harmony export */   useContext: () => (/* reexport safe */ preact_hooks__WEBPACK_IMPORTED_MODULE_1__.useContext),
/* harmony export */   useDebugValue: () => (/* reexport safe */ preact_hooks__WEBPACK_IMPORTED_MODULE_1__.useDebugValue),
/* harmony export */   useDeferredValue: () => (/* binding */ pn),
/* harmony export */   useEffect: () => (/* reexport safe */ preact_hooks__WEBPACK_IMPORTED_MODULE_1__.useEffect),
/* harmony export */   useErrorBoundary: () => (/* reexport safe */ preact_hooks__WEBPACK_IMPORTED_MODULE_1__.useErrorBoundary),
/* harmony export */   useId: () => (/* reexport safe */ preact_hooks__WEBPACK_IMPORTED_MODULE_1__.useId),
/* harmony export */   useImperativeHandle: () => (/* reexport safe */ preact_hooks__WEBPACK_IMPORTED_MODULE_1__.useImperativeHandle),
/* harmony export */   useInsertionEffect: () => (/* binding */ yn),
/* harmony export */   useLayoutEffect: () => (/* reexport safe */ preact_hooks__WEBPACK_IMPORTED_MODULE_1__.useLayoutEffect),
/* harmony export */   useMemo: () => (/* reexport safe */ preact_hooks__WEBPACK_IMPORTED_MODULE_1__.useMemo),
/* harmony export */   useReducer: () => (/* reexport safe */ preact_hooks__WEBPACK_IMPORTED_MODULE_1__.useReducer),
/* harmony export */   useRef: () => (/* reexport safe */ preact_hooks__WEBPACK_IMPORTED_MODULE_1__.useRef),
/* harmony export */   useState: () => (/* reexport safe */ preact_hooks__WEBPACK_IMPORTED_MODULE_1__.useState),
/* harmony export */   useSyncExternalStore: () => (/* binding */ _n),
/* harmony export */   useTransition: () => (/* binding */ mn),
/* harmony export */   version: () => (/* binding */ un)
/* harmony export */ });
/* harmony import */ var preact__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! preact */ 3586);
/* harmony import */ var preact_hooks__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! preact/hooks */ 3482);




function g(n, t) {
  for (var e in t) n[e] = t[e];
  return n;
}
function C(n, t) {
  for (var e in n) if ("__source" !== e && !(e in t)) return !0;
  for (var r in t) if ("__source" !== r && n[r] !== t[r]) return !0;
  return !1;
}
function E(n, t) {
  return n === t && (0 !== n || 1 / n == 1 / t) || n != n && t != t;
}
function w(n) {
  this.props = n;
}
function R(n, e) {
  function r(n) {
    var t = this.props.ref,
      r = t == n.ref;
    return !r && t && (t.call ? t(null) : t.current = null), e ? !e(this.props, n) || !r : C(this.props, n);
  }
  function u(e) {
    return this.shouldComponentUpdate = r, (0,preact__WEBPACK_IMPORTED_MODULE_0__.createElement)(n, e);
  }
  return u.displayName = "Memo(" + (n.displayName || n.name) + ")", u.prototype.isReactComponent = !0, u.__f = !0, u;
}
(w.prototype = new preact__WEBPACK_IMPORTED_MODULE_0__.Component()).isPureReactComponent = !0, w.prototype.shouldComponentUpdate = function (n, t) {
  return C(this.props, n) || C(this.state, t);
};
var x = preact__WEBPACK_IMPORTED_MODULE_0__.options.__b;
preact__WEBPACK_IMPORTED_MODULE_0__.options.__b = function (n) {
  n.type && n.type.__f && n.ref && (n.props.ref = n.ref, n.ref = null), x && x(n);
};
var N = "undefined" != typeof Symbol && Symbol.for && Symbol.for("react.forward_ref") || 3911;
function k(n) {
  function t(t) {
    var e = g({}, t);
    return delete e.ref, n(e, t.ref || null);
  }
  return t.$$typeof = N, t.render = t, t.prototype.isReactComponent = t.__f = !0, t.displayName = "ForwardRef(" + (n.displayName || n.name) + ")", t;
}
var A = function (n, t) {
    return null == n ? null : (0,preact__WEBPACK_IMPORTED_MODULE_0__.toChildArray)((0,preact__WEBPACK_IMPORTED_MODULE_0__.toChildArray)(n).map(t));
  },
  O = {
    map: A,
    forEach: A,
    count: function (n) {
      return n ? (0,preact__WEBPACK_IMPORTED_MODULE_0__.toChildArray)(n).length : 0;
    },
    only: function (n) {
      var t = (0,preact__WEBPACK_IMPORTED_MODULE_0__.toChildArray)(n);
      if (1 !== t.length) throw "Children.only";
      return t[0];
    },
    toArray: preact__WEBPACK_IMPORTED_MODULE_0__.toChildArray
  },
  T = preact__WEBPACK_IMPORTED_MODULE_0__.options.__e;
preact__WEBPACK_IMPORTED_MODULE_0__.options.__e = function (n, t, e, r) {
  if (n.then) for (var u, o = t; o = o.__;) if ((u = o.__c) && u.__c) return null == t.__e && (t.__e = e.__e, t.__k = e.__k), u.__c(n, t);
  T(n, t, e, r);
};
var I = preact__WEBPACK_IMPORTED_MODULE_0__.options.unmount;
function L(n, t, e) {
  return n && (n.__c && n.__c.__H && (n.__c.__H.__.forEach(function (n) {
    "function" == typeof n.__c && n.__c();
  }), n.__c.__H = null), null != (n = g({}, n)).__c && (n.__c.__P === e && (n.__c.__P = t), n.__c = null), n.__k = n.__k && n.__k.map(function (n) {
    return L(n, t, e);
  })), n;
}
function U(n, t, e) {
  return n && (n.__v = null, n.__k = n.__k && n.__k.map(function (n) {
    return U(n, t, e);
  }), n.__c && n.__c.__P === t && (n.__e && e.insertBefore(n.__e, n.__d), n.__c.__e = !0, n.__c.__P = e)), n;
}
function D() {
  this.__u = 0, this.t = null, this.__b = null;
}
function F(n) {
  var t = n.__.__c;
  return t && t.__a && t.__a(n);
}
function M(n) {
  var e, r, u;
  function o(o) {
    if (e || (e = n()).then(function (n) {
      r = n.default || n;
    }, function (n) {
      u = n;
    }), u) throw u;
    if (!r) throw e;
    return (0,preact__WEBPACK_IMPORTED_MODULE_0__.createElement)(r, o);
  }
  return o.displayName = "Lazy", o.__f = !0, o;
}
function V() {
  this.u = null, this.o = null;
}
preact__WEBPACK_IMPORTED_MODULE_0__.options.unmount = function (n) {
  var t = n.__c;
  t && t.__R && t.__R(), t && !0 === n.__h && (n.type = null), I && I(n);
}, (D.prototype = new preact__WEBPACK_IMPORTED_MODULE_0__.Component()).__c = function (n, t) {
  var e = t.__c,
    r = this;
  null == r.t && (r.t = []), r.t.push(e);
  var u = F(r.__v),
    o = !1,
    i = function () {
      o || (o = !0, e.__R = null, u ? u(l) : l());
    };
  e.__R = i;
  var l = function () {
      if (! --r.__u) {
        if (r.state.__a) {
          var n = r.state.__a;
          r.__v.__k[0] = U(n, n.__c.__P, n.__c.__O);
        }
        var t;
        for (r.setState({
          __a: r.__b = null
        }); t = r.t.pop();) t.forceUpdate();
      }
    },
    c = !0 === t.__h;
  r.__u++ || c || r.setState({
    __a: r.__b = r.__v.__k[0]
  }), n.then(i, i);
}, D.prototype.componentWillUnmount = function () {
  this.t = [];
}, D.prototype.render = function (n, e) {
  if (this.__b) {
    if (this.__v.__k) {
      var r = document.createElement("div"),
        o = this.__v.__k[0].__c;
      this.__v.__k[0] = L(this.__b, r, o.__O = o.__P);
    }
    this.__b = null;
  }
  var i = e.__a && (0,preact__WEBPACK_IMPORTED_MODULE_0__.createElement)(preact__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, n.fallback);
  return i && (i.__h = null), [(0,preact__WEBPACK_IMPORTED_MODULE_0__.createElement)(preact__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, e.__a ? null : n.children), i];
};
var W = function (n, t, e) {
  if (++e[1] === e[0] && n.o.delete(t), n.props.revealOrder && ("t" !== n.props.revealOrder[0] || !n.o.size)) for (e = n.u; e;) {
    for (; e.length > 3;) e.pop()();
    if (e[1] < e[0]) break;
    n.u = e = e[2];
  }
};
function P(n) {
  return this.getChildContext = function () {
    return n.context;
  }, n.children;
}
function $(n) {
  var e = this,
    r = n.i;
  e.componentWillUnmount = function () {
    (0,preact__WEBPACK_IMPORTED_MODULE_0__.render)(null, e.l), e.l = null, e.i = null;
  }, e.i && e.i !== r && e.componentWillUnmount(), n.__v ? (e.l || (e.i = r, e.l = {
    nodeType: 1,
    parentNode: r,
    childNodes: [],
    appendChild: function (n) {
      this.childNodes.push(n), e.i.appendChild(n);
    },
    insertBefore: function (n, t) {
      this.childNodes.push(n), e.i.appendChild(n);
    },
    removeChild: function (n) {
      this.childNodes.splice(this.childNodes.indexOf(n) >>> 1, 1), e.i.removeChild(n);
    }
  }), (0,preact__WEBPACK_IMPORTED_MODULE_0__.render)((0,preact__WEBPACK_IMPORTED_MODULE_0__.createElement)(P, {
    context: e.context
  }, n.__v), e.l)) : e.l && e.componentWillUnmount();
}
function j(n, e) {
  var r = (0,preact__WEBPACK_IMPORTED_MODULE_0__.createElement)($, {
    __v: n,
    i: e
  });
  return r.containerInfo = e, r;
}
(V.prototype = new preact__WEBPACK_IMPORTED_MODULE_0__.Component()).__a = function (n) {
  var t = this,
    e = F(t.__v),
    r = t.o.get(n);
  return r[0]++, function (u) {
    var o = function () {
      t.props.revealOrder ? (r.push(u), W(t, n, r)) : u();
    };
    e ? e(o) : o();
  };
}, V.prototype.render = function (n) {
  this.u = null, this.o = new Map();
  var t = (0,preact__WEBPACK_IMPORTED_MODULE_0__.toChildArray)(n.children);
  n.revealOrder && "b" === n.revealOrder[0] && t.reverse();
  for (var e = t.length; e--;) this.o.set(t[e], this.u = [1, 0, this.u]);
  return n.children;
}, V.prototype.componentDidUpdate = V.prototype.componentDidMount = function () {
  var n = this;
  this.o.forEach(function (t, e) {
    W(n, e, t);
  });
};
var z = "undefined" != typeof Symbol && Symbol.for && Symbol.for("react.element") || 60103,
  B = /^(?:accent|alignment|arabic|baseline|cap|clip(?!PathU)|color|dominant|fill|flood|font|glyph(?!R)|horiz|image|letter|lighting|marker(?!H|W|U)|overline|paint|pointer|shape|stop|strikethrough|stroke|text(?!L)|transform|underline|unicode|units|v|vector|vert|word|writing|x(?!C))[A-Z]/,
  H = "undefined" != typeof document,
  Z = function (n) {
    return ("undefined" != typeof Symbol && "symbol" == typeof Symbol() ? /fil|che|rad/i : /fil|che|ra/i).test(n);
  };
function Y(n, t, e) {
  return null == t.__k && (t.textContent = ""), (0,preact__WEBPACK_IMPORTED_MODULE_0__.render)(n, t), "function" == typeof e && e(), n ? n.__c : null;
}
function q(n, t, e) {
  return (0,preact__WEBPACK_IMPORTED_MODULE_0__.hydrate)(n, t), "function" == typeof e && e(), n ? n.__c : null;
}
preact__WEBPACK_IMPORTED_MODULE_0__.Component.prototype.isReactComponent = {}, ["componentWillMount", "componentWillReceiveProps", "componentWillUpdate"].forEach(function (t) {
  Object.defineProperty(preact__WEBPACK_IMPORTED_MODULE_0__.Component.prototype, t, {
    configurable: !0,
    get: function () {
      return this["UNSAFE_" + t];
    },
    set: function (n) {
      Object.defineProperty(this, t, {
        configurable: !0,
        writable: !0,
        value: n
      });
    }
  });
});
var G = preact__WEBPACK_IMPORTED_MODULE_0__.options.event;
function J() {}
function K() {
  return this.cancelBubble;
}
function Q() {
  return this.defaultPrevented;
}
preact__WEBPACK_IMPORTED_MODULE_0__.options.event = function (n) {
  return G && (n = G(n)), n.persist = J, n.isPropagationStopped = K, n.isDefaultPrevented = Q, n.nativeEvent = n;
};
var X,
  nn = {
    configurable: !0,
    get: function () {
      return this.class;
    }
  },
  tn = preact__WEBPACK_IMPORTED_MODULE_0__.options.vnode;
preact__WEBPACK_IMPORTED_MODULE_0__.options.vnode = function (n) {
  var t = n.type,
    e = n.props,
    u = e;
  if ("string" == typeof t) {
    var o = -1 === t.indexOf("-");
    for (var i in u = {}, e) {
      var l = e[i];
      H && "children" === i && "noscript" === t || "value" === i && "defaultValue" in e && null == l || ("defaultValue" === i && "value" in e && null == e.value ? i = "value" : "download" === i && !0 === l ? l = "" : /ondoubleclick/i.test(i) ? i = "ondblclick" : /^onchange(textarea|input)/i.test(i + t) && !Z(e.type) ? i = "oninput" : /^onfocus$/i.test(i) ? i = "onfocusin" : /^onblur$/i.test(i) ? i = "onfocusout" : /^on(Ani|Tra|Tou|BeforeInp|Compo)/.test(i) ? i = i.toLowerCase() : o && B.test(i) ? i = i.replace(/[A-Z0-9]/g, "-$&").toLowerCase() : null === l && (l = void 0), /^oninput$/i.test(i) && (i = i.toLowerCase(), u[i] && (i = "oninputCapture")), u[i] = l);
    }
    "select" == t && u.multiple && Array.isArray(u.value) && (u.value = (0,preact__WEBPACK_IMPORTED_MODULE_0__.toChildArray)(e.children).forEach(function (n) {
      n.props.selected = -1 != u.value.indexOf(n.props.value);
    })), "select" == t && null != u.defaultValue && (u.value = (0,preact__WEBPACK_IMPORTED_MODULE_0__.toChildArray)(e.children).forEach(function (n) {
      n.props.selected = u.multiple ? -1 != u.defaultValue.indexOf(n.props.value) : u.defaultValue == n.props.value;
    })), n.props = u, e.class != e.className && (nn.enumerable = "className" in e, null != e.className && (u.class = e.className), Object.defineProperty(u, "className", nn));
  }
  n.$$typeof = z, tn && tn(n);
};
var en = preact__WEBPACK_IMPORTED_MODULE_0__.options.__r;
preact__WEBPACK_IMPORTED_MODULE_0__.options.__r = function (n) {
  en && en(n), X = n.__c;
};
var rn = {
    ReactCurrentDispatcher: {
      current: {
        readContext: function (n) {
          return X.__n[n.__c].props.value;
        }
      }
    }
  },
  un = "17.0.2";
function on(n) {
  return preact__WEBPACK_IMPORTED_MODULE_0__.createElement.bind(null, n);
}
function ln(n) {
  return !!n && n.$$typeof === z;
}
function cn(n) {
  return ln(n) ? preact__WEBPACK_IMPORTED_MODULE_0__.cloneElement.apply(null, arguments) : n;
}
function fn(n) {
  return !!n.__k && ((0,preact__WEBPACK_IMPORTED_MODULE_0__.render)(null, n), !0);
}
function an(n) {
  return n && (n.base || 1 === n.nodeType && n) || null;
}
var sn = function (n, t) {
    return n(t);
  },
  hn = function (n, t) {
    return n(t);
  },
  vn = preact__WEBPACK_IMPORTED_MODULE_0__.Fragment;
function dn(n) {
  n();
}
function pn(n) {
  return n;
}
function mn() {
  return [!1, dn];
}
var yn = preact_hooks__WEBPACK_IMPORTED_MODULE_1__.useLayoutEffect;
function _n(n, t) {
  var e = t(),
    r = (0,preact_hooks__WEBPACK_IMPORTED_MODULE_1__.useState)({
      h: {
        __: e,
        v: t
      }
    }),
    u = r[0].h,
    o = r[1];
  return (0,preact_hooks__WEBPACK_IMPORTED_MODULE_1__.useLayoutEffect)(function () {
    u.__ = e, u.v = t, E(u.__, t()) || o({
      h: u
    });
  }, [n, e, t]), (0,preact_hooks__WEBPACK_IMPORTED_MODULE_1__.useEffect)(function () {
    return E(u.__, u.v()) || o({
      h: u
    }), n(function () {
      E(u.__, u.v()) || o({
        h: u
      });
    });
  }, [n]), e;
}
var bn = {
  useState: preact_hooks__WEBPACK_IMPORTED_MODULE_1__.useState,
  useId: preact_hooks__WEBPACK_IMPORTED_MODULE_1__.useId,
  useReducer: preact_hooks__WEBPACK_IMPORTED_MODULE_1__.useReducer,
  useEffect: preact_hooks__WEBPACK_IMPORTED_MODULE_1__.useEffect,
  useLayoutEffect: preact_hooks__WEBPACK_IMPORTED_MODULE_1__.useLayoutEffect,
  useInsertionEffect: yn,
  useTransition: mn,
  useDeferredValue: pn,
  useSyncExternalStore: _n,
  startTransition: dn,
  useRef: preact_hooks__WEBPACK_IMPORTED_MODULE_1__.useRef,
  useImperativeHandle: preact_hooks__WEBPACK_IMPORTED_MODULE_1__.useImperativeHandle,
  useMemo: preact_hooks__WEBPACK_IMPORTED_MODULE_1__.useMemo,
  useCallback: preact_hooks__WEBPACK_IMPORTED_MODULE_1__.useCallback,
  useContext: preact_hooks__WEBPACK_IMPORTED_MODULE_1__.useContext,
  useDebugValue: preact_hooks__WEBPACK_IMPORTED_MODULE_1__.useDebugValue,
  version: "17.0.2",
  Children: O,
  render: Y,
  hydrate: q,
  unmountComponentAtNode: fn,
  createPortal: j,
  createElement: preact__WEBPACK_IMPORTED_MODULE_0__.createElement,
  createContext: preact__WEBPACK_IMPORTED_MODULE_0__.createContext,
  createFactory: on,
  cloneElement: cn,
  createRef: preact__WEBPACK_IMPORTED_MODULE_0__.createRef,
  Fragment: preact__WEBPACK_IMPORTED_MODULE_0__.Fragment,
  isValidElement: ln,
  findDOMNode: an,
  Component: preact__WEBPACK_IMPORTED_MODULE_0__.Component,
  PureComponent: w,
  memo: R,
  forwardRef: k,
  flushSync: hn,
  unstable_batchedUpdates: sn,
  StrictMode: vn,
  Suspense: D,
  SuspenseList: V,
  lazy: M,
  __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: rn
};


/***/ }),

/***/ 3586:
/*!***************************************************!*\
  !*** ./node_modules/preact/dist/preact.module.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Component: () => (/* binding */ x),
/* harmony export */   Fragment: () => (/* binding */ _),
/* harmony export */   cloneElement: () => (/* binding */ F),
/* harmony export */   createContext: () => (/* binding */ G),
/* harmony export */   createElement: () => (/* binding */ y),
/* harmony export */   createRef: () => (/* binding */ d),
/* harmony export */   h: () => (/* binding */ y),
/* harmony export */   hydrate: () => (/* binding */ E),
/* harmony export */   isValidElement: () => (/* binding */ i),
/* harmony export */   options: () => (/* binding */ l),
/* harmony export */   render: () => (/* binding */ D),
/* harmony export */   toChildArray: () => (/* binding */ j)
/* harmony export */ });
var n,
  l,
  u,
  i,
  t,
  r,
  o,
  f,
  e,
  c = {},
  s = [],
  a = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;
function h(n, l) {
  for (var u in l) n[u] = l[u];
  return n;
}
function v(n) {
  var l = n.parentNode;
  l && l.removeChild(n);
}
function y(l, u, i) {
  var t,
    r,
    o,
    f = {};
  for (o in u) "key" == o ? t = u[o] : "ref" == o ? r = u[o] : f[o] = u[o];
  if (arguments.length > 2 && (f.children = arguments.length > 3 ? n.call(arguments, 2) : i), "function" == typeof l && null != l.defaultProps) for (o in l.defaultProps) void 0 === f[o] && (f[o] = l.defaultProps[o]);
  return p(l, f, t, r, null);
}
function p(n, i, t, r, o) {
  var f = {
    type: n,
    props: i,
    key: t,
    ref: r,
    __k: null,
    __: null,
    __b: 0,
    __e: null,
    __d: void 0,
    __c: null,
    __h: null,
    constructor: void 0,
    __v: null == o ? ++u : o
  };
  return null == o && null != l.vnode && l.vnode(f), f;
}
function d() {
  return {
    current: null
  };
}
function _(n) {
  return n.children;
}
function k(n, l, u, i, t) {
  var r;
  for (r in u) "children" === r || "key" === r || r in l || g(n, r, null, u[r], i);
  for (r in l) t && "function" != typeof l[r] || "children" === r || "key" === r || "value" === r || "checked" === r || u[r] === l[r] || g(n, r, l[r], u[r], i);
}
function b(n, l, u) {
  "-" === l[0] ? n.setProperty(l, null == u ? "" : u) : n[l] = null == u ? "" : "number" != typeof u || a.test(l) ? u : u + "px";
}
function g(n, l, u, i, t) {
  var r;
  n: if ("style" === l) {
    if ("string" == typeof u) n.style.cssText = u;else {
      if ("string" == typeof i && (n.style.cssText = i = ""), i) for (l in i) u && l in u || b(n.style, l, "");
      if (u) for (l in u) i && u[l] === i[l] || b(n.style, l, u[l]);
    }
  } else if ("o" === l[0] && "n" === l[1]) r = l !== (l = l.replace(/Capture$/, "")), l = l.toLowerCase() in n ? l.toLowerCase().slice(2) : l.slice(2), n.l || (n.l = {}), n.l[l + r] = u, u ? i || n.addEventListener(l, r ? w : m, r) : n.removeEventListener(l, r ? w : m, r);else if ("dangerouslySetInnerHTML" !== l) {
    if (t) l = l.replace(/xlink(H|:h)/, "h").replace(/sName$/, "s");else if ("width" !== l && "height" !== l && "href" !== l && "list" !== l && "form" !== l && "tabIndex" !== l && "download" !== l && l in n) try {
      n[l] = null == u ? "" : u;
      break n;
    } catch (n) {}
    "function" == typeof u || (null == u || !1 === u && -1 == l.indexOf("-") ? n.removeAttribute(l) : n.setAttribute(l, u));
  }
}
function m(n) {
  t = !0;
  try {
    return this.l[n.type + !1](l.event ? l.event(n) : n);
  } finally {
    t = !1;
  }
}
function w(n) {
  t = !0;
  try {
    return this.l[n.type + !0](l.event ? l.event(n) : n);
  } finally {
    t = !1;
  }
}
function x(n, l) {
  this.props = n, this.context = l;
}
function A(n, l) {
  if (null == l) return n.__ ? A(n.__, n.__.__k.indexOf(n) + 1) : null;
  for (var u; l < n.__k.length; l++) if (null != (u = n.__k[l]) && null != u.__e) return u.__e;
  return "function" == typeof n.type ? A(n) : null;
}
function P(n) {
  var l, u;
  if (null != (n = n.__) && null != n.__c) {
    for (n.__e = n.__c.base = null, l = 0; l < n.__k.length; l++) if (null != (u = n.__k[l]) && null != u.__e) {
      n.__e = n.__c.base = u.__e;
      break;
    }
    return P(n);
  }
}
function C(n) {
  t ? setTimeout(n) : f(n);
}
function T(n) {
  (!n.__d && (n.__d = !0) && r.push(n) && !$.__r++ || o !== l.debounceRendering) && ((o = l.debounceRendering) || C)($);
}
function $() {
  var n, l, u, i, t, o, f, e;
  for (r.sort(function (n, l) {
    return n.__v.__b - l.__v.__b;
  }); n = r.shift();) n.__d && (l = r.length, i = void 0, t = void 0, f = (o = (u = n).__v).__e, (e = u.__P) && (i = [], (t = h({}, o)).__v = o.__v + 1, M(e, o, t, u.__n, void 0 !== e.ownerSVGElement, null != o.__h ? [f] : null, i, null == f ? A(o) : f, o.__h), N(i, o), o.__e != f && P(o)), r.length > l && r.sort(function (n, l) {
    return n.__v.__b - l.__v.__b;
  }));
  $.__r = 0;
}
function H(n, l, u, i, t, r, o, f, e, a) {
  var h,
    v,
    y,
    d,
    k,
    b,
    g,
    m = i && i.__k || s,
    w = m.length;
  for (u.__k = [], h = 0; h < l.length; h++) if (null != (d = u.__k[h] = null == (d = l[h]) || "boolean" == typeof d ? null : "string" == typeof d || "number" == typeof d || "bigint" == typeof d ? p(null, d, null, null, d) : Array.isArray(d) ? p(_, {
    children: d
  }, null, null, null) : d.__b > 0 ? p(d.type, d.props, d.key, d.ref ? d.ref : null, d.__v) : d)) {
    if (d.__ = u, d.__b = u.__b + 1, null === (y = m[h]) || y && d.key == y.key && d.type === y.type) m[h] = void 0;else for (v = 0; v < w; v++) {
      if ((y = m[v]) && d.key == y.key && d.type === y.type) {
        m[v] = void 0;
        break;
      }
      y = null;
    }
    M(n, d, y = y || c, t, r, o, f, e, a), k = d.__e, (v = d.ref) && y.ref != v && (g || (g = []), y.ref && g.push(y.ref, null, d), g.push(v, d.__c || k, d)), null != k ? (null == b && (b = k), "function" == typeof d.type && d.__k === y.__k ? d.__d = e = I(d, e, n) : e = z(n, d, y, m, k, e), "function" == typeof u.type && (u.__d = e)) : e && y.__e == e && e.parentNode != n && (e = A(y));
  }
  for (u.__e = b, h = w; h--;) null != m[h] && ("function" == typeof u.type && null != m[h].__e && m[h].__e == u.__d && (u.__d = L(i).nextSibling), q(m[h], m[h]));
  if (g) for (h = 0; h < g.length; h++) S(g[h], g[++h], g[++h]);
}
function I(n, l, u) {
  for (var i, t = n.__k, r = 0; t && r < t.length; r++) (i = t[r]) && (i.__ = n, l = "function" == typeof i.type ? I(i, l, u) : z(u, i, i, t, i.__e, l));
  return l;
}
function j(n, l) {
  return l = l || [], null == n || "boolean" == typeof n || (Array.isArray(n) ? n.some(function (n) {
    j(n, l);
  }) : l.push(n)), l;
}
function z(n, l, u, i, t, r) {
  var o, f, e;
  if (void 0 !== l.__d) o = l.__d, l.__d = void 0;else if (null == u || t != r || null == t.parentNode) n: if (null == r || r.parentNode !== n) n.appendChild(t), o = null;else {
    for (f = r, e = 0; (f = f.nextSibling) && e < i.length; e += 1) if (f == t) break n;
    n.insertBefore(t, r), o = r;
  }
  return void 0 !== o ? o : t.nextSibling;
}
function L(n) {
  var l, u, i;
  if (null == n.type || "string" == typeof n.type) return n.__e;
  if (n.__k) for (l = n.__k.length - 1; l >= 0; l--) if ((u = n.__k[l]) && (i = L(u))) return i;
  return null;
}
function M(n, u, i, t, r, o, f, e, c) {
  var s,
    a,
    v,
    y,
    p,
    d,
    k,
    b,
    g,
    m,
    w,
    A,
    P,
    C,
    T,
    $ = u.type;
  if (void 0 !== u.constructor) return null;
  null != i.__h && (c = i.__h, e = u.__e = i.__e, u.__h = null, o = [e]), (s = l.__b) && s(u);
  try {
    n: if ("function" == typeof $) {
      if (b = u.props, g = (s = $.contextType) && t[s.__c], m = s ? g ? g.props.value : s.__ : t, i.__c ? k = (a = u.__c = i.__c).__ = a.__E : ("prototype" in $ && $.prototype.render ? u.__c = a = new $(b, m) : (u.__c = a = new x(b, m), a.constructor = $, a.render = B), g && g.sub(a), a.props = b, a.state || (a.state = {}), a.context = m, a.__n = t, v = a.__d = !0, a.__h = [], a._sb = []), null == a.__s && (a.__s = a.state), null != $.getDerivedStateFromProps && (a.__s == a.state && (a.__s = h({}, a.__s)), h(a.__s, $.getDerivedStateFromProps(b, a.__s))), y = a.props, p = a.state, a.__v = u, v) null == $.getDerivedStateFromProps && null != a.componentWillMount && a.componentWillMount(), null != a.componentDidMount && a.__h.push(a.componentDidMount);else {
        if (null == $.getDerivedStateFromProps && b !== y && null != a.componentWillReceiveProps && a.componentWillReceiveProps(b, m), !a.__e && null != a.shouldComponentUpdate && !1 === a.shouldComponentUpdate(b, a.__s, m) || u.__v === i.__v) {
          for (u.__v !== i.__v && (a.props = b, a.state = a.__s, a.__d = !1), u.__e = i.__e, u.__k = i.__k, u.__k.forEach(function (n) {
            n && (n.__ = u);
          }), w = 0; w < a._sb.length; w++) a.__h.push(a._sb[w]);
          a._sb = [], a.__h.length && f.push(a);
          break n;
        }
        null != a.componentWillUpdate && a.componentWillUpdate(b, a.__s, m), null != a.componentDidUpdate && a.__h.push(function () {
          a.componentDidUpdate(y, p, d);
        });
      }
      if (a.context = m, a.props = b, a.__P = n, A = l.__r, P = 0, "prototype" in $ && $.prototype.render) {
        for (a.state = a.__s, a.__d = !1, A && A(u), s = a.render(a.props, a.state, a.context), C = 0; C < a._sb.length; C++) a.__h.push(a._sb[C]);
        a._sb = [];
      } else do {
        a.__d = !1, A && A(u), s = a.render(a.props, a.state, a.context), a.state = a.__s;
      } while (a.__d && ++P < 25);
      a.state = a.__s, null != a.getChildContext && (t = h(h({}, t), a.getChildContext())), v || null == a.getSnapshotBeforeUpdate || (d = a.getSnapshotBeforeUpdate(y, p)), T = null != s && s.type === _ && null == s.key ? s.props.children : s, H(n, Array.isArray(T) ? T : [T], u, i, t, r, o, f, e, c), a.base = u.__e, u.__h = null, a.__h.length && f.push(a), k && (a.__E = a.__ = null), a.__e = !1;
    } else null == o && u.__v === i.__v ? (u.__k = i.__k, u.__e = i.__e) : u.__e = O(i.__e, u, i, t, r, o, f, c);
    (s = l.diffed) && s(u);
  } catch (n) {
    u.__v = null, (c || null != o) && (u.__e = e, u.__h = !!c, o[o.indexOf(e)] = null), l.__e(n, u, i);
  }
}
function N(n, u) {
  l.__c && l.__c(u, n), n.some(function (u) {
    try {
      n = u.__h, u.__h = [], n.some(function (n) {
        n.call(u);
      });
    } catch (n) {
      l.__e(n, u.__v);
    }
  });
}
function O(l, u, i, t, r, o, f, e) {
  var s,
    a,
    h,
    y = i.props,
    p = u.props,
    d = u.type,
    _ = 0;
  if ("svg" === d && (r = !0), null != o) for (; _ < o.length; _++) if ((s = o[_]) && "setAttribute" in s == !!d && (d ? s.localName === d : 3 === s.nodeType)) {
    l = s, o[_] = null;
    break;
  }
  if (null == l) {
    if (null === d) return document.createTextNode(p);
    l = r ? document.createElementNS("http://www.w3.org/2000/svg", d) : document.createElement(d, p.is && p), o = null, e = !1;
  }
  if (null === d) y === p || e && l.data === p || (l.data = p);else {
    if (o = o && n.call(l.childNodes), a = (y = i.props || c).dangerouslySetInnerHTML, h = p.dangerouslySetInnerHTML, !e) {
      if (null != o) for (y = {}, _ = 0; _ < l.attributes.length; _++) y[l.attributes[_].name] = l.attributes[_].value;
      (h || a) && (h && (a && h.__html == a.__html || h.__html === l.innerHTML) || (l.innerHTML = h && h.__html || ""));
    }
    if (k(l, p, y, r, e), h) u.__k = [];else if (_ = u.props.children, H(l, Array.isArray(_) ? _ : [_], u, i, t, r && "foreignObject" !== d, o, f, o ? o[0] : i.__k && A(i, 0), e), null != o) for (_ = o.length; _--;) null != o[_] && v(o[_]);
    e || ("value" in p && void 0 !== (_ = p.value) && (_ !== l.value || "progress" === d && !_ || "option" === d && _ !== y.value) && g(l, "value", _, y.value, !1), "checked" in p && void 0 !== (_ = p.checked) && _ !== l.checked && g(l, "checked", _, y.checked, !1));
  }
  return l;
}
function S(n, u, i) {
  try {
    "function" == typeof n ? n(u) : n.current = u;
  } catch (n) {
    l.__e(n, i);
  }
}
function q(n, u, i) {
  var t, r;
  if (l.unmount && l.unmount(n), (t = n.ref) && (t.current && t.current !== n.__e || S(t, null, u)), null != (t = n.__c)) {
    if (t.componentWillUnmount) try {
      t.componentWillUnmount();
    } catch (n) {
      l.__e(n, u);
    }
    t.base = t.__P = null, n.__c = void 0;
  }
  if (t = n.__k) for (r = 0; r < t.length; r++) t[r] && q(t[r], u, i || "function" != typeof n.type);
  i || null == n.__e || v(n.__e), n.__ = n.__e = n.__d = void 0;
}
function B(n, l, u) {
  return this.constructor(n, u);
}
function D(u, i, t) {
  var r, o, f;
  l.__ && l.__(u, i), o = (r = "function" == typeof t) ? null : t && t.__k || i.__k, f = [], M(i, u = (!r && t || i).__k = y(_, null, [u]), o || c, c, void 0 !== i.ownerSVGElement, !r && t ? [t] : o ? null : i.firstChild ? n.call(i.childNodes) : null, f, !r && t ? t : o ? o.__e : i.firstChild, r), N(f, u);
}
function E(n, l) {
  D(n, l, E);
}
function F(l, u, i) {
  var t,
    r,
    o,
    f = h({}, l.props);
  for (o in u) "key" == o ? t = u[o] : "ref" == o ? r = u[o] : f[o] = u[o];
  return arguments.length > 2 && (f.children = arguments.length > 3 ? n.call(arguments, 2) : i), p(l.type, f, t || l.key, r || l.ref, null);
}
function G(n, l) {
  var u = {
    __c: l = "__cC" + e++,
    __: n,
    Consumer: function (n, l) {
      return n.children(l);
    },
    Provider: function (n) {
      var u, i;
      return this.getChildContext || (u = [], (i = {})[l] = this, this.getChildContext = function () {
        return i;
      }, this.shouldComponentUpdate = function (n) {
        this.props.value !== n.value && u.some(function (n) {
          n.__e = !0, T(n);
        });
      }, this.sub = function (n) {
        u.push(n);
        var l = n.componentWillUnmount;
        n.componentWillUnmount = function () {
          u.splice(u.indexOf(n), 1), l && l.call(n);
        };
      }), n.children;
    }
  };
  return u.Provider.__ = u.Consumer.contextType = u;
}
n = s.slice, l = {
  __e: function (n, l, u, i) {
    for (var t, r, o; l = l.__;) if ((t = l.__c) && !t.__) try {
      if ((r = t.constructor) && null != r.getDerivedStateFromError && (t.setState(r.getDerivedStateFromError(n)), o = t.__d), null != t.componentDidCatch && (t.componentDidCatch(n, i || {}), o = t.__d), o) return t.__E = t;
    } catch (l) {
      n = l;
    }
    throw n;
  }
}, u = 0, i = function (n) {
  return null != n && void 0 === n.constructor;
}, t = !1, x.prototype.setState = function (n, l) {
  var u;
  u = null != this.__s && this.__s !== this.state ? this.__s : this.__s = h({}, this.state), "function" == typeof n && (n = n(h({}, u), this.props)), n && h(u, n), null != n && this.__v && (l && this._sb.push(l), T(this));
}, x.prototype.forceUpdate = function (n) {
  this.__v && (this.__e = !0, n && this.__h.push(n), T(this));
}, x.prototype.render = _, r = [], f = "function" == typeof Promise ? Promise.prototype.then.bind(Promise.resolve()) : setTimeout, $.__r = 0, e = 0;


/***/ }),

/***/ 3482:
/*!********************************************************!*\
  !*** ./node_modules/preact/hooks/dist/hooks.module.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   useCallback: () => (/* binding */ T),
/* harmony export */   useContext: () => (/* binding */ q),
/* harmony export */   useDebugValue: () => (/* binding */ x),
/* harmony export */   useEffect: () => (/* binding */ h),
/* harmony export */   useErrorBoundary: () => (/* binding */ P),
/* harmony export */   useId: () => (/* binding */ V),
/* harmony export */   useImperativeHandle: () => (/* binding */ A),
/* harmony export */   useLayoutEffect: () => (/* binding */ s),
/* harmony export */   useMemo: () => (/* binding */ F),
/* harmony export */   useReducer: () => (/* binding */ y),
/* harmony export */   useRef: () => (/* binding */ _),
/* harmony export */   useState: () => (/* binding */ p)
/* harmony export */ });
/* harmony import */ var preact__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! preact */ 3586);

var t,
  r,
  u,
  i,
  o = 0,
  f = [],
  c = [],
  e = preact__WEBPACK_IMPORTED_MODULE_0__.options.__b,
  a = preact__WEBPACK_IMPORTED_MODULE_0__.options.__r,
  v = preact__WEBPACK_IMPORTED_MODULE_0__.options.diffed,
  l = preact__WEBPACK_IMPORTED_MODULE_0__.options.__c,
  m = preact__WEBPACK_IMPORTED_MODULE_0__.options.unmount;
function d(t, u) {
  preact__WEBPACK_IMPORTED_MODULE_0__.options.__h && preact__WEBPACK_IMPORTED_MODULE_0__.options.__h(r, t, o || u), o = 0;
  var i = r.__H || (r.__H = {
    __: [],
    __h: []
  });
  return t >= i.__.length && i.__.push({
    __V: c
  }), i.__[t];
}
function p(n) {
  return o = 1, y(B, n);
}
function y(n, u, i) {
  var o = d(t++, 2);
  if (o.t = n, !o.__c && (o.__ = [i ? i(u) : B(void 0, u), function (n) {
    var t = o.__N ? o.__N[0] : o.__[0],
      r = o.t(t, n);
    t !== r && (o.__N = [r, o.__[1]], o.__c.setState({}));
  }], o.__c = r, !r.u)) {
    r.u = !0;
    var f = r.shouldComponentUpdate;
    r.shouldComponentUpdate = function (n, t, r) {
      if (!o.__c.__H) return !0;
      var u = o.__c.__H.__.filter(function (n) {
        return n.__c;
      });
      if (u.every(function (n) {
        return !n.__N;
      })) return !f || f.call(this, n, t, r);
      var i = !1;
      return u.forEach(function (n) {
        if (n.__N) {
          var t = n.__[0];
          n.__ = n.__N, n.__N = void 0, t !== n.__[0] && (i = !0);
        }
      }), !(!i && o.__c.props === n) && (!f || f.call(this, n, t, r));
    };
  }
  return o.__N || o.__;
}
function h(u, i) {
  var o = d(t++, 3);
  !preact__WEBPACK_IMPORTED_MODULE_0__.options.__s && z(o.__H, i) && (o.__ = u, o.i = i, r.__H.__h.push(o));
}
function s(u, i) {
  var o = d(t++, 4);
  !preact__WEBPACK_IMPORTED_MODULE_0__.options.__s && z(o.__H, i) && (o.__ = u, o.i = i, r.__h.push(o));
}
function _(n) {
  return o = 5, F(function () {
    return {
      current: n
    };
  }, []);
}
function A(n, t, r) {
  o = 6, s(function () {
    return "function" == typeof n ? (n(t()), function () {
      return n(null);
    }) : n ? (n.current = t(), function () {
      return n.current = null;
    }) : void 0;
  }, null == r ? r : r.concat(n));
}
function F(n, r) {
  var u = d(t++, 7);
  return z(u.__H, r) ? (u.__V = n(), u.i = r, u.__h = n, u.__V) : u.__;
}
function T(n, t) {
  return o = 8, F(function () {
    return n;
  }, t);
}
function q(n) {
  var u = r.context[n.__c],
    i = d(t++, 9);
  return i.c = n, u ? (null == i.__ && (i.__ = !0, u.sub(r)), u.props.value) : n.__;
}
function x(t, r) {
  preact__WEBPACK_IMPORTED_MODULE_0__.options.useDebugValue && preact__WEBPACK_IMPORTED_MODULE_0__.options.useDebugValue(r ? r(t) : t);
}
function P(n) {
  var u = d(t++, 10),
    i = p();
  return u.__ = n, r.componentDidCatch || (r.componentDidCatch = function (n, t) {
    u.__ && u.__(n, t), i[1](n);
  }), [i[0], function () {
    i[1](void 0);
  }];
}
function V() {
  var n = d(t++, 11);
  if (!n.__) {
    for (var u = r.__v; null !== u && !u.__m && null !== u.__;) u = u.__;
    var i = u.__m || (u.__m = [0, 0]);
    n.__ = "P" + i[0] + "-" + i[1]++;
  }
  return n.__;
}
function b() {
  for (var t; t = f.shift();) if (t.__P && t.__H) try {
    t.__H.__h.forEach(k), t.__H.__h.forEach(w), t.__H.__h = [];
  } catch (r) {
    t.__H.__h = [], preact__WEBPACK_IMPORTED_MODULE_0__.options.__e(r, t.__v);
  }
}
preact__WEBPACK_IMPORTED_MODULE_0__.options.__b = function (n) {
  r = null, e && e(n);
}, preact__WEBPACK_IMPORTED_MODULE_0__.options.__r = function (n) {
  a && a(n), t = 0;
  var i = (r = n.__c).__H;
  i && (u === r ? (i.__h = [], r.__h = [], i.__.forEach(function (n) {
    n.__N && (n.__ = n.__N), n.__V = c, n.__N = n.i = void 0;
  })) : (i.__h.forEach(k), i.__h.forEach(w), i.__h = [])), u = r;
}, preact__WEBPACK_IMPORTED_MODULE_0__.options.diffed = function (t) {
  v && v(t);
  var o = t.__c;
  o && o.__H && (o.__H.__h.length && (1 !== f.push(o) && i === preact__WEBPACK_IMPORTED_MODULE_0__.options.requestAnimationFrame || ((i = preact__WEBPACK_IMPORTED_MODULE_0__.options.requestAnimationFrame) || j)(b)), o.__H.__.forEach(function (n) {
    n.i && (n.__H = n.i), n.__V !== c && (n.__ = n.__V), n.i = void 0, n.__V = c;
  })), u = r = null;
}, preact__WEBPACK_IMPORTED_MODULE_0__.options.__c = function (t, r) {
  r.some(function (t) {
    try {
      t.__h.forEach(k), t.__h = t.__h.filter(function (n) {
        return !n.__ || w(n);
      });
    } catch (u) {
      r.some(function (n) {
        n.__h && (n.__h = []);
      }), r = [], preact__WEBPACK_IMPORTED_MODULE_0__.options.__e(u, t.__v);
    }
  }), l && l(t, r);
}, preact__WEBPACK_IMPORTED_MODULE_0__.options.unmount = function (t) {
  m && m(t);
  var r,
    u = t.__c;
  u && u.__H && (u.__H.__.forEach(function (n) {
    try {
      k(n);
    } catch (n) {
      r = n;
    }
  }), u.__H = void 0, r && preact__WEBPACK_IMPORTED_MODULE_0__.options.__e(r, u.__v));
};
var g = "function" == typeof requestAnimationFrame;
function j(n) {
  var t,
    r = function () {
      clearTimeout(u), g && cancelAnimationFrame(t), setTimeout(n);
    },
    u = setTimeout(r, 100);
  g && (t = requestAnimationFrame(r));
}
function k(n) {
  var t = r,
    u = n.__c;
  "function" == typeof u && (n.__c = void 0, u()), r = t;
}
function w(n) {
  var t = r;
  n.__c = n.__(), r = t;
}
function z(n, t) {
  return !n || n.length !== t.length || t.some(function (t, r) {
    return t !== n[r];
  });
}
function B(n, t) {
  return "function" == typeof t ? t(n) : t;
}


/***/ }),

/***/ 6141:
/*!****************************************************************!*\
  !*** ./node_modules/rxjs/dist/esm/internal/operators/audit.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   audit: () => (/* binding */ audit)
/* harmony export */ });
/* harmony import */ var _util_lift__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/lift */ 4114);
/* harmony import */ var _observable_innerFrom__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../observable/innerFrom */ 384);
/* harmony import */ var _OperatorSubscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./OperatorSubscriber */ 5678);



function audit(durationSelector) {
  return (0,_util_lift__WEBPACK_IMPORTED_MODULE_0__.operate)((source, subscriber) => {
    let hasValue = false;
    let lastValue = null;
    let durationSubscriber = null;
    let isComplete = false;
    const endDuration = () => {
      durationSubscriber === null || durationSubscriber === void 0 ? void 0 : durationSubscriber.unsubscribe();
      durationSubscriber = null;
      if (hasValue) {
        hasValue = false;
        const value = lastValue;
        lastValue = null;
        subscriber.next(value);
      }
      isComplete && subscriber.complete();
    };
    const cleanupDuration = () => {
      durationSubscriber = null;
      isComplete && subscriber.complete();
    };
    source.subscribe((0,_OperatorSubscriber__WEBPACK_IMPORTED_MODULE_1__.createOperatorSubscriber)(subscriber, value => {
      hasValue = true;
      lastValue = value;
      if (!durationSubscriber) {
        (0,_observable_innerFrom__WEBPACK_IMPORTED_MODULE_2__.innerFrom)(durationSelector(value)).subscribe(durationSubscriber = (0,_OperatorSubscriber__WEBPACK_IMPORTED_MODULE_1__.createOperatorSubscriber)(subscriber, endDuration, cleanupDuration));
      }
    }, () => {
      isComplete = true;
      (!hasValue || !durationSubscriber || durationSubscriber.closed) && subscriber.complete();
    }));
  });
}

/***/ }),

/***/ 2815:
/*!********************************************************************!*\
  !*** ./node_modules/rxjs/dist/esm/internal/operators/auditTime.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   auditTime: () => (/* binding */ auditTime)
/* harmony export */ });
/* harmony import */ var _scheduler_async__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../scheduler/async */ 7777);
/* harmony import */ var _audit__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./audit */ 6141);
/* harmony import */ var _observable_timer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../observable/timer */ 9378);



function auditTime(duration, scheduler = _scheduler_async__WEBPACK_IMPORTED_MODULE_0__.asyncScheduler) {
  return (0,_audit__WEBPACK_IMPORTED_MODULE_1__.audit)(() => (0,_observable_timer__WEBPACK_IMPORTED_MODULE_2__.timer)(duration, scheduler));
}

/***/ }),

/***/ 655:
/*!***********************************************************************!*\
  !*** ./node_modules/rxjs/dist/esm/internal/operators/debounceTime.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   debounceTime: () => (/* binding */ debounceTime)
/* harmony export */ });
/* harmony import */ var _scheduler_async__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../scheduler/async */ 7777);
/* harmony import */ var _util_lift__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/lift */ 4114);
/* harmony import */ var _OperatorSubscriber__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./OperatorSubscriber */ 5678);



function debounceTime(dueTime, scheduler = _scheduler_async__WEBPACK_IMPORTED_MODULE_0__.asyncScheduler) {
  return (0,_util_lift__WEBPACK_IMPORTED_MODULE_1__.operate)((source, subscriber) => {
    let activeTask = null;
    let lastValue = null;
    let lastTime = null;
    const emit = () => {
      if (activeTask) {
        activeTask.unsubscribe();
        activeTask = null;
        const value = lastValue;
        lastValue = null;
        subscriber.next(value);
      }
    };
    function emitWhenIdle() {
      const targetTime = lastTime + dueTime;
      const now = scheduler.now();
      if (now < targetTime) {
        activeTask = this.schedule(undefined, targetTime - now);
        subscriber.add(activeTask);
        return;
      }
      emit();
    }
    source.subscribe((0,_OperatorSubscriber__WEBPACK_IMPORTED_MODULE_2__.createOperatorSubscriber)(subscriber, value => {
      lastValue = value;
      lastTime = scheduler.now();
      if (!activeTask) {
        activeTask = scheduler.schedule(emitWhenIdle, dueTime);
        subscriber.add(activeTask);
      }
    }, () => {
      emit();
      subscriber.complete();
    }, undefined, () => {
      lastValue = activeTask = null;
    }));
  });
}

/***/ }),

/***/ 5732:
/*!*********************************************************************!*\
  !*** ./node_modules/rxjs/dist/esm/internal/scheduler/AsapAction.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AsapAction: () => (/* binding */ AsapAction)
/* harmony export */ });
/* harmony import */ var _AsyncAction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AsyncAction */ 415);
/* harmony import */ var _immediateProvider__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./immediateProvider */ 965);


class AsapAction extends _AsyncAction__WEBPACK_IMPORTED_MODULE_0__.AsyncAction {
  constructor(scheduler, work) {
    super(scheduler, work);
    this.scheduler = scheduler;
    this.work = work;
  }
  requestAsyncId(scheduler, id, delay = 0) {
    if (delay !== null && delay > 0) {
      return super.requestAsyncId(scheduler, id, delay);
    }
    scheduler.actions.push(this);
    return scheduler._scheduled || (scheduler._scheduled = _immediateProvider__WEBPACK_IMPORTED_MODULE_1__.immediateProvider.setImmediate(scheduler.flush.bind(scheduler, undefined)));
  }
  recycleAsyncId(scheduler, id, delay = 0) {
    var _a;
    if (delay != null ? delay > 0 : this.delay > 0) {
      return super.recycleAsyncId(scheduler, id, delay);
    }
    const {
      actions
    } = scheduler;
    if (id != null && ((_a = actions[actions.length - 1]) === null || _a === void 0 ? void 0 : _a.id) !== id) {
      _immediateProvider__WEBPACK_IMPORTED_MODULE_1__.immediateProvider.clearImmediate(id);
      if (scheduler._scheduled === id) {
        scheduler._scheduled = undefined;
      }
    }
    return undefined;
  }
}

/***/ }),

/***/ 3403:
/*!************************************************************************!*\
  !*** ./node_modules/rxjs/dist/esm/internal/scheduler/AsapScheduler.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AsapScheduler: () => (/* binding */ AsapScheduler)
/* harmony export */ });
/* harmony import */ var _AsyncScheduler__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AsyncScheduler */ 5920);

class AsapScheduler extends _AsyncScheduler__WEBPACK_IMPORTED_MODULE_0__.AsyncScheduler {
  flush(action) {
    this._active = true;
    const flushId = this._scheduled;
    this._scheduled = undefined;
    const {
      actions
    } = this;
    let error;
    action = action || actions.shift();
    do {
      if (error = action.execute(action.state, action.delay)) {
        break;
      }
    } while ((action = actions[0]) && action.id === flushId && actions.shift());
    this._active = false;
    if (error) {
      while ((action = actions[0]) && action.id === flushId && actions.shift()) {
        action.unsubscribe();
      }
      throw error;
    }
  }
}

/***/ }),

/***/ 1141:
/*!***************************************************************!*\
  !*** ./node_modules/rxjs/dist/esm/internal/scheduler/asap.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   asap: () => (/* binding */ asap),
/* harmony export */   asapScheduler: () => (/* binding */ asapScheduler)
/* harmony export */ });
/* harmony import */ var _AsapAction__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AsapAction */ 5732);
/* harmony import */ var _AsapScheduler__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AsapScheduler */ 3403);


const asapScheduler = new _AsapScheduler__WEBPACK_IMPORTED_MODULE_0__.AsapScheduler(_AsapAction__WEBPACK_IMPORTED_MODULE_1__.AsapAction);
const asap = asapScheduler;

/***/ }),

/***/ 965:
/*!****************************************************************************!*\
  !*** ./node_modules/rxjs/dist/esm/internal/scheduler/immediateProvider.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   immediateProvider: () => (/* binding */ immediateProvider)
/* harmony export */ });
/* harmony import */ var _util_Immediate__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/Immediate */ 1698);

const {
  setImmediate,
  clearImmediate
} = _util_Immediate__WEBPACK_IMPORTED_MODULE_0__.Immediate;
const immediateProvider = {
  setImmediate(...args) {
    const {
      delegate
    } = immediateProvider;
    return ((delegate === null || delegate === void 0 ? void 0 : delegate.setImmediate) || setImmediate)(...args);
  },
  clearImmediate(handle) {
    const {
      delegate
    } = immediateProvider;
    return ((delegate === null || delegate === void 0 ? void 0 : delegate.clearImmediate) || clearImmediate)(handle);
  },
  delegate: undefined
};

/***/ }),

/***/ 1698:
/*!***************************************************************!*\
  !*** ./node_modules/rxjs/dist/esm/internal/util/Immediate.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Immediate: () => (/* binding */ Immediate),
/* harmony export */   TestTools: () => (/* binding */ TestTools)
/* harmony export */ });
let nextHandle = 1;
let resolved;
const activeHandles = {};
function findAndClearHandle(handle) {
  if (handle in activeHandles) {
    delete activeHandles[handle];
    return true;
  }
  return false;
}
const Immediate = {
  setImmediate(cb) {
    const handle = nextHandle++;
    activeHandles[handle] = true;
    if (!resolved) {
      resolved = Promise.resolve();
    }
    resolved.then(() => findAndClearHandle(handle) && cb());
    return handle;
  },
  clearImmediate(handle) {
    findAndClearHandle(handle);
  }
};
const TestTools = {
  pending() {
    return Object.keys(activeHandles).length;
  }
};

/***/ }),

/***/ 8526:
/*!**************************************************************************************!*\
  !*** ./node_modules/@ctrl/ngx-emoji-mart/fesm2022/ctrl-ngx-emoji-mart-ngx-emoji.mjs ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DEFAULT_BACKGROUNDFN: () => (/* binding */ DEFAULT_BACKGROUNDFN),
/* harmony export */   EmojiComponent: () => (/* binding */ EmojiComponent),
/* harmony export */   EmojiModule: () => (/* binding */ EmojiModule),
/* harmony export */   EmojiService: () => (/* binding */ EmojiService),
/* harmony export */   categories: () => (/* binding */ categories),
/* harmony export */   emojis: () => (/* binding */ emojis),
/* harmony export */   skins: () => (/* binding */ skins)
/* harmony export */ });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ 1699);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/common */ 6575);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs */ 2513);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ 1891);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ 9016);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs */ 6290);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! rxjs */ 274);





const _c0 = ["button"];
function EmojiComponent_ng_template_0_button_0_ng_template_3_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](0);
  }
  if (rf & 2) {
    const ctx_r5 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](ctx_r5.unified);
  }
}
function EmojiComponent_ng_template_0_button_0_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "button", 3, 4)(2, "span", 5);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](3, EmojiComponent_ng_template_0_button_0_ng_template_3_Template, 1, 1, "ng-template", 0);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵprojection"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]()();
  }
  if (rf & 2) {
    const ctx_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵclassProp"]("emoji-mart-emoji-native", ctx_r3.isNative)("emoji-mart-emoji-custom", ctx_r3.custom);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵattribute"]("title", ctx_r3.title)("aria-label", ctx_r3.label);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngStyle", ctx_r3.style);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx_r3.isNative);
  }
}
function EmojiComponent_ng_template_0_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](0, EmojiComponent_ng_template_0_button_0_Template, 5, 8, "button", 2);
  }
  if (rf & 2) {
    const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
    const _r1 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx_r0.useButton)("ngIfElse", _r1);
  }
}
function EmojiComponent_ng_template_1_ng_template_3_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](0);
  }
  if (rf & 2) {
    const ctx_r7 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](ctx_r7.unified);
  }
}
function EmojiComponent_ng_template_1_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span", 6, 4)(2, "span", 5);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](3, EmojiComponent_ng_template_1_ng_template_3_Template, 1, 1, "ng-template", 0);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵprojection"](4, 1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]()();
  }
  if (rf & 2) {
    const ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵclassProp"]("emoji-mart-emoji-native", ctx_r2.isNative)("emoji-mart-emoji-custom", ctx_r2.custom);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵattribute"]("title", ctx_r2.title)("aria-label", ctx_r2.label);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngStyle", ctx_r2.style);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx_r2.isNative);
  }
}
const _c1 = ["*", "*"];
const categories = [{
  id: 'people',
  name: 'Smileys & People',
  emojis: ['1F600', '1F603', '1F604', '1F601', '1F606', '1F605', '1F923', '1F602', '1F642', '1F643', '1FAE0', '1F609', '1F60A', '1F607', '1F970', '1F60D', '1F929', '1F618', '1F617', '263A-FE0F', '1F61A', '1F619', '1F972', '1F60B', '1F61B', '1F61C', '1F92A', '1F61D', '1F911', '1F917', '1F92D', '1FAE2', '1FAE3', '1F92B', '1F914', '1FAE1', '1F910', '1F928', '1F610', '1F611', '1F636', '1FAE5', '1F636-200D-1F32B-FE0F', '1F60F', '1F612', '1F644', '1F62C', '1F62E-200D-1F4A8', '1F925', '1F60C', '1F614', '1F62A', '1F924', '1F634', '1F637', '1F912', '1F915', '1F922', '1F92E', '1F927', '1F975', '1F976', '1F974', '1F635', '1F635-200D-1F4AB', '1F92F', '1F920', '1F973', '1F978', '1F60E', '1F913', '1F9D0', '1F615', '1FAE4', '1F61F', '1F641', '2639-FE0F', '1F62E', '1F62F', '1F632', '1F633', '1F97A', '1F979', '1F626', '1F627', '1F628', '1F630', '1F625', '1F622', '1F62D', '1F631', '1F616', '1F623', '1F61E', '1F613', '1F629', '1F62B', '1F971', '1F624', '1F621', '1F620', '1F92C', '1F608', '1F47F', '1F480', '2620-FE0F', '1F4A9', '1F921', '1F479', '1F47A', '1F47B', '1F47D', '1F47E', '1F916', '1F44B', '1F91A', '1F590-FE0F', '270B', '1F596', '1FAF1', '1FAF2', '1FAF3', '1FAF4', '1F44C', '1F90C', '1F90F', '270C-FE0F', '1F91E', '1FAF0', '1F91F', '1F918', '1F919', '1F448', '1F449', '1F446', '1F595', '1F447', '261D-FE0F', '1FAF5', '1F44D', '1F44E', '270A', '1F44A', '1F91B', '1F91C', '1F44F', '1F64C', '1FAF6', '1F450', '1F932', '1F91D', '1F64F', '270D-FE0F', '1F485', '1F933', '1F4AA', '1F9BE', '1F9BF', '1F9B5', '1F9B6', '1F442', '1F9BB', '1F443', '1F9E0', '1FAC0', '1FAC1', '1F9B7', '1F9B4', '1F440', '1F441-FE0F', '1F445', '1F444', '1FAE6', '1F476', '1F9D2', '1F466', '1F467', '1F9D1', '1F471', '1F468', '1F9D4', '1F9D4-200D-2642-FE0F', '1F9D4-200D-2640-FE0F', '1F468-200D-1F9B0', '1F468-200D-1F9B1', '1F468-200D-1F9B3', '1F468-200D-1F9B2', '1F469', '1F469-200D-1F9B0', '1F9D1-200D-1F9B0', '1F469-200D-1F9B1', '1F9D1-200D-1F9B1', '1F469-200D-1F9B3', '1F9D1-200D-1F9B3', '1F469-200D-1F9B2', '1F9D1-200D-1F9B2', '1F471-200D-2640-FE0F', '1F471-200D-2642-FE0F', '1F9D3', '1F474', '1F475', '1F64D', '1F64D-200D-2642-FE0F', '1F64D-200D-2640-FE0F', '1F64E', '1F64E-200D-2642-FE0F', '1F64E-200D-2640-FE0F', '1F645', '1F645-200D-2642-FE0F', '1F645-200D-2640-FE0F', '1F646', '1F646-200D-2642-FE0F', '1F646-200D-2640-FE0F', '1F481', '1F481-200D-2642-FE0F', '1F481-200D-2640-FE0F', '1F64B', '1F64B-200D-2642-FE0F', '1F64B-200D-2640-FE0F', '1F9CF', '1F9CF-200D-2642-FE0F', '1F9CF-200D-2640-FE0F', '1F647', '1F647-200D-2642-FE0F', '1F647-200D-2640-FE0F', '1F926', '1F926-200D-2642-FE0F', '1F926-200D-2640-FE0F', '1F937', '1F937-200D-2642-FE0F', '1F937-200D-2640-FE0F', '1F9D1-200D-2695-FE0F', '1F468-200D-2695-FE0F', '1F469-200D-2695-FE0F', '1F9D1-200D-1F393', '1F468-200D-1F393', '1F469-200D-1F393', '1F9D1-200D-1F3EB', '1F468-200D-1F3EB', '1F469-200D-1F3EB', '1F9D1-200D-2696-FE0F', '1F468-200D-2696-FE0F', '1F469-200D-2696-FE0F', '1F9D1-200D-1F33E', '1F468-200D-1F33E', '1F469-200D-1F33E', '1F9D1-200D-1F373', '1F468-200D-1F373', '1F469-200D-1F373', '1F9D1-200D-1F527', '1F468-200D-1F527', '1F469-200D-1F527', '1F9D1-200D-1F3ED', '1F468-200D-1F3ED', '1F469-200D-1F3ED', '1F9D1-200D-1F4BC', '1F468-200D-1F4BC', '1F469-200D-1F4BC', '1F9D1-200D-1F52C', '1F468-200D-1F52C', '1F469-200D-1F52C', '1F9D1-200D-1F4BB', '1F468-200D-1F4BB', '1F469-200D-1F4BB', '1F9D1-200D-1F3A4', '1F468-200D-1F3A4', '1F469-200D-1F3A4', '1F9D1-200D-1F3A8', '1F468-200D-1F3A8', '1F469-200D-1F3A8', '1F9D1-200D-2708-FE0F', '1F468-200D-2708-FE0F', '1F469-200D-2708-FE0F', '1F9D1-200D-1F680', '1F468-200D-1F680', '1F469-200D-1F680', '1F9D1-200D-1F692', '1F468-200D-1F692', '1F469-200D-1F692', '1F46E', '1F46E-200D-2642-FE0F', '1F46E-200D-2640-FE0F', '1F575-FE0F', '1F575-FE0F-200D-2642-FE0F', '1F575-FE0F-200D-2640-FE0F', '1F482', '1F482-200D-2642-FE0F', '1F482-200D-2640-FE0F', '1F977', '1F477', '1F477-200D-2642-FE0F', '1F477-200D-2640-FE0F', '1FAC5', '1F934', '1F478', '1F473', '1F473-200D-2642-FE0F', '1F473-200D-2640-FE0F', '1F472', '1F9D5', '1F935', '1F935-200D-2642-FE0F', '1F935-200D-2640-FE0F', '1F470', '1F470-200D-2642-FE0F', '1F470-200D-2640-FE0F', '1F930', '1FAC3', '1FAC4', '1F931', '1F469-200D-1F37C', '1F468-200D-1F37C', '1F9D1-200D-1F37C', '1F47C', '1F385', '1F936', '1F9D1-200D-1F384', '1F9B8', '1F9B8-200D-2642-FE0F', '1F9B8-200D-2640-FE0F', '1F9B9', '1F9B9-200D-2642-FE0F', '1F9B9-200D-2640-FE0F', '1F9D9', '1F9D9-200D-2642-FE0F', '1F9D9-200D-2640-FE0F', '1F9DA', '1F9DA-200D-2642-FE0F', '1F9DA-200D-2640-FE0F', '1F9DB', '1F9DB-200D-2642-FE0F', '1F9DB-200D-2640-FE0F', '1F9DC', '1F9DC-200D-2642-FE0F', '1F9DC-200D-2640-FE0F', '1F9DD', '1F9DD-200D-2642-FE0F', '1F9DD-200D-2640-FE0F', '1F9DE', '1F9DE-200D-2642-FE0F', '1F9DE-200D-2640-FE0F', '1F9DF', '1F9DF-200D-2642-FE0F', '1F9DF-200D-2640-FE0F', '1F9CC', '1F486', '1F486-200D-2642-FE0F', '1F486-200D-2640-FE0F', '1F487', '1F487-200D-2642-FE0F', '1F487-200D-2640-FE0F', '1F6B6', '1F6B6-200D-2642-FE0F', '1F6B6-200D-2640-FE0F', '1F9CD', '1F9CD-200D-2642-FE0F', '1F9CD-200D-2640-FE0F', '1F9CE', '1F9CE-200D-2642-FE0F', '1F9CE-200D-2640-FE0F', '1F9D1-200D-1F9AF', '1F468-200D-1F9AF', '1F469-200D-1F9AF', '1F9D1-200D-1F9BC', '1F468-200D-1F9BC', '1F469-200D-1F9BC', '1F9D1-200D-1F9BD', '1F468-200D-1F9BD', '1F469-200D-1F9BD', '1F3C3', '1F3C3-200D-2642-FE0F', '1F3C3-200D-2640-FE0F', '1F483', '1F57A', '1F574-FE0F', '1F46F', '1F46F-200D-2642-FE0F', '1F46F-200D-2640-FE0F', '1F9D6', '1F9D6-200D-2642-FE0F', '1F9D6-200D-2640-FE0F', '1F9D7', '1F9D7-200D-2642-FE0F', '1F9D7-200D-2640-FE0F', '1F93A', '1F3C7', '26F7-FE0F', '1F3C2', '1F3CC-FE0F', '1F3CC-FE0F-200D-2642-FE0F', '1F3CC-FE0F-200D-2640-FE0F', '1F3C4', '1F3C4-200D-2642-FE0F', '1F3C4-200D-2640-FE0F', '1F6A3', '1F6A3-200D-2642-FE0F', '1F6A3-200D-2640-FE0F', '1F3CA', '1F3CA-200D-2642-FE0F', '1F3CA-200D-2640-FE0F', '26F9-FE0F', '26F9-FE0F-200D-2642-FE0F', '26F9-FE0F-200D-2640-FE0F', '1F3CB-FE0F', '1F3CB-FE0F-200D-2642-FE0F', '1F3CB-FE0F-200D-2640-FE0F', '1F6B4', '1F6B4-200D-2642-FE0F', '1F6B4-200D-2640-FE0F', '1F6B5', '1F6B5-200D-2642-FE0F', '1F6B5-200D-2640-FE0F', '1F938', '1F938-200D-2642-FE0F', '1F938-200D-2640-FE0F', '1F93C', '1F93C-200D-2642-FE0F', '1F93C-200D-2640-FE0F', '1F93D', '1F93D-200D-2642-FE0F', '1F93D-200D-2640-FE0F', '1F93E', '1F93E-200D-2642-FE0F', '1F93E-200D-2640-FE0F', '1F939', '1F939-200D-2642-FE0F', '1F939-200D-2640-FE0F', '1F9D8', '1F9D8-200D-2642-FE0F', '1F9D8-200D-2640-FE0F', '1F6C0', '1F6CC', '1F9D1-200D-1F91D-200D-1F9D1', '1F46D', '1F46B', '1F46C', '1F48F', '1F469-200D-2764-FE0F-200D-1F48B-200D-1F468', '1F468-200D-2764-FE0F-200D-1F48B-200D-1F468', '1F469-200D-2764-FE0F-200D-1F48B-200D-1F469', '1F491', '1F469-200D-2764-FE0F-200D-1F468', '1F468-200D-2764-FE0F-200D-1F468', '1F469-200D-2764-FE0F-200D-1F469', '1F46A', '1F468-200D-1F469-200D-1F466', '1F468-200D-1F469-200D-1F467', '1F468-200D-1F469-200D-1F467-200D-1F466', '1F468-200D-1F469-200D-1F466-200D-1F466', '1F468-200D-1F469-200D-1F467-200D-1F467', '1F468-200D-1F468-200D-1F466', '1F468-200D-1F468-200D-1F467', '1F468-200D-1F468-200D-1F467-200D-1F466', '1F468-200D-1F468-200D-1F466-200D-1F466', '1F468-200D-1F468-200D-1F467-200D-1F467', '1F469-200D-1F469-200D-1F466', '1F469-200D-1F469-200D-1F467', '1F469-200D-1F469-200D-1F467-200D-1F466', '1F469-200D-1F469-200D-1F466-200D-1F466', '1F469-200D-1F469-200D-1F467-200D-1F467', '1F468-200D-1F466', '1F468-200D-1F466-200D-1F466', '1F468-200D-1F467', '1F468-200D-1F467-200D-1F466', '1F468-200D-1F467-200D-1F467', '1F469-200D-1F466', '1F469-200D-1F466-200D-1F466', '1F469-200D-1F467', '1F469-200D-1F467-200D-1F466', '1F469-200D-1F467-200D-1F467', '1F5E3-FE0F', '1F464', '1F465', '1FAC2', '1F463', '1F63A', '1F638', '1F639', '1F63B', '1F63C', '1F63D', '1F640', '1F63F', '1F63E', '1F648', '1F649', '1F64A', '1F48B', '1F48C', '1F498', '1F49D', '1F496', '1F497', '1F493', '1F49E', '1F495', '1F49F', '2763-FE0F', '1F494', '2764-FE0F-200D-1F525', '2764-FE0F-200D-1FA79', '2764-FE0F', '1F9E1', '1F49B', '1F49A', '1F499', '1F49C', '1F90E', '1F5A4', '1F90D', '1F4AF', '1F4A2', '1F4A5', '1F4AB', '1F4A6', '1F4A8', '1F573-FE0F', '1F4A3', '1F4AC', '1F441-FE0F-200D-1F5E8-FE0F', '1F5E8-FE0F', '1F5EF-FE0F', '1F4AD', '1F4A4']
}, {
  id: 'nature',
  name: 'Animals & Nature',
  emojis: ['1F435', '1F412', '1F98D', '1F9A7', '1F436', '1F415', '1F9AE', '1F415-200D-1F9BA', '1F429', '1F43A', '1F98A', '1F99D', '1F431', '1F408', '1F408-200D-2B1B', '1F981', '1F42F', '1F405', '1F406', '1F434', '1F40E', '1F984', '1F993', '1F98C', '1F9AC', '1F42E', '1F402', '1F403', '1F404', '1F437', '1F416', '1F417', '1F43D', '1F40F', '1F411', '1F410', '1F42A', '1F42B', '1F999', '1F992', '1F418', '1F9A3', '1F98F', '1F99B', '1F42D', '1F401', '1F400', '1F439', '1F430', '1F407', '1F43F-FE0F', '1F9AB', '1F994', '1F987', '1F43B', '1F43B-200D-2744-FE0F', '1F428', '1F43C', '1F9A5', '1F9A6', '1F9A8', '1F998', '1F9A1', '1F43E', '1F983', '1F414', '1F413', '1F423', '1F424', '1F425', '1F426', '1F427', '1F54A-FE0F', '1F985', '1F986', '1F9A2', '1F989', '1F9A4', '1FAB6', '1F9A9', '1F99A', '1F99C', '1F438', '1F40A', '1F422', '1F98E', '1F40D', '1F432', '1F409', '1F995', '1F996', '1F433', '1F40B', '1F42C', '1F9AD', '1F41F', '1F420', '1F421', '1F988', '1F419', '1F41A', '1FAB8', '1F40C', '1F98B', '1F41B', '1F41C', '1F41D', '1FAB2', '1F41E', '1F997', '1FAB3', '1F577-FE0F', '1F578-FE0F', '1F982', '1F99F', '1FAB0', '1FAB1', '1F9A0', '1F490', '1F338', '1F4AE', '1FAB7', '1F3F5-FE0F', '1F339', '1F940', '1F33A', '1F33B', '1F33C', '1F337', '1F331', '1FAB4', '1F332', '1F333', '1F334', '1F335', '1F33E', '1F33F', '2618-FE0F', '1F340', '1F341', '1F342', '1F343', '1FAB9', '1FABA']
}, {
  id: 'foods',
  name: 'Food & Drink',
  emojis: ['1F347', '1F348', '1F349', '1F34A', '1F34B', '1F34C', '1F34D', '1F96D', '1F34E', '1F34F', '1F350', '1F351', '1F352', '1F353', '1FAD0', '1F95D', '1F345', '1FAD2', '1F965', '1F951', '1F346', '1F954', '1F955', '1F33D', '1F336-FE0F', '1FAD1', '1F952', '1F96C', '1F966', '1F9C4', '1F9C5', '1F344', '1F95C', '1FAD8', '1F330', '1F35E', '1F950', '1F956', '1FAD3', '1F968', '1F96F', '1F95E', '1F9C7', '1F9C0', '1F356', '1F357', '1F969', '1F953', '1F354', '1F35F', '1F355', '1F32D', '1F96A', '1F32E', '1F32F', '1FAD4', '1F959', '1F9C6', '1F95A', '1F373', '1F958', '1F372', '1FAD5', '1F963', '1F957', '1F37F', '1F9C8', '1F9C2', '1F96B', '1F371', '1F358', '1F359', '1F35A', '1F35B', '1F35C', '1F35D', '1F360', '1F362', '1F363', '1F364', '1F365', '1F96E', '1F361', '1F95F', '1F960', '1F961', '1F980', '1F99E', '1F990', '1F991', '1F9AA', '1F366', '1F367', '1F368', '1F369', '1F36A', '1F382', '1F370', '1F9C1', '1F967', '1F36B', '1F36C', '1F36D', '1F36E', '1F36F', '1F37C', '1F95B', '2615', '1FAD6', '1F375', '1F376', '1F37E', '1F377', '1F378', '1F379', '1F37A', '1F37B', '1F942', '1F943', '1FAD7', '1F964', '1F9CB', '1F9C3', '1F9C9', '1F9CA', '1F962', '1F37D-FE0F', '1F374', '1F944', '1F52A', '1FAD9', '1F3FA']
}, {
  id: 'activity',
  name: 'Activities',
  emojis: ['1F383', '1F384', '1F386', '1F387', '1F9E8', '2728', '1F388', '1F389', '1F38A', '1F38B', '1F38D', '1F38E', '1F38F', '1F390', '1F391', '1F9E7', '1F380', '1F381', '1F397-FE0F', '1F39F-FE0F', '1F3AB', '1F396-FE0F', '1F3C6', '1F3C5', '1F947', '1F948', '1F949', '26BD', '26BE', '1F94E', '1F3C0', '1F3D0', '1F3C8', '1F3C9', '1F3BE', '1F94F', '1F3B3', '1F3CF', '1F3D1', '1F3D2', '1F94D', '1F3D3', '1F3F8', '1F94A', '1F94B', '1F945', '26F3', '26F8-FE0F', '1F3A3', '1F93F', '1F3BD', '1F3BF', '1F6F7', '1F94C', '1F3AF', '1FA80', '1FA81', '1F3B1', '1F52E', '1FA84', '1F9FF', '1FAAC', '1F3AE', '1F579-FE0F', '1F3B0', '1F3B2', '1F9E9', '1F9F8', '1FA85', '1FAA9', '1FA86', '2660-FE0F', '2665-FE0F', '2666-FE0F', '2663-FE0F', '265F-FE0F', '1F0CF', '1F004', '1F3B4', '1F3AD', '1F5BC-FE0F', '1F3A8', '1F9F5', '1FAA1', '1F9F6', '1FAA2']
}, {
  id: 'places',
  name: 'Travel & Places',
  emojis: ['1F30D', '1F30E', '1F30F', '1F310', '1F5FA-FE0F', '1F5FE', '1F9ED', '1F3D4-FE0F', '26F0-FE0F', '1F30B', '1F5FB', '1F3D5-FE0F', '1F3D6-FE0F', '1F3DC-FE0F', '1F3DD-FE0F', '1F3DE-FE0F', '1F3DF-FE0F', '1F3DB-FE0F', '1F3D7-FE0F', '1F9F1', '1FAA8', '1FAB5', '1F6D6', '1F3D8-FE0F', '1F3DA-FE0F', '1F3E0', '1F3E1', '1F3E2', '1F3E3', '1F3E4', '1F3E5', '1F3E6', '1F3E8', '1F3E9', '1F3EA', '1F3EB', '1F3EC', '1F3ED', '1F3EF', '1F3F0', '1F492', '1F5FC', '1F5FD', '26EA', '1F54C', '1F6D5', '1F54D', '26E9-FE0F', '1F54B', '26F2', '26FA', '1F301', '1F303', '1F3D9-FE0F', '1F304', '1F305', '1F306', '1F307', '1F309', '2668-FE0F', '1F3A0', '1F6DD', '1F3A1', '1F3A2', '1F488', '1F3AA', '1F682', '1F683', '1F684', '1F685', '1F686', '1F687', '1F688', '1F689', '1F68A', '1F69D', '1F69E', '1F68B', '1F68C', '1F68D', '1F68E', '1F690', '1F691', '1F692', '1F693', '1F694', '1F695', '1F696', '1F697', '1F698', '1F699', '1F6FB', '1F69A', '1F69B', '1F69C', '1F3CE-FE0F', '1F3CD-FE0F', '1F6F5', '1F9BD', '1F9BC', '1F6FA', '1F6B2', '1F6F4', '1F6F9', '1F6FC', '1F68F', '1F6E3-FE0F', '1F6E4-FE0F', '1F6E2-FE0F', '26FD', '1F6DE', '1F6A8', '1F6A5', '1F6A6', '1F6D1', '1F6A7', '2693', '1F6DF', '26F5', '1F6F6', '1F6A4', '1F6F3-FE0F', '26F4-FE0F', '1F6E5-FE0F', '1F6A2', '2708-FE0F', '1F6E9-FE0F', '1F6EB', '1F6EC', '1FA82', '1F4BA', '1F681', '1F69F', '1F6A0', '1F6A1', '1F6F0-FE0F', '1F680', '1F6F8', '1F6CE-FE0F', '1F9F3', '231B', '23F3', '231A', '23F0', '23F1-FE0F', '23F2-FE0F', '1F570-FE0F', '1F55B', '1F567', '1F550', '1F55C', '1F551', '1F55D', '1F552', '1F55E', '1F553', '1F55F', '1F554', '1F560', '1F555', '1F561', '1F556', '1F562', '1F557', '1F563', '1F558', '1F564', '1F559', '1F565', '1F55A', '1F566', '1F311', '1F312', '1F313', '1F314', '1F315', '1F316', '1F317', '1F318', '1F319', '1F31A', '1F31B', '1F31C', '1F321-FE0F', '2600-FE0F', '1F31D', '1F31E', '1FA90', '2B50', '1F31F', '1F320', '1F30C', '2601-FE0F', '26C5', '26C8-FE0F', '1F324-FE0F', '1F325-FE0F', '1F326-FE0F', '1F327-FE0F', '1F328-FE0F', '1F329-FE0F', '1F32A-FE0F', '1F32B-FE0F', '1F32C-FE0F', '1F300', '1F308', '1F302', '2602-FE0F', '2614', '26F1-FE0F', '26A1', '2744-FE0F', '2603-FE0F', '26C4', '2604-FE0F', '1F525', '1F4A7', '1F30A']
}, {
  id: 'objects',
  name: 'Objects',
  emojis: ['1F453', '1F576-FE0F', '1F97D', '1F97C', '1F9BA', '1F454', '1F455', '1F456', '1F9E3', '1F9E4', '1F9E5', '1F9E6', '1F457', '1F458', '1F97B', '1FA71', '1FA72', '1FA73', '1F459', '1F45A', '1F45B', '1F45C', '1F45D', '1F6CD-FE0F', '1F392', '1FA74', '1F45E', '1F45F', '1F97E', '1F97F', '1F460', '1F461', '1FA70', '1F462', '1F451', '1F452', '1F3A9', '1F393', '1F9E2', '1FA96', '26D1-FE0F', '1F4FF', '1F484', '1F48D', '1F48E', '1F507', '1F508', '1F509', '1F50A', '1F4E2', '1F4E3', '1F4EF', '1F514', '1F515', '1F3BC', '1F3B5', '1F3B6', '1F399-FE0F', '1F39A-FE0F', '1F39B-FE0F', '1F3A4', '1F3A7', '1F4FB', '1F3B7', '1FA97', '1F3B8', '1F3B9', '1F3BA', '1F3BB', '1FA95', '1F941', '1FA98', '1F4F1', '1F4F2', '260E-FE0F', '1F4DE', '1F4DF', '1F4E0', '1F50B', '1FAAB', '1F50C', '1F4BB', '1F5A5-FE0F', '1F5A8-FE0F', '2328-FE0F', '1F5B1-FE0F', '1F5B2-FE0F', '1F4BD', '1F4BE', '1F4BF', '1F4C0', '1F9EE', '1F3A5', '1F39E-FE0F', '1F4FD-FE0F', '1F3AC', '1F4FA', '1F4F7', '1F4F8', '1F4F9', '1F4FC', '1F50D', '1F50E', '1F56F-FE0F', '1F4A1', '1F526', '1F3EE', '1FA94', '1F4D4', '1F4D5', '1F4D6', '1F4D7', '1F4D8', '1F4D9', '1F4DA', '1F4D3', '1F4D2', '1F4C3', '1F4DC', '1F4C4', '1F4F0', '1F5DE-FE0F', '1F4D1', '1F516', '1F3F7-FE0F', '1F4B0', '1FA99', '1F4B4', '1F4B5', '1F4B6', '1F4B7', '1F4B8', '1F4B3', '1F9FE', '1F4B9', '2709-FE0F', '1F4E7', '1F4E8', '1F4E9', '1F4E4', '1F4E5', '1F4E6', '1F4EB', '1F4EA', '1F4EC', '1F4ED', '1F4EE', '1F5F3-FE0F', '270F-FE0F', '2712-FE0F', '1F58B-FE0F', '1F58A-FE0F', '1F58C-FE0F', '1F58D-FE0F', '1F4DD', '1F4BC', '1F4C1', '1F4C2', '1F5C2-FE0F', '1F4C5', '1F4C6', '1F5D2-FE0F', '1F5D3-FE0F', '1F4C7', '1F4C8', '1F4C9', '1F4CA', '1F4CB', '1F4CC', '1F4CD', '1F4CE', '1F587-FE0F', '1F4CF', '1F4D0', '2702-FE0F', '1F5C3-FE0F', '1F5C4-FE0F', '1F5D1-FE0F', '1F512', '1F513', '1F50F', '1F510', '1F511', '1F5DD-FE0F', '1F528', '1FA93', '26CF-FE0F', '2692-FE0F', '1F6E0-FE0F', '1F5E1-FE0F', '2694-FE0F', '1F52B', '1FA83', '1F3F9', '1F6E1-FE0F', '1FA9A', '1F527', '1FA9B', '1F529', '2699-FE0F', '1F5DC-FE0F', '2696-FE0F', '1F9AF', '1F517', '26D3-FE0F', '1FA9D', '1F9F0', '1F9F2', '1FA9C', '2697-FE0F', '1F9EA', '1F9EB', '1F9EC', '1F52C', '1F52D', '1F4E1', '1F489', '1FA78', '1F48A', '1FA79', '1FA7C', '1FA7A', '1FA7B', '1F6AA', '1F6D7', '1FA9E', '1FA9F', '1F6CF-FE0F', '1F6CB-FE0F', '1FA91', '1F6BD', '1FAA0', '1F6BF', '1F6C1', '1FAA4', '1FA92', '1F9F4', '1F9F7', '1F9F9', '1F9FA', '1F9FB', '1FAA3', '1F9FC', '1FAE7', '1FAA5', '1F9FD', '1F9EF', '1F6D2', '1F6AC', '26B0-FE0F', '1FAA6', '26B1-FE0F', '1F5FF', '1FAA7', '1FAAA']
}, {
  id: 'symbols',
  name: 'Symbols',
  emojis: ['1F3E7', '1F6AE', '1F6B0', '267F', '1F6B9', '1F6BA', '1F6BB', '1F6BC', '1F6BE', '1F6C2', '1F6C3', '1F6C4', '1F6C5', '26A0-FE0F', '1F6B8', '26D4', '1F6AB', '1F6B3', '1F6AD', '1F6AF', '1F6B1', '1F6B7', '1F4F5', '1F51E', '2622-FE0F', '2623-FE0F', '2B06-FE0F', '2197-FE0F', '27A1-FE0F', '2198-FE0F', '2B07-FE0F', '2199-FE0F', '2B05-FE0F', '2196-FE0F', '2195-FE0F', '2194-FE0F', '21A9-FE0F', '21AA-FE0F', '2934-FE0F', '2935-FE0F', '1F503', '1F504', '1F519', '1F51A', '1F51B', '1F51C', '1F51D', '1F6D0', '269B-FE0F', '1F549-FE0F', '2721-FE0F', '2638-FE0F', '262F-FE0F', '271D-FE0F', '2626-FE0F', '262A-FE0F', '262E-FE0F', '1F54E', '1F52F', '2648', '2649', '264A', '264B', '264C', '264D', '264E', '264F', '2650', '2651', '2652', '2653', '26CE', '1F500', '1F501', '1F502', '25B6-FE0F', '23E9', '23ED-FE0F', '23EF-FE0F', '25C0-FE0F', '23EA', '23EE-FE0F', '1F53C', '23EB', '1F53D', '23EC', '23F8-FE0F', '23F9-FE0F', '23FA-FE0F', '23CF-FE0F', '1F3A6', '1F505', '1F506', '1F4F6', '1F4F3', '1F4F4', '2640-FE0F', '2642-FE0F', '26A7-FE0F', '2716-FE0F', '2795', '2796', '2797', '1F7F0', '267E-FE0F', '203C-FE0F', '2049-FE0F', '2753', '2754', '2755', '2757', '3030-FE0F', '1F4B1', '1F4B2', '2695-FE0F', '267B-FE0F', '269C-FE0F', '1F531', '1F4DB', '1F530', '2B55', '2705', '2611-FE0F', '2714-FE0F', '274C', '274E', '27B0', '27BF', '303D-FE0F', '2733-FE0F', '2734-FE0F', '2747-FE0F', '00A9-FE0F', '00AE-FE0F', '2122-FE0F', '0023-FE0F-20E3', '002A-FE0F-20E3', '0030-FE0F-20E3', '0031-FE0F-20E3', '0032-FE0F-20E3', '0033-FE0F-20E3', '0034-FE0F-20E3', '0035-FE0F-20E3', '0036-FE0F-20E3', '0037-FE0F-20E3', '0038-FE0F-20E3', '0039-FE0F-20E3', '1F51F', '1F520', '1F521', '1F522', '1F523', '1F524', '1F170-FE0F', '1F18E', '1F171-FE0F', '1F191', '1F192', '1F193', '2139-FE0F', '1F194', '24C2-FE0F', '1F195', '1F196', '1F17E-FE0F', '1F197', '1F17F-FE0F', '1F198', '1F199', '1F19A', '1F201', '1F202-FE0F', '1F237-FE0F', '1F236', '1F22F', '1F250', '1F239', '1F21A', '1F232', '1F251', '1F238', '1F234', '1F233', '3297-FE0F', '3299-FE0F', '1F23A', '1F235', '1F534', '1F7E0', '1F7E1', '1F7E2', '1F535', '1F7E3', '1F7E4', '26AB', '26AA', '1F7E5', '1F7E7', '1F7E8', '1F7E9', '1F7E6', '1F7EA', '1F7EB', '2B1B', '2B1C', '25FC-FE0F', '25FB-FE0F', '25FE', '25FD', '25AA-FE0F', '25AB-FE0F', '1F536', '1F537', '1F538', '1F539', '1F53A', '1F53B', '1F4A0', '1F518', '1F533', '1F532']
}, {
  id: 'flags',
  name: 'Flags',
  emojis: ['1F1E6-1F1E8', '1F1E6-1F1E9', '1F1E6-1F1EA', '1F1E6-1F1EB', '1F1E6-1F1EC', '1F1E6-1F1EE', '1F1E6-1F1F1', '1F1E6-1F1F2', '1F1E6-1F1F4', '1F1E6-1F1F6', '1F1E6-1F1F7', '1F1E6-1F1F8', '1F1E6-1F1F9', '1F1E6-1F1FA', '1F1E6-1F1FC', '1F1E6-1F1FD', '1F1E6-1F1FF', '1F1E7-1F1E6', '1F1E7-1F1E7', '1F1E7-1F1E9', '1F1E7-1F1EA', '1F1E7-1F1EB', '1F1E7-1F1EC', '1F1E7-1F1ED', '1F1E7-1F1EE', '1F1E7-1F1EF', '1F1E7-1F1F1', '1F1E7-1F1F2', '1F1E7-1F1F3', '1F1E7-1F1F4', '1F1E7-1F1F6', '1F1E7-1F1F7', '1F1E7-1F1F8', '1F1E7-1F1F9', '1F1E7-1F1FB', '1F1E7-1F1FC', '1F1E7-1F1FE', '1F1E7-1F1FF', '1F1E8-1F1E6', '1F1E8-1F1E8', '1F1E8-1F1E9', '1F1E8-1F1EB', '1F1E8-1F1EC', '1F1E8-1F1ED', '1F1E8-1F1EE', '1F1E8-1F1F0', '1F1E8-1F1F1', '1F1E8-1F1F2', '1F1E8-1F1F3', '1F1E8-1F1F4', '1F1E8-1F1F5', '1F1E8-1F1F7', '1F1E8-1F1FA', '1F1E8-1F1FB', '1F1E8-1F1FC', '1F1E8-1F1FD', '1F1E8-1F1FE', '1F1E8-1F1FF', '1F1E9-1F1EA', '1F1E9-1F1EC', '1F1E9-1F1EF', '1F1E9-1F1F0', '1F1E9-1F1F2', '1F1E9-1F1F4', '1F1E9-1F1FF', '1F1EA-1F1E6', '1F1EA-1F1E8', '1F1EA-1F1EA', '1F1EA-1F1EC', '1F1EA-1F1ED', '1F1EA-1F1F7', '1F1EA-1F1F8', '1F1EA-1F1F9', '1F1EA-1F1FA', '1F1EB-1F1EE', '1F1EB-1F1EF', '1F1EB-1F1F0', '1F1EB-1F1F2', '1F1EB-1F1F4', '1F1EB-1F1F7', '1F1EC-1F1E6', '1F1EC-1F1E7', '1F1EC-1F1E9', '1F1EC-1F1EA', '1F1EC-1F1EB', '1F1EC-1F1EC', '1F1EC-1F1ED', '1F1EC-1F1EE', '1F1EC-1F1F1', '1F1EC-1F1F2', '1F1EC-1F1F3', '1F1EC-1F1F5', '1F1EC-1F1F6', '1F1EC-1F1F7', '1F1EC-1F1F8', '1F1EC-1F1F9', '1F1EC-1F1FA', '1F1EC-1F1FC', '1F1EC-1F1FE', '1F1ED-1F1F0', '1F1ED-1F1F2', '1F1ED-1F1F3', '1F1ED-1F1F7', '1F1ED-1F1F9', '1F1ED-1F1FA', '1F1EE-1F1E8', '1F1EE-1F1E9', '1F1EE-1F1EA', '1F1EE-1F1F1', '1F1EE-1F1F2', '1F1EE-1F1F3', '1F1EE-1F1F4', '1F1EE-1F1F6', '1F1EE-1F1F7', '1F1EE-1F1F8', '1F1EE-1F1F9', '1F1EF-1F1EA', '1F1EF-1F1F2', '1F1EF-1F1F4', '1F1EF-1F1F5', '1F1F0-1F1EA', '1F1F0-1F1EC', '1F1F0-1F1ED', '1F1F0-1F1EE', '1F1F0-1F1F2', '1F1F0-1F1F3', '1F1F0-1F1F5', '1F1F0-1F1F7', '1F1F0-1F1FC', '1F1F0-1F1FE', '1F1F0-1F1FF', '1F1F1-1F1E6', '1F1F1-1F1E7', '1F1F1-1F1E8', '1F1F1-1F1EE', '1F1F1-1F1F0', '1F1F1-1F1F7', '1F1F1-1F1F8', '1F1F1-1F1F9', '1F1F1-1F1FA', '1F1F1-1F1FB', '1F1F1-1F1FE', '1F1F2-1F1E6', '1F1F2-1F1E8', '1F1F2-1F1E9', '1F1F2-1F1EA', '1F1F2-1F1EB', '1F1F2-1F1EC', '1F1F2-1F1ED', '1F1F2-1F1F0', '1F1F2-1F1F1', '1F1F2-1F1F2', '1F1F2-1F1F3', '1F1F2-1F1F4', '1F1F2-1F1F5', '1F1F2-1F1F6', '1F1F2-1F1F7', '1F1F2-1F1F8', '1F1F2-1F1F9', '1F1F2-1F1FA', '1F1F2-1F1FB', '1F1F2-1F1FC', '1F1F2-1F1FD', '1F1F2-1F1FE', '1F1F2-1F1FF', '1F1F3-1F1E6', '1F1F3-1F1E8', '1F1F3-1F1EA', '1F1F3-1F1EB', '1F1F3-1F1EC', '1F1F3-1F1EE', '1F1F3-1F1F1', '1F1F3-1F1F4', '1F1F3-1F1F5', '1F1F3-1F1F7', '1F1F3-1F1FA', '1F1F3-1F1FF', '1F1F4-1F1F2', '1F1F5-1F1E6', '1F1F5-1F1EA', '1F1F5-1F1EB', '1F1F5-1F1EC', '1F1F5-1F1ED', '1F1F5-1F1F0', '1F1F5-1F1F1', '1F1F5-1F1F2', '1F1F5-1F1F3', '1F1F5-1F1F7', '1F1F5-1F1F8', '1F1F5-1F1F9', '1F1F5-1F1FC', '1F1F5-1F1FE', '1F1F6-1F1E6', '1F1F7-1F1EA', '1F1F7-1F1F4', '1F1F7-1F1F8', '1F1F7-1F1FA', '1F1F7-1F1FC', '1F1F8-1F1E6', '1F1F8-1F1E7', '1F1F8-1F1E8', '1F1F8-1F1E9', '1F1F8-1F1EA', '1F1F8-1F1EC', '1F1F8-1F1ED', '1F1F8-1F1EE', '1F1F8-1F1EF', '1F1F8-1F1F0', '1F1F8-1F1F1', '1F1F8-1F1F2', '1F1F8-1F1F3', '1F1F8-1F1F4', '1F1F8-1F1F7', '1F1F8-1F1F8', '1F1F8-1F1F9', '1F1F8-1F1FB', '1F1F8-1F1FD', '1F1F8-1F1FE', '1F1F8-1F1FF', '1F1F9-1F1E6', '1F1F9-1F1E8', '1F1F9-1F1E9', '1F1F9-1F1EB', '1F1F9-1F1EC', '1F1F9-1F1ED', '1F1F9-1F1EF', '1F1F9-1F1F0', '1F1F9-1F1F1', '1F1F9-1F1F2', '1F1F9-1F1F3', '1F1F9-1F1F4', '1F1F9-1F1F7', '1F1F9-1F1F9', '1F1F9-1F1FB', '1F1F9-1F1FC', '1F1F9-1F1FF', '1F1FA-1F1E6', '1F1FA-1F1EC', '1F1FA-1F1F2', '1F1FA-1F1F3', '1F1FA-1F1F8', '1F1FA-1F1FE', '1F1FA-1F1FF', '1F1FB-1F1E6', '1F1FB-1F1E8', '1F1FB-1F1EA', '1F1FB-1F1EC', '1F1FB-1F1EE', '1F1FB-1F1F3', '1F1FB-1F1FA', '1F1FC-1F1EB', '1F1FC-1F1F8', '1F1FD-1F1F0', '1F1FE-1F1EA', '1F1FE-1F1F9', '1F1FF-1F1E6', '1F1FF-1F1F2', '1F1FF-1F1FC', '1F38C', '1F3C1', '1F3F3-FE0F', '1F3F3-FE0F-200D-1F308', '1F3F3-FE0F-200D-26A7-FE0F', '1F3F4', '1F3F4-200D-2620-FE0F', '1F3F4-E0067-E0062-E0065-E006E-E0067-E007F', '1F3F4-E0067-E0062-E0073-E0063-E0074-E007F', '1F3F4-E0067-E0062-E0077-E006C-E0073-E007F', '1F6A9']
}];
const emojis = [{
  name: 'Grinning Face',
  unified: '1F600',
  text: ':D',
  keywords: ['grinning_face', 'face', 'smile', 'happy', 'joy', ':D', 'grin'],
  sheet: [32, 20],
  shortName: 'grinning'
}, {
  name: 'Smiling Face with Open Mouth',
  unified: '1F603',
  text: ':)',
  emoticons: ['=)', '=-)'],
  keywords: ['grinning_face_with_big_eyes', 'face', 'happy', 'joy', 'haha', ':D', ':)', 'smile', 'funny'],
  sheet: [32, 23],
  shortName: 'smiley'
}, {
  name: 'Smiling Face with Open Mouth and Smiling Eyes',
  unified: '1F604',
  text: ':)',
  emoticons: ['C:', 'c:', ':D', ':-D'],
  keywords: ['grinning_face_with_smiling_eyes', 'face', 'happy', 'joy', 'funny', 'haha', 'laugh', 'like', ':D', ':)', 'smile'],
  sheet: [32, 24],
  shortName: 'smile'
}, {
  name: 'Grinning Face with Smiling Eyes',
  unified: '1F601',
  keywords: ['beaming_face_with_smiling_eyes', 'face', 'happy', 'smile', 'joy', 'kawaii'],
  sheet: [32, 21],
  shortName: 'grin'
}, {
  name: 'Smiling Face with Open Mouth and Tightly-Closed Eyes',
  unified: '1F606',
  emoticons: [':>', ':->'],
  keywords: ['grinning_squinting_face', 'happy', 'joy', 'lol', 'satisfied', 'haha', 'face', 'glad', 'XD', 'laugh'],
  sheet: [32, 26],
  shortNames: ['satisfied'],
  shortName: 'laughing'
}, {
  name: 'Smiling Face with Open Mouth and Cold Sweat',
  unified: '1F605',
  keywords: ['grinning_face_with_sweat', 'face', 'hot', 'happy', 'laugh', 'sweat', 'smile', 'relief'],
  sheet: [32, 25],
  shortName: 'sweat_smile'
}, {
  name: 'Rolling on the Floor Laughing',
  unified: '1F923',
  keywords: ['rolling_on_the_floor_laughing', 'face', 'rolling', 'floor', 'laughing', 'lol', 'haha', 'rofl'],
  sheet: [40, 15],
  shortName: 'rolling_on_the_floor_laughing'
}, {
  name: 'Face with Tears of Joy',
  unified: '1F602',
  keywords: ['face_with_tears_of_joy', 'face', 'cry', 'tears', 'weep', 'happy', 'happytears', 'haha'],
  sheet: [32, 22],
  shortName: 'joy'
}, {
  name: 'Slightly Smiling Face',
  unified: '1F642',
  emoticons: [':)', '(:', ':-)'],
  keywords: ['slightly_smiling_face', 'face', 'smile'],
  sheet: [33, 28],
  shortName: 'slightly_smiling_face'
}, {
  name: 'Upside-Down Face',
  unified: '1F643',
  keywords: ['upside_down_face', 'face', 'flipped', 'silly', 'smile'],
  sheet: [33, 29],
  shortName: 'upside_down_face'
}, {
  name: 'Melting Face',
  unified: '1FAE0',
  keywords: ['melting face', 'hot', 'heat'],
  sheet: [55, 12],
  hidden: ['facebook'],
  shortName: 'melting_face'
}, {
  name: 'Winking Face',
  unified: '1F609',
  text: ';)',
  emoticons: [';)', ';-)'],
  keywords: ['winking_face', 'face', 'happy', 'mischievous', 'secret', ';)', 'smile', 'eye'],
  sheet: [32, 29],
  shortName: 'wink'
}, {
  name: 'Smiling Face with Smiling Eyes',
  unified: '1F60A',
  text: ':)',
  keywords: ['smiling_face_with_smiling_eyes', 'face', 'smile', 'happy', 'flushed', 'crush', 'embarrassed', 'shy', 'joy'],
  sheet: [32, 30],
  shortName: 'blush'
}, {
  name: 'Smiling Face with Halo',
  unified: '1F607',
  keywords: ['smiling_face_with_halo', 'face', 'angel', 'heaven', 'halo', 'innocent'],
  sheet: [32, 27],
  shortName: 'innocent'
}, {
  name: 'Smiling Face with Smiling Eyes and Three Hearts',
  unified: '1F970',
  keywords: ['smiling_face_with_hearts', 'face', 'love', 'like', 'affection', 'valentines', 'infatuation', 'crush', 'hearts', 'adore'],
  sheet: [43, 58],
  shortName: 'smiling_face_with_3_hearts'
}, {
  name: 'Smiling Face with Heart-Shaped Eyes',
  unified: '1F60D',
  keywords: ['smiling_face_with_heart_eyes', 'face', 'love', 'like', 'affection', 'valentines', 'infatuation', 'crush', 'heart'],
  sheet: [32, 33],
  shortName: 'heart_eyes'
}, {
  name: 'Grinning Face with Star Eyes',
  unified: '1F929',
  keywords: ['star_struck', 'face', 'smile', 'starry', 'eyes', 'grinning'],
  sheet: [40, 38],
  shortNames: ['grinning_face_with_star_eyes'],
  shortName: 'star-struck'
}, {
  name: 'Face Throwing a Kiss',
  unified: '1F618',
  emoticons: [':*', ':-*'],
  keywords: ['face_blowing_a_kiss', 'face', 'love', 'like', 'affection', 'valentines', 'infatuation', 'kiss'],
  sheet: [32, 44],
  shortName: 'kissing_heart'
}, {
  name: 'Kissing Face',
  unified: '1F617',
  keywords: ['kissing_face', 'love', 'like', 'face', '3', 'valentines', 'infatuation', 'kiss'],
  sheet: [32, 43],
  shortName: 'kissing'
}, {
  name: 'White Smiling Face',
  unified: '263A-FE0F',
  keywords: ['smiling_face', 'face', 'blush', 'massage', 'happiness'],
  sheet: [57, 4],
  shortName: 'relaxed'
}, {
  name: 'Kissing Face with Closed Eyes',
  unified: '1F61A',
  keywords: ['kissing_face_with_closed_eyes', 'face', 'love', 'like', 'affection', 'valentines', 'infatuation', 'kiss'],
  sheet: [32, 46],
  shortName: 'kissing_closed_eyes'
}, {
  name: 'Kissing Face with Smiling Eyes',
  unified: '1F619',
  keywords: ['kissing_face_with_smiling_eyes', 'face', 'affection', 'valentines', 'infatuation', 'kiss'],
  sheet: [32, 45],
  shortName: 'kissing_smiling_eyes'
}, {
  name: 'Smiling Face with Tear',
  unified: '1F972',
  keywords: ['smiling face with tear', 'sad', 'cry', 'pretend'],
  sheet: [43, 60],
  shortName: 'smiling_face_with_tear'
}, {
  name: 'Face Savouring Delicious Food',
  unified: '1F60B',
  keywords: ['face_savoring_food', 'happy', 'joy', 'tongue', 'smile', 'face', 'silly', 'yummy', 'nom', 'delicious', 'savouring'],
  sheet: [32, 31],
  shortName: 'yum'
}, {
  name: 'Face with Stuck-out Tongue',
  unified: '1F61B',
  text: ':p',
  emoticons: [':p', ':-p', ':P', ':-P', ':b', ':-b'],
  keywords: ['face_with_tongue', 'face', 'prank', 'childish', 'playful', 'mischievous', 'smile', 'tongue'],
  sheet: [32, 47],
  shortName: 'stuck_out_tongue'
}, {
  name: 'Face with Stuck-out Tongue and Winking Eye',
  unified: '1F61C',
  text: ';p',
  emoticons: [';p', ';-p', ';b', ';-b', ';P', ';-P'],
  keywords: ['winking_face_with_tongue', 'face', 'prank', 'childish', 'playful', 'mischievous', 'smile', 'wink', 'tongue'],
  sheet: [32, 48],
  shortName: 'stuck_out_tongue_winking_eye'
}, {
  name: 'Grinning Face with One Large and One Small Eye',
  unified: '1F92A',
  keywords: ['zany_face', 'face', 'goofy', 'crazy'],
  sheet: [40, 39],
  shortNames: ['grinning_face_with_one_large_and_one_small_eye'],
  shortName: 'zany_face'
}, {
  name: 'Face with Stuck-out Tongue and Tightly-Closed Eyes',
  unified: '1F61D',
  keywords: ['squinting_face_with_tongue', 'face', 'prank', 'playful', 'mischievous', 'smile', 'tongue'],
  sheet: [32, 49],
  shortName: 'stuck_out_tongue_closed_eyes'
}, {
  name: 'Money-Mouth Face',
  unified: '1F911',
  keywords: ['money_mouth_face', 'face', 'rich', 'dollar', 'money'],
  sheet: [38, 59],
  shortName: 'money_mouth_face'
}, {
  name: 'Hugging Face',
  unified: '1F917',
  keywords: ['hugging_face', 'face', 'smile', 'hug'],
  sheet: [39, 4],
  shortName: 'hugging_face'
}, {
  name: 'Smiling Face with Smiling Eyes and Hand Covering Mouth',
  unified: '1F92D',
  keywords: ['face_with_hand_over_mouth', 'face', 'whoops', 'shock', 'surprise'],
  sheet: [40, 42],
  shortNames: ['smiling_face_with_smiling_eyes_and_hand_covering_mouth'],
  shortName: 'face_with_hand_over_mouth'
}, {
  name: 'Face with Open Eyes and Hand over Mouth',
  unified: '1FAE2',
  keywords: ['face with open eyes and hand over mouth', 'silence', 'secret', 'shock', 'surprise'],
  sheet: [55, 14],
  hidden: ['facebook'],
  shortName: 'face_with_open_eyes_and_hand_over_mouth'
}, {
  name: 'Face with Peeking Eye',
  unified: '1FAE3',
  keywords: ['face with peeking eye', 'scared', 'frightening', 'embarrassing', 'shy'],
  sheet: [55, 15],
  hidden: ['facebook'],
  shortName: 'face_with_peeking_eye'
}, {
  name: 'Face with Finger Covering Closed Lips',
  unified: '1F92B',
  keywords: ['shushing_face', 'face', 'quiet', 'shhh'],
  sheet: [40, 40],
  shortNames: ['face_with_finger_covering_closed_lips'],
  shortName: 'shushing_face'
}, {
  name: 'Thinking Face',
  unified: '1F914',
  keywords: ['thinking_face', 'face', 'hmmm', 'think', 'consider'],
  sheet: [39, 1],
  shortName: 'thinking_face'
}, {
  name: 'Saluting Face',
  unified: '1FAE1',
  keywords: ['saluting face', 'respect', 'salute'],
  sheet: [55, 13],
  hidden: ['facebook'],
  shortName: 'saluting_face'
}, {
  name: 'Zipper-Mouth Face',
  unified: '1F910',
  keywords: ['zipper_mouth_face', 'face', 'sealed', 'zipper', 'secret'],
  sheet: [38, 58],
  shortName: 'zipper_mouth_face'
}, {
  name: 'Face with One Eyebrow Raised',
  unified: '1F928',
  keywords: ['face_with_raised_eyebrow', 'face', 'distrust', 'scepticism', 'disapproval', 'disbelief', 'surprise'],
  sheet: [40, 37],
  shortNames: ['face_with_one_eyebrow_raised'],
  shortName: 'face_with_raised_eyebrow'
}, {
  name: 'Neutral Face',
  unified: '1F610',
  emoticons: [':|', ':-|'],
  keywords: ['neutral_face', 'indifference', 'meh', ':|', 'neutral'],
  sheet: [32, 36],
  shortName: 'neutral_face'
}, {
  name: 'Expressionless Face',
  unified: '1F611',
  keywords: ['expressionless_face', 'face', 'indifferent', '-_-', 'meh', 'deadpan'],
  sheet: [32, 37],
  shortName: 'expressionless'
}, {
  name: 'Face Without Mouth',
  unified: '1F636',
  keywords: ['face_without_mouth', 'face', 'hellokitty'],
  sheet: [33, 16],
  shortName: 'no_mouth'
}, {
  name: 'Dotted Line Face',
  unified: '1FAE5',
  keywords: ['dotted line face', 'invisible', 'lonely', 'isolation', 'depression'],
  sheet: [55, 17],
  hidden: ['facebook'],
  shortName: 'dotted_line_face'
}, {
  name: 'Face in Clouds',
  unified: '1F636-200D-1F32B-FE0F',
  keywords: ['face in clouds', 'shower', 'steam', 'dream'],
  sheet: [33, 15],
  hidden: ['facebook'],
  shortName: 'face_in_clouds'
}, {
  name: 'Smirking Face',
  unified: '1F60F',
  keywords: ['smirking_face', 'face', 'smile', 'mean', 'prank', 'smug', 'sarcasm'],
  sheet: [32, 35],
  shortName: 'smirk'
}, {
  name: 'Unamused Face',
  unified: '1F612',
  text: ':(',
  keywords: ['unamused_face', 'indifference', 'bored', 'straight face', 'serious', 'sarcasm', 'unimpressed', 'skeptical', 'dubious', 'side_eye'],
  sheet: [32, 38],
  shortName: 'unamused'
}, {
  name: 'Face with Rolling Eyes',
  unified: '1F644',
  keywords: ['face_with_rolling_eyes', 'face', 'eyeroll', 'frustrated'],
  sheet: [33, 30],
  shortName: 'face_with_rolling_eyes'
}, {
  name: 'Grimacing Face',
  unified: '1F62C',
  keywords: ['grimacing_face', 'face', 'grimace', 'teeth'],
  sheet: [33, 3],
  shortName: 'grimacing'
}, {
  name: 'Face Exhaling',
  unified: '1F62E-200D-1F4A8',
  keywords: ['face exhaling', 'relieve', 'relief', 'tired', 'sigh'],
  sheet: [33, 5],
  hidden: ['facebook'],
  shortName: 'face_exhaling'
}, {
  name: 'Lying Face',
  unified: '1F925',
  keywords: ['lying_face', 'face', 'lie', 'pinocchio'],
  sheet: [40, 17],
  shortName: 'lying_face'
}, {
  name: 'Relieved Face',
  unified: '1F60C',
  keywords: ['relieved_face', 'face', 'relaxed', 'phew', 'massage', 'happiness'],
  sheet: [32, 32],
  shortName: 'relieved'
}, {
  name: 'Pensive Face',
  unified: '1F614',
  keywords: ['pensive_face', 'face', 'sad', 'depressed', 'upset'],
  sheet: [32, 40],
  shortName: 'pensive'
}, {
  name: 'Sleepy Face',
  unified: '1F62A',
  keywords: ['sleepy_face', 'face', 'tired', 'rest', 'nap'],
  sheet: [33, 1],
  shortName: 'sleepy'
}, {
  name: 'Drooling Face',
  unified: '1F924',
  keywords: ['drooling_face', 'face'],
  sheet: [40, 16],
  shortName: 'drooling_face'
}, {
  name: 'Sleeping Face',
  unified: '1F634',
  keywords: ['sleeping_face', 'face', 'tired', 'sleepy', 'night', 'zzz'],
  sheet: [33, 12],
  shortName: 'sleeping'
}, {
  name: 'Face with Medical Mask',
  unified: '1F637',
  keywords: ['face_with_medical_mask', 'face', 'sick', 'ill', 'disease', 'covid'],
  sheet: [33, 17],
  shortName: 'mask'
}, {
  name: 'Face with Thermometer',
  unified: '1F912',
  keywords: ['face_with_thermometer', 'sick', 'temperature', 'thermometer', 'cold', 'fever', 'covid'],
  sheet: [38, 60],
  shortName: 'face_with_thermometer'
}, {
  name: 'Face with Head-Bandage',
  unified: '1F915',
  keywords: ['face_with_head_bandage', 'injured', 'clumsy', 'bandage', 'hurt'],
  sheet: [39, 2],
  shortName: 'face_with_head_bandage'
}, {
  name: 'Nauseated Face',
  unified: '1F922',
  keywords: ['nauseated_face', 'face', 'vomit', 'gross', 'green', 'sick', 'throw up', 'ill'],
  sheet: [40, 14],
  shortName: 'nauseated_face'
}, {
  name: 'Face with Open Mouth Vomiting',
  unified: '1F92E',
  keywords: ['face_vomiting', 'face', 'sick'],
  sheet: [40, 43],
  shortNames: ['face_with_open_mouth_vomiting'],
  shortName: 'face_vomiting'
}, {
  name: 'Sneezing Face',
  unified: '1F927',
  keywords: ['sneezing_face', 'face', 'gesundheit', 'sneeze', 'sick', 'allergy'],
  sheet: [40, 36],
  shortName: 'sneezing_face'
}, {
  name: 'Overheated Face',
  unified: '1F975',
  keywords: ['hot_face', 'face', 'feverish', 'heat', 'red', 'sweating'],
  sheet: [44, 2],
  shortName: 'hot_face'
}, {
  name: 'Freezing Face',
  unified: '1F976',
  keywords: ['cold_face', 'face', 'blue', 'freezing', 'frozen', 'frostbite', 'icicles'],
  sheet: [44, 3],
  shortName: 'cold_face'
}, {
  name: 'Face with Uneven Eyes and Wavy Mouth',
  unified: '1F974',
  keywords: ['woozy_face', 'face', 'dizzy', 'intoxicated', 'tipsy', 'wavy'],
  sheet: [44, 1],
  shortName: 'woozy_face'
}, {
  name: 'Dizzy Face',
  unified: '1F635',
  keywords: ['dizzy_face', 'spent', 'unconscious', 'xox', 'dizzy'],
  sheet: [33, 14],
  shortName: 'dizzy_face'
}, {
  name: 'Face with Spiral Eyes',
  unified: '1F635-200D-1F4AB',
  keywords: ['face with spiral eyes', 'sick', 'ill', 'confused', 'nauseous', 'nausea'],
  sheet: [33, 13],
  hidden: ['facebook'],
  shortName: 'face_with_spiral_eyes'
}, {
  name: 'Shocked Face with Exploding Head',
  unified: '1F92F',
  keywords: ['exploding_head', 'face', 'shocked', 'mind', 'blown'],
  sheet: [40, 44],
  shortNames: ['shocked_face_with_exploding_head'],
  shortName: 'exploding_head'
}, {
  name: 'Face with Cowboy Hat',
  unified: '1F920',
  keywords: ['cowboy_hat_face', 'face', 'cowgirl', 'hat'],
  sheet: [40, 12],
  shortName: 'face_with_cowboy_hat'
}, {
  name: 'Face with Party Horn and Party Hat',
  unified: '1F973',
  keywords: ['partying_face', 'face', 'celebration', 'woohoo'],
  sheet: [44, 0],
  shortName: 'partying_face'
}, {
  name: 'Disguised Face',
  unified: '1F978',
  keywords: ['disguised face', 'pretent', 'brows', 'glasses', 'moustache'],
  sheet: [44, 10],
  shortName: 'disguised_face'
}, {
  name: 'Smiling Face with Sunglasses',
  unified: '1F60E',
  emoticons: ['8)'],
  keywords: ['smiling_face_with_sunglasses', 'face', 'cool', 'smile', 'summer', 'beach', 'sunglass'],
  sheet: [32, 34],
  shortName: 'sunglasses'
}, {
  name: 'Nerd Face',
  unified: '1F913',
  keywords: ['nerd_face', 'face', 'nerdy', 'geek', 'dork'],
  sheet: [39, 0],
  shortName: 'nerd_face'
}, {
  name: 'Face with Monocle',
  unified: '1F9D0',
  keywords: ['face_with_monocle', 'face', 'stuffy', 'wealthy'],
  sheet: [47, 11],
  shortName: 'face_with_monocle'
}, {
  name: 'Confused Face',
  unified: '1F615',
  emoticons: [':\\\\', ':-\\\\', ':/', ':-/'],
  keywords: ['confused_face', 'face', 'indifference', 'huh', 'weird', 'hmmm', ':/'],
  sheet: [32, 41],
  shortName: 'confused'
}, {
  name: 'Face with Diagonal Mouth',
  unified: '1FAE4',
  keywords: ['face with diagonal mouth', 'skeptic', 'confuse', 'frustrated', 'indifferent'],
  sheet: [55, 16],
  hidden: ['facebook'],
  shortName: 'face_with_diagonal_mouth'
}, {
  name: 'Worried Face',
  unified: '1F61F',
  keywords: ['worried_face', 'face', 'concern', 'nervous', ':('],
  sheet: [32, 51],
  shortName: 'worried'
}, {
  name: 'Slightly Frowning Face',
  unified: '1F641',
  keywords: ['slightly_frowning_face', 'face', 'frowning', 'disappointed', 'sad', 'upset'],
  sheet: [33, 27],
  shortName: 'slightly_frowning_face'
}, {
  name: 'Frowning Face',
  unified: '2639-FE0F',
  keywords: ['frowning_face', 'face', 'sad', 'upset', 'frown'],
  sheet: [57, 3],
  shortName: 'white_frowning_face'
}, {
  name: 'Face with Open Mouth',
  unified: '1F62E',
  emoticons: [':o', ':-o', ':O', ':-O'],
  keywords: ['face_with_open_mouth', 'face', 'surprise', 'impressed', 'wow', 'whoa', ':O'],
  sheet: [33, 6],
  shortName: 'open_mouth'
}, {
  name: 'Hushed Face',
  unified: '1F62F',
  keywords: ['hushed_face', 'face', 'woo', 'shh'],
  sheet: [33, 7],
  shortName: 'hushed'
}, {
  name: 'Astonished Face',
  unified: '1F632',
  keywords: ['astonished_face', 'face', 'xox', 'surprised', 'poisoned'],
  sheet: [33, 10],
  shortName: 'astonished'
}, {
  name: 'Flushed Face',
  unified: '1F633',
  keywords: ['flushed_face', 'face', 'blush', 'shy', 'flattered'],
  sheet: [33, 11],
  shortName: 'flushed'
}, {
  name: 'Face with Pleading Eyes',
  unified: '1F97A',
  keywords: ['pleading_face', 'face', 'begging', 'mercy', 'cry', 'tears', 'sad', 'grievance'],
  sheet: [44, 12],
  shortName: 'pleading_face'
}, {
  name: 'Face Holding Back Tears',
  unified: '1F979',
  keywords: ['face holding back tears', 'touched', 'gratitude', 'cry'],
  sheet: [44, 11],
  hidden: ['facebook'],
  shortName: 'face_holding_back_tears'
}, {
  name: 'Frowning Face with Open Mouth',
  unified: '1F626',
  keywords: ['frowning_face_with_open_mouth', 'face', 'aw', 'what'],
  sheet: [32, 58],
  shortName: 'frowning'
}, {
  name: 'Anguished Face',
  unified: '1F627',
  emoticons: ['D:'],
  keywords: ['anguished_face', 'face', 'stunned', 'nervous'],
  sheet: [32, 59],
  shortName: 'anguished'
}, {
  name: 'Fearful Face',
  unified: '1F628',
  keywords: ['fearful_face', 'face', 'scared', 'terrified', 'nervous'],
  sheet: [32, 60],
  shortName: 'fearful'
}, {
  name: 'Face with Open Mouth and Cold Sweat',
  unified: '1F630',
  keywords: ['anxious_face_with_sweat', 'face', 'nervous', 'sweat'],
  sheet: [33, 8],
  shortName: 'cold_sweat'
}, {
  name: 'Disappointed but Relieved Face',
  unified: '1F625',
  keywords: ['sad_but_relieved_face', 'face', 'phew', 'sweat', 'nervous'],
  sheet: [32, 57],
  shortName: 'disappointed_relieved'
}, {
  name: 'Crying Face',
  unified: '1F622',
  text: ':\'(',
  emoticons: [':\'('],
  keywords: ['crying_face', 'face', 'tears', 'sad', 'depressed', 'upset', ':\'('],
  sheet: [32, 54],
  shortName: 'cry'
}, {
  name: 'Loudly Crying Face',
  unified: '1F62D',
  text: ':\'(',
  keywords: ['loudly_crying_face', 'face', 'cry', 'tears', 'sad', 'upset', 'depressed'],
  sheet: [33, 4],
  shortName: 'sob'
}, {
  name: 'Face Screaming in Fear',
  unified: '1F631',
  keywords: ['face_screaming_in_fear', 'face', 'munch', 'scared', 'omg'],
  sheet: [33, 9],
  shortName: 'scream'
}, {
  name: 'Confounded Face',
  unified: '1F616',
  keywords: ['confounded_face', 'face', 'confused', 'sick', 'unwell', 'oops', ':S'],
  sheet: [32, 42],
  shortName: 'confounded'
}, {
  name: 'Persevering Face',
  unified: '1F623',
  keywords: ['persevering_face', 'face', 'sick', 'no', 'upset', 'oops'],
  sheet: [32, 55],
  shortName: 'persevere'
}, {
  name: 'Disappointed Face',
  unified: '1F61E',
  text: ':(',
  emoticons: ['):', ':(', ':-('],
  keywords: ['disappointed_face', 'face', 'sad', 'upset', 'depressed', ':('],
  sheet: [32, 50],
  shortName: 'disappointed'
}, {
  name: 'Face with Cold Sweat',
  unified: '1F613',
  keywords: ['downcast_face_with_sweat', 'face', 'hot', 'sad', 'tired', 'exercise'],
  sheet: [32, 39],
  shortName: 'sweat'
}, {
  name: 'Weary Face',
  unified: '1F629',
  keywords: ['weary_face', 'face', 'tired', 'sleepy', 'sad', 'frustrated', 'upset'],
  sheet: [33, 0],
  shortName: 'weary'
}, {
  name: 'Tired Face',
  unified: '1F62B',
  keywords: ['tired_face', 'sick', 'whine', 'upset', 'frustrated'],
  sheet: [33, 2],
  shortName: 'tired_face'
}, {
  name: 'Yawning Face',
  unified: '1F971',
  keywords: ['yawning_face', 'tired', 'sleepy'],
  sheet: [43, 59],
  shortName: 'yawning_face'
}, {
  name: 'Face with Look of Triumph',
  unified: '1F624',
  keywords: ['face_with_steam_from_nose', 'face', 'gas', 'phew', 'proud', 'pride'],
  sheet: [32, 56],
  shortName: 'triumph'
}, {
  name: 'Pouting Face',
  unified: '1F621',
  keywords: ['pouting_face', 'angry', 'mad', 'hate', 'despise'],
  sheet: [32, 53],
  shortName: 'rage'
}, {
  name: 'Angry Face',
  unified: '1F620',
  emoticons: ['>:(', '>:-('],
  keywords: ['angry_face', 'mad', 'face', 'annoyed', 'frustrated'],
  sheet: [32, 52],
  shortName: 'angry'
}, {
  name: 'Serious Face with Symbols Covering Mouth',
  unified: '1F92C',
  keywords: ['face_with_symbols_on_mouth', 'face', 'swearing', 'cursing', 'cussing', 'profanity', 'expletive'],
  sheet: [40, 41],
  shortNames: ['serious_face_with_symbols_covering_mouth'],
  shortName: 'face_with_symbols_on_mouth'
}, {
  name: 'Smiling Face with Horns',
  unified: '1F608',
  keywords: ['smiling_face_with_horns', 'devil', 'horns'],
  sheet: [32, 28],
  shortName: 'smiling_imp'
}, {
  name: 'Imp',
  unified: '1F47F',
  keywords: ['angry_face_with_horns', 'devil', 'angry', 'horns'],
  sheet: [25, 8],
  shortName: 'imp'
}, {
  name: 'Skull',
  unified: '1F480',
  keywords: ['skull', 'dead', 'skeleton', 'creepy', 'death'],
  sheet: [25, 9],
  shortName: 'skull'
}, {
  name: 'Skull and Crossbones',
  unified: '2620-FE0F',
  keywords: ['skull_and_crossbones', 'poison', 'danger', 'deadly', 'scary', 'death', 'pirate', 'evil'],
  sheet: [56, 56],
  shortName: 'skull_and_crossbones'
}, {
  name: 'Pile of Poo',
  unified: '1F4A9',
  keywords: ['pile_of_poo', 'hankey', 'shitface', 'fail', 'turd', 'shit'],
  sheet: [27, 56],
  shortNames: ['poop', 'shit'],
  shortName: 'hankey'
}, {
  name: 'Clown Face',
  unified: '1F921',
  keywords: ['clown_face', 'face'],
  sheet: [40, 13],
  shortName: 'clown_face'
}, {
  name: 'Japanese Ogre',
  unified: '1F479',
  keywords: ['ogre', 'monster', 'red', 'mask', 'halloween', 'scary', 'creepy', 'devil', 'demon', 'japanese', 'ogre'],
  sheet: [24, 58],
  shortName: 'japanese_ogre'
}, {
  name: 'Japanese Goblin',
  unified: '1F47A',
  keywords: ['goblin', 'red', 'evil', 'mask', 'monster', 'scary', 'creepy', 'japanese', 'goblin'],
  sheet: [24, 59],
  shortName: 'japanese_goblin'
}, {
  name: 'Ghost',
  unified: '1F47B',
  keywords: ['ghost', 'halloween', 'spooky', 'scary'],
  sheet: [24, 60],
  shortName: 'ghost'
}, {
  name: 'Extraterrestrial Alien',
  unified: '1F47D',
  keywords: ['alien', 'UFO', 'paul', 'weird', 'outer_space'],
  sheet: [25, 6],
  shortName: 'alien'
}, {
  name: 'Alien Monster',
  unified: '1F47E',
  keywords: ['alien_monster', 'game', 'arcade', 'play'],
  sheet: [25, 7],
  shortName: 'space_invader'
}, {
  name: 'Robot Face',
  unified: '1F916',
  keywords: ['robot', 'computer', 'machine', 'bot'],
  sheet: [39, 3],
  shortName: 'robot_face'
}, {
  name: 'Smiling Cat Face with Open Mouth',
  unified: '1F63A',
  keywords: ['grinning_cat', 'animal', 'cats', 'happy', 'smile'],
  sheet: [33, 20],
  shortName: 'smiley_cat'
}, {
  name: 'Grinning Cat Face with Smiling Eyes',
  unified: '1F638',
  keywords: ['grinning_cat_with_smiling_eyes', 'animal', 'cats', 'smile'],
  sheet: [33, 18],
  shortName: 'smile_cat'
}, {
  name: 'Cat Face with Tears of Joy',
  unified: '1F639',
  keywords: ['cat_with_tears_of_joy', 'animal', 'cats', 'haha', 'happy', 'tears'],
  sheet: [33, 19],
  shortName: 'joy_cat'
}, {
  name: 'Smiling Cat Face with Heart-Shaped Eyes',
  unified: '1F63B',
  keywords: ['smiling_cat_with_heart_eyes', 'animal', 'love', 'like', 'affection', 'cats', 'valentines', 'heart'],
  sheet: [33, 21],
  shortName: 'heart_eyes_cat'
}, {
  name: 'Cat Face with Wry Smile',
  unified: '1F63C',
  keywords: ['cat_with_wry_smile', 'animal', 'cats', 'smirk'],
  sheet: [33, 22],
  shortName: 'smirk_cat'
}, {
  name: 'Kissing Cat Face with Closed Eyes',
  unified: '1F63D',
  keywords: ['kissing_cat', 'animal', 'cats', 'kiss'],
  sheet: [33, 23],
  shortName: 'kissing_cat'
}, {
  name: 'Weary Cat Face',
  unified: '1F640',
  keywords: ['weary_cat', 'animal', 'cats', 'munch', 'scared', 'scream'],
  sheet: [33, 26],
  shortName: 'scream_cat'
}, {
  name: 'Crying Cat Face',
  unified: '1F63F',
  keywords: ['crying_cat', 'animal', 'tears', 'weep', 'sad', 'cats', 'upset', 'cry'],
  sheet: [33, 25],
  shortName: 'crying_cat_face'
}, {
  name: 'Pouting Cat Face',
  unified: '1F63E',
  keywords: ['pouting_cat', 'animal', 'cats'],
  sheet: [33, 24],
  shortName: 'pouting_cat'
}, {
  name: 'See-No-Evil Monkey',
  unified: '1F648',
  keywords: ['see_no_evil_monkey', 'monkey', 'animal', 'nature', 'haha'],
  sheet: [34, 24],
  shortName: 'see_no_evil'
}, {
  name: 'Hear-No-Evil Monkey',
  unified: '1F649',
  keywords: ['hear_no_evil_monkey', 'animal', 'monkey', 'nature'],
  sheet: [34, 25],
  shortName: 'hear_no_evil'
}, {
  name: 'Speak-No-Evil Monkey',
  unified: '1F64A',
  keywords: ['speak_no_evil_monkey', 'monkey', 'animal', 'nature', 'omg'],
  sheet: [34, 26],
  shortName: 'speak_no_evil'
}, {
  name: 'Kiss Mark',
  unified: '1F48B',
  keywords: ['kiss_mark', 'face', 'lips', 'love', 'like', 'affection', 'valentines'],
  sheet: [26, 37],
  shortName: 'kiss'
}, {
  name: 'Love Letter',
  unified: '1F48C',
  keywords: ['love_letter', 'email', 'like', 'affection', 'envelope', 'valentines'],
  sheet: [26, 38],
  shortName: 'love_letter'
}, {
  name: 'Heart with Arrow',
  unified: '1F498',
  keywords: ['heart_with_arrow', 'love', 'like', 'heart', 'affection', 'valentines'],
  sheet: [27, 39],
  shortName: 'cupid'
}, {
  name: 'Heart with Ribbon',
  unified: '1F49D',
  keywords: ['heart_with_ribbon', 'love', 'valentines'],
  sheet: [27, 44],
  shortName: 'gift_heart'
}, {
  name: 'Sparkling Heart',
  unified: '1F496',
  keywords: ['sparkling_heart', 'love', 'like', 'affection', 'valentines'],
  sheet: [27, 37],
  shortName: 'sparkling_heart'
}, {
  name: 'Growing Heart',
  unified: '1F497',
  keywords: ['growing_heart', 'like', 'love', 'affection', 'valentines', 'pink'],
  sheet: [27, 38],
  shortName: 'heartpulse'
}, {
  name: 'Beating Heart',
  unified: '1F493',
  keywords: ['beating_heart', 'love', 'like', 'affection', 'valentines', 'pink', 'heart'],
  sheet: [27, 34],
  shortName: 'heartbeat'
}, {
  name: 'Revolving Hearts',
  unified: '1F49E',
  keywords: ['revolving_hearts', 'love', 'like', 'affection', 'valentines'],
  sheet: [27, 45],
  shortName: 'revolving_hearts'
}, {
  name: 'Two Hearts',
  unified: '1F495',
  keywords: ['two_hearts', 'love', 'like', 'affection', 'valentines', 'heart'],
  sheet: [27, 36],
  shortName: 'two_hearts'
}, {
  name: 'Heart Decoration',
  unified: '1F49F',
  keywords: ['heart_decoration', 'purple-square', 'love', 'like'],
  sheet: [27, 46],
  shortName: 'heart_decoration'
}, {
  name: 'Heart Exclamation',
  unified: '2763-FE0F',
  keywords: ['heart_exclamation', 'decoration', 'love'],
  sheet: [59, 7],
  shortName: 'heavy_heart_exclamation_mark_ornament'
}, {
  name: 'Broken Heart',
  unified: '1F494',
  text: '</3',
  emoticons: ['</3'],
  keywords: ['broken_heart', 'sad', 'sorry', 'break', 'heart', 'heartbreak'],
  sheet: [27, 35],
  shortName: 'broken_heart'
}, {
  name: 'Heart on Fire',
  unified: '2764-FE0F-200D-1F525',
  keywords: ['heart on fire', 'passionate', 'enthusiastic'],
  sheet: [59, 8],
  hidden: ['facebook'],
  shortName: 'heart_on_fire'
}, {
  name: 'Mending Heart',
  unified: '2764-FE0F-200D-1FA79',
  keywords: ['mending heart', 'broken heart', 'bandage', 'wounded'],
  sheet: [59, 9],
  hidden: ['facebook'],
  shortName: 'mending_heart'
}, {
  name: 'Heavy Black Heart',
  unified: '2764-FE0F',
  text: '<3',
  emoticons: ['<3'],
  keywords: ['red_heart', 'love', 'like', 'valentines'],
  sheet: [59, 10],
  shortName: 'heart'
}, {
  name: 'Orange Heart',
  unified: '1F9E1',
  keywords: ['orange_heart', 'love', 'like', 'affection', 'valentines'],
  sheet: [53, 15],
  shortName: 'orange_heart'
}, {
  name: 'Yellow Heart',
  unified: '1F49B',
  text: '<3',
  keywords: ['yellow_heart', 'love', 'like', 'affection', 'valentines'],
  sheet: [27, 42],
  shortName: 'yellow_heart'
}, {
  name: 'Green Heart',
  unified: '1F49A',
  text: '<3',
  keywords: ['green_heart', 'love', 'like', 'affection', 'valentines'],
  sheet: [27, 41],
  shortName: 'green_heart'
}, {
  name: 'Blue Heart',
  unified: '1F499',
  text: '<3',
  keywords: ['blue_heart', 'love', 'like', 'affection', 'valentines'],
  sheet: [27, 40],
  shortName: 'blue_heart'
}, {
  name: 'Purple Heart',
  unified: '1F49C',
  text: '<3',
  keywords: ['purple_heart', 'love', 'like', 'affection', 'valentines'],
  sheet: [27, 43],
  shortName: 'purple_heart'
}, {
  name: 'Brown Heart',
  unified: '1F90E',
  keywords: ['brown_heart', 'coffee'],
  sheet: [38, 51],
  shortName: 'brown_heart'
}, {
  name: 'Black Heart',
  unified: '1F5A4',
  keywords: ['black_heart', 'evil'],
  sheet: [31, 55],
  shortName: 'black_heart'
}, {
  name: 'White Heart',
  unified: '1F90D',
  keywords: ['white_heart', 'pure'],
  sheet: [38, 50],
  shortName: 'white_heart'
}, {
  name: 'Hundred Points Symbol',
  unified: '1F4AF',
  keywords: ['hundred_points', 'score', 'perfect', 'numbers', 'century', 'exam', 'quiz', 'test', 'pass', 'hundred'],
  sheet: [28, 6],
  shortName: '100'
}, {
  name: 'Anger Symbol',
  unified: '1F4A2',
  keywords: ['anger_symbol', 'angry', 'mad'],
  sheet: [27, 49],
  shortName: 'anger'
}, {
  name: 'Collision Symbol',
  unified: '1F4A5',
  keywords: ['collision', 'bomb', 'explode', 'explosion', 'collision', 'blown'],
  sheet: [27, 52],
  shortNames: ['collision'],
  shortName: 'boom'
}, {
  name: 'Dizzy Symbol',
  unified: '1F4AB',
  keywords: ['dizzy', 'star', 'sparkle', 'shoot', 'magic'],
  sheet: [28, 2],
  shortName: 'dizzy'
}, {
  name: 'Splashing Sweat Symbol',
  unified: '1F4A6',
  keywords: ['sweat_droplets', 'water', 'drip', 'oops'],
  sheet: [27, 53],
  shortName: 'sweat_drops'
}, {
  name: 'Dash Symbol',
  unified: '1F4A8',
  keywords: ['dashing_away', 'wind', 'air', 'fast', 'shoo', 'fart', 'smoke', 'puff'],
  sheet: [27, 55],
  shortName: 'dash'
}, {
  name: 'Hole',
  unified: '1F573-FE0F',
  keywords: ['hole', 'embarrassing'],
  sheet: [30, 58],
  shortName: 'hole'
}, {
  name: 'Bomb',
  unified: '1F4A3',
  keywords: ['bomb', 'boom', 'explode', 'explosion', 'terrorism'],
  sheet: [27, 50],
  shortName: 'bomb'
}, {
  name: 'Speech Balloon',
  unified: '1F4AC',
  keywords: ['speech_balloon', 'bubble', 'words', 'message', 'talk', 'chatting'],
  sheet: [28, 3],
  shortName: 'speech_balloon'
}, {
  name: 'Eye in Speech Bubble',
  unified: '1F441-FE0F-200D-1F5E8-FE0F',
  keywords: ['eye_in_speech_bubble', 'info'],
  sheet: [11, 53],
  hidden: ['facebook'],
  shortName: 'eye-in-speech-bubble'
}, {
  name: 'Left Speech Bubble',
  unified: '1F5E8-FE0F',
  keywords: ['left_speech_bubble', 'words', 'message', 'talk', 'chatting'],
  sheet: [32, 11],
  shortName: 'left_speech_bubble'
}, {
  name: 'Right Anger Bubble',
  unified: '1F5EF-FE0F',
  keywords: ['right_anger_bubble', 'caption', 'speech', 'thinking', 'mad'],
  sheet: [32, 12],
  shortName: 'right_anger_bubble'
}, {
  name: 'Thought Balloon',
  unified: '1F4AD',
  keywords: ['thought_balloon', 'bubble', 'cloud', 'speech', 'thinking', 'dream'],
  sheet: [28, 4],
  shortName: 'thought_balloon'
}, {
  name: 'Sleeping Symbol',
  unified: '1F4A4',
  keywords: ['zzz', 'sleepy', 'tired', 'dream'],
  sheet: [27, 51],
  shortName: 'zzz'
}, {
  name: 'Waving Hand Sign',
  unified: '1F44B',
  keywords: ['waving_hand', 'hands', 'gesture', 'goodbye', 'solong', 'farewell', 'hello', 'hi', 'palm'],
  sheet: [12, 38],
  skinVariations: [{
    unified: '1F44B-1F3FB',
    sheet: [12, 39]
  }, {
    unified: '1F44B-1F3FC',
    sheet: [12, 40]
  }, {
    unified: '1F44B-1F3FD',
    sheet: [12, 41]
  }, {
    unified: '1F44B-1F3FE',
    sheet: [12, 42]
  }, {
    unified: '1F44B-1F3FF',
    sheet: [12, 43]
  }],
  shortName: 'wave'
}, {
  name: 'Raised Back of Hand',
  unified: '1F91A',
  keywords: ['raised_back_of_hand', 'fingers', 'raised', 'backhand'],
  sheet: [39, 17],
  skinVariations: [{
    unified: '1F91A-1F3FB',
    sheet: [39, 18]
  }, {
    unified: '1F91A-1F3FC',
    sheet: [39, 19]
  }, {
    unified: '1F91A-1F3FD',
    sheet: [39, 20]
  }, {
    unified: '1F91A-1F3FE',
    sheet: [39, 21]
  }, {
    unified: '1F91A-1F3FF',
    sheet: [39, 22]
  }],
  shortName: 'raised_back_of_hand'
}, {
  name: 'Hand with Fingers Splayed',
  unified: '1F590-FE0F',
  keywords: ['hand_with_fingers_splayed', 'hand', 'fingers', 'palm'],
  sheet: [31, 37],
  skinVariations: [{
    unified: '1F590-1F3FB',
    sheet: [31, 38]
  }, {
    unified: '1F590-1F3FC',
    sheet: [31, 39]
  }, {
    unified: '1F590-1F3FD',
    sheet: [31, 40]
  }, {
    unified: '1F590-1F3FE',
    sheet: [31, 41]
  }, {
    unified: '1F590-1F3FF',
    sheet: [31, 42]
  }],
  shortName: 'raised_hand_with_fingers_splayed'
}, {
  name: 'Raised Hand',
  unified: '270B',
  keywords: ['raised_hand', 'fingers', 'stop', 'highfive', 'palm', 'ban'],
  sheet: [58, 33],
  skinVariations: [{
    unified: '270B-1F3FB',
    sheet: [58, 34]
  }, {
    unified: '270B-1F3FC',
    sheet: [58, 35]
  }, {
    unified: '270B-1F3FD',
    sheet: [58, 36]
  }, {
    unified: '270B-1F3FE',
    sheet: [58, 37]
  }, {
    unified: '270B-1F3FF',
    sheet: [58, 38]
  }],
  shortNames: ['raised_hand'],
  shortName: 'hand'
}, {
  name: 'Raised Hand with Part Between Middle and Ring Fingers',
  unified: '1F596',
  keywords: ['vulcan_salute', 'hand', 'fingers', 'spock', 'star trek'],
  sheet: [31, 49],
  skinVariations: [{
    unified: '1F596-1F3FB',
    sheet: [31, 50]
  }, {
    unified: '1F596-1F3FC',
    sheet: [31, 51]
  }, {
    unified: '1F596-1F3FD',
    sheet: [31, 52]
  }, {
    unified: '1F596-1F3FE',
    sheet: [31, 53]
  }, {
    unified: '1F596-1F3FF',
    sheet: [31, 54]
  }],
  shortName: 'spock-hand'
}, {
  name: 'Rightwards Hand',
  unified: '1FAF1',
  keywords: ['rightwards hand', 'palm', 'offer'],
  sheet: [55, 26],
  hidden: ['facebook'],
  skinVariations: [{
    unified: '1FAF1-1F3FB',
    sheet: [55, 27],
    hidden: ['facebook']
  }, {
    unified: '1FAF1-1F3FC',
    sheet: [55, 28],
    hidden: ['facebook']
  }, {
    unified: '1FAF1-1F3FD',
    sheet: [55, 29],
    hidden: ['facebook']
  }, {
    unified: '1FAF1-1F3FE',
    sheet: [55, 30],
    hidden: ['facebook']
  }, {
    unified: '1FAF1-1F3FF',
    sheet: [55, 31],
    hidden: ['facebook']
  }],
  shortName: 'rightwards_hand'
}, {
  name: 'Leftwards Hand',
  unified: '1FAF2',
  keywords: ['leftwards hand', 'palm', 'offer'],
  sheet: [55, 32],
  hidden: ['facebook'],
  skinVariations: [{
    unified: '1FAF2-1F3FB',
    sheet: [55, 33],
    hidden: ['facebook']
  }, {
    unified: '1FAF2-1F3FC',
    sheet: [55, 34],
    hidden: ['facebook']
  }, {
    unified: '1FAF2-1F3FD',
    sheet: [55, 35],
    hidden: ['facebook']
  }, {
    unified: '1FAF2-1F3FE',
    sheet: [55, 36],
    hidden: ['facebook']
  }, {
    unified: '1FAF2-1F3FF',
    sheet: [55, 37],
    hidden: ['facebook']
  }],
  shortName: 'leftwards_hand'
}, {
  name: 'Palm Down Hand',
  unified: '1FAF3',
  keywords: ['palm down hand', 'palm', 'drop'],
  sheet: [55, 38],
  hidden: ['facebook'],
  skinVariations: [{
    unified: '1FAF3-1F3FB',
    sheet: [55, 39],
    hidden: ['facebook']
  }, {
    unified: '1FAF3-1F3FC',
    sheet: [55, 40],
    hidden: ['facebook']
  }, {
    unified: '1FAF3-1F3FD',
    sheet: [55, 41],
    hidden: ['facebook']
  }, {
    unified: '1FAF3-1F3FE',
    sheet: [55, 42],
    hidden: ['facebook']
  }, {
    unified: '1FAF3-1F3FF',
    sheet: [55, 43],
    hidden: ['facebook']
  }],
  shortName: 'palm_down_hand'
}, {
  name: 'Palm Up Hand',
  unified: '1FAF4',
  keywords: ['palm up hand', 'lift', 'offer', 'demand'],
  sheet: [55, 44],
  hidden: ['facebook'],
  skinVariations: [{
    unified: '1FAF4-1F3FB',
    sheet: [55, 45],
    hidden: ['facebook']
  }, {
    unified: '1FAF4-1F3FC',
    sheet: [55, 46],
    hidden: ['facebook']
  }, {
    unified: '1FAF4-1F3FD',
    sheet: [55, 47],
    hidden: ['facebook']
  }, {
    unified: '1FAF4-1F3FE',
    sheet: [55, 48],
    hidden: ['facebook']
  }, {
    unified: '1FAF4-1F3FF',
    sheet: [55, 49],
    hidden: ['facebook']
  }],
  shortName: 'palm_up_hand'
}, {
  name: 'Ok Hand Sign',
  unified: '1F44C',
  keywords: ['ok_hand', 'fingers', 'limbs', 'perfect', 'ok', 'okay'],
  sheet: [12, 44],
  skinVariations: [{
    unified: '1F44C-1F3FB',
    sheet: [12, 45]
  }, {
    unified: '1F44C-1F3FC',
    sheet: [12, 46]
  }, {
    unified: '1F44C-1F3FD',
    sheet: [12, 47]
  }, {
    unified: '1F44C-1F3FE',
    sheet: [12, 48]
  }, {
    unified: '1F44C-1F3FF',
    sheet: [12, 49]
  }],
  shortName: 'ok_hand'
}, {
  name: 'Pinched Fingers',
  unified: '1F90C',
  keywords: ['pinched fingers', 'size', 'tiny', 'small'],
  sheet: [38, 44],
  skinVariations: [{
    unified: '1F90C-1F3FB',
    sheet: [38, 45]
  }, {
    unified: '1F90C-1F3FC',
    sheet: [38, 46]
  }, {
    unified: '1F90C-1F3FD',
    sheet: [38, 47]
  }, {
    unified: '1F90C-1F3FE',
    sheet: [38, 48]
  }, {
    unified: '1F90C-1F3FF',
    sheet: [38, 49]
  }],
  shortName: 'pinched_fingers'
}, {
  name: 'Pinching Hand',
  unified: '1F90F',
  keywords: ['pinching_hand', 'tiny', 'small', 'size'],
  sheet: [38, 52],
  skinVariations: [{
    unified: '1F90F-1F3FB',
    sheet: [38, 53]
  }, {
    unified: '1F90F-1F3FC',
    sheet: [38, 54]
  }, {
    unified: '1F90F-1F3FD',
    sheet: [38, 55]
  }, {
    unified: '1F90F-1F3FE',
    sheet: [38, 56]
  }, {
    unified: '1F90F-1F3FF',
    sheet: [38, 57]
  }],
  shortName: 'pinching_hand'
}, {
  name: 'Victory Hand',
  unified: '270C-FE0F',
  keywords: ['victory_hand', 'fingers', 'ohyeah', 'hand', 'peace', 'victory', 'two'],
  sheet: [58, 39],
  skinVariations: [{
    unified: '270C-1F3FB',
    sheet: [58, 40]
  }, {
    unified: '270C-1F3FC',
    sheet: [58, 41]
  }, {
    unified: '270C-1F3FD',
    sheet: [58, 42]
  }, {
    unified: '270C-1F3FE',
    sheet: [58, 43]
  }, {
    unified: '270C-1F3FF',
    sheet: [58, 44]
  }],
  shortName: 'v'
}, {
  name: 'Hand with Index and Middle Fingers Crossed',
  unified: '1F91E',
  keywords: ['crossed_fingers', 'good', 'lucky'],
  sheet: [40, 0],
  skinVariations: [{
    unified: '1F91E-1F3FB',
    sheet: [40, 1]
  }, {
    unified: '1F91E-1F3FC',
    sheet: [40, 2]
  }, {
    unified: '1F91E-1F3FD',
    sheet: [40, 3]
  }, {
    unified: '1F91E-1F3FE',
    sheet: [40, 4]
  }, {
    unified: '1F91E-1F3FF',
    sheet: [40, 5]
  }],
  shortNames: ['hand_with_index_and_middle_fingers_crossed'],
  shortName: 'crossed_fingers'
}, {
  name: 'Hand with Index Finger and Thumb Crossed',
  unified: '1FAF0',
  keywords: ['hand with index finger and thumb crossed', 'heart', 'love', 'money', 'expensive'],
  sheet: [55, 20],
  hidden: ['facebook'],
  skinVariations: [{
    unified: '1FAF0-1F3FB',
    sheet: [55, 21],
    hidden: ['facebook']
  }, {
    unified: '1FAF0-1F3FC',
    sheet: [55, 22],
    hidden: ['facebook']
  }, {
    unified: '1FAF0-1F3FD',
    sheet: [55, 23],
    hidden: ['facebook']
  }, {
    unified: '1FAF0-1F3FE',
    sheet: [55, 24],
    hidden: ['facebook']
  }, {
    unified: '1FAF0-1F3FF',
    sheet: [55, 25],
    hidden: ['facebook']
  }],
  shortName: 'hand_with_index_finger_and_thumb_crossed'
}, {
  name: 'I Love You Hand Sign',
  unified: '1F91F',
  keywords: ['love_you_gesture', 'hand', 'fingers', 'gesture'],
  sheet: [40, 6],
  skinVariations: [{
    unified: '1F91F-1F3FB',
    sheet: [40, 7]
  }, {
    unified: '1F91F-1F3FC',
    sheet: [40, 8]
  }, {
    unified: '1F91F-1F3FD',
    sheet: [40, 9]
  }, {
    unified: '1F91F-1F3FE',
    sheet: [40, 10]
  }, {
    unified: '1F91F-1F3FF',
    sheet: [40, 11]
  }],
  shortName: 'i_love_you_hand_sign'
}, {
  name: 'Sign of the Horns',
  unified: '1F918',
  keywords: ['sign_of_the_horns', 'hand', 'fingers', 'evil_eye', 'sign_of_horns', 'rock_on'],
  sheet: [39, 5],
  skinVariations: [{
    unified: '1F918-1F3FB',
    sheet: [39, 6]
  }, {
    unified: '1F918-1F3FC',
    sheet: [39, 7]
  }, {
    unified: '1F918-1F3FD',
    sheet: [39, 8]
  }, {
    unified: '1F918-1F3FE',
    sheet: [39, 9]
  }, {
    unified: '1F918-1F3FF',
    sheet: [39, 10]
  }],
  shortNames: ['sign_of_the_horns'],
  shortName: 'the_horns'
}, {
  name: 'Call Me Hand',
  unified: '1F919',
  keywords: ['call_me_hand', 'hands', 'gesture', 'shaka'],
  sheet: [39, 11],
  skinVariations: [{
    unified: '1F919-1F3FB',
    sheet: [39, 12]
  }, {
    unified: '1F919-1F3FC',
    sheet: [39, 13]
  }, {
    unified: '1F919-1F3FD',
    sheet: [39, 14]
  }, {
    unified: '1F919-1F3FE',
    sheet: [39, 15]
  }, {
    unified: '1F919-1F3FF',
    sheet: [39, 16]
  }],
  shortName: 'call_me_hand'
}, {
  name: 'White Left Pointing Backhand Index',
  unified: '1F448',
  keywords: ['backhand_index_pointing_left', 'direction', 'fingers', 'hand', 'left'],
  sheet: [12, 20],
  skinVariations: [{
    unified: '1F448-1F3FB',
    sheet: [12, 21]
  }, {
    unified: '1F448-1F3FC',
    sheet: [12, 22]
  }, {
    unified: '1F448-1F3FD',
    sheet: [12, 23]
  }, {
    unified: '1F448-1F3FE',
    sheet: [12, 24]
  }, {
    unified: '1F448-1F3FF',
    sheet: [12, 25]
  }],
  shortName: 'point_left'
}, {
  name: 'White Right Pointing Backhand Index',
  unified: '1F449',
  keywords: ['backhand_index_pointing_right', 'fingers', 'hand', 'direction', 'right'],
  sheet: [12, 26],
  skinVariations: [{
    unified: '1F449-1F3FB',
    sheet: [12, 27]
  }, {
    unified: '1F449-1F3FC',
    sheet: [12, 28]
  }, {
    unified: '1F449-1F3FD',
    sheet: [12, 29]
  }, {
    unified: '1F449-1F3FE',
    sheet: [12, 30]
  }, {
    unified: '1F449-1F3FF',
    sheet: [12, 31]
  }],
  shortName: 'point_right'
}, {
  name: 'White Up Pointing Backhand Index',
  unified: '1F446',
  keywords: ['backhand_index_pointing_up', 'fingers', 'hand', 'direction', 'up'],
  sheet: [12, 8],
  skinVariations: [{
    unified: '1F446-1F3FB',
    sheet: [12, 9]
  }, {
    unified: '1F446-1F3FC',
    sheet: [12, 10]
  }, {
    unified: '1F446-1F3FD',
    sheet: [12, 11]
  }, {
    unified: '1F446-1F3FE',
    sheet: [12, 12]
  }, {
    unified: '1F446-1F3FF',
    sheet: [12, 13]
  }],
  shortName: 'point_up_2'
}, {
  name: 'Reversed Hand with Middle Finger Extended',
  unified: '1F595',
  keywords: ['middle_finger', 'hand', 'fingers', 'rude', 'middle', 'flipping'],
  sheet: [31, 43],
  skinVariations: [{
    unified: '1F595-1F3FB',
    sheet: [31, 44]
  }, {
    unified: '1F595-1F3FC',
    sheet: [31, 45]
  }, {
    unified: '1F595-1F3FD',
    sheet: [31, 46]
  }, {
    unified: '1F595-1F3FE',
    sheet: [31, 47]
  }, {
    unified: '1F595-1F3FF',
    sheet: [31, 48]
  }],
  shortNames: ['reversed_hand_with_middle_finger_extended'],
  shortName: 'middle_finger'
}, {
  name: 'White Down Pointing Backhand Index',
  unified: '1F447',
  keywords: ['backhand_index_pointing_down', 'fingers', 'hand', 'direction', 'down'],
  sheet: [12, 14],
  skinVariations: [{
    unified: '1F447-1F3FB',
    sheet: [12, 15]
  }, {
    unified: '1F447-1F3FC',
    sheet: [12, 16]
  }, {
    unified: '1F447-1F3FD',
    sheet: [12, 17]
  }, {
    unified: '1F447-1F3FE',
    sheet: [12, 18]
  }, {
    unified: '1F447-1F3FF',
    sheet: [12, 19]
  }],
  shortName: 'point_down'
}, {
  name: 'White Up Pointing Index',
  unified: '261D-FE0F',
  keywords: ['index_pointing_up', 'hand', 'fingers', 'direction', 'up'],
  sheet: [56, 50],
  skinVariations: [{
    unified: '261D-1F3FB',
    sheet: [56, 51]
  }, {
    unified: '261D-1F3FC',
    sheet: [56, 52]
  }, {
    unified: '261D-1F3FD',
    sheet: [56, 53]
  }, {
    unified: '261D-1F3FE',
    sheet: [56, 54]
  }, {
    unified: '261D-1F3FF',
    sheet: [56, 55]
  }],
  shortName: 'point_up'
}, {
  name: 'Index Pointing at the Viewer',
  unified: '1FAF5',
  keywords: ['index pointing at the viewer', 'you', 'recruit'],
  sheet: [55, 50],
  hidden: ['facebook'],
  skinVariations: [{
    unified: '1FAF5-1F3FB',
    sheet: [55, 51],
    hidden: ['facebook']
  }, {
    unified: '1FAF5-1F3FC',
    sheet: [55, 52],
    hidden: ['facebook']
  }, {
    unified: '1FAF5-1F3FD',
    sheet: [55, 53],
    hidden: ['facebook']
  }, {
    unified: '1FAF5-1F3FE',
    sheet: [55, 54],
    hidden: ['facebook']
  }, {
    unified: '1FAF5-1F3FF',
    sheet: [55, 55],
    hidden: ['facebook']
  }],
  shortName: 'index_pointing_at_the_viewer'
}, {
  name: 'Thumbs Up Sign',
  unified: '1F44D',
  keywords: ['thumbs_up', 'thumbsup', 'yes', 'awesome', 'good', 'agree', 'accept', 'cool', 'hand', 'like', '+1'],
  sheet: [12, 50],
  skinVariations: [{
    unified: '1F44D-1F3FB',
    sheet: [12, 51]
  }, {
    unified: '1F44D-1F3FC',
    sheet: [12, 52]
  }, {
    unified: '1F44D-1F3FD',
    sheet: [12, 53]
  }, {
    unified: '1F44D-1F3FE',
    sheet: [12, 54]
  }, {
    unified: '1F44D-1F3FF',
    sheet: [12, 55]
  }],
  shortNames: ['thumbsup'],
  shortName: '+1'
}, {
  name: 'Thumbs Down Sign',
  unified: '1F44E',
  keywords: ['thumbs_down', 'thumbsdown', 'no', 'dislike', 'hand', '-1'],
  sheet: [12, 56],
  skinVariations: [{
    unified: '1F44E-1F3FB',
    sheet: [12, 57]
  }, {
    unified: '1F44E-1F3FC',
    sheet: [12, 58]
  }, {
    unified: '1F44E-1F3FD',
    sheet: [12, 59]
  }, {
    unified: '1F44E-1F3FE',
    sheet: [12, 60]
  }, {
    unified: '1F44E-1F3FF',
    sheet: [13, 0]
  }],
  shortNames: ['thumbsdown'],
  shortName: '-1'
}, {
  name: 'Raised Fist',
  unified: '270A',
  keywords: ['raised_fist', 'fingers', 'hand', 'grasp'],
  sheet: [58, 27],
  skinVariations: [{
    unified: '270A-1F3FB',
    sheet: [58, 28]
  }, {
    unified: '270A-1F3FC',
    sheet: [58, 29]
  }, {
    unified: '270A-1F3FD',
    sheet: [58, 30]
  }, {
    unified: '270A-1F3FE',
    sheet: [58, 31]
  }, {
    unified: '270A-1F3FF',
    sheet: [58, 32]
  }],
  shortName: 'fist'
}, {
  name: 'Fisted Hand Sign',
  unified: '1F44A',
  keywords: ['oncoming_fist', 'angry', 'violence', 'fist', 'hit', 'attack', 'hand'],
  sheet: [12, 32],
  skinVariations: [{
    unified: '1F44A-1F3FB',
    sheet: [12, 33]
  }, {
    unified: '1F44A-1F3FC',
    sheet: [12, 34]
  }, {
    unified: '1F44A-1F3FD',
    sheet: [12, 35]
  }, {
    unified: '1F44A-1F3FE',
    sheet: [12, 36]
  }, {
    unified: '1F44A-1F3FF',
    sheet: [12, 37]
  }],
  shortNames: ['punch'],
  shortName: 'facepunch'
}, {
  name: 'Left-Facing Fist',
  unified: '1F91B',
  keywords: ['left_facing_fist', 'hand', 'fistbump'],
  sheet: [39, 23],
  skinVariations: [{
    unified: '1F91B-1F3FB',
    sheet: [39, 24]
  }, {
    unified: '1F91B-1F3FC',
    sheet: [39, 25]
  }, {
    unified: '1F91B-1F3FD',
    sheet: [39, 26]
  }, {
    unified: '1F91B-1F3FE',
    sheet: [39, 27]
  }, {
    unified: '1F91B-1F3FF',
    sheet: [39, 28]
  }],
  shortName: 'left-facing_fist'
}, {
  name: 'Right-Facing Fist',
  unified: '1F91C',
  keywords: ['right_facing_fist', 'hand', 'fistbump'],
  sheet: [39, 29],
  skinVariations: [{
    unified: '1F91C-1F3FB',
    sheet: [39, 30]
  }, {
    unified: '1F91C-1F3FC',
    sheet: [39, 31]
  }, {
    unified: '1F91C-1F3FD',
    sheet: [39, 32]
  }, {
    unified: '1F91C-1F3FE',
    sheet: [39, 33]
  }, {
    unified: '1F91C-1F3FF',
    sheet: [39, 34]
  }],
  shortName: 'right-facing_fist'
}, {
  name: 'Clapping Hands Sign',
  unified: '1F44F',
  keywords: ['clapping_hands', 'hands', 'praise', 'applause', 'congrats', 'yay'],
  sheet: [13, 1],
  skinVariations: [{
    unified: '1F44F-1F3FB',
    sheet: [13, 2]
  }, {
    unified: '1F44F-1F3FC',
    sheet: [13, 3]
  }, {
    unified: '1F44F-1F3FD',
    sheet: [13, 4]
  }, {
    unified: '1F44F-1F3FE',
    sheet: [13, 5]
  }, {
    unified: '1F44F-1F3FF',
    sheet: [13, 6]
  }],
  shortName: 'clap'
}, {
  name: 'Person Raising Both Hands in Celebration',
  unified: '1F64C',
  keywords: ['raising_hands', 'gesture', 'hooray', 'yea', 'celebration', 'hands'],
  sheet: [34, 45],
  skinVariations: [{
    unified: '1F64C-1F3FB',
    sheet: [34, 46]
  }, {
    unified: '1F64C-1F3FC',
    sheet: [34, 47]
  }, {
    unified: '1F64C-1F3FD',
    sheet: [34, 48]
  }, {
    unified: '1F64C-1F3FE',
    sheet: [34, 49]
  }, {
    unified: '1F64C-1F3FF',
    sheet: [34, 50]
  }],
  shortName: 'raised_hands'
}, {
  name: 'Heart Hands',
  unified: '1FAF6',
  keywords: ['heart hands', 'love', 'appreciation', 'support'],
  sheet: [55, 56],
  hidden: ['facebook'],
  skinVariations: [{
    unified: '1FAF6-1F3FB',
    sheet: [55, 57],
    hidden: ['facebook']
  }, {
    unified: '1FAF6-1F3FC',
    sheet: [55, 58],
    hidden: ['facebook']
  }, {
    unified: '1FAF6-1F3FD',
    sheet: [55, 59],
    hidden: ['facebook']
  }, {
    unified: '1FAF6-1F3FE',
    sheet: [55, 60],
    hidden: ['facebook']
  }, {
    unified: '1FAF6-1F3FF',
    sheet: [56, 0],
    hidden: ['facebook']
  }],
  shortName: 'heart_hands'
}, {
  name: 'Open Hands Sign',
  unified: '1F450',
  keywords: ['open_hands', 'fingers', 'butterfly', 'hands', 'open'],
  sheet: [13, 7],
  skinVariations: [{
    unified: '1F450-1F3FB',
    sheet: [13, 8]
  }, {
    unified: '1F450-1F3FC',
    sheet: [13, 9]
  }, {
    unified: '1F450-1F3FD',
    sheet: [13, 10]
  }, {
    unified: '1F450-1F3FE',
    sheet: [13, 11]
  }, {
    unified: '1F450-1F3FF',
    sheet: [13, 12]
  }],
  shortName: 'open_hands'
}, {
  name: 'Palms Up Together',
  unified: '1F932',
  keywords: ['palms_up_together', 'hands', 'gesture', 'cupped', 'prayer'],
  sheet: [40, 57],
  skinVariations: [{
    unified: '1F932-1F3FB',
    sheet: [40, 58]
  }, {
    unified: '1F932-1F3FC',
    sheet: [40, 59]
  }, {
    unified: '1F932-1F3FD',
    sheet: [40, 60]
  }, {
    unified: '1F932-1F3FE',
    sheet: [41, 0]
  }, {
    unified: '1F932-1F3FF',
    sheet: [41, 1]
  }],
  shortName: 'palms_up_together'
}, {
  name: 'Handshake',
  unified: '1F91D',
  keywords: ['handshake', 'agreement', 'shake'],
  sheet: [39, 35],
  skinVariations: [{
    unified: '1F91D-1F3FB',
    sheet: [39, 36]
  }, {
    unified: '1F91D-1F3FC',
    sheet: [39, 37]
  }, {
    unified: '1F91D-1F3FD',
    sheet: [39, 38]
  }, {
    unified: '1F91D-1F3FE',
    sheet: [39, 39]
  }, {
    unified: '1F91D-1F3FF',
    sheet: [39, 40]
  }, {
    unified: '1FAF1-1F3FB-200D-1FAF2-1F3FC',
    sheet: [39, 41],
    hidden: ['facebook']
  }, {
    unified: '1FAF1-1F3FB-200D-1FAF2-1F3FD',
    sheet: [39, 42],
    hidden: ['facebook']
  }, {
    unified: '1FAF1-1F3FB-200D-1FAF2-1F3FE',
    sheet: [39, 43],
    hidden: ['facebook']
  }, {
    unified: '1FAF1-1F3FB-200D-1FAF2-1F3FF',
    sheet: [39, 44],
    hidden: ['facebook']
  }, {
    unified: '1FAF1-1F3FC-200D-1FAF2-1F3FB',
    sheet: [39, 45],
    hidden: ['facebook']
  }, {
    unified: '1FAF1-1F3FC-200D-1FAF2-1F3FD',
    sheet: [39, 46],
    hidden: ['facebook']
  }, {
    unified: '1FAF1-1F3FC-200D-1FAF2-1F3FE',
    sheet: [39, 47],
    hidden: ['facebook']
  }, {
    unified: '1FAF1-1F3FC-200D-1FAF2-1F3FF',
    sheet: [39, 48],
    hidden: ['facebook']
  }, {
    unified: '1FAF1-1F3FD-200D-1FAF2-1F3FB',
    sheet: [39, 49],
    hidden: ['facebook']
  }, {
    unified: '1FAF1-1F3FD-200D-1FAF2-1F3FC',
    sheet: [39, 50],
    hidden: ['facebook']
  }, {
    unified: '1FAF1-1F3FD-200D-1FAF2-1F3FE',
    sheet: [39, 51],
    hidden: ['facebook']
  }, {
    unified: '1FAF1-1F3FD-200D-1FAF2-1F3FF',
    sheet: [39, 52],
    hidden: ['facebook']
  }, {
    unified: '1FAF1-1F3FE-200D-1FAF2-1F3FB',
    sheet: [39, 53],
    hidden: ['facebook']
  }, {
    unified: '1FAF1-1F3FE-200D-1FAF2-1F3FC',
    sheet: [39, 54],
    hidden: ['facebook']
  }, {
    unified: '1FAF1-1F3FE-200D-1FAF2-1F3FD',
    sheet: [39, 55],
    hidden: ['facebook']
  }, {
    unified: '1FAF1-1F3FE-200D-1FAF2-1F3FF',
    sheet: [39, 56],
    hidden: ['facebook']
  }, {
    unified: '1FAF1-1F3FF-200D-1FAF2-1F3FB',
    sheet: [39, 57],
    hidden: ['facebook']
  }, {
    unified: '1FAF1-1F3FF-200D-1FAF2-1F3FC',
    sheet: [39, 58],
    hidden: ['facebook']
  }, {
    unified: '1FAF1-1F3FF-200D-1FAF2-1F3FD',
    sheet: [39, 59],
    hidden: ['facebook']
  }, {
    unified: '1FAF1-1F3FF-200D-1FAF2-1F3FE',
    sheet: [39, 60],
    hidden: ['facebook']
  }],
  shortName: 'handshake'
}, {
  name: 'Person with Folded Hands',
  unified: '1F64F',
  keywords: ['folded_hands', 'please', 'hope', 'wish', 'namaste', 'highfive', 'pray', 'thank you', 'thanks', 'appreciate'],
  sheet: [35, 26],
  skinVariations: [{
    unified: '1F64F-1F3FB',
    sheet: [35, 27]
  }, {
    unified: '1F64F-1F3FC',
    sheet: [35, 28]
  }, {
    unified: '1F64F-1F3FD',
    sheet: [35, 29]
  }, {
    unified: '1F64F-1F3FE',
    sheet: [35, 30]
  }, {
    unified: '1F64F-1F3FF',
    sheet: [35, 31]
  }],
  shortName: 'pray'
}, {
  name: 'Writing Hand',
  unified: '270D-FE0F',
  keywords: ['writing_hand', 'lower_left_ballpoint_pen', 'stationery', 'write', 'compose'],
  sheet: [58, 45],
  skinVariations: [{
    unified: '270D-1F3FB',
    sheet: [58, 46]
  }, {
    unified: '270D-1F3FC',
    sheet: [58, 47]
  }, {
    unified: '270D-1F3FD',
    sheet: [58, 48]
  }, {
    unified: '270D-1F3FE',
    sheet: [58, 49]
  }, {
    unified: '270D-1F3FF',
    sheet: [58, 50]
  }],
  shortName: 'writing_hand'
}, {
  name: 'Nail Polish',
  unified: '1F485',
  keywords: ['nail_polish', 'beauty', 'manicure', 'finger', 'fashion', 'nail'],
  sheet: [25, 53],
  skinVariations: [{
    unified: '1F485-1F3FB',
    sheet: [25, 54]
  }, {
    unified: '1F485-1F3FC',
    sheet: [25, 55]
  }, {
    unified: '1F485-1F3FD',
    sheet: [25, 56]
  }, {
    unified: '1F485-1F3FE',
    sheet: [25, 57]
  }, {
    unified: '1F485-1F3FF',
    sheet: [25, 58]
  }],
  shortName: 'nail_care'
}, {
  name: 'Selfie',
  unified: '1F933',
  keywords: ['selfie', 'camera', 'phone'],
  sheet: [41, 2],
  skinVariations: [{
    unified: '1F933-1F3FB',
    sheet: [41, 3]
  }, {
    unified: '1F933-1F3FC',
    sheet: [41, 4]
  }, {
    unified: '1F933-1F3FD',
    sheet: [41, 5]
  }, {
    unified: '1F933-1F3FE',
    sheet: [41, 6]
  }, {
    unified: '1F933-1F3FF',
    sheet: [41, 7]
  }],
  shortName: 'selfie'
}, {
  name: 'Flexed Biceps',
  unified: '1F4AA',
  keywords: ['flexed_biceps', 'arm', 'flex', 'hand', 'summer', 'strong', 'biceps'],
  sheet: [27, 57],
  skinVariations: [{
    unified: '1F4AA-1F3FB',
    sheet: [27, 58]
  }, {
    unified: '1F4AA-1F3FC',
    sheet: [27, 59]
  }, {
    unified: '1F4AA-1F3FD',
    sheet: [27, 60]
  }, {
    unified: '1F4AA-1F3FE',
    sheet: [28, 0]
  }, {
    unified: '1F4AA-1F3FF',
    sheet: [28, 1]
  }],
  shortName: 'muscle'
}, {
  name: 'Mechanical Arm',
  unified: '1F9BE',
  keywords: ['mechanical_arm', 'accessibility'],
  sheet: [46, 3],
  shortName: 'mechanical_arm'
}, {
  name: 'Mechanical Leg',
  unified: '1F9BF',
  keywords: ['mechanical_leg', 'accessibility'],
  sheet: [46, 4],
  shortName: 'mechanical_leg'
}, {
  name: 'Leg',
  unified: '1F9B5',
  keywords: ['leg', 'kick', 'limb'],
  sheet: [45, 6],
  skinVariations: [{
    unified: '1F9B5-1F3FB',
    sheet: [45, 7]
  }, {
    unified: '1F9B5-1F3FC',
    sheet: [45, 8]
  }, {
    unified: '1F9B5-1F3FD',
    sheet: [45, 9]
  }, {
    unified: '1F9B5-1F3FE',
    sheet: [45, 10]
  }, {
    unified: '1F9B5-1F3FF',
    sheet: [45, 11]
  }],
  shortName: 'leg'
}, {
  name: 'Foot',
  unified: '1F9B6',
  keywords: ['foot', 'kick', 'stomp'],
  sheet: [45, 12],
  skinVariations: [{
    unified: '1F9B6-1F3FB',
    sheet: [45, 13]
  }, {
    unified: '1F9B6-1F3FC',
    sheet: [45, 14]
  }, {
    unified: '1F9B6-1F3FD',
    sheet: [45, 15]
  }, {
    unified: '1F9B6-1F3FE',
    sheet: [45, 16]
  }, {
    unified: '1F9B6-1F3FF',
    sheet: [45, 17]
  }],
  shortName: 'foot'
}, {
  name: 'Ear',
  unified: '1F442',
  keywords: ['ear', 'face', 'hear', 'sound', 'listen'],
  sheet: [11, 55],
  skinVariations: [{
    unified: '1F442-1F3FB',
    sheet: [11, 56]
  }, {
    unified: '1F442-1F3FC',
    sheet: [11, 57]
  }, {
    unified: '1F442-1F3FD',
    sheet: [11, 58]
  }, {
    unified: '1F442-1F3FE',
    sheet: [11, 59]
  }, {
    unified: '1F442-1F3FF',
    sheet: [11, 60]
  }],
  shortName: 'ear'
}, {
  name: 'Ear with Hearing Aid',
  unified: '1F9BB',
  keywords: ['ear_with_hearing_aid', 'accessibility'],
  sheet: [45, 56],
  skinVariations: [{
    unified: '1F9BB-1F3FB',
    sheet: [45, 57]
  }, {
    unified: '1F9BB-1F3FC',
    sheet: [45, 58]
  }, {
    unified: '1F9BB-1F3FD',
    sheet: [45, 59]
  }, {
    unified: '1F9BB-1F3FE',
    sheet: [45, 60]
  }, {
    unified: '1F9BB-1F3FF',
    sheet: [46, 0]
  }],
  shortName: 'ear_with_hearing_aid'
}, {
  name: 'Nose',
  unified: '1F443',
  keywords: ['nose', 'smell', 'sniff'],
  sheet: [12, 0],
  skinVariations: [{
    unified: '1F443-1F3FB',
    sheet: [12, 1]
  }, {
    unified: '1F443-1F3FC',
    sheet: [12, 2]
  }, {
    unified: '1F443-1F3FD',
    sheet: [12, 3]
  }, {
    unified: '1F443-1F3FE',
    sheet: [12, 4]
  }, {
    unified: '1F443-1F3FF',
    sheet: [12, 5]
  }],
  shortName: 'nose'
}, {
  name: 'Brain',
  unified: '1F9E0',
  keywords: ['brain', 'smart', 'intelligent'],
  sheet: [53, 14],
  shortName: 'brain'
}, {
  name: 'Anatomical Heart',
  unified: '1FAC0',
  keywords: ['anatomical heart', 'health', 'heartbeat'],
  sheet: [54, 42],
  shortName: 'anatomical_heart'
}, {
  name: 'Lungs',
  unified: '1FAC1',
  keywords: ['lungs', 'breathe'],
  sheet: [54, 43],
  shortName: 'lungs'
}, {
  name: 'Tooth',
  unified: '1F9B7',
  keywords: ['tooth', 'teeth', 'dentist'],
  sheet: [45, 18],
  shortName: 'tooth'
}, {
  name: 'Bone',
  unified: '1F9B4',
  keywords: ['bone', 'skeleton'],
  sheet: [45, 5],
  shortName: 'bone'
}, {
  name: 'Eyes',
  unified: '1F440',
  keywords: ['eyes', 'look', 'watch', 'stalk', 'peek', 'see'],
  sheet: [11, 52],
  shortName: 'eyes'
}, {
  name: 'Eye',
  unified: '1F441-FE0F',
  keywords: ['eye', 'face', 'look', 'see', 'watch', 'stare'],
  sheet: [11, 54],
  shortName: 'eye'
}, {
  name: 'Tongue',
  unified: '1F445',
  keywords: ['tongue', 'mouth', 'playful'],
  sheet: [12, 7],
  shortName: 'tongue'
}, {
  name: 'Mouth',
  unified: '1F444',
  keywords: ['mouth', 'mouth', 'kiss'],
  sheet: [12, 6],
  shortName: 'lips'
}, {
  name: 'Biting Lip',
  unified: '1FAE6',
  keywords: ['biting lip', 'flirt', 'sexy', 'pain', 'worry'],
  sheet: [55, 18],
  hidden: ['facebook'],
  shortName: 'biting_lip'
}, {
  name: 'Baby',
  unified: '1F476',
  keywords: ['baby', 'child', 'boy', 'girl', 'toddler'],
  sheet: [24, 28],
  skinVariations: [{
    unified: '1F476-1F3FB',
    sheet: [24, 29]
  }, {
    unified: '1F476-1F3FC',
    sheet: [24, 30]
  }, {
    unified: '1F476-1F3FD',
    sheet: [24, 31]
  }, {
    unified: '1F476-1F3FE',
    sheet: [24, 32]
  }, {
    unified: '1F476-1F3FF',
    sheet: [24, 33]
  }],
  shortName: 'baby'
}, {
  name: 'Child',
  unified: '1F9D2',
  keywords: ['child', 'gender-neutral', 'young'],
  sheet: [50, 11],
  skinVariations: [{
    unified: '1F9D2-1F3FB',
    sheet: [50, 12]
  }, {
    unified: '1F9D2-1F3FC',
    sheet: [50, 13]
  }, {
    unified: '1F9D2-1F3FD',
    sheet: [50, 14]
  }, {
    unified: '1F9D2-1F3FE',
    sheet: [50, 15]
  }, {
    unified: '1F9D2-1F3FF',
    sheet: [50, 16]
  }],
  shortName: 'child'
}, {
  name: 'Boy',
  unified: '1F466',
  keywords: ['boy', 'man', 'male', 'guy', 'teenager'],
  sheet: [13, 34],
  skinVariations: [{
    unified: '1F466-1F3FB',
    sheet: [13, 35]
  }, {
    unified: '1F466-1F3FC',
    sheet: [13, 36]
  }, {
    unified: '1F466-1F3FD',
    sheet: [13, 37]
  }, {
    unified: '1F466-1F3FE',
    sheet: [13, 38]
  }, {
    unified: '1F466-1F3FF',
    sheet: [13, 39]
  }],
  shortName: 'boy'
}, {
  name: 'Girl',
  unified: '1F467',
  keywords: ['girl', 'female', 'woman', 'teenager'],
  sheet: [13, 40],
  skinVariations: [{
    unified: '1F467-1F3FB',
    sheet: [13, 41]
  }, {
    unified: '1F467-1F3FC',
    sheet: [13, 42]
  }, {
    unified: '1F467-1F3FD',
    sheet: [13, 43]
  }, {
    unified: '1F467-1F3FE',
    sheet: [13, 44]
  }, {
    unified: '1F467-1F3FF',
    sheet: [13, 45]
  }],
  shortName: 'girl'
}, {
  name: 'Adult',
  unified: '1F9D1',
  keywords: ['person', 'gender-neutral', 'person'],
  sheet: [50, 5],
  skinVariations: [{
    unified: '1F9D1-1F3FB',
    sheet: [50, 6]
  }, {
    unified: '1F9D1-1F3FC',
    sheet: [50, 7]
  }, {
    unified: '1F9D1-1F3FD',
    sheet: [50, 8]
  }, {
    unified: '1F9D1-1F3FE',
    sheet: [50, 9]
  }, {
    unified: '1F9D1-1F3FF',
    sheet: [50, 10]
  }],
  shortName: 'adult'
}, {
  name: 'Person with Blond Hair',
  unified: '1F471',
  keywords: ['person_blond_hair', 'hairstyle'],
  sheet: [23, 47],
  skinVariations: [{
    unified: '1F471-1F3FB',
    sheet: [23, 48]
  }, {
    unified: '1F471-1F3FC',
    sheet: [23, 49]
  }, {
    unified: '1F471-1F3FD',
    sheet: [23, 50]
  }, {
    unified: '1F471-1F3FE',
    sheet: [23, 51]
  }, {
    unified: '1F471-1F3FF',
    sheet: [23, 52]
  }],
  shortName: 'person_with_blond_hair',
  obsoletedBy: '1F471-200D-2642-FE0F'
}, {
  name: 'Man',
  unified: '1F468',
  keywords: ['man', 'mustache', 'father', 'dad', 'guy', 'classy', 'sir', 'moustache'],
  sheet: [17, 13],
  skinVariations: [{
    unified: '1F468-1F3FB',
    sheet: [17, 14]
  }, {
    unified: '1F468-1F3FC',
    sheet: [17, 15]
  }, {
    unified: '1F468-1F3FD',
    sheet: [17, 16]
  }, {
    unified: '1F468-1F3FE',
    sheet: [17, 17]
  }, {
    unified: '1F468-1F3FF',
    sheet: [17, 18]
  }],
  shortName: 'man'
}, {
  name: 'Bearded Person',
  unified: '1F9D4',
  keywords: ['man_beard', 'person', 'bewhiskered'],
  sheet: [50, 35],
  skinVariations: [{
    unified: '1F9D4-1F3FB',
    sheet: [50, 36]
  }, {
    unified: '1F9D4-1F3FC',
    sheet: [50, 37]
  }, {
    unified: '1F9D4-1F3FD',
    sheet: [50, 38]
  }, {
    unified: '1F9D4-1F3FE',
    sheet: [50, 39]
  }, {
    unified: '1F9D4-1F3FF',
    sheet: [50, 40]
  }],
  shortName: 'bearded_person'
}, {
  name: 'Man: Beard',
  unified: '1F9D4-200D-2642-FE0F',
  keywords: ['man beard', 'facial hair'],
  sheet: [50, 29],
  hidden: ['facebook'],
  skinVariations: [{
    unified: '1F9D4-1F3FB-200D-2642-FE0F',
    sheet: [50, 30],
    hidden: ['facebook']
  }, {
    unified: '1F9D4-1F3FC-200D-2642-FE0F',
    sheet: [50, 31],
    hidden: ['facebook']
  }, {
    unified: '1F9D4-1F3FD-200D-2642-FE0F',
    sheet: [50, 32],
    hidden: ['facebook']
  }, {
    unified: '1F9D4-1F3FE-200D-2642-FE0F',
    sheet: [50, 33],
    hidden: ['facebook']
  }, {
    unified: '1F9D4-1F3FF-200D-2642-FE0F',
    sheet: [50, 34],
    hidden: ['facebook']
  }],
  shortName: 'man_with_beard'
}, {
  name: 'Woman: Beard',
  unified: '1F9D4-200D-2640-FE0F',
  keywords: ['woman beard', 'facial hair'],
  sheet: [50, 23],
  hidden: ['facebook'],
  skinVariations: [{
    unified: '1F9D4-1F3FB-200D-2640-FE0F',
    sheet: [50, 24],
    hidden: ['facebook']
  }, {
    unified: '1F9D4-1F3FC-200D-2640-FE0F',
    sheet: [50, 25],
    hidden: ['facebook']
  }, {
    unified: '1F9D4-1F3FD-200D-2640-FE0F',
    sheet: [50, 26],
    hidden: ['facebook']
  }, {
    unified: '1F9D4-1F3FE-200D-2640-FE0F',
    sheet: [50, 27],
    hidden: ['facebook']
  }, {
    unified: '1F9D4-1F3FF-200D-2640-FE0F',
    sheet: [50, 28],
    hidden: ['facebook']
  }],
  shortName: 'woman_with_beard'
}, {
  name: 'Man: Red Hair',
  unified: '1F468-200D-1F9B0',
  keywords: ['man_red_hair', 'hairstyle'],
  sheet: [15, 29],
  skinVariations: [{
    unified: '1F468-1F3FB-200D-1F9B0',
    sheet: [15, 30]
  }, {
    unified: '1F468-1F3FC-200D-1F9B0',
    sheet: [15, 31]
  }, {
    unified: '1F468-1F3FD-200D-1F9B0',
    sheet: [15, 32]
  }, {
    unified: '1F468-1F3FE-200D-1F9B0',
    sheet: [15, 33]
  }, {
    unified: '1F468-1F3FF-200D-1F9B0',
    sheet: [15, 34]
  }],
  shortName: 'red_haired_man'
}, {
  name: 'Man: Curly Hair',
  unified: '1F468-200D-1F9B1',
  keywords: ['man_curly_hair', 'hairstyle'],
  sheet: [15, 35],
  skinVariations: [{
    unified: '1F468-1F3FB-200D-1F9B1',
    sheet: [15, 36]
  }, {
    unified: '1F468-1F3FC-200D-1F9B1',
    sheet: [15, 37]
  }, {
    unified: '1F468-1F3FD-200D-1F9B1',
    sheet: [15, 38]
  }, {
    unified: '1F468-1F3FE-200D-1F9B1',
    sheet: [15, 39]
  }, {
    unified: '1F468-1F3FF-200D-1F9B1',
    sheet: [15, 40]
  }],
  shortName: 'curly_haired_man'
}, {
  name: 'Man: White Hair',
  unified: '1F468-200D-1F9B3',
  keywords: ['man_white_hair', 'old', 'elder'],
  sheet: [15, 47],
  skinVariations: [{
    unified: '1F468-1F3FB-200D-1F9B3',
    sheet: [15, 48]
  }, {
    unified: '1F468-1F3FC-200D-1F9B3',
    sheet: [15, 49]
  }, {
    unified: '1F468-1F3FD-200D-1F9B3',
    sheet: [15, 50]
  }, {
    unified: '1F468-1F3FE-200D-1F9B3',
    sheet: [15, 51]
  }, {
    unified: '1F468-1F3FF-200D-1F9B3',
    sheet: [15, 52]
  }],
  shortName: 'white_haired_man'
}, {
  name: 'Man: Bald',
  unified: '1F468-200D-1F9B2',
  keywords: ['man_bald', 'hairless'],
  sheet: [15, 41],
  skinVariations: [{
    unified: '1F468-1F3FB-200D-1F9B2',
    sheet: [15, 42]
  }, {
    unified: '1F468-1F3FC-200D-1F9B2',
    sheet: [15, 43]
  }, {
    unified: '1F468-1F3FD-200D-1F9B2',
    sheet: [15, 44]
  }, {
    unified: '1F468-1F3FE-200D-1F9B2',
    sheet: [15, 45]
  }, {
    unified: '1F468-1F3FF-200D-1F9B2',
    sheet: [15, 46]
  }],
  shortName: 'bald_man'
}, {
  name: 'Woman',
  unified: '1F469',
  keywords: ['woman', 'female', 'girls', 'lady'],
  sheet: [21, 33],
  skinVariations: [{
    unified: '1F469-1F3FB',
    sheet: [21, 34]
  }, {
    unified: '1F469-1F3FC',
    sheet: [21, 35]
  }, {
    unified: '1F469-1F3FD',
    sheet: [21, 36]
  }, {
    unified: '1F469-1F3FE',
    sheet: [21, 37]
  }, {
    unified: '1F469-1F3FF',
    sheet: [21, 38]
  }],
  shortName: 'woman'
}, {
  name: 'Woman: Red Hair',
  unified: '1F469-200D-1F9B0',
  keywords: ['woman_red_hair', 'hairstyle'],
  sheet: [18, 58],
  skinVariations: [{
    unified: '1F469-1F3FB-200D-1F9B0',
    sheet: [18, 59]
  }, {
    unified: '1F469-1F3FC-200D-1F9B0',
    sheet: [18, 60]
  }, {
    unified: '1F469-1F3FD-200D-1F9B0',
    sheet: [19, 0]
  }, {
    unified: '1F469-1F3FE-200D-1F9B0',
    sheet: [19, 1]
  }, {
    unified: '1F469-1F3FF-200D-1F9B0',
    sheet: [19, 2]
  }],
  shortName: 'red_haired_woman'
}, {
  name: 'Person: Red Hair',
  unified: '1F9D1-200D-1F9B0',
  keywords: ['person_red_hair', 'hairstyle'],
  sheet: [49, 12],
  skinVariations: [{
    unified: '1F9D1-1F3FB-200D-1F9B0',
    sheet: [49, 13]
  }, {
    unified: '1F9D1-1F3FC-200D-1F9B0',
    sheet: [49, 14]
  }, {
    unified: '1F9D1-1F3FD-200D-1F9B0',
    sheet: [49, 15]
  }, {
    unified: '1F9D1-1F3FE-200D-1F9B0',
    sheet: [49, 16]
  }, {
    unified: '1F9D1-1F3FF-200D-1F9B0',
    sheet: [49, 17]
  }],
  shortName: 'red_haired_person'
}, {
  name: 'Woman: Curly Hair',
  unified: '1F469-200D-1F9B1',
  keywords: ['woman_curly_hair', 'hairstyle'],
  sheet: [19, 3],
  skinVariations: [{
    unified: '1F469-1F3FB-200D-1F9B1',
    sheet: [19, 4]
  }, {
    unified: '1F469-1F3FC-200D-1F9B1',
    sheet: [19, 5]
  }, {
    unified: '1F469-1F3FD-200D-1F9B1',
    sheet: [19, 6]
  }, {
    unified: '1F469-1F3FE-200D-1F9B1',
    sheet: [19, 7]
  }, {
    unified: '1F469-1F3FF-200D-1F9B1',
    sheet: [19, 8]
  }],
  shortName: 'curly_haired_woman'
}, {
  name: 'Person: Curly Hair',
  unified: '1F9D1-200D-1F9B1',
  keywords: ['person_curly_hair', 'hairstyle'],
  sheet: [49, 18],
  skinVariations: [{
    unified: '1F9D1-1F3FB-200D-1F9B1',
    sheet: [49, 19]
  }, {
    unified: '1F9D1-1F3FC-200D-1F9B1',
    sheet: [49, 20]
  }, {
    unified: '1F9D1-1F3FD-200D-1F9B1',
    sheet: [49, 21]
  }, {
    unified: '1F9D1-1F3FE-200D-1F9B1',
    sheet: [49, 22]
  }, {
    unified: '1F9D1-1F3FF-200D-1F9B1',
    sheet: [49, 23]
  }],
  shortName: 'curly_haired_person'
}, {
  name: 'Woman: White Hair',
  unified: '1F469-200D-1F9B3',
  keywords: ['woman_white_hair', 'old', 'elder'],
  sheet: [19, 15],
  skinVariations: [{
    unified: '1F469-1F3FB-200D-1F9B3',
    sheet: [19, 16]
  }, {
    unified: '1F469-1F3FC-200D-1F9B3',
    sheet: [19, 17]
  }, {
    unified: '1F469-1F3FD-200D-1F9B3',
    sheet: [19, 18]
  }, {
    unified: '1F469-1F3FE-200D-1F9B3',
    sheet: [19, 19]
  }, {
    unified: '1F469-1F3FF-200D-1F9B3',
    sheet: [19, 20]
  }],
  shortName: 'white_haired_woman'
}, {
  name: 'Person: White Hair',
  unified: '1F9D1-200D-1F9B3',
  keywords: ['person_white_hair', 'elder', 'old'],
  sheet: [49, 30],
  hidden: ['facebook'],
  skinVariations: [{
    unified: '1F9D1-1F3FB-200D-1F9B3',
    sheet: [49, 31],
    hidden: ['facebook']
  }, {
    unified: '1F9D1-1F3FC-200D-1F9B3',
    sheet: [49, 32],
    hidden: ['facebook']
  }, {
    unified: '1F9D1-1F3FD-200D-1F9B3',
    sheet: [49, 33],
    hidden: ['facebook']
  }, {
    unified: '1F9D1-1F3FE-200D-1F9B3',
    sheet: [49, 34],
    hidden: ['facebook']
  }, {
    unified: '1F9D1-1F3FF-200D-1F9B3',
    sheet: [49, 35],
    hidden: ['facebook']
  }],
  shortName: 'white_haired_person'
}, {
  name: 'Woman: Bald',
  unified: '1F469-200D-1F9B2',
  keywords: ['woman_bald', 'hairless'],
  sheet: [19, 9],
  skinVariations: [{
    unified: '1F469-1F3FB-200D-1F9B2',
    sheet: [19, 10]
  }, {
    unified: '1F469-1F3FC-200D-1F9B2',
    sheet: [19, 11]
  }, {
    unified: '1F469-1F3FD-200D-1F9B2',
    sheet: [19, 12]
  }, {
    unified: '1F469-1F3FE-200D-1F9B2',
    sheet: [19, 13]
  }, {
    unified: '1F469-1F3FF-200D-1F9B2',
    sheet: [19, 14]
  }],
  shortName: 'bald_woman'
}, {
  name: 'Person: Bald',
  unified: '1F9D1-200D-1F9B2',
  keywords: ['person_bald', 'hairless'],
  sheet: [49, 24],
  hidden: ['facebook'],
  skinVariations: [{
    unified: '1F9D1-1F3FB-200D-1F9B2',
    sheet: [49, 25],
    hidden: ['facebook']
  }, {
    unified: '1F9D1-1F3FC-200D-1F9B2',
    sheet: [49, 26],
    hidden: ['facebook']
  }, {
    unified: '1F9D1-1F3FD-200D-1F9B2',
    sheet: [49, 27],
    hidden: ['facebook']
  }, {
    unified: '1F9D1-1F3FE-200D-1F9B2',
    sheet: [49, 28],
    hidden: ['facebook']
  }, {
    unified: '1F9D1-1F3FF-200D-1F9B2',
    sheet: [49, 29],
    hidden: ['facebook']
  }],
  shortName: 'bald_person'
}, {
  name: 'Woman: Blond Hair',
  unified: '1F471-200D-2640-FE0F',
  keywords: ['woman_blond_hair', 'woman', 'female', 'girl', 'blonde', 'person'],
  sheet: [23, 35],
  skinVariations: [{
    unified: '1F471-1F3FB-200D-2640-FE0F',
    sheet: [23, 36]
  }, {
    unified: '1F471-1F3FC-200D-2640-FE0F',
    sheet: [23, 37]
  }, {
    unified: '1F471-1F3FD-200D-2640-FE0F',
    sheet: [23, 38]
  }, {
    unified: '1F471-1F3FE-200D-2640-FE0F',
    sheet: [23, 39]
  }, {
    unified: '1F471-1F3FF-200D-2640-FE0F',
    sheet: [23, 40]
  }],
  shortName: 'blond-haired-woman'
}, {
  name: 'Man: Blond Hair',
  unified: '1F471-200D-2642-FE0F',
  obsoletes: '1F471',
  keywords: ['man_blond_hair', 'man', 'male', 'boy', 'blonde', 'guy', 'person'],
  sheet: [23, 41],
  skinVariations: [{
    unified: '1F471-1F3FB-200D-2642-FE0F',
    sheet: [23, 42]
  }, {
    unified: '1F471-1F3FC-200D-2642-FE0F',
    sheet: [23, 43]
  }, {
    unified: '1F471-1F3FD-200D-2642-FE0F',
    sheet: [23, 44]
  }, {
    unified: '1F471-1F3FE-200D-2642-FE0F',
    sheet: [23, 45]
  }, {
    unified: '1F471-1F3FF-200D-2642-FE0F',
    sheet: [23, 46]
  }],
  shortName: 'blond-haired-man'
}, {
  name: 'Older Adult',
  unified: '1F9D3',
  keywords: ['older_person', 'human', 'elder', 'senior', 'gender-neutral'],
  sheet: [50, 17],
  skinVariations: [{
    unified: '1F9D3-1F3FB',
    sheet: [50, 18]
  }, {
    unified: '1F9D3-1F3FC',
    sheet: [50, 19]
  }, {
    unified: '1F9D3-1F3FD',
    sheet: [50, 20]
  }, {
    unified: '1F9D3-1F3FE',
    sheet: [50, 21]
  }, {
    unified: '1F9D3-1F3FF',
    sheet: [50, 22]
  }],
  shortName: 'older_adult'
}, {
  name: 'Older Man',
  unified: '1F474',
  keywords: ['old_man', 'human', 'male', 'men', 'old', 'elder', 'senior'],
  sheet: [24, 16],
  skinVariations: [{
    unified: '1F474-1F3FB',
    sheet: [24, 17]
  }, {
    unified: '1F474-1F3FC',
    sheet: [24, 18]
  }, {
    unified: '1F474-1F3FD',
    sheet: [24, 19]
  }, {
    unified: '1F474-1F3FE',
    sheet: [24, 20]
  }, {
    unified: '1F474-1F3FF',
    sheet: [24, 21]
  }],
  shortName: 'older_man'
}, {
  name: 'Older Woman',
  unified: '1F475',
  keywords: ['old_woman', 'human', 'female', 'women', 'lady', 'old', 'elder', 'senior'],
  sheet: [24, 22],
  skinVariations: [{
    unified: '1F475-1F3FB',
    sheet: [24, 23]
  }, {
    unified: '1F475-1F3FC',
    sheet: [24, 24]
  }, {
    unified: '1F475-1F3FD',
    sheet: [24, 25]
  }, {
    unified: '1F475-1F3FE',
    sheet: [24, 26]
  }, {
    unified: '1F475-1F3FF',
    sheet: [24, 27]
  }],
  shortName: 'older_woman'
}, {
  name: 'Person Frowning',
  unified: '1F64D',
  keywords: ['person_frowning', 'worried'],
  sheet: [35, 2],
  skinVariations: [{
    unified: '1F64D-1F3FB',
    sheet: [35, 3]
  }, {
    unified: '1F64D-1F3FC',
    sheet: [35, 4]
  }, {
    unified: '1F64D-1F3FD',
    sheet: [35, 5]
  }, {
    unified: '1F64D-1F3FE',
    sheet: [35, 6]
  }, {
    unified: '1F64D-1F3FF',
    sheet: [35, 7]
  }],
  shortName: 'person_frowning',
  obsoletedBy: '1F64D-200D-2640-FE0F'
}, {
  name: 'Man Frowning',
  unified: '1F64D-200D-2642-FE0F',
  keywords: ['man_frowning', 'male', 'boy', 'man', 'sad', 'depressed', 'discouraged', 'unhappy'],
  sheet: [34, 57],
  skinVariations: [{
    unified: '1F64D-1F3FB-200D-2642-FE0F',
    sheet: [34, 58]
  }, {
    unified: '1F64D-1F3FC-200D-2642-FE0F',
    sheet: [34, 59]
  }, {
    unified: '1F64D-1F3FD-200D-2642-FE0F',
    sheet: [34, 60]
  }, {
    unified: '1F64D-1F3FE-200D-2642-FE0F',
    sheet: [35, 0]
  }, {
    unified: '1F64D-1F3FF-200D-2642-FE0F',
    sheet: [35, 1]
  }],
  shortName: 'man-frowning'
}, {
  name: 'Woman Frowning',
  unified: '1F64D-200D-2640-FE0F',
  obsoletes: '1F64D',
  keywords: ['woman_frowning', 'female', 'girl', 'woman', 'sad', 'depressed', 'discouraged', 'unhappy'],
  sheet: [34, 51],
  skinVariations: [{
    unified: '1F64D-1F3FB-200D-2640-FE0F',
    sheet: [34, 52]
  }, {
    unified: '1F64D-1F3FC-200D-2640-FE0F',
    sheet: [34, 53]
  }, {
    unified: '1F64D-1F3FD-200D-2640-FE0F',
    sheet: [34, 54]
  }, {
    unified: '1F64D-1F3FE-200D-2640-FE0F',
    sheet: [34, 55]
  }, {
    unified: '1F64D-1F3FF-200D-2640-FE0F',
    sheet: [34, 56]
  }],
  shortName: 'woman-frowning'
}, {
  name: 'Person with Pouting Face',
  unified: '1F64E',
  keywords: ['person_pouting', 'upset'],
  sheet: [35, 20],
  skinVariations: [{
    unified: '1F64E-1F3FB',
    sheet: [35, 21]
  }, {
    unified: '1F64E-1F3FC',
    sheet: [35, 22]
  }, {
    unified: '1F64E-1F3FD',
    sheet: [35, 23]
  }, {
    unified: '1F64E-1F3FE',
    sheet: [35, 24]
  }, {
    unified: '1F64E-1F3FF',
    sheet: [35, 25]
  }],
  shortName: 'person_with_pouting_face',
  obsoletedBy: '1F64E-200D-2640-FE0F'
}, {
  name: 'Man Pouting',
  unified: '1F64E-200D-2642-FE0F',
  keywords: ['man_pouting', 'male', 'boy', 'man'],
  sheet: [35, 14],
  skinVariations: [{
    unified: '1F64E-1F3FB-200D-2642-FE0F',
    sheet: [35, 15]
  }, {
    unified: '1F64E-1F3FC-200D-2642-FE0F',
    sheet: [35, 16]
  }, {
    unified: '1F64E-1F3FD-200D-2642-FE0F',
    sheet: [35, 17]
  }, {
    unified: '1F64E-1F3FE-200D-2642-FE0F',
    sheet: [35, 18]
  }, {
    unified: '1F64E-1F3FF-200D-2642-FE0F',
    sheet: [35, 19]
  }],
  shortName: 'man-pouting'
}, {
  name: 'Woman Pouting',
  unified: '1F64E-200D-2640-FE0F',
  obsoletes: '1F64E',
  keywords: ['woman_pouting', 'female', 'girl', 'woman'],
  sheet: [35, 8],
  skinVariations: [{
    unified: '1F64E-1F3FB-200D-2640-FE0F',
    sheet: [35, 9]
  }, {
    unified: '1F64E-1F3FC-200D-2640-FE0F',
    sheet: [35, 10]
  }, {
    unified: '1F64E-1F3FD-200D-2640-FE0F',
    sheet: [35, 11]
  }, {
    unified: '1F64E-1F3FE-200D-2640-FE0F',
    sheet: [35, 12]
  }, {
    unified: '1F64E-1F3FF-200D-2640-FE0F',
    sheet: [35, 13]
  }],
  shortName: 'woman-pouting'
}, {
  name: 'Face with No Good Gesture',
  unified: '1F645',
  keywords: ['person_gesturing_no', 'decline'],
  sheet: [33, 43],
  skinVariations: [{
    unified: '1F645-1F3FB',
    sheet: [33, 44]
  }, {
    unified: '1F645-1F3FC',
    sheet: [33, 45]
  }, {
    unified: '1F645-1F3FD',
    sheet: [33, 46]
  }, {
    unified: '1F645-1F3FE',
    sheet: [33, 47]
  }, {
    unified: '1F645-1F3FF',
    sheet: [33, 48]
  }],
  shortName: 'no_good',
  obsoletedBy: '1F645-200D-2640-FE0F'
}, {
  name: 'Man Gesturing No',
  unified: '1F645-200D-2642-FE0F',
  keywords: ['man_gesturing_no', 'male', 'boy', 'man', 'nope'],
  sheet: [33, 37],
  skinVariations: [{
    unified: '1F645-1F3FB-200D-2642-FE0F',
    sheet: [33, 38]
  }, {
    unified: '1F645-1F3FC-200D-2642-FE0F',
    sheet: [33, 39]
  }, {
    unified: '1F645-1F3FD-200D-2642-FE0F',
    sheet: [33, 40]
  }, {
    unified: '1F645-1F3FE-200D-2642-FE0F',
    sheet: [33, 41]
  }, {
    unified: '1F645-1F3FF-200D-2642-FE0F',
    sheet: [33, 42]
  }],
  shortName: 'man-gesturing-no'
}, {
  name: 'Woman Gesturing No',
  unified: '1F645-200D-2640-FE0F',
  obsoletes: '1F645',
  keywords: ['woman_gesturing_no', 'female', 'girl', 'woman', 'nope'],
  sheet: [33, 31],
  skinVariations: [{
    unified: '1F645-1F3FB-200D-2640-FE0F',
    sheet: [33, 32]
  }, {
    unified: '1F645-1F3FC-200D-2640-FE0F',
    sheet: [33, 33]
  }, {
    unified: '1F645-1F3FD-200D-2640-FE0F',
    sheet: [33, 34]
  }, {
    unified: '1F645-1F3FE-200D-2640-FE0F',
    sheet: [33, 35]
  }, {
    unified: '1F645-1F3FF-200D-2640-FE0F',
    sheet: [33, 36]
  }],
  shortName: 'woman-gesturing-no'
}, {
  name: 'Face with Ok Gesture',
  unified: '1F646',
  keywords: ['person_gesturing_ok', 'agree'],
  sheet: [34, 0],
  skinVariations: [{
    unified: '1F646-1F3FB',
    sheet: [34, 1]
  }, {
    unified: '1F646-1F3FC',
    sheet: [34, 2]
  }, {
    unified: '1F646-1F3FD',
    sheet: [34, 3]
  }, {
    unified: '1F646-1F3FE',
    sheet: [34, 4]
  }, {
    unified: '1F646-1F3FF',
    sheet: [34, 5]
  }],
  shortName: 'ok_woman',
  obsoletedBy: '1F646-200D-2640-FE0F'
}, {
  name: 'Man Gesturing Ok',
  unified: '1F646-200D-2642-FE0F',
  keywords: ['man_gesturing_ok', 'men', 'boy', 'male', 'blue', 'human', 'man'],
  sheet: [33, 55],
  skinVariations: [{
    unified: '1F646-1F3FB-200D-2642-FE0F',
    sheet: [33, 56]
  }, {
    unified: '1F646-1F3FC-200D-2642-FE0F',
    sheet: [33, 57]
  }, {
    unified: '1F646-1F3FD-200D-2642-FE0F',
    sheet: [33, 58]
  }, {
    unified: '1F646-1F3FE-200D-2642-FE0F',
    sheet: [33, 59]
  }, {
    unified: '1F646-1F3FF-200D-2642-FE0F',
    sheet: [33, 60]
  }],
  shortName: 'man-gesturing-ok'
}, {
  name: 'Woman Gesturing Ok',
  unified: '1F646-200D-2640-FE0F',
  obsoletes: '1F646',
  keywords: ['woman_gesturing_ok', 'women', 'girl', 'female', 'pink', 'human', 'woman'],
  sheet: [33, 49],
  skinVariations: [{
    unified: '1F646-1F3FB-200D-2640-FE0F',
    sheet: [33, 50]
  }, {
    unified: '1F646-1F3FC-200D-2640-FE0F',
    sheet: [33, 51]
  }, {
    unified: '1F646-1F3FD-200D-2640-FE0F',
    sheet: [33, 52]
  }, {
    unified: '1F646-1F3FE-200D-2640-FE0F',
    sheet: [33, 53]
  }, {
    unified: '1F646-1F3FF-200D-2640-FE0F',
    sheet: [33, 54]
  }],
  shortName: 'woman-gesturing-ok'
}, {
  name: 'Information Desk Person',
  unified: '1F481',
  keywords: ['person_tipping_hand', 'information'],
  sheet: [25, 22],
  skinVariations: [{
    unified: '1F481-1F3FB',
    sheet: [25, 23]
  }, {
    unified: '1F481-1F3FC',
    sheet: [25, 24]
  }, {
    unified: '1F481-1F3FD',
    sheet: [25, 25]
  }, {
    unified: '1F481-1F3FE',
    sheet: [25, 26]
  }, {
    unified: '1F481-1F3FF',
    sheet: [25, 27]
  }],
  shortName: 'information_desk_person',
  obsoletedBy: '1F481-200D-2640-FE0F'
}, {
  name: 'Man Tipping Hand',
  unified: '1F481-200D-2642-FE0F',
  keywords: ['man_tipping_hand', 'male', 'boy', 'man', 'human', 'information'],
  sheet: [25, 16],
  skinVariations: [{
    unified: '1F481-1F3FB-200D-2642-FE0F',
    sheet: [25, 17]
  }, {
    unified: '1F481-1F3FC-200D-2642-FE0F',
    sheet: [25, 18]
  }, {
    unified: '1F481-1F3FD-200D-2642-FE0F',
    sheet: [25, 19]
  }, {
    unified: '1F481-1F3FE-200D-2642-FE0F',
    sheet: [25, 20]
  }, {
    unified: '1F481-1F3FF-200D-2642-FE0F',
    sheet: [25, 21]
  }],
  shortName: 'man-tipping-hand'
}, {
  name: 'Woman Tipping Hand',
  unified: '1F481-200D-2640-FE0F',
  obsoletes: '1F481',
  keywords: ['woman_tipping_hand', 'female', 'girl', 'woman', 'human', 'information'],
  sheet: [25, 10],
  skinVariations: [{
    unified: '1F481-1F3FB-200D-2640-FE0F',
    sheet: [25, 11]
  }, {
    unified: '1F481-1F3FC-200D-2640-FE0F',
    sheet: [25, 12]
  }, {
    unified: '1F481-1F3FD-200D-2640-FE0F',
    sheet: [25, 13]
  }, {
    unified: '1F481-1F3FE-200D-2640-FE0F',
    sheet: [25, 14]
  }, {
    unified: '1F481-1F3FF-200D-2640-FE0F',
    sheet: [25, 15]
  }],
  shortName: 'woman-tipping-hand'
}, {
  name: 'Happy Person Raising One Hand',
  unified: '1F64B',
  keywords: ['person_raising_hand', 'question'],
  sheet: [34, 39],
  skinVariations: [{
    unified: '1F64B-1F3FB',
    sheet: [34, 40]
  }, {
    unified: '1F64B-1F3FC',
    sheet: [34, 41]
  }, {
    unified: '1F64B-1F3FD',
    sheet: [34, 42]
  }, {
    unified: '1F64B-1F3FE',
    sheet: [34, 43]
  }, {
    unified: '1F64B-1F3FF',
    sheet: [34, 44]
  }],
  shortName: 'raising_hand',
  obsoletedBy: '1F64B-200D-2640-FE0F'
}, {
  name: 'Man Raising Hand',
  unified: '1F64B-200D-2642-FE0F',
  keywords: ['man_raising_hand', 'male', 'boy', 'man'],
  sheet: [34, 33],
  skinVariations: [{
    unified: '1F64B-1F3FB-200D-2642-FE0F',
    sheet: [34, 34]
  }, {
    unified: '1F64B-1F3FC-200D-2642-FE0F',
    sheet: [34, 35]
  }, {
    unified: '1F64B-1F3FD-200D-2642-FE0F',
    sheet: [34, 36]
  }, {
    unified: '1F64B-1F3FE-200D-2642-FE0F',
    sheet: [34, 37]
  }, {
    unified: '1F64B-1F3FF-200D-2642-FE0F',
    sheet: [34, 38]
  }],
  shortName: 'man-raising-hand'
}, {
  name: 'Woman Raising Hand',
  unified: '1F64B-200D-2640-FE0F',
  obsoletes: '1F64B',
  keywords: ['woman_raising_hand', 'female', 'girl', 'woman'],
  sheet: [34, 27],
  skinVariations: [{
    unified: '1F64B-1F3FB-200D-2640-FE0F',
    sheet: [34, 28]
  }, {
    unified: '1F64B-1F3FC-200D-2640-FE0F',
    sheet: [34, 29]
  }, {
    unified: '1F64B-1F3FD-200D-2640-FE0F',
    sheet: [34, 30]
  }, {
    unified: '1F64B-1F3FE-200D-2640-FE0F',
    sheet: [34, 31]
  }, {
    unified: '1F64B-1F3FF-200D-2640-FE0F',
    sheet: [34, 32]
  }],
  shortName: 'woman-raising-hand'
}, {
  name: 'Deaf Person',
  unified: '1F9CF',
  keywords: ['deaf_person', 'accessibility'],
  sheet: [47, 5],
  skinVariations: [{
    unified: '1F9CF-1F3FB',
    sheet: [47, 6]
  }, {
    unified: '1F9CF-1F3FC',
    sheet: [47, 7]
  }, {
    unified: '1F9CF-1F3FD',
    sheet: [47, 8]
  }, {
    unified: '1F9CF-1F3FE',
    sheet: [47, 9]
  }, {
    unified: '1F9CF-1F3FF',
    sheet: [47, 10]
  }],
  shortName: 'deaf_person'
}, {
  name: 'Deaf Man',
  unified: '1F9CF-200D-2642-FE0F',
  keywords: ['deaf_man', 'accessibility'],
  sheet: [46, 60],
  skinVariations: [{
    unified: '1F9CF-1F3FB-200D-2642-FE0F',
    sheet: [47, 0]
  }, {
    unified: '1F9CF-1F3FC-200D-2642-FE0F',
    sheet: [47, 1]
  }, {
    unified: '1F9CF-1F3FD-200D-2642-FE0F',
    sheet: [47, 2]
  }, {
    unified: '1F9CF-1F3FE-200D-2642-FE0F',
    sheet: [47, 3]
  }, {
    unified: '1F9CF-1F3FF-200D-2642-FE0F',
    sheet: [47, 4]
  }],
  shortName: 'deaf_man'
}, {
  name: 'Deaf Woman',
  unified: '1F9CF-200D-2640-FE0F',
  keywords: ['deaf_woman', 'accessibility'],
  sheet: [46, 54],
  skinVariations: [{
    unified: '1F9CF-1F3FB-200D-2640-FE0F',
    sheet: [46, 55]
  }, {
    unified: '1F9CF-1F3FC-200D-2640-FE0F',
    sheet: [46, 56]
  }, {
    unified: '1F9CF-1F3FD-200D-2640-FE0F',
    sheet: [46, 57]
  }, {
    unified: '1F9CF-1F3FE-200D-2640-FE0F',
    sheet: [46, 58]
  }, {
    unified: '1F9CF-1F3FF-200D-2640-FE0F',
    sheet: [46, 59]
  }],
  shortName: 'deaf_woman'
}, {
  name: 'Person Bowing Deeply',
  unified: '1F647',
  keywords: ['person_bowing', 'respectiful'],
  sheet: [34, 18],
  skinVariations: [{
    unified: '1F647-1F3FB',
    sheet: [34, 19]
  }, {
    unified: '1F647-1F3FC',
    sheet: [34, 20]
  }, {
    unified: '1F647-1F3FD',
    sheet: [34, 21]
  }, {
    unified: '1F647-1F3FE',
    sheet: [34, 22]
  }, {
    unified: '1F647-1F3FF',
    sheet: [34, 23]
  }],
  shortName: 'bow',
  obsoletedBy: '1F647-200D-2642-FE0F'
}, {
  name: 'Man Bowing',
  unified: '1F647-200D-2642-FE0F',
  obsoletes: '1F647',
  keywords: ['man_bowing', 'man', 'male', 'boy'],
  sheet: [34, 12],
  skinVariations: [{
    unified: '1F647-1F3FB-200D-2642-FE0F',
    sheet: [34, 13]
  }, {
    unified: '1F647-1F3FC-200D-2642-FE0F',
    sheet: [34, 14]
  }, {
    unified: '1F647-1F3FD-200D-2642-FE0F',
    sheet: [34, 15]
  }, {
    unified: '1F647-1F3FE-200D-2642-FE0F',
    sheet: [34, 16]
  }, {
    unified: '1F647-1F3FF-200D-2642-FE0F',
    sheet: [34, 17]
  }],
  shortName: 'man-bowing'
}, {
  name: 'Woman Bowing',
  unified: '1F647-200D-2640-FE0F',
  keywords: ['woman_bowing', 'woman', 'female', 'girl'],
  sheet: [34, 6],
  skinVariations: [{
    unified: '1F647-1F3FB-200D-2640-FE0F',
    sheet: [34, 7]
  }, {
    unified: '1F647-1F3FC-200D-2640-FE0F',
    sheet: [34, 8]
  }, {
    unified: '1F647-1F3FD-200D-2640-FE0F',
    sheet: [34, 9]
  }, {
    unified: '1F647-1F3FE-200D-2640-FE0F',
    sheet: [34, 10]
  }, {
    unified: '1F647-1F3FF-200D-2640-FE0F',
    sheet: [34, 11]
  }],
  shortName: 'woman-bowing'
}, {
  name: 'Face Palm',
  unified: '1F926',
  keywords: ['person_facepalming', 'disappointed'],
  sheet: [40, 30],
  skinVariations: [{
    unified: '1F926-1F3FB',
    sheet: [40, 31]
  }, {
    unified: '1F926-1F3FC',
    sheet: [40, 32]
  }, {
    unified: '1F926-1F3FD',
    sheet: [40, 33]
  }, {
    unified: '1F926-1F3FE',
    sheet: [40, 34]
  }, {
    unified: '1F926-1F3FF',
    sheet: [40, 35]
  }],
  shortName: 'face_palm'
}, {
  name: 'Man Facepalming',
  unified: '1F926-200D-2642-FE0F',
  keywords: ['man_facepalming', 'man', 'male', 'boy', 'disbelief'],
  sheet: [40, 24],
  skinVariations: [{
    unified: '1F926-1F3FB-200D-2642-FE0F',
    sheet: [40, 25]
  }, {
    unified: '1F926-1F3FC-200D-2642-FE0F',
    sheet: [40, 26]
  }, {
    unified: '1F926-1F3FD-200D-2642-FE0F',
    sheet: [40, 27]
  }, {
    unified: '1F926-1F3FE-200D-2642-FE0F',
    sheet: [40, 28]
  }, {
    unified: '1F926-1F3FF-200D-2642-FE0F',
    sheet: [40, 29]
  }],
  shortName: 'man-facepalming'
}, {
  name: 'Woman Facepalming',
  unified: '1F926-200D-2640-FE0F',
  keywords: ['woman_facepalming', 'woman', 'female', 'girl', 'disbelief'],
  sheet: [40, 18],
  skinVariations: [{
    unified: '1F926-1F3FB-200D-2640-FE0F',
    sheet: [40, 19]
  }, {
    unified: '1F926-1F3FC-200D-2640-FE0F',
    sheet: [40, 20]
  }, {
    unified: '1F926-1F3FD-200D-2640-FE0F',
    sheet: [40, 21]
  }, {
    unified: '1F926-1F3FE-200D-2640-FE0F',
    sheet: [40, 22]
  }, {
    unified: '1F926-1F3FF-200D-2640-FE0F',
    sheet: [40, 23]
  }],
  shortName: 'woman-facepalming'
}, {
  name: 'Shrug',
  unified: '1F937',
  keywords: ['person_shrugging', 'regardless'],
  sheet: [41, 50],
  skinVariations: [{
    unified: '1F937-1F3FB',
    sheet: [41, 51]
  }, {
    unified: '1F937-1F3FC',
    sheet: [41, 52]
  }, {
    unified: '1F937-1F3FD',
    sheet: [41, 53]
  }, {
    unified: '1F937-1F3FE',
    sheet: [41, 54]
  }, {
    unified: '1F937-1F3FF',
    sheet: [41, 55]
  }],
  shortName: 'shrug'
}, {
  name: 'Man Shrugging',
  unified: '1F937-200D-2642-FE0F',
  keywords: ['man_shrugging', 'man', 'male', 'boy', 'confused', 'indifferent', 'doubt'],
  sheet: [41, 44],
  skinVariations: [{
    unified: '1F937-1F3FB-200D-2642-FE0F',
    sheet: [41, 45]
  }, {
    unified: '1F937-1F3FC-200D-2642-FE0F',
    sheet: [41, 46]
  }, {
    unified: '1F937-1F3FD-200D-2642-FE0F',
    sheet: [41, 47]
  }, {
    unified: '1F937-1F3FE-200D-2642-FE0F',
    sheet: [41, 48]
  }, {
    unified: '1F937-1F3FF-200D-2642-FE0F',
    sheet: [41, 49]
  }],
  shortName: 'man-shrugging'
}, {
  name: 'Woman Shrugging',
  unified: '1F937-200D-2640-FE0F',
  keywords: ['woman_shrugging', 'woman', 'female', 'girl', 'confused', 'indifferent', 'doubt'],
  sheet: [41, 38],
  skinVariations: [{
    unified: '1F937-1F3FB-200D-2640-FE0F',
    sheet: [41, 39]
  }, {
    unified: '1F937-1F3FC-200D-2640-FE0F',
    sheet: [41, 40]
  }, {
    unified: '1F937-1F3FD-200D-2640-FE0F',
    sheet: [41, 41]
  }, {
    unified: '1F937-1F3FE-200D-2640-FE0F',
    sheet: [41, 42]
  }, {
    unified: '1F937-1F3FF-200D-2640-FE0F',
    sheet: [41, 43]
  }],
  shortName: 'woman-shrugging'
}, {
  name: 'Health Worker',
  unified: '1F9D1-200D-2695-FE0F',
  keywords: ['health_worker', 'hospital'],
  sheet: [49, 48],
  skinVariations: [{
    unified: '1F9D1-1F3FB-200D-2695-FE0F',
    sheet: [49, 49]
  }, {
    unified: '1F9D1-1F3FC-200D-2695-FE0F',
    sheet: [49, 50]
  }, {
    unified: '1F9D1-1F3FD-200D-2695-FE0F',
    sheet: [49, 51]
  }, {
    unified: '1F9D1-1F3FE-200D-2695-FE0F',
    sheet: [49, 52]
  }, {
    unified: '1F9D1-1F3FF-200D-2695-FE0F',
    sheet: [49, 53]
  }],
  shortName: 'health_worker'
}, {
  name: 'Man Health Worker',
  unified: '1F468-200D-2695-FE0F',
  keywords: ['man_health_worker', 'doctor', 'nurse', 'therapist', 'healthcare', 'man', 'human'],
  sheet: [16, 4],
  skinVariations: [{
    unified: '1F468-1F3FB-200D-2695-FE0F',
    sheet: [16, 5]
  }, {
    unified: '1F468-1F3FC-200D-2695-FE0F',
    sheet: [16, 6]
  }, {
    unified: '1F468-1F3FD-200D-2695-FE0F',
    sheet: [16, 7]
  }, {
    unified: '1F468-1F3FE-200D-2695-FE0F',
    sheet: [16, 8]
  }, {
    unified: '1F468-1F3FF-200D-2695-FE0F',
    sheet: [16, 9]
  }],
  shortName: 'male-doctor'
}, {
  name: 'Woman Health Worker',
  unified: '1F469-200D-2695-FE0F',
  keywords: ['woman_health_worker', 'doctor', 'nurse', 'therapist', 'healthcare', 'woman', 'human'],
  sheet: [19, 33],
  skinVariations: [{
    unified: '1F469-1F3FB-200D-2695-FE0F',
    sheet: [19, 34]
  }, {
    unified: '1F469-1F3FC-200D-2695-FE0F',
    sheet: [19, 35]
  }, {
    unified: '1F469-1F3FD-200D-2695-FE0F',
    sheet: [19, 36]
  }, {
    unified: '1F469-1F3FE-200D-2695-FE0F',
    sheet: [19, 37]
  }, {
    unified: '1F469-1F3FF-200D-2695-FE0F',
    sheet: [19, 38]
  }],
  shortName: 'female-doctor'
}, {
  name: 'Student',
  unified: '1F9D1-200D-1F393',
  keywords: ['student', 'learn'],
  sheet: [47, 36],
  skinVariations: [{
    unified: '1F9D1-1F3FB-200D-1F393',
    sheet: [47, 37]
  }, {
    unified: '1F9D1-1F3FC-200D-1F393',
    sheet: [47, 38]
  }, {
    unified: '1F9D1-1F3FD-200D-1F393',
    sheet: [47, 39]
  }, {
    unified: '1F9D1-1F3FE-200D-1F393',
    sheet: [47, 40]
  }, {
    unified: '1F9D1-1F3FF-200D-1F393',
    sheet: [47, 41]
  }],
  shortName: 'student'
}, {
  name: 'Man Student',
  unified: '1F468-200D-1F393',
  keywords: ['man_student', 'graduate', 'man', 'human'],
  sheet: [14, 3],
  skinVariations: [{
    unified: '1F468-1F3FB-200D-1F393',
    sheet: [14, 4]
  }, {
    unified: '1F468-1F3FC-200D-1F393',
    sheet: [14, 5]
  }, {
    unified: '1F468-1F3FD-200D-1F393',
    sheet: [14, 6]
  }, {
    unified: '1F468-1F3FE-200D-1F393',
    sheet: [14, 7]
  }, {
    unified: '1F468-1F3FF-200D-1F393',
    sheet: [14, 8]
  }],
  shortName: 'male-student'
}, {
  name: 'Woman Student',
  unified: '1F469-200D-1F393',
  keywords: ['woman_student', 'graduate', 'woman', 'human'],
  sheet: [17, 37],
  skinVariations: [{
    unified: '1F469-1F3FB-200D-1F393',
    sheet: [17, 38]
  }, {
    unified: '1F469-1F3FC-200D-1F393',
    sheet: [17, 39]
  }, {
    unified: '1F469-1F3FD-200D-1F393',
    sheet: [17, 40]
  }, {
    unified: '1F469-1F3FE-200D-1F393',
    sheet: [17, 41]
  }, {
    unified: '1F469-1F3FF-200D-1F393',
    sheet: [17, 42]
  }],
  shortName: 'female-student'
}, {
  name: 'Teacher',
  unified: '1F9D1-200D-1F3EB',
  keywords: ['teacher', 'professor'],
  sheet: [47, 54],
  skinVariations: [{
    unified: '1F9D1-1F3FB-200D-1F3EB',
    sheet: [47, 55]
  }, {
    unified: '1F9D1-1F3FC-200D-1F3EB',
    sheet: [47, 56]
  }, {
    unified: '1F9D1-1F3FD-200D-1F3EB',
    sheet: [47, 57]
  }, {
    unified: '1F9D1-1F3FE-200D-1F3EB',
    sheet: [47, 58]
  }, {
    unified: '1F9D1-1F3FF-200D-1F3EB',
    sheet: [47, 59]
  }],
  shortName: 'teacher'
}, {
  name: 'Man Teacher',
  unified: '1F468-200D-1F3EB',
  keywords: ['man_teacher', 'instructor', 'professor', 'man', 'human'],
  sheet: [14, 21],
  skinVariations: [{
    unified: '1F468-1F3FB-200D-1F3EB',
    sheet: [14, 22]
  }, {
    unified: '1F468-1F3FC-200D-1F3EB',
    sheet: [14, 23]
  }, {
    unified: '1F468-1F3FD-200D-1F3EB',
    sheet: [14, 24]
  }, {
    unified: '1F468-1F3FE-200D-1F3EB',
    sheet: [14, 25]
  }, {
    unified: '1F468-1F3FF-200D-1F3EB',
    sheet: [14, 26]
  }],
  shortName: 'male-teacher'
}, {
  name: 'Woman Teacher',
  unified: '1F469-200D-1F3EB',
  keywords: ['woman_teacher', 'instructor', 'professor', 'woman', 'human'],
  sheet: [17, 55],
  skinVariations: [{
    unified: '1F469-1F3FB-200D-1F3EB',
    sheet: [17, 56]
  }, {
    unified: '1F469-1F3FC-200D-1F3EB',
    sheet: [17, 57]
  }, {
    unified: '1F469-1F3FD-200D-1F3EB',
    sheet: [17, 58]
  }, {
    unified: '1F469-1F3FE-200D-1F3EB',
    sheet: [17, 59]
  }, {
    unified: '1F469-1F3FF-200D-1F3EB',
    sheet: [17, 60]
  }],
  shortName: 'female-teacher'
}, {
  name: 'Judge',
  unified: '1F9D1-200D-2696-FE0F',
  keywords: ['judge', 'law'],
  sheet: [49, 54],
  skinVariations: [{
    unified: '1F9D1-1F3FB-200D-2696-FE0F',
    sheet: [49, 55]
  }, {
    unified: '1F9D1-1F3FC-200D-2696-FE0F',
    sheet: [49, 56]
  }, {
    unified: '1F9D1-1F3FD-200D-2696-FE0F',
    sheet: [49, 57]
  }, {
    unified: '1F9D1-1F3FE-200D-2696-FE0F',
    sheet: [49, 58]
  }, {
    unified: '1F9D1-1F3FF-200D-2696-FE0F',
    sheet: [49, 59]
  }],
  shortName: 'judge'
}, {
  name: 'Man Judge',
  unified: '1F468-200D-2696-FE0F',
  keywords: ['man_judge', 'justice', 'court', 'man', 'human'],
  sheet: [16, 10],
  skinVariations: [{
    unified: '1F468-1F3FB-200D-2696-FE0F',
    sheet: [16, 11]
  }, {
    unified: '1F468-1F3FC-200D-2696-FE0F',
    sheet: [16, 12]
  }, {
    unified: '1F468-1F3FD-200D-2696-FE0F',
    sheet: [16, 13]
  }, {
    unified: '1F468-1F3FE-200D-2696-FE0F',
    sheet: [16, 14]
  }, {
    unified: '1F468-1F3FF-200D-2696-FE0F',
    sheet: [16, 15]
  }],
  shortName: 'male-judge'
}, {
  name: 'Woman Judge',
  unified: '1F469-200D-2696-FE0F',
  keywords: ['woman_judge', 'justice', 'court', 'woman', 'human'],
  sheet: [19, 39],
  skinVariations: [{
    unified: '1F469-1F3FB-200D-2696-FE0F',
    sheet: [19, 40]
  }, {
    unified: '1F469-1F3FC-200D-2696-FE0F',
    sheet: [19, 41]
  }, {
    unified: '1F469-1F3FD-200D-2696-FE0F',
    sheet: [19, 42]
  }, {
    unified: '1F469-1F3FE-200D-2696-FE0F',
    sheet: [19, 43]
  }, {
    unified: '1F469-1F3FF-200D-2696-FE0F',
    sheet: [19, 44]
  }],
  shortName: 'female-judge'
}, {
  name: 'Farmer',
  unified: '1F9D1-200D-1F33E',
  keywords: ['farmer', 'crops'],
  sheet: [47, 12],
  skinVariations: [{
    unified: '1F9D1-1F3FB-200D-1F33E',
    sheet: [47, 13]
  }, {
    unified: '1F9D1-1F3FC-200D-1F33E',
    sheet: [47, 14]
  }, {
    unified: '1F9D1-1F3FD-200D-1F33E',
    sheet: [47, 15]
  }, {
    unified: '1F9D1-1F3FE-200D-1F33E',
    sheet: [47, 16]
  }, {
    unified: '1F9D1-1F3FF-200D-1F33E',
    sheet: [47, 17]
  }],
  shortName: 'farmer'
}, {
  name: 'Man Farmer',
  unified: '1F468-200D-1F33E',
  keywords: ['man_farmer', 'rancher', 'gardener', 'man', 'human'],
  sheet: [13, 46],
  skinVariations: [{
    unified: '1F468-1F3FB-200D-1F33E',
    sheet: [13, 47]
  }, {
    unified: '1F468-1F3FC-200D-1F33E',
    sheet: [13, 48]
  }, {
    unified: '1F468-1F3FD-200D-1F33E',
    sheet: [13, 49]
  }, {
    unified: '1F468-1F3FE-200D-1F33E',
    sheet: [13, 50]
  }, {
    unified: '1F468-1F3FF-200D-1F33E',
    sheet: [13, 51]
  }],
  shortName: 'male-farmer'
}, {
  name: 'Woman Farmer',
  unified: '1F469-200D-1F33E',
  keywords: ['woman_farmer', 'rancher', 'gardener', 'woman', 'human'],
  sheet: [17, 19],
  skinVariations: [{
    unified: '1F469-1F3FB-200D-1F33E',
    sheet: [17, 20]
  }, {
    unified: '1F469-1F3FC-200D-1F33E',
    sheet: [17, 21]
  }, {
    unified: '1F469-1F3FD-200D-1F33E',
    sheet: [17, 22]
  }, {
    unified: '1F469-1F3FE-200D-1F33E',
    sheet: [17, 23]
  }, {
    unified: '1F469-1F3FF-200D-1F33E',
    sheet: [17, 24]
  }],
  shortName: 'female-farmer'
}, {
  name: 'Cook',
  unified: '1F9D1-200D-1F373',
  keywords: ['cook', 'food', 'kitchen', 'culinary'],
  sheet: [47, 18],
  skinVariations: [{
    unified: '1F9D1-1F3FB-200D-1F373',
    sheet: [47, 19]
  }, {
    unified: '1F9D1-1F3FC-200D-1F373',
    sheet: [47, 20]
  }, {
    unified: '1F9D1-1F3FD-200D-1F373',
    sheet: [47, 21]
  }, {
    unified: '1F9D1-1F3FE-200D-1F373',
    sheet: [47, 22]
  }, {
    unified: '1F9D1-1F3FF-200D-1F373',
    sheet: [47, 23]
  }],
  shortName: 'cook'
}, {
  name: 'Man Cook',
  unified: '1F468-200D-1F373',
  keywords: ['man_cook', 'chef', 'man', 'human'],
  sheet: [13, 52],
  skinVariations: [{
    unified: '1F468-1F3FB-200D-1F373',
    sheet: [13, 53]
  }, {
    unified: '1F468-1F3FC-200D-1F373',
    sheet: [13, 54]
  }, {
    unified: '1F468-1F3FD-200D-1F373',
    sheet: [13, 55]
  }, {
    unified: '1F468-1F3FE-200D-1F373',
    sheet: [13, 56]
  }, {
    unified: '1F468-1F3FF-200D-1F373',
    sheet: [13, 57]
  }],
  shortName: 'male-cook'
}, {
  name: 'Woman Cook',
  unified: '1F469-200D-1F373',
  keywords: ['woman_cook', 'chef', 'woman', 'human'],
  sheet: [17, 25],
  skinVariations: [{
    unified: '1F469-1F3FB-200D-1F373',
    sheet: [17, 26]
  }, {
    unified: '1F469-1F3FC-200D-1F373',
    sheet: [17, 27]
  }, {
    unified: '1F469-1F3FD-200D-1F373',
    sheet: [17, 28]
  }, {
    unified: '1F469-1F3FE-200D-1F373',
    sheet: [17, 29]
  }, {
    unified: '1F469-1F3FF-200D-1F373',
    sheet: [17, 30]
  }],
  shortName: 'female-cook'
}, {
  name: 'Mechanic',
  unified: '1F9D1-200D-1F527',
  keywords: ['mechanic', 'worker', 'technician'],
  sheet: [48, 17],
  skinVariations: [{
    unified: '1F9D1-1F3FB-200D-1F527',
    sheet: [48, 18]
  }, {
    unified: '1F9D1-1F3FC-200D-1F527',
    sheet: [48, 19]
  }, {
    unified: '1F9D1-1F3FD-200D-1F527',
    sheet: [48, 20]
  }, {
    unified: '1F9D1-1F3FE-200D-1F527',
    sheet: [48, 21]
  }, {
    unified: '1F9D1-1F3FF-200D-1F527',
    sheet: [48, 22]
  }],
  shortName: 'mechanic'
}, {
  name: 'Man Mechanic',
  unified: '1F468-200D-1F527',
  keywords: ['man_mechanic', 'plumber', 'man', 'human', 'wrench'],
  sheet: [14, 60],
  skinVariations: [{
    unified: '1F468-1F3FB-200D-1F527',
    sheet: [15, 0]
  }, {
    unified: '1F468-1F3FC-200D-1F527',
    sheet: [15, 1]
  }, {
    unified: '1F468-1F3FD-200D-1F527',
    sheet: [15, 2]
  }, {
    unified: '1F468-1F3FE-200D-1F527',
    sheet: [15, 3]
  }, {
    unified: '1F468-1F3FF-200D-1F527',
    sheet: [15, 4]
  }],
  shortName: 'male-mechanic'
}, {
  name: 'Woman Mechanic',
  unified: '1F469-200D-1F527',
  keywords: ['woman_mechanic', 'plumber', 'woman', 'human', 'wrench'],
  sheet: [18, 28],
  skinVariations: [{
    unified: '1F469-1F3FB-200D-1F527',
    sheet: [18, 29]
  }, {
    unified: '1F469-1F3FC-200D-1F527',
    sheet: [18, 30]
  }, {
    unified: '1F469-1F3FD-200D-1F527',
    sheet: [18, 31]
  }, {
    unified: '1F469-1F3FE-200D-1F527',
    sheet: [18, 32]
  }, {
    unified: '1F469-1F3FF-200D-1F527',
    sheet: [18, 33]
  }],
  shortName: 'female-mechanic'
}, {
  name: 'Factory Worker',
  unified: '1F9D1-200D-1F3ED',
  keywords: ['factory_worker', 'labor'],
  sheet: [47, 60],
  skinVariations: [{
    unified: '1F9D1-1F3FB-200D-1F3ED',
    sheet: [48, 0]
  }, {
    unified: '1F9D1-1F3FC-200D-1F3ED',
    sheet: [48, 1]
  }, {
    unified: '1F9D1-1F3FD-200D-1F3ED',
    sheet: [48, 2]
  }, {
    unified: '1F9D1-1F3FE-200D-1F3ED',
    sheet: [48, 3]
  }, {
    unified: '1F9D1-1F3FF-200D-1F3ED',
    sheet: [48, 4]
  }],
  shortName: 'factory_worker'
}, {
  name: 'Man Factory Worker',
  unified: '1F468-200D-1F3ED',
  keywords: ['man_factory_worker', 'assembly', 'industrial', 'man', 'human'],
  sheet: [14, 27],
  skinVariations: [{
    unified: '1F468-1F3FB-200D-1F3ED',
    sheet: [14, 28]
  }, {
    unified: '1F468-1F3FC-200D-1F3ED',
    sheet: [14, 29]
  }, {
    unified: '1F468-1F3FD-200D-1F3ED',
    sheet: [14, 30]
  }, {
    unified: '1F468-1F3FE-200D-1F3ED',
    sheet: [14, 31]
  }, {
    unified: '1F468-1F3FF-200D-1F3ED',
    sheet: [14, 32]
  }],
  shortName: 'male-factory-worker'
}, {
  name: 'Woman Factory Worker',
  unified: '1F469-200D-1F3ED',
  keywords: ['woman_factory_worker', 'assembly', 'industrial', 'woman', 'human'],
  sheet: [18, 0],
  skinVariations: [{
    unified: '1F469-1F3FB-200D-1F3ED',
    sheet: [18, 1]
  }, {
    unified: '1F469-1F3FC-200D-1F3ED',
    sheet: [18, 2]
  }, {
    unified: '1F469-1F3FD-200D-1F3ED',
    sheet: [18, 3]
  }, {
    unified: '1F469-1F3FE-200D-1F3ED',
    sheet: [18, 4]
  }, {
    unified: '1F469-1F3FF-200D-1F3ED',
    sheet: [18, 5]
  }],
  shortName: 'female-factory-worker'
}, {
  name: 'Office Worker',
  unified: '1F9D1-200D-1F4BC',
  keywords: ['office_worker', 'business'],
  sheet: [48, 11],
  skinVariations: [{
    unified: '1F9D1-1F3FB-200D-1F4BC',
    sheet: [48, 12]
  }, {
    unified: '1F9D1-1F3FC-200D-1F4BC',
    sheet: [48, 13]
  }, {
    unified: '1F9D1-1F3FD-200D-1F4BC',
    sheet: [48, 14]
  }, {
    unified: '1F9D1-1F3FE-200D-1F4BC',
    sheet: [48, 15]
  }, {
    unified: '1F9D1-1F3FF-200D-1F4BC',
    sheet: [48, 16]
  }],
  shortName: 'office_worker'
}, {
  name: 'Man Office Worker',
  unified: '1F468-200D-1F4BC',
  keywords: ['man_office_worker', 'business', 'manager', 'man', 'human'],
  sheet: [14, 54],
  skinVariations: [{
    unified: '1F468-1F3FB-200D-1F4BC',
    sheet: [14, 55]
  }, {
    unified: '1F468-1F3FC-200D-1F4BC',
    sheet: [14, 56]
  }, {
    unified: '1F468-1F3FD-200D-1F4BC',
    sheet: [14, 57]
  }, {
    unified: '1F468-1F3FE-200D-1F4BC',
    sheet: [14, 58]
  }, {
    unified: '1F468-1F3FF-200D-1F4BC',
    sheet: [14, 59]
  }],
  shortName: 'male-office-worker'
}, {
  name: 'Woman Office Worker',
  unified: '1F469-200D-1F4BC',
  keywords: ['woman_office_worker', 'business', 'manager', 'woman', 'human'],
  sheet: [18, 22],
  skinVariations: [{
    unified: '1F469-1F3FB-200D-1F4BC',
    sheet: [18, 23]
  }, {
    unified: '1F469-1F3FC-200D-1F4BC',
    sheet: [18, 24]
  }, {
    unified: '1F469-1F3FD-200D-1F4BC',
    sheet: [18, 25]
  }, {
    unified: '1F469-1F3FE-200D-1F4BC',
    sheet: [18, 26]
  }, {
    unified: '1F469-1F3FF-200D-1F4BC',
    sheet: [18, 27]
  }],
  shortName: 'female-office-worker'
}, {
  name: 'Scientist',
  unified: '1F9D1-200D-1F52C',
  keywords: ['scientist', 'chemistry'],
  sheet: [48, 23],
  skinVariations: [{
    unified: '1F9D1-1F3FB-200D-1F52C',
    sheet: [48, 24]
  }, {
    unified: '1F9D1-1F3FC-200D-1F52C',
    sheet: [48, 25]
  }, {
    unified: '1F9D1-1F3FD-200D-1F52C',
    sheet: [48, 26]
  }, {
    unified: '1F9D1-1F3FE-200D-1F52C',
    sheet: [48, 27]
  }, {
    unified: '1F9D1-1F3FF-200D-1F52C',
    sheet: [48, 28]
  }],
  shortName: 'scientist'
}, {
  name: 'Man Scientist',
  unified: '1F468-200D-1F52C',
  keywords: ['man_scientist', 'biologist', 'chemist', 'engineer', 'physicist', 'man', 'human'],
  sheet: [15, 5],
  skinVariations: [{
    unified: '1F468-1F3FB-200D-1F52C',
    sheet: [15, 6]
  }, {
    unified: '1F468-1F3FC-200D-1F52C',
    sheet: [15, 7]
  }, {
    unified: '1F468-1F3FD-200D-1F52C',
    sheet: [15, 8]
  }, {
    unified: '1F468-1F3FE-200D-1F52C',
    sheet: [15, 9]
  }, {
    unified: '1F468-1F3FF-200D-1F52C',
    sheet: [15, 10]
  }],
  shortName: 'male-scientist'
}, {
  name: 'Woman Scientist',
  unified: '1F469-200D-1F52C',
  keywords: ['woman_scientist', 'biologist', 'chemist', 'engineer', 'physicist', 'woman', 'human'],
  sheet: [18, 34],
  skinVariations: [{
    unified: '1F469-1F3FB-200D-1F52C',
    sheet: [18, 35]
  }, {
    unified: '1F469-1F3FC-200D-1F52C',
    sheet: [18, 36]
  }, {
    unified: '1F469-1F3FD-200D-1F52C',
    sheet: [18, 37]
  }, {
    unified: '1F469-1F3FE-200D-1F52C',
    sheet: [18, 38]
  }, {
    unified: '1F469-1F3FF-200D-1F52C',
    sheet: [18, 39]
  }],
  shortName: 'female-scientist'
}, {
  name: 'Technologist',
  unified: '1F9D1-200D-1F4BB',
  keywords: ['technologist', 'computer'],
  sheet: [48, 5],
  skinVariations: [{
    unified: '1F9D1-1F3FB-200D-1F4BB',
    sheet: [48, 6]
  }, {
    unified: '1F9D1-1F3FC-200D-1F4BB',
    sheet: [48, 7]
  }, {
    unified: '1F9D1-1F3FD-200D-1F4BB',
    sheet: [48, 8]
  }, {
    unified: '1F9D1-1F3FE-200D-1F4BB',
    sheet: [48, 9]
  }, {
    unified: '1F9D1-1F3FF-200D-1F4BB',
    sheet: [48, 10]
  }],
  shortName: 'technologist'
}, {
  name: 'Man Technologist',
  unified: '1F468-200D-1F4BB',
  keywords: ['man_technologist', 'coder', 'developer', 'engineer', 'programmer', 'software', 'man', 'human', 'laptop', 'computer'],
  sheet: [14, 48],
  skinVariations: [{
    unified: '1F468-1F3FB-200D-1F4BB',
    sheet: [14, 49]
  }, {
    unified: '1F468-1F3FC-200D-1F4BB',
    sheet: [14, 50]
  }, {
    unified: '1F468-1F3FD-200D-1F4BB',
    sheet: [14, 51]
  }, {
    unified: '1F468-1F3FE-200D-1F4BB',
    sheet: [14, 52]
  }, {
    unified: '1F468-1F3FF-200D-1F4BB',
    sheet: [14, 53]
  }],
  shortName: 'male-technologist'
}, {
  name: 'Woman Technologist',
  unified: '1F469-200D-1F4BB',
  keywords: ['woman_technologist', 'coder', 'developer', 'engineer', 'programmer', 'software', 'woman', 'human', 'laptop', 'computer'],
  sheet: [18, 16],
  skinVariations: [{
    unified: '1F469-1F3FB-200D-1F4BB',
    sheet: [18, 17]
  }, {
    unified: '1F469-1F3FC-200D-1F4BB',
    sheet: [18, 18]
  }, {
    unified: '1F469-1F3FD-200D-1F4BB',
    sheet: [18, 19]
  }, {
    unified: '1F469-1F3FE-200D-1F4BB',
    sheet: [18, 20]
  }, {
    unified: '1F469-1F3FF-200D-1F4BB',
    sheet: [18, 21]
  }],
  shortName: 'female-technologist'
}, {
  name: 'Singer',
  unified: '1F9D1-200D-1F3A4',
  keywords: ['singer', 'song', 'artist', 'performer'],
  sheet: [47, 42],
  skinVariations: [{
    unified: '1F9D1-1F3FB-200D-1F3A4',
    sheet: [47, 43]
  }, {
    unified: '1F9D1-1F3FC-200D-1F3A4',
    sheet: [47, 44]
  }, {
    unified: '1F9D1-1F3FD-200D-1F3A4',
    sheet: [47, 45]
  }, {
    unified: '1F9D1-1F3FE-200D-1F3A4',
    sheet: [47, 46]
  }, {
    unified: '1F9D1-1F3FF-200D-1F3A4',
    sheet: [47, 47]
  }],
  shortName: 'singer'
}, {
  name: 'Man Singer',
  unified: '1F468-200D-1F3A4',
  keywords: ['man_singer', 'rockstar', 'entertainer', 'man', 'human'],
  sheet: [14, 9],
  skinVariations: [{
    unified: '1F468-1F3FB-200D-1F3A4',
    sheet: [14, 10]
  }, {
    unified: '1F468-1F3FC-200D-1F3A4',
    sheet: [14, 11]
  }, {
    unified: '1F468-1F3FD-200D-1F3A4',
    sheet: [14, 12]
  }, {
    unified: '1F468-1F3FE-200D-1F3A4',
    sheet: [14, 13]
  }, {
    unified: '1F468-1F3FF-200D-1F3A4',
    sheet: [14, 14]
  }],
  shortName: 'male-singer'
}, {
  name: 'Woman Singer',
  unified: '1F469-200D-1F3A4',
  keywords: ['woman_singer', 'rockstar', 'entertainer', 'woman', 'human'],
  sheet: [17, 43],
  skinVariations: [{
    unified: '1F469-1F3FB-200D-1F3A4',
    sheet: [17, 44]
  }, {
    unified: '1F469-1F3FC-200D-1F3A4',
    sheet: [17, 45]
  }, {
    unified: '1F469-1F3FD-200D-1F3A4',
    sheet: [17, 46]
  }, {
    unified: '1F469-1F3FE-200D-1F3A4',
    sheet: [17, 47]
  }, {
    unified: '1F469-1F3FF-200D-1F3A4',
    sheet: [17, 48]
  }],
  shortName: 'female-singer'
}, {
  name: 'Artist',
  unified: '1F9D1-200D-1F3A8',
  keywords: ['artist', 'painting', 'draw', 'creativity'],
  sheet: [47, 48],
  skinVariations: [{
    unified: '1F9D1-1F3FB-200D-1F3A8',
    sheet: [47, 49]
  }, {
    unified: '1F9D1-1F3FC-200D-1F3A8',
    sheet: [47, 50]
  }, {
    unified: '1F9D1-1F3FD-200D-1F3A8',
    sheet: [47, 51]
  }, {
    unified: '1F9D1-1F3FE-200D-1F3A8',
    sheet: [47, 52]
  }, {
    unified: '1F9D1-1F3FF-200D-1F3A8',
    sheet: [47, 53]
  }],
  shortName: 'artist'
}, {
  name: 'Man Artist',
  unified: '1F468-200D-1F3A8',
  keywords: ['man_artist', 'painter', 'man', 'human'],
  sheet: [14, 15],
  skinVariations: [{
    unified: '1F468-1F3FB-200D-1F3A8',
    sheet: [14, 16]
  }, {
    unified: '1F468-1F3FC-200D-1F3A8',
    sheet: [14, 17]
  }, {
    unified: '1F468-1F3FD-200D-1F3A8',
    sheet: [14, 18]
  }, {
    unified: '1F468-1F3FE-200D-1F3A8',
    sheet: [14, 19]
  }, {
    unified: '1F468-1F3FF-200D-1F3A8',
    sheet: [14, 20]
  }],
  shortName: 'male-artist'
}, {
  name: 'Woman Artist',
  unified: '1F469-200D-1F3A8',
  keywords: ['woman_artist', 'painter', 'woman', 'human'],
  sheet: [17, 49],
  skinVariations: [{
    unified: '1F469-1F3FB-200D-1F3A8',
    sheet: [17, 50]
  }, {
    unified: '1F469-1F3FC-200D-1F3A8',
    sheet: [17, 51]
  }, {
    unified: '1F469-1F3FD-200D-1F3A8',
    sheet: [17, 52]
  }, {
    unified: '1F469-1F3FE-200D-1F3A8',
    sheet: [17, 53]
  }, {
    unified: '1F469-1F3FF-200D-1F3A8',
    sheet: [17, 54]
  }],
  shortName: 'female-artist'
}, {
  name: 'Pilot',
  unified: '1F9D1-200D-2708-FE0F',
  keywords: ['pilot', 'fly', 'plane', 'airplane'],
  sheet: [49, 60],
  skinVariations: [{
    unified: '1F9D1-1F3FB-200D-2708-FE0F',
    sheet: [50, 0]
  }, {
    unified: '1F9D1-1F3FC-200D-2708-FE0F',
    sheet: [50, 1]
  }, {
    unified: '1F9D1-1F3FD-200D-2708-FE0F',
    sheet: [50, 2]
  }, {
    unified: '1F9D1-1F3FE-200D-2708-FE0F',
    sheet: [50, 3]
  }, {
    unified: '1F9D1-1F3FF-200D-2708-FE0F',
    sheet: [50, 4]
  }],
  shortName: 'pilot'
}, {
  name: 'Man Pilot',
  unified: '1F468-200D-2708-FE0F',
  keywords: ['man_pilot', 'aviator', 'plane', 'man', 'human'],
  sheet: [16, 16],
  skinVariations: [{
    unified: '1F468-1F3FB-200D-2708-FE0F',
    sheet: [16, 17]
  }, {
    unified: '1F468-1F3FC-200D-2708-FE0F',
    sheet: [16, 18]
  }, {
    unified: '1F468-1F3FD-200D-2708-FE0F',
    sheet: [16, 19]
  }, {
    unified: '1F468-1F3FE-200D-2708-FE0F',
    sheet: [16, 20]
  }, {
    unified: '1F468-1F3FF-200D-2708-FE0F',
    sheet: [16, 21]
  }],
  shortName: 'male-pilot'
}, {
  name: 'Woman Pilot',
  unified: '1F469-200D-2708-FE0F',
  keywords: ['woman_pilot', 'aviator', 'plane', 'woman', 'human'],
  sheet: [19, 45],
  skinVariations: [{
    unified: '1F469-1F3FB-200D-2708-FE0F',
    sheet: [19, 46]
  }, {
    unified: '1F469-1F3FC-200D-2708-FE0F',
    sheet: [19, 47]
  }, {
    unified: '1F469-1F3FD-200D-2708-FE0F',
    sheet: [19, 48]
  }, {
    unified: '1F469-1F3FE-200D-2708-FE0F',
    sheet: [19, 49]
  }, {
    unified: '1F469-1F3FF-200D-2708-FE0F',
    sheet: [19, 50]
  }],
  shortName: 'female-pilot'
}, {
  name: 'Astronaut',
  unified: '1F9D1-200D-1F680',
  keywords: ['astronaut', 'outerspace'],
  sheet: [48, 29],
  skinVariations: [{
    unified: '1F9D1-1F3FB-200D-1F680',
    sheet: [48, 30]
  }, {
    unified: '1F9D1-1F3FC-200D-1F680',
    sheet: [48, 31]
  }, {
    unified: '1F9D1-1F3FD-200D-1F680',
    sheet: [48, 32]
  }, {
    unified: '1F9D1-1F3FE-200D-1F680',
    sheet: [48, 33]
  }, {
    unified: '1F9D1-1F3FF-200D-1F680',
    sheet: [48, 34]
  }],
  shortName: 'astronaut'
}, {
  name: 'Man Astronaut',
  unified: '1F468-200D-1F680',
  keywords: ['man_astronaut', 'space', 'rocket', 'man', 'human'],
  sheet: [15, 11],
  skinVariations: [{
    unified: '1F468-1F3FB-200D-1F680',
    sheet: [15, 12]
  }, {
    unified: '1F468-1F3FC-200D-1F680',
    sheet: [15, 13]
  }, {
    unified: '1F468-1F3FD-200D-1F680',
    sheet: [15, 14]
  }, {
    unified: '1F468-1F3FE-200D-1F680',
    sheet: [15, 15]
  }, {
    unified: '1F468-1F3FF-200D-1F680',
    sheet: [15, 16]
  }],
  shortName: 'male-astronaut'
}, {
  name: 'Woman Astronaut',
  unified: '1F469-200D-1F680',
  keywords: ['woman_astronaut', 'space', 'rocket', 'woman', 'human'],
  sheet: [18, 40],
  skinVariations: [{
    unified: '1F469-1F3FB-200D-1F680',
    sheet: [18, 41]
  }, {
    unified: '1F469-1F3FC-200D-1F680',
    sheet: [18, 42]
  }, {
    unified: '1F469-1F3FD-200D-1F680',
    sheet: [18, 43]
  }, {
    unified: '1F469-1F3FE-200D-1F680',
    sheet: [18, 44]
  }, {
    unified: '1F469-1F3FF-200D-1F680',
    sheet: [18, 45]
  }],
  shortName: 'female-astronaut'
}, {
  name: 'Firefighter',
  unified: '1F9D1-200D-1F692',
  keywords: ['firefighter', 'fire'],
  sheet: [48, 35],
  skinVariations: [{
    unified: '1F9D1-1F3FB-200D-1F692',
    sheet: [48, 36]
  }, {
    unified: '1F9D1-1F3FC-200D-1F692',
    sheet: [48, 37]
  }, {
    unified: '1F9D1-1F3FD-200D-1F692',
    sheet: [48, 38]
  }, {
    unified: '1F9D1-1F3FE-200D-1F692',
    sheet: [48, 39]
  }, {
    unified: '1F9D1-1F3FF-200D-1F692',
    sheet: [48, 40]
  }],
  shortName: 'firefighter'
}, {
  name: 'Man Firefighter',
  unified: '1F468-200D-1F692',
  keywords: ['man_firefighter', 'fireman', 'man', 'human'],
  sheet: [15, 17],
  skinVariations: [{
    unified: '1F468-1F3FB-200D-1F692',
    sheet: [15, 18]
  }, {
    unified: '1F468-1F3FC-200D-1F692',
    sheet: [15, 19]
  }, {
    unified: '1F468-1F3FD-200D-1F692',
    sheet: [15, 20]
  }, {
    unified: '1F468-1F3FE-200D-1F692',
    sheet: [15, 21]
  }, {
    unified: '1F468-1F3FF-200D-1F692',
    sheet: [15, 22]
  }],
  shortName: 'male-firefighter'
}, {
  name: 'Woman Firefighter',
  unified: '1F469-200D-1F692',
  keywords: ['woman_firefighter', 'fireman', 'woman', 'human'],
  sheet: [18, 46],
  skinVariations: [{
    unified: '1F469-1F3FB-200D-1F692',
    sheet: [18, 47]
  }, {
    unified: '1F469-1F3FC-200D-1F692',
    sheet: [18, 48]
  }, {
    unified: '1F469-1F3FD-200D-1F692',
    sheet: [18, 49]
  }, {
    unified: '1F469-1F3FE-200D-1F692',
    sheet: [18, 50]
  }, {
    unified: '1F469-1F3FF-200D-1F692',
    sheet: [18, 51]
  }],
  shortName: 'female-firefighter'
}, {
  name: 'Police Officer',
  unified: '1F46E',
  keywords: ['police_officer', 'cop'],
  sheet: [23, 8],
  skinVariations: [{
    unified: '1F46E-1F3FB',
    sheet: [23, 9]
  }, {
    unified: '1F46E-1F3FC',
    sheet: [23, 10]
  }, {
    unified: '1F46E-1F3FD',
    sheet: [23, 11]
  }, {
    unified: '1F46E-1F3FE',
    sheet: [23, 12]
  }, {
    unified: '1F46E-1F3FF',
    sheet: [23, 13]
  }],
  shortName: 'cop',
  obsoletedBy: '1F46E-200D-2642-FE0F'
}, {
  name: 'Man Police Officer',
  unified: '1F46E-200D-2642-FE0F',
  obsoletes: '1F46E',
  keywords: ['man_police_officer', 'man', 'police', 'law', 'legal', 'enforcement', 'arrest', '911'],
  sheet: [23, 2],
  skinVariations: [{
    unified: '1F46E-1F3FB-200D-2642-FE0F',
    sheet: [23, 3]
  }, {
    unified: '1F46E-1F3FC-200D-2642-FE0F',
    sheet: [23, 4]
  }, {
    unified: '1F46E-1F3FD-200D-2642-FE0F',
    sheet: [23, 5]
  }, {
    unified: '1F46E-1F3FE-200D-2642-FE0F',
    sheet: [23, 6]
  }, {
    unified: '1F46E-1F3FF-200D-2642-FE0F',
    sheet: [23, 7]
  }],
  shortName: 'male-police-officer'
}, {
  name: 'Woman Police Officer',
  unified: '1F46E-200D-2640-FE0F',
  keywords: ['woman_police_officer', 'woman', 'police', 'law', 'legal', 'enforcement', 'arrest', '911', 'female'],
  sheet: [22, 57],
  skinVariations: [{
    unified: '1F46E-1F3FB-200D-2640-FE0F',
    sheet: [22, 58]
  }, {
    unified: '1F46E-1F3FC-200D-2640-FE0F',
    sheet: [22, 59]
  }, {
    unified: '1F46E-1F3FD-200D-2640-FE0F',
    sheet: [22, 60]
  }, {
    unified: '1F46E-1F3FE-200D-2640-FE0F',
    sheet: [23, 0]
  }, {
    unified: '1F46E-1F3FF-200D-2640-FE0F',
    sheet: [23, 1]
  }],
  shortName: 'female-police-officer'
}, {
  name: 'Detective',
  unified: '1F575-FE0F',
  keywords: ['detective', 'human', 'spy', 'detective'],
  sheet: [31, 16],
  skinVariations: [{
    unified: '1F575-1F3FB',
    sheet: [31, 17]
  }, {
    unified: '1F575-1F3FC',
    sheet: [31, 18]
  }, {
    unified: '1F575-1F3FD',
    sheet: [31, 19]
  }, {
    unified: '1F575-1F3FE',
    sheet: [31, 20]
  }, {
    unified: '1F575-1F3FF',
    sheet: [31, 21]
  }],
  shortName: 'sleuth_or_spy',
  obsoletedBy: '1F575-FE0F-200D-2642-FE0F'
}, {
  name: 'Man Detective',
  unified: '1F575-FE0F-200D-2642-FE0F',
  obsoletes: '1F575-FE0F',
  keywords: ['man_detective', 'crime'],
  sheet: [31, 10],
  hidden: ['facebook'],
  skinVariations: [{
    unified: '1F575-1F3FB-200D-2642-FE0F',
    sheet: [31, 11]
  }, {
    unified: '1F575-1F3FC-200D-2642-FE0F',
    sheet: [31, 12]
  }, {
    unified: '1F575-1F3FD-200D-2642-FE0F',
    sheet: [31, 13]
  }, {
    unified: '1F575-1F3FE-200D-2642-FE0F',
    sheet: [31, 14]
  }, {
    unified: '1F575-1F3FF-200D-2642-FE0F',
    sheet: [31, 15]
  }],
  shortName: 'male-detective'
}, {
  name: 'Woman Detective',
  unified: '1F575-FE0F-200D-2640-FE0F',
  keywords: ['woman_detective', 'human', 'spy', 'detective', 'female', 'woman'],
  sheet: [31, 4],
  hidden: ['facebook'],
  skinVariations: [{
    unified: '1F575-1F3FB-200D-2640-FE0F',
    sheet: [31, 5]
  }, {
    unified: '1F575-1F3FC-200D-2640-FE0F',
    sheet: [31, 6]
  }, {
    unified: '1F575-1F3FD-200D-2640-FE0F',
    sheet: [31, 7]
  }, {
    unified: '1F575-1F3FE-200D-2640-FE0F',
    sheet: [31, 8]
  }, {
    unified: '1F575-1F3FF-200D-2640-FE0F',
    sheet: [31, 9]
  }],
  shortName: 'female-detective'
}, {
  name: 'Guardsman',
  unified: '1F482',
  keywords: ['guard', 'protect'],
  sheet: [25, 40],
  skinVariations: [{
    unified: '1F482-1F3FB',
    sheet: [25, 41]
  }, {
    unified: '1F482-1F3FC',
    sheet: [25, 42]
  }, {
    unified: '1F482-1F3FD',
    sheet: [25, 43]
  }, {
    unified: '1F482-1F3FE',
    sheet: [25, 44]
  }, {
    unified: '1F482-1F3FF',
    sheet: [25, 45]
  }],
  shortName: 'guardsman',
  obsoletedBy: '1F482-200D-2642-FE0F'
}, {
  name: 'Man Guard',
  unified: '1F482-200D-2642-FE0F',
  obsoletes: '1F482',
  keywords: ['man_guard', 'uk', 'gb', 'british', 'male', 'guy', 'royal'],
  sheet: [25, 34],
  skinVariations: [{
    unified: '1F482-1F3FB-200D-2642-FE0F',
    sheet: [25, 35]
  }, {
    unified: '1F482-1F3FC-200D-2642-FE0F',
    sheet: [25, 36]
  }, {
    unified: '1F482-1F3FD-200D-2642-FE0F',
    sheet: [25, 37]
  }, {
    unified: '1F482-1F3FE-200D-2642-FE0F',
    sheet: [25, 38]
  }, {
    unified: '1F482-1F3FF-200D-2642-FE0F',
    sheet: [25, 39]
  }],
  shortName: 'male-guard'
}, {
  name: 'Woman Guard',
  unified: '1F482-200D-2640-FE0F',
  keywords: ['woman_guard', 'uk', 'gb', 'british', 'female', 'royal', 'woman'],
  sheet: [25, 28],
  skinVariations: [{
    unified: '1F482-1F3FB-200D-2640-FE0F',
    sheet: [25, 29]
  }, {
    unified: '1F482-1F3FC-200D-2640-FE0F',
    sheet: [25, 30]
  }, {
    unified: '1F482-1F3FD-200D-2640-FE0F',
    sheet: [25, 31]
  }, {
    unified: '1F482-1F3FE-200D-2640-FE0F',
    sheet: [25, 32]
  }, {
    unified: '1F482-1F3FF-200D-2640-FE0F',
    sheet: [25, 33]
  }],
  shortName: 'female-guard'
}, {
  name: 'Ninja',
  unified: '1F977',
  keywords: ['ninja', 'ninjutsu', 'skills', 'japanese'],
  sheet: [44, 4],
  skinVariations: [{
    unified: '1F977-1F3FB',
    sheet: [44, 5]
  }, {
    unified: '1F977-1F3FC',
    sheet: [44, 6]
  }, {
    unified: '1F977-1F3FD',
    sheet: [44, 7]
  }, {
    unified: '1F977-1F3FE',
    sheet: [44, 8]
  }, {
    unified: '1F977-1F3FF',
    sheet: [44, 9]
  }],
  shortName: 'ninja'
}, {
  name: 'Construction Worker',
  unified: '1F477',
  keywords: ['construction_worker', 'labor', 'build'],
  sheet: [24, 46],
  skinVariations: [{
    unified: '1F477-1F3FB',
    sheet: [24, 47]
  }, {
    unified: '1F477-1F3FC',
    sheet: [24, 48]
  }, {
    unified: '1F477-1F3FD',
    sheet: [24, 49]
  }, {
    unified: '1F477-1F3FE',
    sheet: [24, 50]
  }, {
    unified: '1F477-1F3FF',
    sheet: [24, 51]
  }],
  shortName: 'construction_worker',
  obsoletedBy: '1F477-200D-2642-FE0F'
}, {
  name: 'Man Construction Worker',
  unified: '1F477-200D-2642-FE0F',
  obsoletes: '1F477',
  keywords: ['man_construction_worker', 'male', 'human', 'wip', 'guy', 'build', 'construction', 'worker', 'labor'],
  sheet: [24, 40],
  skinVariations: [{
    unified: '1F477-1F3FB-200D-2642-FE0F',
    sheet: [24, 41]
  }, {
    unified: '1F477-1F3FC-200D-2642-FE0F',
    sheet: [24, 42]
  }, {
    unified: '1F477-1F3FD-200D-2642-FE0F',
    sheet: [24, 43]
  }, {
    unified: '1F477-1F3FE-200D-2642-FE0F',
    sheet: [24, 44]
  }, {
    unified: '1F477-1F3FF-200D-2642-FE0F',
    sheet: [24, 45]
  }],
  shortName: 'male-construction-worker'
}, {
  name: 'Woman Construction Worker',
  unified: '1F477-200D-2640-FE0F',
  keywords: ['woman_construction_worker', 'female', 'human', 'wip', 'build', 'construction', 'worker', 'labor', 'woman'],
  sheet: [24, 34],
  skinVariations: [{
    unified: '1F477-1F3FB-200D-2640-FE0F',
    sheet: [24, 35]
  }, {
    unified: '1F477-1F3FC-200D-2640-FE0F',
    sheet: [24, 36]
  }, {
    unified: '1F477-1F3FD-200D-2640-FE0F',
    sheet: [24, 37]
  }, {
    unified: '1F477-1F3FE-200D-2640-FE0F',
    sheet: [24, 38]
  }, {
    unified: '1F477-1F3FF-200D-2640-FE0F',
    sheet: [24, 39]
  }],
  shortName: 'female-construction-worker'
}, {
  name: 'Person with Crown',
  unified: '1FAC5',
  keywords: ['person with crown', 'royalty', 'power'],
  sheet: [54, 57],
  hidden: ['facebook'],
  skinVariations: [{
    unified: '1FAC5-1F3FB',
    sheet: [54, 58],
    hidden: ['facebook']
  }, {
    unified: '1FAC5-1F3FC',
    sheet: [54, 59],
    hidden: ['facebook']
  }, {
    unified: '1FAC5-1F3FD',
    sheet: [54, 60],
    hidden: ['facebook']
  }, {
    unified: '1FAC5-1F3FE',
    sheet: [55, 0],
    hidden: ['facebook']
  }, {
    unified: '1FAC5-1F3FF',
    sheet: [55, 1],
    hidden: ['facebook']
  }],
  shortName: 'person_with_crown'
}, {
  name: 'Prince',
  unified: '1F934',
  keywords: ['prince', 'boy', 'man', 'male', 'crown', 'royal', 'king'],
  sheet: [41, 8],
  skinVariations: [{
    unified: '1F934-1F3FB',
    sheet: [41, 9]
  }, {
    unified: '1F934-1F3FC',
    sheet: [41, 10]
  }, {
    unified: '1F934-1F3FD',
    sheet: [41, 11]
  }, {
    unified: '1F934-1F3FE',
    sheet: [41, 12]
  }, {
    unified: '1F934-1F3FF',
    sheet: [41, 13]
  }],
  shortName: 'prince'
}, {
  name: 'Princess',
  unified: '1F478',
  keywords: ['princess', 'girl', 'woman', 'female', 'blond', 'crown', 'royal', 'queen'],
  sheet: [24, 52],
  skinVariations: [{
    unified: '1F478-1F3FB',
    sheet: [24, 53]
  }, {
    unified: '1F478-1F3FC',
    sheet: [24, 54]
  }, {
    unified: '1F478-1F3FD',
    sheet: [24, 55]
  }, {
    unified: '1F478-1F3FE',
    sheet: [24, 56]
  }, {
    unified: '1F478-1F3FF',
    sheet: [24, 57]
  }],
  shortName: 'princess'
}, {
  name: 'Man with Turban',
  unified: '1F473',
  keywords: ['person_wearing_turban', 'headdress'],
  sheet: [24, 10],
  skinVariations: [{
    unified: '1F473-1F3FB',
    sheet: [24, 11]
  }, {
    unified: '1F473-1F3FC',
    sheet: [24, 12]
  }, {
    unified: '1F473-1F3FD',
    sheet: [24, 13]
  }, {
    unified: '1F473-1F3FE',
    sheet: [24, 14]
  }, {
    unified: '1F473-1F3FF',
    sheet: [24, 15]
  }],
  shortName: 'man_with_turban',
  obsoletedBy: '1F473-200D-2642-FE0F'
}, {
  name: 'Man Wearing Turban',
  unified: '1F473-200D-2642-FE0F',
  obsoletes: '1F473',
  keywords: ['man_wearing_turban', 'male', 'indian', 'hinduism', 'arabs'],
  sheet: [24, 4],
  skinVariations: [{
    unified: '1F473-1F3FB-200D-2642-FE0F',
    sheet: [24, 5]
  }, {
    unified: '1F473-1F3FC-200D-2642-FE0F',
    sheet: [24, 6]
  }, {
    unified: '1F473-1F3FD-200D-2642-FE0F',
    sheet: [24, 7]
  }, {
    unified: '1F473-1F3FE-200D-2642-FE0F',
    sheet: [24, 8]
  }, {
    unified: '1F473-1F3FF-200D-2642-FE0F',
    sheet: [24, 9]
  }],
  shortName: 'man-wearing-turban'
}, {
  name: 'Woman Wearing Turban',
  unified: '1F473-200D-2640-FE0F',
  keywords: ['woman_wearing_turban', 'female', 'indian', 'hinduism', 'arabs', 'woman'],
  sheet: [23, 59],
  skinVariations: [{
    unified: '1F473-1F3FB-200D-2640-FE0F',
    sheet: [23, 60]
  }, {
    unified: '1F473-1F3FC-200D-2640-FE0F',
    sheet: [24, 0]
  }, {
    unified: '1F473-1F3FD-200D-2640-FE0F',
    sheet: [24, 1]
  }, {
    unified: '1F473-1F3FE-200D-2640-FE0F',
    sheet: [24, 2]
  }, {
    unified: '1F473-1F3FF-200D-2640-FE0F',
    sheet: [24, 3]
  }],
  shortName: 'woman-wearing-turban'
}, {
  name: 'Man with Gua Pi Mao',
  unified: '1F472',
  keywords: ['man_with_skullcap', 'male', 'boy', 'chinese'],
  sheet: [23, 53],
  skinVariations: [{
    unified: '1F472-1F3FB',
    sheet: [23, 54]
  }, {
    unified: '1F472-1F3FC',
    sheet: [23, 55]
  }, {
    unified: '1F472-1F3FD',
    sheet: [23, 56]
  }, {
    unified: '1F472-1F3FE',
    sheet: [23, 57]
  }, {
    unified: '1F472-1F3FF',
    sheet: [23, 58]
  }],
  shortName: 'man_with_gua_pi_mao'
}, {
  name: 'Person with Headscarf',
  unified: '1F9D5',
  keywords: ['woman_with_headscarf', 'female', 'hijab', 'mantilla', 'tichel'],
  sheet: [50, 41],
  skinVariations: [{
    unified: '1F9D5-1F3FB',
    sheet: [50, 42]
  }, {
    unified: '1F9D5-1F3FC',
    sheet: [50, 43]
  }, {
    unified: '1F9D5-1F3FD',
    sheet: [50, 44]
  }, {
    unified: '1F9D5-1F3FE',
    sheet: [50, 45]
  }, {
    unified: '1F9D5-1F3FF',
    sheet: [50, 46]
  }],
  shortName: 'person_with_headscarf'
}, {
  name: 'Man in Tuxedo',
  unified: '1F935',
  keywords: ['man_in_tuxedo', 'couple', 'marriage', 'wedding', 'groom'],
  sheet: [41, 26],
  skinVariations: [{
    unified: '1F935-1F3FB',
    sheet: [41, 27]
  }, {
    unified: '1F935-1F3FC',
    sheet: [41, 28]
  }, {
    unified: '1F935-1F3FD',
    sheet: [41, 29]
  }, {
    unified: '1F935-1F3FE',
    sheet: [41, 30]
  }, {
    unified: '1F935-1F3FF',
    sheet: [41, 31]
  }],
  shortName: 'person_in_tuxedo'
}, {
  name: 'Man in Tuxedo',
  unified: '1F935-200D-2642-FE0F',
  keywords: ['man in tuxedo', 'formal', 'fashion'],
  sheet: [41, 20],
  skinVariations: [{
    unified: '1F935-1F3FB-200D-2642-FE0F',
    sheet: [41, 21]
  }, {
    unified: '1F935-1F3FC-200D-2642-FE0F',
    sheet: [41, 22]
  }, {
    unified: '1F935-1F3FD-200D-2642-FE0F',
    sheet: [41, 23]
  }, {
    unified: '1F935-1F3FE-200D-2642-FE0F',
    sheet: [41, 24]
  }, {
    unified: '1F935-1F3FF-200D-2642-FE0F',
    sheet: [41, 25]
  }],
  shortName: 'man_in_tuxedo'
}, {
  name: 'Woman in Tuxedo',
  unified: '1F935-200D-2640-FE0F',
  keywords: ['woman in tuxedo', 'formal', 'fashion'],
  sheet: [41, 14],
  skinVariations: [{
    unified: '1F935-1F3FB-200D-2640-FE0F',
    sheet: [41, 15]
  }, {
    unified: '1F935-1F3FC-200D-2640-FE0F',
    sheet: [41, 16]
  }, {
    unified: '1F935-1F3FD-200D-2640-FE0F',
    sheet: [41, 17]
  }, {
    unified: '1F935-1F3FE-200D-2640-FE0F',
    sheet: [41, 18]
  }, {
    unified: '1F935-1F3FF-200D-2640-FE0F',
    sheet: [41, 19]
  }],
  shortName: 'woman_in_tuxedo'
}, {
  name: 'Bride with Veil',
  unified: '1F470',
  keywords: ['bride_with_veil', 'couple', 'marriage', 'wedding', 'woman', 'bride'],
  sheet: [23, 29],
  skinVariations: [{
    unified: '1F470-1F3FB',
    sheet: [23, 30]
  }, {
    unified: '1F470-1F3FC',
    sheet: [23, 31]
  }, {
    unified: '1F470-1F3FD',
    sheet: [23, 32]
  }, {
    unified: '1F470-1F3FE',
    sheet: [23, 33]
  }, {
    unified: '1F470-1F3FF',
    sheet: [23, 34]
  }],
  shortName: 'bride_with_veil'
}, {
  name: 'Man with Veil',
  unified: '1F470-200D-2642-FE0F',
  keywords: ['man with veil', 'wedding', 'marriage'],
  sheet: [23, 23],
  skinVariations: [{
    unified: '1F470-1F3FB-200D-2642-FE0F',
    sheet: [23, 24]
  }, {
    unified: '1F470-1F3FC-200D-2642-FE0F',
    sheet: [23, 25]
  }, {
    unified: '1F470-1F3FD-200D-2642-FE0F',
    sheet: [23, 26]
  }, {
    unified: '1F470-1F3FE-200D-2642-FE0F',
    sheet: [23, 27]
  }, {
    unified: '1F470-1F3FF-200D-2642-FE0F',
    sheet: [23, 28]
  }],
  shortName: 'man_with_veil'
}, {
  name: 'Woman with Veil',
  unified: '1F470-200D-2640-FE0F',
  keywords: ['woman with veil', 'wedding', 'marriage'],
  sheet: [23, 17],
  skinVariations: [{
    unified: '1F470-1F3FB-200D-2640-FE0F',
    sheet: [23, 18]
  }, {
    unified: '1F470-1F3FC-200D-2640-FE0F',
    sheet: [23, 19]
  }, {
    unified: '1F470-1F3FD-200D-2640-FE0F',
    sheet: [23, 20]
  }, {
    unified: '1F470-1F3FE-200D-2640-FE0F',
    sheet: [23, 21]
  }, {
    unified: '1F470-1F3FF-200D-2640-FE0F',
    sheet: [23, 22]
  }],
  shortName: 'woman_with_veil'
}, {
  name: 'Pregnant Woman',
  unified: '1F930',
  keywords: ['pregnant_woman', 'baby'],
  sheet: [40, 45],
  skinVariations: [{
    unified: '1F930-1F3FB',
    sheet: [40, 46]
  }, {
    unified: '1F930-1F3FC',
    sheet: [40, 47]
  }, {
    unified: '1F930-1F3FD',
    sheet: [40, 48]
  }, {
    unified: '1F930-1F3FE',
    sheet: [40, 49]
  }, {
    unified: '1F930-1F3FF',
    sheet: [40, 50]
  }],
  shortName: 'pregnant_woman'
}, {
  name: 'Pregnant Man',
  unified: '1FAC3',
  keywords: ['pregnant man', 'baby', 'belly'],
  sheet: [54, 45],
  hidden: ['facebook'],
  skinVariations: [{
    unified: '1FAC3-1F3FB',
    sheet: [54, 46],
    hidden: ['facebook']
  }, {
    unified: '1FAC3-1F3FC',
    sheet: [54, 47],
    hidden: ['facebook']
  }, {
    unified: '1FAC3-1F3FD',
    sheet: [54, 48],
    hidden: ['facebook']
  }, {
    unified: '1FAC3-1F3FE',
    sheet: [54, 49],
    hidden: ['facebook']
  }, {
    unified: '1FAC3-1F3FF',
    sheet: [54, 50],
    hidden: ['facebook']
  }],
  shortName: 'pregnant_man'
}, {
  name: 'Pregnant Person',
  unified: '1FAC4',
  keywords: ['pregnant person', 'baby', 'belly'],
  sheet: [54, 51],
  hidden: ['facebook'],
  skinVariations: [{
    unified: '1FAC4-1F3FB',
    sheet: [54, 52],
    hidden: ['facebook']
  }, {
    unified: '1FAC4-1F3FC',
    sheet: [54, 53],
    hidden: ['facebook']
  }, {
    unified: '1FAC4-1F3FD',
    sheet: [54, 54],
    hidden: ['facebook']
  }, {
    unified: '1FAC4-1F3FE',
    sheet: [54, 55],
    hidden: ['facebook']
  }, {
    unified: '1FAC4-1F3FF',
    sheet: [54, 56],
    hidden: ['facebook']
  }],
  shortName: 'pregnant_person'
}, {
  name: 'Breast-Feeding',
  unified: '1F931',
  keywords: ['breast_feeding', 'nursing', 'baby'],
  sheet: [40, 51],
  skinVariations: [{
    unified: '1F931-1F3FB',
    sheet: [40, 52]
  }, {
    unified: '1F931-1F3FC',
    sheet: [40, 53]
  }, {
    unified: '1F931-1F3FD',
    sheet: [40, 54]
  }, {
    unified: '1F931-1F3FE',
    sheet: [40, 55]
  }, {
    unified: '1F931-1F3FF',
    sheet: [40, 56]
  }],
  shortName: 'breast-feeding'
}, {
  name: 'Woman Feeding Baby',
  unified: '1F469-200D-1F37C',
  keywords: ['woman feeding baby', 'birth', 'food'],
  sheet: [17, 31],
  skinVariations: [{
    unified: '1F469-1F3FB-200D-1F37C',
    sheet: [17, 32]
  }, {
    unified: '1F469-1F3FC-200D-1F37C',
    sheet: [17, 33]
  }, {
    unified: '1F469-1F3FD-200D-1F37C',
    sheet: [17, 34]
  }, {
    unified: '1F469-1F3FE-200D-1F37C',
    sheet: [17, 35]
  }, {
    unified: '1F469-1F3FF-200D-1F37C',
    sheet: [17, 36]
  }],
  shortName: 'woman_feeding_baby'
}, {
  name: 'Man Feeding Baby',
  unified: '1F468-200D-1F37C',
  keywords: ['man feeding baby', 'birth', 'food'],
  sheet: [13, 58],
  skinVariations: [{
    unified: '1F468-1F3FB-200D-1F37C',
    sheet: [13, 59]
  }, {
    unified: '1F468-1F3FC-200D-1F37C',
    sheet: [13, 60]
  }, {
    unified: '1F468-1F3FD-200D-1F37C',
    sheet: [14, 0]
  }, {
    unified: '1F468-1F3FE-200D-1F37C',
    sheet: [14, 1]
  }, {
    unified: '1F468-1F3FF-200D-1F37C',
    sheet: [14, 2]
  }],
  shortName: 'man_feeding_baby'
}, {
  name: 'Person Feeding Baby',
  unified: '1F9D1-200D-1F37C',
  keywords: ['person feeding baby', 'birth', 'food'],
  sheet: [47, 24],
  skinVariations: [{
    unified: '1F9D1-1F3FB-200D-1F37C',
    sheet: [47, 25]
  }, {
    unified: '1F9D1-1F3FC-200D-1F37C',
    sheet: [47, 26]
  }, {
    unified: '1F9D1-1F3FD-200D-1F37C',
    sheet: [47, 27]
  }, {
    unified: '1F9D1-1F3FE-200D-1F37C',
    sheet: [47, 28]
  }, {
    unified: '1F9D1-1F3FF-200D-1F37C',
    sheet: [47, 29]
  }],
  shortName: 'person_feeding_baby'
}, {
  name: 'Baby Angel',
  unified: '1F47C',
  keywords: ['baby_angel', 'heaven', 'wings', 'halo'],
  sheet: [25, 0],
  skinVariations: [{
    unified: '1F47C-1F3FB',
    sheet: [25, 1]
  }, {
    unified: '1F47C-1F3FC',
    sheet: [25, 2]
  }, {
    unified: '1F47C-1F3FD',
    sheet: [25, 3]
  }, {
    unified: '1F47C-1F3FE',
    sheet: [25, 4]
  }, {
    unified: '1F47C-1F3FF',
    sheet: [25, 5]
  }],
  shortName: 'angel'
}, {
  name: 'Father Christmas',
  unified: '1F385',
  keywords: ['santa_claus', 'festival', 'man', 'male', 'xmas', 'father christmas'],
  sheet: [7, 8],
  skinVariations: [{
    unified: '1F385-1F3FB',
    sheet: [7, 9]
  }, {
    unified: '1F385-1F3FC',
    sheet: [7, 10]
  }, {
    unified: '1F385-1F3FD',
    sheet: [7, 11]
  }, {
    unified: '1F385-1F3FE',
    sheet: [7, 12]
  }, {
    unified: '1F385-1F3FF',
    sheet: [7, 13]
  }],
  shortName: 'santa'
}, {
  name: 'Mother Christmas',
  unified: '1F936',
  keywords: ['mrs_claus', 'woman', 'female', 'xmas', 'mother christmas'],
  sheet: [41, 32],
  skinVariations: [{
    unified: '1F936-1F3FB',
    sheet: [41, 33]
  }, {
    unified: '1F936-1F3FC',
    sheet: [41, 34]
  }, {
    unified: '1F936-1F3FD',
    sheet: [41, 35]
  }, {
    unified: '1F936-1F3FE',
    sheet: [41, 36]
  }, {
    unified: '1F936-1F3FF',
    sheet: [41, 37]
  }],
  shortNames: ['mother_christmas'],
  shortName: 'mrs_claus'
}, {
  name: 'Mx Claus',
  unified: '1F9D1-200D-1F384',
  keywords: ['mx claus', 'christmas'],
  sheet: [47, 30],
  skinVariations: [{
    unified: '1F9D1-1F3FB-200D-1F384',
    sheet: [47, 31]
  }, {
    unified: '1F9D1-1F3FC-200D-1F384',
    sheet: [47, 32]
  }, {
    unified: '1F9D1-1F3FD-200D-1F384',
    sheet: [47, 33]
  }, {
    unified: '1F9D1-1F3FE-200D-1F384',
    sheet: [47, 34]
  }, {
    unified: '1F9D1-1F3FF-200D-1F384',
    sheet: [47, 35]
  }],
  shortName: 'mx_claus'
}, {
  name: 'Superhero',
  unified: '1F9B8',
  keywords: ['superhero', 'marvel'],
  sheet: [45, 31],
  skinVariations: [{
    unified: '1F9B8-1F3FB',
    sheet: [45, 32]
  }, {
    unified: '1F9B8-1F3FC',
    sheet: [45, 33]
  }, {
    unified: '1F9B8-1F3FD',
    sheet: [45, 34]
  }, {
    unified: '1F9B8-1F3FE',
    sheet: [45, 35]
  }, {
    unified: '1F9B8-1F3FF',
    sheet: [45, 36]
  }],
  shortName: 'superhero'
}, {
  name: 'Man Superhero',
  unified: '1F9B8-200D-2642-FE0F',
  keywords: ['man_superhero', 'man', 'male', 'good', 'hero', 'superpowers'],
  sheet: [45, 25],
  skinVariations: [{
    unified: '1F9B8-1F3FB-200D-2642-FE0F',
    sheet: [45, 26]
  }, {
    unified: '1F9B8-1F3FC-200D-2642-FE0F',
    sheet: [45, 27]
  }, {
    unified: '1F9B8-1F3FD-200D-2642-FE0F',
    sheet: [45, 28]
  }, {
    unified: '1F9B8-1F3FE-200D-2642-FE0F',
    sheet: [45, 29]
  }, {
    unified: '1F9B8-1F3FF-200D-2642-FE0F',
    sheet: [45, 30]
  }],
  shortName: 'male_superhero'
}, {
  name: 'Woman Superhero',
  unified: '1F9B8-200D-2640-FE0F',
  keywords: ['woman_superhero', 'woman', 'female', 'good', 'heroine', 'superpowers'],
  sheet: [45, 19],
  skinVariations: [{
    unified: '1F9B8-1F3FB-200D-2640-FE0F',
    sheet: [45, 20]
  }, {
    unified: '1F9B8-1F3FC-200D-2640-FE0F',
    sheet: [45, 21]
  }, {
    unified: '1F9B8-1F3FD-200D-2640-FE0F',
    sheet: [45, 22]
  }, {
    unified: '1F9B8-1F3FE-200D-2640-FE0F',
    sheet: [45, 23]
  }, {
    unified: '1F9B8-1F3FF-200D-2640-FE0F',
    sheet: [45, 24]
  }],
  shortName: 'female_superhero'
}, {
  name: 'Supervillain',
  unified: '1F9B9',
  keywords: ['supervillain', 'marvel'],
  sheet: [45, 49],
  skinVariations: [{
    unified: '1F9B9-1F3FB',
    sheet: [45, 50]
  }, {
    unified: '1F9B9-1F3FC',
    sheet: [45, 51]
  }, {
    unified: '1F9B9-1F3FD',
    sheet: [45, 52]
  }, {
    unified: '1F9B9-1F3FE',
    sheet: [45, 53]
  }, {
    unified: '1F9B9-1F3FF',
    sheet: [45, 54]
  }],
  shortName: 'supervillain'
}, {
  name: 'Man Supervillain',
  unified: '1F9B9-200D-2642-FE0F',
  keywords: ['man_supervillain', 'man', 'male', 'evil', 'bad', 'criminal', 'hero', 'superpowers'],
  sheet: [45, 43],
  skinVariations: [{
    unified: '1F9B9-1F3FB-200D-2642-FE0F',
    sheet: [45, 44]
  }, {
    unified: '1F9B9-1F3FC-200D-2642-FE0F',
    sheet: [45, 45]
  }, {
    unified: '1F9B9-1F3FD-200D-2642-FE0F',
    sheet: [45, 46]
  }, {
    unified: '1F9B9-1F3FE-200D-2642-FE0F',
    sheet: [45, 47]
  }, {
    unified: '1F9B9-1F3FF-200D-2642-FE0F',
    sheet: [45, 48]
  }],
  shortName: 'male_supervillain'
}, {
  name: 'Woman Supervillain',
  unified: '1F9B9-200D-2640-FE0F',
  keywords: ['woman_supervillain', 'woman', 'female', 'evil', 'bad', 'criminal', 'heroine', 'superpowers'],
  sheet: [45, 37],
  skinVariations: [{
    unified: '1F9B9-1F3FB-200D-2640-FE0F',
    sheet: [45, 38]
  }, {
    unified: '1F9B9-1F3FC-200D-2640-FE0F',
    sheet: [45, 39]
  }, {
    unified: '1F9B9-1F3FD-200D-2640-FE0F',
    sheet: [45, 40]
  }, {
    unified: '1F9B9-1F3FE-200D-2640-FE0F',
    sheet: [45, 41]
  }, {
    unified: '1F9B9-1F3FF-200D-2640-FE0F',
    sheet: [45, 42]
  }],
  shortName: 'female_supervillain'
}, {
  name: 'Mage',
  unified: '1F9D9',
  keywords: ['mage', 'magic'],
  sheet: [51, 52],
  skinVariations: [{
    unified: '1F9D9-1F3FB',
    sheet: [51, 53]
  }, {
    unified: '1F9D9-1F3FC',
    sheet: [51, 54]
  }, {
    unified: '1F9D9-1F3FD',
    sheet: [51, 55]
  }, {
    unified: '1F9D9-1F3FE',
    sheet: [51, 56]
  }, {
    unified: '1F9D9-1F3FF',
    sheet: [51, 57]
  }],
  shortName: 'mage',
  obsoletedBy: '1F9D9-200D-2640-FE0F'
}, {
  name: 'Man Mage',
  unified: '1F9D9-200D-2642-FE0F',
  keywords: ['man_mage', 'man', 'male', 'mage', 'sorcerer'],
  sheet: [51, 46],
  skinVariations: [{
    unified: '1F9D9-1F3FB-200D-2642-FE0F',
    sheet: [51, 47]
  }, {
    unified: '1F9D9-1F3FC-200D-2642-FE0F',
    sheet: [51, 48]
  }, {
    unified: '1F9D9-1F3FD-200D-2642-FE0F',
    sheet: [51, 49]
  }, {
    unified: '1F9D9-1F3FE-200D-2642-FE0F',
    sheet: [51, 50]
  }, {
    unified: '1F9D9-1F3FF-200D-2642-FE0F',
    sheet: [51, 51]
  }],
  shortName: 'male_mage'
}, {
  name: 'Woman Mage',
  unified: '1F9D9-200D-2640-FE0F',
  obsoletes: '1F9D9',
  keywords: ['woman_mage', 'woman', 'female', 'mage', 'witch'],
  sheet: [51, 40],
  skinVariations: [{
    unified: '1F9D9-1F3FB-200D-2640-FE0F',
    sheet: [51, 41]
  }, {
    unified: '1F9D9-1F3FC-200D-2640-FE0F',
    sheet: [51, 42]
  }, {
    unified: '1F9D9-1F3FD-200D-2640-FE0F',
    sheet: [51, 43]
  }, {
    unified: '1F9D9-1F3FE-200D-2640-FE0F',
    sheet: [51, 44]
  }, {
    unified: '1F9D9-1F3FF-200D-2640-FE0F',
    sheet: [51, 45]
  }],
  shortName: 'female_mage'
}, {
  name: 'Fairy',
  unified: '1F9DA',
  keywords: ['fairy', 'wings', 'magical'],
  sheet: [52, 9],
  skinVariations: [{
    unified: '1F9DA-1F3FB',
    sheet: [52, 10]
  }, {
    unified: '1F9DA-1F3FC',
    sheet: [52, 11]
  }, {
    unified: '1F9DA-1F3FD',
    sheet: [52, 12]
  }, {
    unified: '1F9DA-1F3FE',
    sheet: [52, 13]
  }, {
    unified: '1F9DA-1F3FF',
    sheet: [52, 14]
  }],
  shortName: 'fairy',
  obsoletedBy: '1F9DA-200D-2640-FE0F'
}, {
  name: 'Man Fairy',
  unified: '1F9DA-200D-2642-FE0F',
  keywords: ['man_fairy', 'man', 'male'],
  sheet: [52, 3],
  skinVariations: [{
    unified: '1F9DA-1F3FB-200D-2642-FE0F',
    sheet: [52, 4]
  }, {
    unified: '1F9DA-1F3FC-200D-2642-FE0F',
    sheet: [52, 5]
  }, {
    unified: '1F9DA-1F3FD-200D-2642-FE0F',
    sheet: [52, 6]
  }, {
    unified: '1F9DA-1F3FE-200D-2642-FE0F',
    sheet: [52, 7]
  }, {
    unified: '1F9DA-1F3FF-200D-2642-FE0F',
    sheet: [52, 8]
  }],
  shortName: 'male_fairy'
}, {
  name: 'Woman Fairy',
  unified: '1F9DA-200D-2640-FE0F',
  obsoletes: '1F9DA',
  keywords: ['woman_fairy', 'woman', 'female'],
  sheet: [51, 58],
  skinVariations: [{
    unified: '1F9DA-1F3FB-200D-2640-FE0F',
    sheet: [51, 59]
  }, {
    unified: '1F9DA-1F3FC-200D-2640-FE0F',
    sheet: [51, 60]
  }, {
    unified: '1F9DA-1F3FD-200D-2640-FE0F',
    sheet: [52, 0]
  }, {
    unified: '1F9DA-1F3FE-200D-2640-FE0F',
    sheet: [52, 1]
  }, {
    unified: '1F9DA-1F3FF-200D-2640-FE0F',
    sheet: [52, 2]
  }],
  shortName: 'female_fairy'
}, {
  name: 'Vampire',
  unified: '1F9DB',
  keywords: ['vampire', 'blood', 'twilight'],
  sheet: [52, 27],
  skinVariations: [{
    unified: '1F9DB-1F3FB',
    sheet: [52, 28]
  }, {
    unified: '1F9DB-1F3FC',
    sheet: [52, 29]
  }, {
    unified: '1F9DB-1F3FD',
    sheet: [52, 30]
  }, {
    unified: '1F9DB-1F3FE',
    sheet: [52, 31]
  }, {
    unified: '1F9DB-1F3FF',
    sheet: [52, 32]
  }],
  shortName: 'vampire',
  obsoletedBy: '1F9DB-200D-2640-FE0F'
}, {
  name: 'Man Vampire',
  unified: '1F9DB-200D-2642-FE0F',
  keywords: ['man_vampire', 'man', 'male', 'dracula'],
  sheet: [52, 21],
  skinVariations: [{
    unified: '1F9DB-1F3FB-200D-2642-FE0F',
    sheet: [52, 22]
  }, {
    unified: '1F9DB-1F3FC-200D-2642-FE0F',
    sheet: [52, 23]
  }, {
    unified: '1F9DB-1F3FD-200D-2642-FE0F',
    sheet: [52, 24]
  }, {
    unified: '1F9DB-1F3FE-200D-2642-FE0F',
    sheet: [52, 25]
  }, {
    unified: '1F9DB-1F3FF-200D-2642-FE0F',
    sheet: [52, 26]
  }],
  shortName: 'male_vampire'
}, {
  name: 'Woman Vampire',
  unified: '1F9DB-200D-2640-FE0F',
  obsoletes: '1F9DB',
  keywords: ['woman_vampire', 'woman', 'female'],
  sheet: [52, 15],
  skinVariations: [{
    unified: '1F9DB-1F3FB-200D-2640-FE0F',
    sheet: [52, 16]
  }, {
    unified: '1F9DB-1F3FC-200D-2640-FE0F',
    sheet: [52, 17]
  }, {
    unified: '1F9DB-1F3FD-200D-2640-FE0F',
    sheet: [52, 18]
  }, {
    unified: '1F9DB-1F3FE-200D-2640-FE0F',
    sheet: [52, 19]
  }, {
    unified: '1F9DB-1F3FF-200D-2640-FE0F',
    sheet: [52, 20]
  }],
  shortName: 'female_vampire'
}, {
  name: 'Merperson',
  unified: '1F9DC',
  keywords: ['merperson', 'sea'],
  sheet: [52, 45],
  skinVariations: [{
    unified: '1F9DC-1F3FB',
    sheet: [52, 46]
  }, {
    unified: '1F9DC-1F3FC',
    sheet: [52, 47]
  }, {
    unified: '1F9DC-1F3FD',
    sheet: [52, 48]
  }, {
    unified: '1F9DC-1F3FE',
    sheet: [52, 49]
  }, {
    unified: '1F9DC-1F3FF',
    sheet: [52, 50]
  }],
  shortName: 'merperson',
  obsoletedBy: '1F9DC-200D-2642-FE0F'
}, {
  name: 'Merman',
  unified: '1F9DC-200D-2642-FE0F',
  obsoletes: '1F9DC',
  keywords: ['merman', 'man', 'male', 'triton'],
  sheet: [52, 39],
  skinVariations: [{
    unified: '1F9DC-1F3FB-200D-2642-FE0F',
    sheet: [52, 40]
  }, {
    unified: '1F9DC-1F3FC-200D-2642-FE0F',
    sheet: [52, 41]
  }, {
    unified: '1F9DC-1F3FD-200D-2642-FE0F',
    sheet: [52, 42]
  }, {
    unified: '1F9DC-1F3FE-200D-2642-FE0F',
    sheet: [52, 43]
  }, {
    unified: '1F9DC-1F3FF-200D-2642-FE0F',
    sheet: [52, 44]
  }],
  shortName: 'merman'
}, {
  name: 'Mermaid',
  unified: '1F9DC-200D-2640-FE0F',
  keywords: ['mermaid', 'woman', 'female', 'merwoman', 'ariel'],
  sheet: [52, 33],
  skinVariations: [{
    unified: '1F9DC-1F3FB-200D-2640-FE0F',
    sheet: [52, 34]
  }, {
    unified: '1F9DC-1F3FC-200D-2640-FE0F',
    sheet: [52, 35]
  }, {
    unified: '1F9DC-1F3FD-200D-2640-FE0F',
    sheet: [52, 36]
  }, {
    unified: '1F9DC-1F3FE-200D-2640-FE0F',
    sheet: [52, 37]
  }, {
    unified: '1F9DC-1F3FF-200D-2640-FE0F',
    sheet: [52, 38]
  }],
  shortName: 'mermaid'
}, {
  name: 'Elf',
  unified: '1F9DD',
  keywords: ['elf', 'magical'],
  sheet: [53, 2],
  skinVariations: [{
    unified: '1F9DD-1F3FB',
    sheet: [53, 3]
  }, {
    unified: '1F9DD-1F3FC',
    sheet: [53, 4]
  }, {
    unified: '1F9DD-1F3FD',
    sheet: [53, 5]
  }, {
    unified: '1F9DD-1F3FE',
    sheet: [53, 6]
  }, {
    unified: '1F9DD-1F3FF',
    sheet: [53, 7]
  }],
  shortName: 'elf',
  obsoletedBy: '1F9DD-200D-2642-FE0F'
}, {
  name: 'Man Elf',
  unified: '1F9DD-200D-2642-FE0F',
  obsoletes: '1F9DD',
  keywords: ['man_elf', 'man', 'male'],
  sheet: [52, 57],
  skinVariations: [{
    unified: '1F9DD-1F3FB-200D-2642-FE0F',
    sheet: [52, 58]
  }, {
    unified: '1F9DD-1F3FC-200D-2642-FE0F',
    sheet: [52, 59]
  }, {
    unified: '1F9DD-1F3FD-200D-2642-FE0F',
    sheet: [52, 60]
  }, {
    unified: '1F9DD-1F3FE-200D-2642-FE0F',
    sheet: [53, 0]
  }, {
    unified: '1F9DD-1F3FF-200D-2642-FE0F',
    sheet: [53, 1]
  }],
  shortName: 'male_elf'
}, {
  name: 'Woman Elf',
  unified: '1F9DD-200D-2640-FE0F',
  keywords: ['woman_elf', 'woman', 'female'],
  sheet: [52, 51],
  skinVariations: [{
    unified: '1F9DD-1F3FB-200D-2640-FE0F',
    sheet: [52, 52]
  }, {
    unified: '1F9DD-1F3FC-200D-2640-FE0F',
    sheet: [52, 53]
  }, {
    unified: '1F9DD-1F3FD-200D-2640-FE0F',
    sheet: [52, 54]
  }, {
    unified: '1F9DD-1F3FE-200D-2640-FE0F',
    sheet: [52, 55]
  }, {
    unified: '1F9DD-1F3FF-200D-2640-FE0F',
    sheet: [52, 56]
  }],
  shortName: 'female_elf'
}, {
  name: 'Genie',
  unified: '1F9DE',
  keywords: ['genie', 'magical', 'wishes'],
  sheet: [53, 10],
  shortName: 'genie',
  obsoletedBy: '1F9DE-200D-2642-FE0F'
}, {
  name: 'Man Genie',
  unified: '1F9DE-200D-2642-FE0F',
  obsoletes: '1F9DE',
  keywords: ['man_genie', 'man', 'male'],
  sheet: [53, 9],
  shortName: 'male_genie'
}, {
  name: 'Woman Genie',
  unified: '1F9DE-200D-2640-FE0F',
  keywords: ['woman_genie', 'woman', 'female'],
  sheet: [53, 8],
  shortName: 'female_genie'
}, {
  name: 'Zombie',
  unified: '1F9DF',
  keywords: ['zombie', 'dead'],
  sheet: [53, 13],
  shortName: 'zombie',
  obsoletedBy: '1F9DF-200D-2642-FE0F'
}, {
  name: 'Man Zombie',
  unified: '1F9DF-200D-2642-FE0F',
  obsoletes: '1F9DF',
  keywords: ['man_zombie', 'man', 'male', 'dracula', 'undead', 'walking dead'],
  sheet: [53, 12],
  shortName: 'male_zombie'
}, {
  name: 'Woman Zombie',
  unified: '1F9DF-200D-2640-FE0F',
  keywords: ['woman_zombie', 'woman', 'female', 'undead', 'walking dead'],
  sheet: [53, 11],
  shortName: 'female_zombie'
}, {
  name: 'Troll',
  unified: '1F9CC',
  keywords: ['troll', 'mystical', 'monster'],
  sheet: [46, 17],
  hidden: ['facebook'],
  shortName: 'troll'
}, {
  name: 'Face Massage',
  unified: '1F486',
  keywords: ['person_getting_massage', 'relax'],
  sheet: [26, 10],
  skinVariations: [{
    unified: '1F486-1F3FB',
    sheet: [26, 11]
  }, {
    unified: '1F486-1F3FC',
    sheet: [26, 12]
  }, {
    unified: '1F486-1F3FD',
    sheet: [26, 13]
  }, {
    unified: '1F486-1F3FE',
    sheet: [26, 14]
  }, {
    unified: '1F486-1F3FF',
    sheet: [26, 15]
  }],
  shortName: 'massage',
  obsoletedBy: '1F486-200D-2640-FE0F'
}, {
  name: 'Man Getting Massage',
  unified: '1F486-200D-2642-FE0F',
  keywords: ['man_getting_massage', 'male', 'boy', 'man', 'head'],
  sheet: [26, 4],
  skinVariations: [{
    unified: '1F486-1F3FB-200D-2642-FE0F',
    sheet: [26, 5]
  }, {
    unified: '1F486-1F3FC-200D-2642-FE0F',
    sheet: [26, 6]
  }, {
    unified: '1F486-1F3FD-200D-2642-FE0F',
    sheet: [26, 7]
  }, {
    unified: '1F486-1F3FE-200D-2642-FE0F',
    sheet: [26, 8]
  }, {
    unified: '1F486-1F3FF-200D-2642-FE0F',
    sheet: [26, 9]
  }],
  shortName: 'man-getting-massage'
}, {
  name: 'Woman Getting Massage',
  unified: '1F486-200D-2640-FE0F',
  obsoletes: '1F486',
  keywords: ['woman_getting_massage', 'female', 'girl', 'woman', 'head'],
  sheet: [25, 59],
  skinVariations: [{
    unified: '1F486-1F3FB-200D-2640-FE0F',
    sheet: [25, 60]
  }, {
    unified: '1F486-1F3FC-200D-2640-FE0F',
    sheet: [26, 0]
  }, {
    unified: '1F486-1F3FD-200D-2640-FE0F',
    sheet: [26, 1]
  }, {
    unified: '1F486-1F3FE-200D-2640-FE0F',
    sheet: [26, 2]
  }, {
    unified: '1F486-1F3FF-200D-2640-FE0F',
    sheet: [26, 3]
  }],
  shortName: 'woman-getting-massage'
}, {
  name: 'Haircut',
  unified: '1F487',
  keywords: ['person_getting_haircut', 'hairstyle'],
  sheet: [26, 28],
  skinVariations: [{
    unified: '1F487-1F3FB',
    sheet: [26, 29]
  }, {
    unified: '1F487-1F3FC',
    sheet: [26, 30]
  }, {
    unified: '1F487-1F3FD',
    sheet: [26, 31]
  }, {
    unified: '1F487-1F3FE',
    sheet: [26, 32]
  }, {
    unified: '1F487-1F3FF',
    sheet: [26, 33]
  }],
  shortName: 'haircut',
  obsoletedBy: '1F487-200D-2640-FE0F'
}, {
  name: 'Man Getting Haircut',
  unified: '1F487-200D-2642-FE0F',
  keywords: ['man_getting_haircut', 'male', 'boy', 'man'],
  sheet: [26, 22],
  skinVariations: [{
    unified: '1F487-1F3FB-200D-2642-FE0F',
    sheet: [26, 23]
  }, {
    unified: '1F487-1F3FC-200D-2642-FE0F',
    sheet: [26, 24]
  }, {
    unified: '1F487-1F3FD-200D-2642-FE0F',
    sheet: [26, 25]
  }, {
    unified: '1F487-1F3FE-200D-2642-FE0F',
    sheet: [26, 26]
  }, {
    unified: '1F487-1F3FF-200D-2642-FE0F',
    sheet: [26, 27]
  }],
  shortName: 'man-getting-haircut'
}, {
  name: 'Woman Getting Haircut',
  unified: '1F487-200D-2640-FE0F',
  obsoletes: '1F487',
  keywords: ['woman_getting_haircut', 'female', 'girl', 'woman'],
  sheet: [26, 16],
  skinVariations: [{
    unified: '1F487-1F3FB-200D-2640-FE0F',
    sheet: [26, 17]
  }, {
    unified: '1F487-1F3FC-200D-2640-FE0F',
    sheet: [26, 18]
  }, {
    unified: '1F487-1F3FD-200D-2640-FE0F',
    sheet: [26, 19]
  }, {
    unified: '1F487-1F3FE-200D-2640-FE0F',
    sheet: [26, 20]
  }, {
    unified: '1F487-1F3FF-200D-2640-FE0F',
    sheet: [26, 21]
  }],
  shortName: 'woman-getting-haircut'
}, {
  name: 'Pedestrian',
  unified: '1F6B6',
  keywords: ['person_walking', 'move'],
  sheet: [37, 27],
  skinVariations: [{
    unified: '1F6B6-1F3FB',
    sheet: [37, 28]
  }, {
    unified: '1F6B6-1F3FC',
    sheet: [37, 29]
  }, {
    unified: '1F6B6-1F3FD',
    sheet: [37, 30]
  }, {
    unified: '1F6B6-1F3FE',
    sheet: [37, 31]
  }, {
    unified: '1F6B6-1F3FF',
    sheet: [37, 32]
  }],
  shortName: 'walking',
  obsoletedBy: '1F6B6-200D-2642-FE0F'
}, {
  name: 'Man Walking',
  unified: '1F6B6-200D-2642-FE0F',
  obsoletes: '1F6B6',
  keywords: ['man_walking', 'human', 'feet', 'steps'],
  sheet: [37, 21],
  skinVariations: [{
    unified: '1F6B6-1F3FB-200D-2642-FE0F',
    sheet: [37, 22]
  }, {
    unified: '1F6B6-1F3FC-200D-2642-FE0F',
    sheet: [37, 23]
  }, {
    unified: '1F6B6-1F3FD-200D-2642-FE0F',
    sheet: [37, 24]
  }, {
    unified: '1F6B6-1F3FE-200D-2642-FE0F',
    sheet: [37, 25]
  }, {
    unified: '1F6B6-1F3FF-200D-2642-FE0F',
    sheet: [37, 26]
  }],
  shortName: 'man-walking'
}, {
  name: 'Woman Walking',
  unified: '1F6B6-200D-2640-FE0F',
  keywords: ['woman_walking', 'human', 'feet', 'steps', 'woman', 'female'],
  sheet: [37, 15],
  skinVariations: [{
    unified: '1F6B6-1F3FB-200D-2640-FE0F',
    sheet: [37, 16]
  }, {
    unified: '1F6B6-1F3FC-200D-2640-FE0F',
    sheet: [37, 17]
  }, {
    unified: '1F6B6-1F3FD-200D-2640-FE0F',
    sheet: [37, 18]
  }, {
    unified: '1F6B6-1F3FE-200D-2640-FE0F',
    sheet: [37, 19]
  }, {
    unified: '1F6B6-1F3FF-200D-2640-FE0F',
    sheet: [37, 20]
  }],
  shortName: 'woman-walking'
}, {
  name: 'Standing Person',
  unified: '1F9CD',
  keywords: ['person_standing', 'still'],
  sheet: [46, 30],
  skinVariations: [{
    unified: '1F9CD-1F3FB',
    sheet: [46, 31]
  }, {
    unified: '1F9CD-1F3FC',
    sheet: [46, 32]
  }, {
    unified: '1F9CD-1F3FD',
    sheet: [46, 33]
  }, {
    unified: '1F9CD-1F3FE',
    sheet: [46, 34]
  }, {
    unified: '1F9CD-1F3FF',
    sheet: [46, 35]
  }],
  shortName: 'standing_person'
}, {
  name: 'Man Standing',
  unified: '1F9CD-200D-2642-FE0F',
  keywords: ['man_standing', 'still'],
  sheet: [46, 24],
  skinVariations: [{
    unified: '1F9CD-1F3FB-200D-2642-FE0F',
    sheet: [46, 25]
  }, {
    unified: '1F9CD-1F3FC-200D-2642-FE0F',
    sheet: [46, 26]
  }, {
    unified: '1F9CD-1F3FD-200D-2642-FE0F',
    sheet: [46, 27]
  }, {
    unified: '1F9CD-1F3FE-200D-2642-FE0F',
    sheet: [46, 28]
  }, {
    unified: '1F9CD-1F3FF-200D-2642-FE0F',
    sheet: [46, 29]
  }],
  shortName: 'man_standing'
}, {
  name: 'Woman Standing',
  unified: '1F9CD-200D-2640-FE0F',
  keywords: ['woman_standing', 'still'],
  sheet: [46, 18],
  skinVariations: [{
    unified: '1F9CD-1F3FB-200D-2640-FE0F',
    sheet: [46, 19]
  }, {
    unified: '1F9CD-1F3FC-200D-2640-FE0F',
    sheet: [46, 20]
  }, {
    unified: '1F9CD-1F3FD-200D-2640-FE0F',
    sheet: [46, 21]
  }, {
    unified: '1F9CD-1F3FE-200D-2640-FE0F',
    sheet: [46, 22]
  }, {
    unified: '1F9CD-1F3FF-200D-2640-FE0F',
    sheet: [46, 23]
  }],
  shortName: 'woman_standing'
}, {
  name: 'Kneeling Person',
  unified: '1F9CE',
  keywords: ['person_kneeling', 'pray', 'respectful'],
  sheet: [46, 48],
  skinVariations: [{
    unified: '1F9CE-1F3FB',
    sheet: [46, 49]
  }, {
    unified: '1F9CE-1F3FC',
    sheet: [46, 50]
  }, {
    unified: '1F9CE-1F3FD',
    sheet: [46, 51]
  }, {
    unified: '1F9CE-1F3FE',
    sheet: [46, 52]
  }, {
    unified: '1F9CE-1F3FF',
    sheet: [46, 53]
  }],
  shortName: 'kneeling_person'
}, {
  name: 'Man Kneeling',
  unified: '1F9CE-200D-2642-FE0F',
  keywords: ['man_kneeling', 'pray', 'respectful'],
  sheet: [46, 42],
  skinVariations: [{
    unified: '1F9CE-1F3FB-200D-2642-FE0F',
    sheet: [46, 43]
  }, {
    unified: '1F9CE-1F3FC-200D-2642-FE0F',
    sheet: [46, 44]
  }, {
    unified: '1F9CE-1F3FD-200D-2642-FE0F',
    sheet: [46, 45]
  }, {
    unified: '1F9CE-1F3FE-200D-2642-FE0F',
    sheet: [46, 46]
  }, {
    unified: '1F9CE-1F3FF-200D-2642-FE0F',
    sheet: [46, 47]
  }],
  shortName: 'man_kneeling'
}, {
  name: 'Woman Kneeling',
  unified: '1F9CE-200D-2640-FE0F',
  keywords: ['woman_kneeling', 'respectful', 'pray'],
  sheet: [46, 36],
  skinVariations: [{
    unified: '1F9CE-1F3FB-200D-2640-FE0F',
    sheet: [46, 37]
  }, {
    unified: '1F9CE-1F3FC-200D-2640-FE0F',
    sheet: [46, 38]
  }, {
    unified: '1F9CE-1F3FD-200D-2640-FE0F',
    sheet: [46, 39]
  }, {
    unified: '1F9CE-1F3FE-200D-2640-FE0F',
    sheet: [46, 40]
  }, {
    unified: '1F9CE-1F3FF-200D-2640-FE0F',
    sheet: [46, 41]
  }],
  shortName: 'woman_kneeling'
}, {
  name: 'Person with White Cane',
  unified: '1F9D1-200D-1F9AF',
  keywords: ['person_with_probing_cane', 'blind'],
  sheet: [49, 6],
  skinVariations: [{
    unified: '1F9D1-1F3FB-200D-1F9AF',
    sheet: [49, 7]
  }, {
    unified: '1F9D1-1F3FC-200D-1F9AF',
    sheet: [49, 8]
  }, {
    unified: '1F9D1-1F3FD-200D-1F9AF',
    sheet: [49, 9]
  }, {
    unified: '1F9D1-1F3FE-200D-1F9AF',
    sheet: [49, 10]
  }, {
    unified: '1F9D1-1F3FF-200D-1F9AF',
    sheet: [49, 11]
  }],
  shortName: 'person_with_probing_cane'
}, {
  name: 'Man with White Cane',
  unified: '1F468-200D-1F9AF',
  keywords: ['man_with_probing_cane', 'blind'],
  sheet: [15, 23],
  skinVariations: [{
    unified: '1F468-1F3FB-200D-1F9AF',
    sheet: [15, 24]
  }, {
    unified: '1F468-1F3FC-200D-1F9AF',
    sheet: [15, 25]
  }, {
    unified: '1F468-1F3FD-200D-1F9AF',
    sheet: [15, 26]
  }, {
    unified: '1F468-1F3FE-200D-1F9AF',
    sheet: [15, 27]
  }, {
    unified: '1F468-1F3FF-200D-1F9AF',
    sheet: [15, 28]
  }],
  shortName: 'man_with_probing_cane'
}, {
  name: 'Woman with White Cane',
  unified: '1F469-200D-1F9AF',
  keywords: ['woman_with_probing_cane', 'blind'],
  sheet: [18, 52],
  skinVariations: [{
    unified: '1F469-1F3FB-200D-1F9AF',
    sheet: [18, 53]
  }, {
    unified: '1F469-1F3FC-200D-1F9AF',
    sheet: [18, 54]
  }, {
    unified: '1F469-1F3FD-200D-1F9AF',
    sheet: [18, 55]
  }, {
    unified: '1F469-1F3FE-200D-1F9AF',
    sheet: [18, 56]
  }, {
    unified: '1F469-1F3FF-200D-1F9AF',
    sheet: [18, 57]
  }],
  shortName: 'woman_with_probing_cane'
}, {
  name: 'Person in Motorized Wheelchair',
  unified: '1F9D1-200D-1F9BC',
  keywords: ['person_in_motorized_wheelchair', 'disability', 'accessibility'],
  sheet: [49, 36],
  skinVariations: [{
    unified: '1F9D1-1F3FB-200D-1F9BC',
    sheet: [49, 37]
  }, {
    unified: '1F9D1-1F3FC-200D-1F9BC',
    sheet: [49, 38]
  }, {
    unified: '1F9D1-1F3FD-200D-1F9BC',
    sheet: [49, 39]
  }, {
    unified: '1F9D1-1F3FE-200D-1F9BC',
    sheet: [49, 40]
  }, {
    unified: '1F9D1-1F3FF-200D-1F9BC',
    sheet: [49, 41]
  }],
  shortName: 'person_in_motorized_wheelchair'
}, {
  name: 'Man in Motorized Wheelchair',
  unified: '1F468-200D-1F9BC',
  keywords: ['man_in_motorized_wheelchair', 'disability', 'accessibility'],
  sheet: [15, 53],
  skinVariations: [{
    unified: '1F468-1F3FB-200D-1F9BC',
    sheet: [15, 54]
  }, {
    unified: '1F468-1F3FC-200D-1F9BC',
    sheet: [15, 55]
  }, {
    unified: '1F468-1F3FD-200D-1F9BC',
    sheet: [15, 56]
  }, {
    unified: '1F468-1F3FE-200D-1F9BC',
    sheet: [15, 57]
  }, {
    unified: '1F468-1F3FF-200D-1F9BC',
    sheet: [15, 58]
  }],
  shortName: 'man_in_motorized_wheelchair'
}, {
  name: 'Woman in Motorized Wheelchair',
  unified: '1F469-200D-1F9BC',
  keywords: ['woman_in_motorized_wheelchair', 'disability', 'accessibility'],
  sheet: [19, 21],
  skinVariations: [{
    unified: '1F469-1F3FB-200D-1F9BC',
    sheet: [19, 22]
  }, {
    unified: '1F469-1F3FC-200D-1F9BC',
    sheet: [19, 23]
  }, {
    unified: '1F469-1F3FD-200D-1F9BC',
    sheet: [19, 24]
  }, {
    unified: '1F469-1F3FE-200D-1F9BC',
    sheet: [19, 25]
  }, {
    unified: '1F469-1F3FF-200D-1F9BC',
    sheet: [19, 26]
  }],
  shortName: 'woman_in_motorized_wheelchair'
}, {
  name: 'Person in Manual Wheelchair',
  unified: '1F9D1-200D-1F9BD',
  keywords: ['person_in_manual_wheelchair', 'disability', 'accessibility'],
  sheet: [49, 42],
  skinVariations: [{
    unified: '1F9D1-1F3FB-200D-1F9BD',
    sheet: [49, 43]
  }, {
    unified: '1F9D1-1F3FC-200D-1F9BD',
    sheet: [49, 44]
  }, {
    unified: '1F9D1-1F3FD-200D-1F9BD',
    sheet: [49, 45]
  }, {
    unified: '1F9D1-1F3FE-200D-1F9BD',
    sheet: [49, 46]
  }, {
    unified: '1F9D1-1F3FF-200D-1F9BD',
    sheet: [49, 47]
  }],
  shortName: 'person_in_manual_wheelchair'
}, {
  name: 'Man in Manual Wheelchair',
  unified: '1F468-200D-1F9BD',
  keywords: ['man_in_manual_wheelchair', 'disability', 'accessibility'],
  sheet: [15, 59],
  skinVariations: [{
    unified: '1F468-1F3FB-200D-1F9BD',
    sheet: [15, 60]
  }, {
    unified: '1F468-1F3FC-200D-1F9BD',
    sheet: [16, 0]
  }, {
    unified: '1F468-1F3FD-200D-1F9BD',
    sheet: [16, 1]
  }, {
    unified: '1F468-1F3FE-200D-1F9BD',
    sheet: [16, 2]
  }, {
    unified: '1F468-1F3FF-200D-1F9BD',
    sheet: [16, 3]
  }],
  shortName: 'man_in_manual_wheelchair'
}, {
  name: 'Woman in Manual Wheelchair',
  unified: '1F469-200D-1F9BD',
  keywords: ['woman_in_manual_wheelchair', 'disability', 'accessibility'],
  sheet: [19, 27],
  skinVariations: [{
    unified: '1F469-1F3FB-200D-1F9BD',
    sheet: [19, 28]
  }, {
    unified: '1F469-1F3FC-200D-1F9BD',
    sheet: [19, 29]
  }, {
    unified: '1F469-1F3FD-200D-1F9BD',
    sheet: [19, 30]
  }, {
    unified: '1F469-1F3FE-200D-1F9BD',
    sheet: [19, 31]
  }, {
    unified: '1F469-1F3FF-200D-1F9BD',
    sheet: [19, 32]
  }],
  shortName: 'woman_in_manual_wheelchair'
}, {
  name: 'Runner',
  unified: '1F3C3',
  keywords: ['person_running', 'move'],
  sheet: [8, 26],
  skinVariations: [{
    unified: '1F3C3-1F3FB',
    sheet: [8, 27]
  }, {
    unified: '1F3C3-1F3FC',
    sheet: [8, 28]
  }, {
    unified: '1F3C3-1F3FD',
    sheet: [8, 29]
  }, {
    unified: '1F3C3-1F3FE',
    sheet: [8, 30]
  }, {
    unified: '1F3C3-1F3FF',
    sheet: [8, 31]
  }],
  shortNames: ['running'],
  shortName: 'runner',
  obsoletedBy: '1F3C3-200D-2642-FE0F'
}, {
  name: 'Man Running',
  unified: '1F3C3-200D-2642-FE0F',
  obsoletes: '1F3C3',
  keywords: ['man_running', 'man', 'walking', 'exercise', 'race', 'running'],
  sheet: [8, 20],
  skinVariations: [{
    unified: '1F3C3-1F3FB-200D-2642-FE0F',
    sheet: [8, 21]
  }, {
    unified: '1F3C3-1F3FC-200D-2642-FE0F',
    sheet: [8, 22]
  }, {
    unified: '1F3C3-1F3FD-200D-2642-FE0F',
    sheet: [8, 23]
  }, {
    unified: '1F3C3-1F3FE-200D-2642-FE0F',
    sheet: [8, 24]
  }, {
    unified: '1F3C3-1F3FF-200D-2642-FE0F',
    sheet: [8, 25]
  }],
  shortName: 'man-running'
}, {
  name: 'Woman Running',
  unified: '1F3C3-200D-2640-FE0F',
  keywords: ['woman_running', 'woman', 'walking', 'exercise', 'race', 'running', 'female'],
  sheet: [8, 14],
  skinVariations: [{
    unified: '1F3C3-1F3FB-200D-2640-FE0F',
    sheet: [8, 15]
  }, {
    unified: '1F3C3-1F3FC-200D-2640-FE0F',
    sheet: [8, 16]
  }, {
    unified: '1F3C3-1F3FD-200D-2640-FE0F',
    sheet: [8, 17]
  }, {
    unified: '1F3C3-1F3FE-200D-2640-FE0F',
    sheet: [8, 18]
  }, {
    unified: '1F3C3-1F3FF-200D-2640-FE0F',
    sheet: [8, 19]
  }],
  shortName: 'woman-running'
}, {
  name: 'Dancer',
  unified: '1F483',
  keywords: ['woman_dancing', 'female', 'girl', 'woman', 'fun'],
  sheet: [25, 46],
  skinVariations: [{
    unified: '1F483-1F3FB',
    sheet: [25, 47]
  }, {
    unified: '1F483-1F3FC',
    sheet: [25, 48]
  }, {
    unified: '1F483-1F3FD',
    sheet: [25, 49]
  }, {
    unified: '1F483-1F3FE',
    sheet: [25, 50]
  }, {
    unified: '1F483-1F3FF',
    sheet: [25, 51]
  }],
  shortName: 'dancer'
}, {
  name: 'Man Dancing',
  unified: '1F57A',
  keywords: ['man_dancing', 'male', 'boy', 'fun', 'dancer'],
  sheet: [31, 26],
  skinVariations: [{
    unified: '1F57A-1F3FB',
    sheet: [31, 27]
  }, {
    unified: '1F57A-1F3FC',
    sheet: [31, 28]
  }, {
    unified: '1F57A-1F3FD',
    sheet: [31, 29]
  }, {
    unified: '1F57A-1F3FE',
    sheet: [31, 30]
  }, {
    unified: '1F57A-1F3FF',
    sheet: [31, 31]
  }],
  shortName: 'man_dancing'
}, {
  name: 'Person in Suit Levitating',
  unified: '1F574-FE0F',
  keywords: ['man_in_suit_levitating', 'suit', 'business', 'levitate', 'hover', 'jump'],
  sheet: [30, 59],
  skinVariations: [{
    unified: '1F574-1F3FB',
    sheet: [30, 60]
  }, {
    unified: '1F574-1F3FC',
    sheet: [31, 0]
  }, {
    unified: '1F574-1F3FD',
    sheet: [31, 1]
  }, {
    unified: '1F574-1F3FE',
    sheet: [31, 2]
  }, {
    unified: '1F574-1F3FF',
    sheet: [31, 3]
  }],
  shortName: 'man_in_business_suit_levitating'
}, {
  name: 'Woman with Bunny Ears',
  unified: '1F46F',
  keywords: ['people_with_bunny_ears', 'perform', 'costume'],
  sheet: [23, 16],
  shortName: 'dancers',
  obsoletedBy: '1F46F-200D-2640-FE0F'
}, {
  name: 'Men with Bunny Ears',
  unified: '1F46F-200D-2642-FE0F',
  keywords: ['men_with_bunny_ears', 'male', 'bunny', 'men', 'boys'],
  sheet: [23, 15],
  shortNames: ['man-with-bunny-ears-partying'],
  shortName: 'men-with-bunny-ears-partying'
}, {
  name: 'Women with Bunny Ears',
  unified: '1F46F-200D-2640-FE0F',
  obsoletes: '1F46F',
  keywords: ['women_with_bunny_ears', 'female', 'bunny', 'women', 'girls'],
  sheet: [23, 14],
  shortNames: ['woman-with-bunny-ears-partying'],
  shortName: 'women-with-bunny-ears-partying'
}, {
  name: 'Person in Steamy Room',
  unified: '1F9D6',
  keywords: ['person_in_steamy_room', 'relax', 'spa'],
  sheet: [50, 59],
  skinVariations: [{
    unified: '1F9D6-1F3FB',
    sheet: [50, 60]
  }, {
    unified: '1F9D6-1F3FC',
    sheet: [51, 0]
  }, {
    unified: '1F9D6-1F3FD',
    sheet: [51, 1]
  }, {
    unified: '1F9D6-1F3FE',
    sheet: [51, 2]
  }, {
    unified: '1F9D6-1F3FF',
    sheet: [51, 3]
  }],
  shortName: 'person_in_steamy_room',
  obsoletedBy: '1F9D6-200D-2642-FE0F'
}, {
  name: 'Man in Steamy Room',
  unified: '1F9D6-200D-2642-FE0F',
  obsoletes: '1F9D6',
  keywords: ['man_in_steamy_room', 'male', 'man', 'spa', 'steamroom', 'sauna'],
  sheet: [50, 53],
  skinVariations: [{
    unified: '1F9D6-1F3FB-200D-2642-FE0F',
    sheet: [50, 54]
  }, {
    unified: '1F9D6-1F3FC-200D-2642-FE0F',
    sheet: [50, 55]
  }, {
    unified: '1F9D6-1F3FD-200D-2642-FE0F',
    sheet: [50, 56]
  }, {
    unified: '1F9D6-1F3FE-200D-2642-FE0F',
    sheet: [50, 57]
  }, {
    unified: '1F9D6-1F3FF-200D-2642-FE0F',
    sheet: [50, 58]
  }],
  shortName: 'man_in_steamy_room'
}, {
  name: 'Woman in Steamy Room',
  unified: '1F9D6-200D-2640-FE0F',
  keywords: ['woman_in_steamy_room', 'female', 'woman', 'spa', 'steamroom', 'sauna'],
  sheet: [50, 47],
  skinVariations: [{
    unified: '1F9D6-1F3FB-200D-2640-FE0F',
    sheet: [50, 48]
  }, {
    unified: '1F9D6-1F3FC-200D-2640-FE0F',
    sheet: [50, 49]
  }, {
    unified: '1F9D6-1F3FD-200D-2640-FE0F',
    sheet: [50, 50]
  }, {
    unified: '1F9D6-1F3FE-200D-2640-FE0F',
    sheet: [50, 51]
  }, {
    unified: '1F9D6-1F3FF-200D-2640-FE0F',
    sheet: [50, 52]
  }],
  shortName: 'woman_in_steamy_room'
}, {
  name: 'Person Climbing',
  unified: '1F9D7',
  keywords: ['person_climbing', 'sport'],
  sheet: [51, 16],
  skinVariations: [{
    unified: '1F9D7-1F3FB',
    sheet: [51, 17]
  }, {
    unified: '1F9D7-1F3FC',
    sheet: [51, 18]
  }, {
    unified: '1F9D7-1F3FD',
    sheet: [51, 19]
  }, {
    unified: '1F9D7-1F3FE',
    sheet: [51, 20]
  }, {
    unified: '1F9D7-1F3FF',
    sheet: [51, 21]
  }],
  shortName: 'person_climbing',
  obsoletedBy: '1F9D7-200D-2640-FE0F'
}, {
  name: 'Man Climbing',
  unified: '1F9D7-200D-2642-FE0F',
  keywords: ['man_climbing', 'sports', 'hobby', 'man', 'male', 'rock'],
  sheet: [51, 10],
  skinVariations: [{
    unified: '1F9D7-1F3FB-200D-2642-FE0F',
    sheet: [51, 11]
  }, {
    unified: '1F9D7-1F3FC-200D-2642-FE0F',
    sheet: [51, 12]
  }, {
    unified: '1F9D7-1F3FD-200D-2642-FE0F',
    sheet: [51, 13]
  }, {
    unified: '1F9D7-1F3FE-200D-2642-FE0F',
    sheet: [51, 14]
  }, {
    unified: '1F9D7-1F3FF-200D-2642-FE0F',
    sheet: [51, 15]
  }],
  shortName: 'man_climbing'
}, {
  name: 'Woman Climbing',
  unified: '1F9D7-200D-2640-FE0F',
  obsoletes: '1F9D7',
  keywords: ['woman_climbing', 'sports', 'hobby', 'woman', 'female', 'rock'],
  sheet: [51, 4],
  skinVariations: [{
    unified: '1F9D7-1F3FB-200D-2640-FE0F',
    sheet: [51, 5]
  }, {
    unified: '1F9D7-1F3FC-200D-2640-FE0F',
    sheet: [51, 6]
  }, {
    unified: '1F9D7-1F3FD-200D-2640-FE0F',
    sheet: [51, 7]
  }, {
    unified: '1F9D7-1F3FE-200D-2640-FE0F',
    sheet: [51, 8]
  }, {
    unified: '1F9D7-1F3FF-200D-2640-FE0F',
    sheet: [51, 9]
  }],
  shortName: 'woman_climbing'
}, {
  name: 'Fencer',
  unified: '1F93A',
  keywords: ['person_fencing', 'sports', 'fencing', 'sword'],
  sheet: [42, 31],
  shortName: 'fencer'
}, {
  name: 'Horse Racing',
  unified: '1F3C7',
  keywords: ['horse_racing', 'animal', 'betting', 'competition', 'gambling', 'luck'],
  sheet: [8, 52],
  skinVariations: [{
    unified: '1F3C7-1F3FB',
    sheet: [8, 53]
  }, {
    unified: '1F3C7-1F3FC',
    sheet: [8, 54]
  }, {
    unified: '1F3C7-1F3FD',
    sheet: [8, 55]
  }, {
    unified: '1F3C7-1F3FE',
    sheet: [8, 56]
  }, {
    unified: '1F3C7-1F3FF',
    sheet: [8, 57]
  }],
  shortName: 'horse_racing'
}, {
  name: 'Skier',
  unified: '26F7-FE0F',
  keywords: ['skier', 'sports', 'winter', 'snow'],
  sheet: [58, 1],
  shortName: 'skier'
}, {
  name: 'Snowboarder',
  unified: '1F3C2',
  keywords: ['snowboarder', 'sports', 'winter'],
  sheet: [8, 8],
  skinVariations: [{
    unified: '1F3C2-1F3FB',
    sheet: [8, 9]
  }, {
    unified: '1F3C2-1F3FC',
    sheet: [8, 10]
  }, {
    unified: '1F3C2-1F3FD',
    sheet: [8, 11]
  }, {
    unified: '1F3C2-1F3FE',
    sheet: [8, 12]
  }, {
    unified: '1F3C2-1F3FF',
    sheet: [8, 13]
  }],
  shortName: 'snowboarder'
}, {
  name: 'Person Golfing',
  unified: '1F3CC-FE0F',
  keywords: ['person_golfing', 'sports', 'business'],
  sheet: [9, 47],
  skinVariations: [{
    unified: '1F3CC-1F3FB',
    sheet: [9, 48]
  }, {
    unified: '1F3CC-1F3FC',
    sheet: [9, 49]
  }, {
    unified: '1F3CC-1F3FD',
    sheet: [9, 50]
  }, {
    unified: '1F3CC-1F3FE',
    sheet: [9, 51]
  }, {
    unified: '1F3CC-1F3FF',
    sheet: [9, 52]
  }],
  shortName: 'golfer',
  obsoletedBy: '1F3CC-FE0F-200D-2642-FE0F'
}, {
  name: 'Man Golfing',
  unified: '1F3CC-FE0F-200D-2642-FE0F',
  obsoletes: '1F3CC-FE0F',
  keywords: ['man_golfing', 'sport'],
  sheet: [9, 41],
  hidden: ['facebook'],
  skinVariations: [{
    unified: '1F3CC-1F3FB-200D-2642-FE0F',
    sheet: [9, 42]
  }, {
    unified: '1F3CC-1F3FC-200D-2642-FE0F',
    sheet: [9, 43]
  }, {
    unified: '1F3CC-1F3FD-200D-2642-FE0F',
    sheet: [9, 44]
  }, {
    unified: '1F3CC-1F3FE-200D-2642-FE0F',
    sheet: [9, 45]
  }, {
    unified: '1F3CC-1F3FF-200D-2642-FE0F',
    sheet: [9, 46]
  }],
  shortName: 'man-golfing'
}, {
  name: 'Woman Golfing',
  unified: '1F3CC-FE0F-200D-2640-FE0F',
  keywords: ['woman_golfing', 'sports', 'business', 'woman', 'female'],
  sheet: [9, 35],
  hidden: ['facebook'],
  skinVariations: [{
    unified: '1F3CC-1F3FB-200D-2640-FE0F',
    sheet: [9, 36]
  }, {
    unified: '1F3CC-1F3FC-200D-2640-FE0F',
    sheet: [9, 37]
  }, {
    unified: '1F3CC-1F3FD-200D-2640-FE0F',
    sheet: [9, 38]
  }, {
    unified: '1F3CC-1F3FE-200D-2640-FE0F',
    sheet: [9, 39]
  }, {
    unified: '1F3CC-1F3FF-200D-2640-FE0F',
    sheet: [9, 40]
  }],
  shortName: 'woman-golfing'
}, {
  name: 'Surfer',
  unified: '1F3C4',
  keywords: ['person_surfing', 'sport', 'sea'],
  sheet: [8, 44],
  skinVariations: [{
    unified: '1F3C4-1F3FB',
    sheet: [8, 45]
  }, {
    unified: '1F3C4-1F3FC',
    sheet: [8, 46]
  }, {
    unified: '1F3C4-1F3FD',
    sheet: [8, 47]
  }, {
    unified: '1F3C4-1F3FE',
    sheet: [8, 48]
  }, {
    unified: '1F3C4-1F3FF',
    sheet: [8, 49]
  }],
  shortName: 'surfer',
  obsoletedBy: '1F3C4-200D-2642-FE0F'
}, {
  name: 'Man Surfing',
  unified: '1F3C4-200D-2642-FE0F',
  obsoletes: '1F3C4',
  keywords: ['man_surfing', 'sports', 'ocean', 'sea', 'summer', 'beach'],
  sheet: [8, 38],
  skinVariations: [{
    unified: '1F3C4-1F3FB-200D-2642-FE0F',
    sheet: [8, 39]
  }, {
    unified: '1F3C4-1F3FC-200D-2642-FE0F',
    sheet: [8, 40]
  }, {
    unified: '1F3C4-1F3FD-200D-2642-FE0F',
    sheet: [8, 41]
  }, {
    unified: '1F3C4-1F3FE-200D-2642-FE0F',
    sheet: [8, 42]
  }, {
    unified: '1F3C4-1F3FF-200D-2642-FE0F',
    sheet: [8, 43]
  }],
  shortName: 'man-surfing'
}, {
  name: 'Woman Surfing',
  unified: '1F3C4-200D-2640-FE0F',
  keywords: ['woman_surfing', 'sports', 'ocean', 'sea', 'summer', 'beach', 'woman', 'female'],
  sheet: [8, 32],
  skinVariations: [{
    unified: '1F3C4-1F3FB-200D-2640-FE0F',
    sheet: [8, 33]
  }, {
    unified: '1F3C4-1F3FC-200D-2640-FE0F',
    sheet: [8, 34]
  }, {
    unified: '1F3C4-1F3FD-200D-2640-FE0F',
    sheet: [8, 35]
  }, {
    unified: '1F3C4-1F3FE-200D-2640-FE0F',
    sheet: [8, 36]
  }, {
    unified: '1F3C4-1F3FF-200D-2640-FE0F',
    sheet: [8, 37]
  }],
  shortName: 'woman-surfing'
}, {
  name: 'Rowboat',
  unified: '1F6A3',
  keywords: ['person_rowing_boat', 'sport', 'move'],
  sheet: [36, 18],
  skinVariations: [{
    unified: '1F6A3-1F3FB',
    sheet: [36, 19]
  }, {
    unified: '1F6A3-1F3FC',
    sheet: [36, 20]
  }, {
    unified: '1F6A3-1F3FD',
    sheet: [36, 21]
  }, {
    unified: '1F6A3-1F3FE',
    sheet: [36, 22]
  }, {
    unified: '1F6A3-1F3FF',
    sheet: [36, 23]
  }],
  shortName: 'rowboat',
  obsoletedBy: '1F6A3-200D-2642-FE0F'
}, {
  name: 'Man Rowing Boat',
  unified: '1F6A3-200D-2642-FE0F',
  obsoletes: '1F6A3',
  keywords: ['man_rowing_boat', 'sports', 'hobby', 'water', 'ship'],
  sheet: [36, 12],
  skinVariations: [{
    unified: '1F6A3-1F3FB-200D-2642-FE0F',
    sheet: [36, 13]
  }, {
    unified: '1F6A3-1F3FC-200D-2642-FE0F',
    sheet: [36, 14]
  }, {
    unified: '1F6A3-1F3FD-200D-2642-FE0F',
    sheet: [36, 15]
  }, {
    unified: '1F6A3-1F3FE-200D-2642-FE0F',
    sheet: [36, 16]
  }, {
    unified: '1F6A3-1F3FF-200D-2642-FE0F',
    sheet: [36, 17]
  }],
  shortName: 'man-rowing-boat'
}, {
  name: 'Woman Rowing Boat',
  unified: '1F6A3-200D-2640-FE0F',
  keywords: ['woman_rowing_boat', 'sports', 'hobby', 'water', 'ship', 'woman', 'female'],
  sheet: [36, 6],
  skinVariations: [{
    unified: '1F6A3-1F3FB-200D-2640-FE0F',
    sheet: [36, 7]
  }, {
    unified: '1F6A3-1F3FC-200D-2640-FE0F',
    sheet: [36, 8]
  }, {
    unified: '1F6A3-1F3FD-200D-2640-FE0F',
    sheet: [36, 9]
  }, {
    unified: '1F6A3-1F3FE-200D-2640-FE0F',
    sheet: [36, 10]
  }, {
    unified: '1F6A3-1F3FF-200D-2640-FE0F',
    sheet: [36, 11]
  }],
  shortName: 'woman-rowing-boat'
}, {
  name: 'Swimmer',
  unified: '1F3CA',
  keywords: ['person_swimming', 'sport', 'pool'],
  sheet: [9, 11],
  skinVariations: [{
    unified: '1F3CA-1F3FB',
    sheet: [9, 12]
  }, {
    unified: '1F3CA-1F3FC',
    sheet: [9, 13]
  }, {
    unified: '1F3CA-1F3FD',
    sheet: [9, 14]
  }, {
    unified: '1F3CA-1F3FE',
    sheet: [9, 15]
  }, {
    unified: '1F3CA-1F3FF',
    sheet: [9, 16]
  }],
  shortName: 'swimmer',
  obsoletedBy: '1F3CA-200D-2642-FE0F'
}, {
  name: 'Man Swimming',
  unified: '1F3CA-200D-2642-FE0F',
  obsoletes: '1F3CA',
  keywords: ['man_swimming', 'sports', 'exercise', 'human', 'athlete', 'water', 'summer'],
  sheet: [9, 5],
  skinVariations: [{
    unified: '1F3CA-1F3FB-200D-2642-FE0F',
    sheet: [9, 6]
  }, {
    unified: '1F3CA-1F3FC-200D-2642-FE0F',
    sheet: [9, 7]
  }, {
    unified: '1F3CA-1F3FD-200D-2642-FE0F',
    sheet: [9, 8]
  }, {
    unified: '1F3CA-1F3FE-200D-2642-FE0F',
    sheet: [9, 9]
  }, {
    unified: '1F3CA-1F3FF-200D-2642-FE0F',
    sheet: [9, 10]
  }],
  shortName: 'man-swimming'
}, {
  name: 'Woman Swimming',
  unified: '1F3CA-200D-2640-FE0F',
  keywords: ['woman_swimming', 'sports', 'exercise', 'human', 'athlete', 'water', 'summer', 'woman', 'female'],
  sheet: [8, 60],
  skinVariations: [{
    unified: '1F3CA-1F3FB-200D-2640-FE0F',
    sheet: [9, 0]
  }, {
    unified: '1F3CA-1F3FC-200D-2640-FE0F',
    sheet: [9, 1]
  }, {
    unified: '1F3CA-1F3FD-200D-2640-FE0F',
    sheet: [9, 2]
  }, {
    unified: '1F3CA-1F3FE-200D-2640-FE0F',
    sheet: [9, 3]
  }, {
    unified: '1F3CA-1F3FF-200D-2640-FE0F',
    sheet: [9, 4]
  }],
  shortName: 'woman-swimming'
}, {
  name: 'Person Bouncing Ball',
  unified: '26F9-FE0F',
  keywords: ['person_bouncing_ball', 'sports', 'human'],
  sheet: [58, 15],
  skinVariations: [{
    unified: '26F9-1F3FB',
    sheet: [58, 16]
  }, {
    unified: '26F9-1F3FC',
    sheet: [58, 17]
  }, {
    unified: '26F9-1F3FD',
    sheet: [58, 18]
  }, {
    unified: '26F9-1F3FE',
    sheet: [58, 19]
  }, {
    unified: '26F9-1F3FF',
    sheet: [58, 20]
  }],
  shortName: 'person_with_ball',
  obsoletedBy: '26F9-FE0F-200D-2642-FE0F'
}, {
  name: 'Man Bouncing Ball',
  unified: '26F9-FE0F-200D-2642-FE0F',
  obsoletes: '26F9-FE0F',
  keywords: ['man_bouncing_ball', 'sport'],
  sheet: [58, 9],
  hidden: ['facebook'],
  skinVariations: [{
    unified: '26F9-1F3FB-200D-2642-FE0F',
    sheet: [58, 10]
  }, {
    unified: '26F9-1F3FC-200D-2642-FE0F',
    sheet: [58, 11]
  }, {
    unified: '26F9-1F3FD-200D-2642-FE0F',
    sheet: [58, 12]
  }, {
    unified: '26F9-1F3FE-200D-2642-FE0F',
    sheet: [58, 13]
  }, {
    unified: '26F9-1F3FF-200D-2642-FE0F',
    sheet: [58, 14]
  }],
  shortName: 'man-bouncing-ball'
}, {
  name: 'Woman Bouncing Ball',
  unified: '26F9-FE0F-200D-2640-FE0F',
  keywords: ['woman_bouncing_ball', 'sports', 'human', 'woman', 'female'],
  sheet: [58, 3],
  hidden: ['facebook'],
  skinVariations: [{
    unified: '26F9-1F3FB-200D-2640-FE0F',
    sheet: [58, 4]
  }, {
    unified: '26F9-1F3FC-200D-2640-FE0F',
    sheet: [58, 5]
  }, {
    unified: '26F9-1F3FD-200D-2640-FE0F',
    sheet: [58, 6]
  }, {
    unified: '26F9-1F3FE-200D-2640-FE0F',
    sheet: [58, 7]
  }, {
    unified: '26F9-1F3FF-200D-2640-FE0F',
    sheet: [58, 8]
  }],
  shortName: 'woman-bouncing-ball'
}, {
  name: 'Person Lifting Weights',
  unified: '1F3CB-FE0F',
  keywords: ['person_lifting_weights', 'sports', 'training', 'exercise'],
  sheet: [9, 29],
  skinVariations: [{
    unified: '1F3CB-1F3FB',
    sheet: [9, 30]
  }, {
    unified: '1F3CB-1F3FC',
    sheet: [9, 31]
  }, {
    unified: '1F3CB-1F3FD',
    sheet: [9, 32]
  }, {
    unified: '1F3CB-1F3FE',
    sheet: [9, 33]
  }, {
    unified: '1F3CB-1F3FF',
    sheet: [9, 34]
  }],
  shortName: 'weight_lifter',
  obsoletedBy: '1F3CB-FE0F-200D-2642-FE0F'
}, {
  name: 'Man Lifting Weights',
  unified: '1F3CB-FE0F-200D-2642-FE0F',
  obsoletes: '1F3CB-FE0F',
  keywords: ['man_lifting_weights', 'sport'],
  sheet: [9, 23],
  hidden: ['facebook'],
  skinVariations: [{
    unified: '1F3CB-1F3FB-200D-2642-FE0F',
    sheet: [9, 24]
  }, {
    unified: '1F3CB-1F3FC-200D-2642-FE0F',
    sheet: [9, 25]
  }, {
    unified: '1F3CB-1F3FD-200D-2642-FE0F',
    sheet: [9, 26]
  }, {
    unified: '1F3CB-1F3FE-200D-2642-FE0F',
    sheet: [9, 27]
  }, {
    unified: '1F3CB-1F3FF-200D-2642-FE0F',
    sheet: [9, 28]
  }],
  shortName: 'man-lifting-weights'
}, {
  name: 'Woman Lifting Weights',
  unified: '1F3CB-FE0F-200D-2640-FE0F',
  keywords: ['woman_lifting_weights', 'sports', 'training', 'exercise', 'woman', 'female'],
  sheet: [9, 17],
  hidden: ['facebook'],
  skinVariations: [{
    unified: '1F3CB-1F3FB-200D-2640-FE0F',
    sheet: [9, 18]
  }, {
    unified: '1F3CB-1F3FC-200D-2640-FE0F',
    sheet: [9, 19]
  }, {
    unified: '1F3CB-1F3FD-200D-2640-FE0F',
    sheet: [9, 20]
  }, {
    unified: '1F3CB-1F3FE-200D-2640-FE0F',
    sheet: [9, 21]
  }, {
    unified: '1F3CB-1F3FF-200D-2640-FE0F',
    sheet: [9, 22]
  }],
  shortName: 'woman-lifting-weights'
}, {
  name: 'Bicyclist',
  unified: '1F6B4',
  keywords: ['person_biking', 'sport', 'move'],
  sheet: [36, 52],
  skinVariations: [{
    unified: '1F6B4-1F3FB',
    sheet: [36, 53]
  }, {
    unified: '1F6B4-1F3FC',
    sheet: [36, 54]
  }, {
    unified: '1F6B4-1F3FD',
    sheet: [36, 55]
  }, {
    unified: '1F6B4-1F3FE',
    sheet: [36, 56]
  }, {
    unified: '1F6B4-1F3FF',
    sheet: [36, 57]
  }],
  shortName: 'bicyclist',
  obsoletedBy: '1F6B4-200D-2642-FE0F'
}, {
  name: 'Man Biking',
  unified: '1F6B4-200D-2642-FE0F',
  obsoletes: '1F6B4',
  keywords: ['man_biking', 'sports', 'bike', 'exercise', 'hipster'],
  sheet: [36, 46],
  skinVariations: [{
    unified: '1F6B4-1F3FB-200D-2642-FE0F',
    sheet: [36, 47]
  }, {
    unified: '1F6B4-1F3FC-200D-2642-FE0F',
    sheet: [36, 48]
  }, {
    unified: '1F6B4-1F3FD-200D-2642-FE0F',
    sheet: [36, 49]
  }, {
    unified: '1F6B4-1F3FE-200D-2642-FE0F',
    sheet: [36, 50]
  }, {
    unified: '1F6B4-1F3FF-200D-2642-FE0F',
    sheet: [36, 51]
  }],
  shortName: 'man-biking'
}, {
  name: 'Woman Biking',
  unified: '1F6B4-200D-2640-FE0F',
  keywords: ['woman_biking', 'sports', 'bike', 'exercise', 'hipster', 'woman', 'female'],
  sheet: [36, 40],
  skinVariations: [{
    unified: '1F6B4-1F3FB-200D-2640-FE0F',
    sheet: [36, 41]
  }, {
    unified: '1F6B4-1F3FC-200D-2640-FE0F',
    sheet: [36, 42]
  }, {
    unified: '1F6B4-1F3FD-200D-2640-FE0F',
    sheet: [36, 43]
  }, {
    unified: '1F6B4-1F3FE-200D-2640-FE0F',
    sheet: [36, 44]
  }, {
    unified: '1F6B4-1F3FF-200D-2640-FE0F',
    sheet: [36, 45]
  }],
  shortName: 'woman-biking'
}, {
  name: 'Mountain Bicyclist',
  unified: '1F6B5',
  keywords: ['person_mountain_biking', 'sport', 'move'],
  sheet: [37, 9],
  skinVariations: [{
    unified: '1F6B5-1F3FB',
    sheet: [37, 10]
  }, {
    unified: '1F6B5-1F3FC',
    sheet: [37, 11]
  }, {
    unified: '1F6B5-1F3FD',
    sheet: [37, 12]
  }, {
    unified: '1F6B5-1F3FE',
    sheet: [37, 13]
  }, {
    unified: '1F6B5-1F3FF',
    sheet: [37, 14]
  }],
  shortName: 'mountain_bicyclist',
  obsoletedBy: '1F6B5-200D-2642-FE0F'
}, {
  name: 'Man Mountain Biking',
  unified: '1F6B5-200D-2642-FE0F',
  obsoletes: '1F6B5',
  keywords: ['man_mountain_biking', 'transportation', 'sports', 'human', 'race', 'bike'],
  sheet: [37, 3],
  skinVariations: [{
    unified: '1F6B5-1F3FB-200D-2642-FE0F',
    sheet: [37, 4]
  }, {
    unified: '1F6B5-1F3FC-200D-2642-FE0F',
    sheet: [37, 5]
  }, {
    unified: '1F6B5-1F3FD-200D-2642-FE0F',
    sheet: [37, 6]
  }, {
    unified: '1F6B5-1F3FE-200D-2642-FE0F',
    sheet: [37, 7]
  }, {
    unified: '1F6B5-1F3FF-200D-2642-FE0F',
    sheet: [37, 8]
  }],
  shortName: 'man-mountain-biking'
}, {
  name: 'Woman Mountain Biking',
  unified: '1F6B5-200D-2640-FE0F',
  keywords: ['woman_mountain_biking', 'transportation', 'sports', 'human', 'race', 'bike', 'woman', 'female'],
  sheet: [36, 58],
  skinVariations: [{
    unified: '1F6B5-1F3FB-200D-2640-FE0F',
    sheet: [36, 59]
  }, {
    unified: '1F6B5-1F3FC-200D-2640-FE0F',
    sheet: [36, 60]
  }, {
    unified: '1F6B5-1F3FD-200D-2640-FE0F',
    sheet: [37, 0]
  }, {
    unified: '1F6B5-1F3FE-200D-2640-FE0F',
    sheet: [37, 1]
  }, {
    unified: '1F6B5-1F3FF-200D-2640-FE0F',
    sheet: [37, 2]
  }],
  shortName: 'woman-mountain-biking'
}, {
  name: 'Person Doing Cartwheel',
  unified: '1F938',
  keywords: ['person_cartwheeling', 'sport', 'gymnastic'],
  sheet: [42, 7],
  skinVariations: [{
    unified: '1F938-1F3FB',
    sheet: [42, 8]
  }, {
    unified: '1F938-1F3FC',
    sheet: [42, 9]
  }, {
    unified: '1F938-1F3FD',
    sheet: [42, 10]
  }, {
    unified: '1F938-1F3FE',
    sheet: [42, 11]
  }, {
    unified: '1F938-1F3FF',
    sheet: [42, 12]
  }],
  shortName: 'person_doing_cartwheel'
}, {
  name: 'Man Cartwheeling',
  unified: '1F938-200D-2642-FE0F',
  keywords: ['man_cartwheeling', 'gymnastics'],
  sheet: [42, 1],
  skinVariations: [{
    unified: '1F938-1F3FB-200D-2642-FE0F',
    sheet: [42, 2]
  }, {
    unified: '1F938-1F3FC-200D-2642-FE0F',
    sheet: [42, 3]
  }, {
    unified: '1F938-1F3FD-200D-2642-FE0F',
    sheet: [42, 4]
  }, {
    unified: '1F938-1F3FE-200D-2642-FE0F',
    sheet: [42, 5]
  }, {
    unified: '1F938-1F3FF-200D-2642-FE0F',
    sheet: [42, 6]
  }],
  shortName: 'man-cartwheeling'
}, {
  name: 'Woman Cartwheeling',
  unified: '1F938-200D-2640-FE0F',
  keywords: ['woman_cartwheeling', 'gymnastics'],
  sheet: [41, 56],
  skinVariations: [{
    unified: '1F938-1F3FB-200D-2640-FE0F',
    sheet: [41, 57]
  }, {
    unified: '1F938-1F3FC-200D-2640-FE0F',
    sheet: [41, 58]
  }, {
    unified: '1F938-1F3FD-200D-2640-FE0F',
    sheet: [41, 59]
  }, {
    unified: '1F938-1F3FE-200D-2640-FE0F',
    sheet: [41, 60]
  }, {
    unified: '1F938-1F3FF-200D-2640-FE0F',
    sheet: [42, 0]
  }],
  shortName: 'woman-cartwheeling'
}, {
  name: 'Wrestlers',
  unified: '1F93C',
  keywords: ['people_wrestling', 'sport'],
  sheet: [42, 34],
  shortName: 'wrestlers'
}, {
  name: 'Men Wrestling',
  unified: '1F93C-200D-2642-FE0F',
  keywords: ['men_wrestling', 'sports', 'wrestlers'],
  sheet: [42, 33],
  shortName: 'man-wrestling'
}, {
  name: 'Women Wrestling',
  unified: '1F93C-200D-2640-FE0F',
  keywords: ['women_wrestling', 'sports', 'wrestlers'],
  sheet: [42, 32],
  shortName: 'woman-wrestling'
}, {
  name: 'Water Polo',
  unified: '1F93D',
  keywords: ['person_playing_water_polo', 'sport'],
  sheet: [42, 47],
  skinVariations: [{
    unified: '1F93D-1F3FB',
    sheet: [42, 48]
  }, {
    unified: '1F93D-1F3FC',
    sheet: [42, 49]
  }, {
    unified: '1F93D-1F3FD',
    sheet: [42, 50]
  }, {
    unified: '1F93D-1F3FE',
    sheet: [42, 51]
  }, {
    unified: '1F93D-1F3FF',
    sheet: [42, 52]
  }],
  shortName: 'water_polo'
}, {
  name: 'Man Playing Water Polo',
  unified: '1F93D-200D-2642-FE0F',
  keywords: ['man_playing_water_polo', 'sports', 'pool'],
  sheet: [42, 41],
  skinVariations: [{
    unified: '1F93D-1F3FB-200D-2642-FE0F',
    sheet: [42, 42]
  }, {
    unified: '1F93D-1F3FC-200D-2642-FE0F',
    sheet: [42, 43]
  }, {
    unified: '1F93D-1F3FD-200D-2642-FE0F',
    sheet: [42, 44]
  }, {
    unified: '1F93D-1F3FE-200D-2642-FE0F',
    sheet: [42, 45]
  }, {
    unified: '1F93D-1F3FF-200D-2642-FE0F',
    sheet: [42, 46]
  }],
  shortName: 'man-playing-water-polo'
}, {
  name: 'Woman Playing Water Polo',
  unified: '1F93D-200D-2640-FE0F',
  keywords: ['woman_playing_water_polo', 'sports', 'pool'],
  sheet: [42, 35],
  skinVariations: [{
    unified: '1F93D-1F3FB-200D-2640-FE0F',
    sheet: [42, 36]
  }, {
    unified: '1F93D-1F3FC-200D-2640-FE0F',
    sheet: [42, 37]
  }, {
    unified: '1F93D-1F3FD-200D-2640-FE0F',
    sheet: [42, 38]
  }, {
    unified: '1F93D-1F3FE-200D-2640-FE0F',
    sheet: [42, 39]
  }, {
    unified: '1F93D-1F3FF-200D-2640-FE0F',
    sheet: [42, 40]
  }],
  shortName: 'woman-playing-water-polo'
}, {
  name: 'Handball',
  unified: '1F93E',
  keywords: ['person_playing_handball', 'sport'],
  sheet: [43, 4],
  skinVariations: [{
    unified: '1F93E-1F3FB',
    sheet: [43, 5]
  }, {
    unified: '1F93E-1F3FC',
    sheet: [43, 6]
  }, {
    unified: '1F93E-1F3FD',
    sheet: [43, 7]
  }, {
    unified: '1F93E-1F3FE',
    sheet: [43, 8]
  }, {
    unified: '1F93E-1F3FF',
    sheet: [43, 9]
  }],
  shortName: 'handball'
}, {
  name: 'Man Playing Handball',
  unified: '1F93E-200D-2642-FE0F',
  keywords: ['man_playing_handball', 'sports'],
  sheet: [42, 59],
  skinVariations: [{
    unified: '1F93E-1F3FB-200D-2642-FE0F',
    sheet: [42, 60]
  }, {
    unified: '1F93E-1F3FC-200D-2642-FE0F',
    sheet: [43, 0]
  }, {
    unified: '1F93E-1F3FD-200D-2642-FE0F',
    sheet: [43, 1]
  }, {
    unified: '1F93E-1F3FE-200D-2642-FE0F',
    sheet: [43, 2]
  }, {
    unified: '1F93E-1F3FF-200D-2642-FE0F',
    sheet: [43, 3]
  }],
  shortName: 'man-playing-handball'
}, {
  name: 'Woman Playing Handball',
  unified: '1F93E-200D-2640-FE0F',
  keywords: ['woman_playing_handball', 'sports'],
  sheet: [42, 53],
  skinVariations: [{
    unified: '1F93E-1F3FB-200D-2640-FE0F',
    sheet: [42, 54]
  }, {
    unified: '1F93E-1F3FC-200D-2640-FE0F',
    sheet: [42, 55]
  }, {
    unified: '1F93E-1F3FD-200D-2640-FE0F',
    sheet: [42, 56]
  }, {
    unified: '1F93E-1F3FE-200D-2640-FE0F',
    sheet: [42, 57]
  }, {
    unified: '1F93E-1F3FF-200D-2640-FE0F',
    sheet: [42, 58]
  }],
  shortName: 'woman-playing-handball'
}, {
  name: 'Juggling',
  unified: '1F939',
  keywords: ['person_juggling', 'performance', 'balance'],
  sheet: [42, 25],
  skinVariations: [{
    unified: '1F939-1F3FB',
    sheet: [42, 26]
  }, {
    unified: '1F939-1F3FC',
    sheet: [42, 27]
  }, {
    unified: '1F939-1F3FD',
    sheet: [42, 28]
  }, {
    unified: '1F939-1F3FE',
    sheet: [42, 29]
  }, {
    unified: '1F939-1F3FF',
    sheet: [42, 30]
  }],
  shortName: 'juggling'
}, {
  name: 'Man Juggling',
  unified: '1F939-200D-2642-FE0F',
  keywords: ['man_juggling', 'juggle', 'balance', 'skill', 'multitask'],
  sheet: [42, 19],
  skinVariations: [{
    unified: '1F939-1F3FB-200D-2642-FE0F',
    sheet: [42, 20]
  }, {
    unified: '1F939-1F3FC-200D-2642-FE0F',
    sheet: [42, 21]
  }, {
    unified: '1F939-1F3FD-200D-2642-FE0F',
    sheet: [42, 22]
  }, {
    unified: '1F939-1F3FE-200D-2642-FE0F',
    sheet: [42, 23]
  }, {
    unified: '1F939-1F3FF-200D-2642-FE0F',
    sheet: [42, 24]
  }],
  shortName: 'man-juggling'
}, {
  name: 'Woman Juggling',
  unified: '1F939-200D-2640-FE0F',
  keywords: ['woman_juggling', 'juggle', 'balance', 'skill', 'multitask'],
  sheet: [42, 13],
  skinVariations: [{
    unified: '1F939-1F3FB-200D-2640-FE0F',
    sheet: [42, 14]
  }, {
    unified: '1F939-1F3FC-200D-2640-FE0F',
    sheet: [42, 15]
  }, {
    unified: '1F939-1F3FD-200D-2640-FE0F',
    sheet: [42, 16]
  }, {
    unified: '1F939-1F3FE-200D-2640-FE0F',
    sheet: [42, 17]
  }, {
    unified: '1F939-1F3FF-200D-2640-FE0F',
    sheet: [42, 18]
  }],
  shortName: 'woman-juggling'
}, {
  name: 'Person in Lotus Position',
  unified: '1F9D8',
  keywords: ['person_in_lotus_position', 'meditate'],
  sheet: [51, 34],
  skinVariations: [{
    unified: '1F9D8-1F3FB',
    sheet: [51, 35]
  }, {
    unified: '1F9D8-1F3FC',
    sheet: [51, 36]
  }, {
    unified: '1F9D8-1F3FD',
    sheet: [51, 37]
  }, {
    unified: '1F9D8-1F3FE',
    sheet: [51, 38]
  }, {
    unified: '1F9D8-1F3FF',
    sheet: [51, 39]
  }],
  shortName: 'person_in_lotus_position',
  obsoletedBy: '1F9D8-200D-2640-FE0F'
}, {
  name: 'Man in Lotus Position',
  unified: '1F9D8-200D-2642-FE0F',
  keywords: ['man_in_lotus_position', 'man', 'male', 'meditation', 'yoga', 'serenity', 'zen', 'mindfulness'],
  sheet: [51, 28],
  skinVariations: [{
    unified: '1F9D8-1F3FB-200D-2642-FE0F',
    sheet: [51, 29]
  }, {
    unified: '1F9D8-1F3FC-200D-2642-FE0F',
    sheet: [51, 30]
  }, {
    unified: '1F9D8-1F3FD-200D-2642-FE0F',
    sheet: [51, 31]
  }, {
    unified: '1F9D8-1F3FE-200D-2642-FE0F',
    sheet: [51, 32]
  }, {
    unified: '1F9D8-1F3FF-200D-2642-FE0F',
    sheet: [51, 33]
  }],
  shortName: 'man_in_lotus_position'
}, {
  name: 'Woman in Lotus Position',
  unified: '1F9D8-200D-2640-FE0F',
  obsoletes: '1F9D8',
  keywords: ['woman_in_lotus_position', 'woman', 'female', 'meditation', 'yoga', 'serenity', 'zen', 'mindfulness'],
  sheet: [51, 22],
  skinVariations: [{
    unified: '1F9D8-1F3FB-200D-2640-FE0F',
    sheet: [51, 23]
  }, {
    unified: '1F9D8-1F3FC-200D-2640-FE0F',
    sheet: [51, 24]
  }, {
    unified: '1F9D8-1F3FD-200D-2640-FE0F',
    sheet: [51, 25]
  }, {
    unified: '1F9D8-1F3FE-200D-2640-FE0F',
    sheet: [51, 26]
  }, {
    unified: '1F9D8-1F3FF-200D-2640-FE0F',
    sheet: [51, 27]
  }],
  shortName: 'woman_in_lotus_position'
}, {
  name: 'Bath',
  unified: '1F6C0',
  keywords: ['person_taking_bath', 'clean', 'shower', 'bathroom'],
  sheet: [37, 42],
  skinVariations: [{
    unified: '1F6C0-1F3FB',
    sheet: [37, 43]
  }, {
    unified: '1F6C0-1F3FC',
    sheet: [37, 44]
  }, {
    unified: '1F6C0-1F3FD',
    sheet: [37, 45]
  }, {
    unified: '1F6C0-1F3FE',
    sheet: [37, 46]
  }, {
    unified: '1F6C0-1F3FF',
    sheet: [37, 47]
  }],
  shortName: 'bath'
}, {
  name: 'Sleeping Accommodation',
  unified: '1F6CC',
  keywords: ['person_in_bed', 'bed', 'rest'],
  sheet: [37, 54],
  skinVariations: [{
    unified: '1F6CC-1F3FB',
    sheet: [37, 55]
  }, {
    unified: '1F6CC-1F3FC',
    sheet: [37, 56]
  }, {
    unified: '1F6CC-1F3FD',
    sheet: [37, 57]
  }, {
    unified: '1F6CC-1F3FE',
    sheet: [37, 58]
  }, {
    unified: '1F6CC-1F3FF',
    sheet: [37, 59]
  }],
  shortName: 'sleeping_accommodation'
}, {
  name: 'People Holding Hands',
  unified: '1F9D1-200D-1F91D-200D-1F9D1',
  keywords: ['people_holding_hands', 'friendship'],
  sheet: [48, 41],
  skinVariations: [{
    unified: '1F9D1-1F3FB-200D-1F91D-200D-1F9D1-1F3FB',
    sheet: [48, 42]
  }, {
    unified: '1F9D1-1F3FB-200D-1F91D-200D-1F9D1-1F3FC',
    sheet: [48, 43],
    hidden: ['facebook']
  }, {
    unified: '1F9D1-1F3FB-200D-1F91D-200D-1F9D1-1F3FD',
    sheet: [48, 44],
    hidden: ['facebook']
  }, {
    unified: '1F9D1-1F3FB-200D-1F91D-200D-1F9D1-1F3FE',
    sheet: [48, 45],
    hidden: ['facebook']
  }, {
    unified: '1F9D1-1F3FB-200D-1F91D-200D-1F9D1-1F3FF',
    sheet: [48, 46],
    hidden: ['facebook']
  }, {
    unified: '1F9D1-1F3FC-200D-1F91D-200D-1F9D1-1F3FB',
    sheet: [48, 47]
  }, {
    unified: '1F9D1-1F3FC-200D-1F91D-200D-1F9D1-1F3FC',
    sheet: [48, 48]
  }, {
    unified: '1F9D1-1F3FC-200D-1F91D-200D-1F9D1-1F3FD',
    sheet: [48, 49],
    hidden: ['facebook']
  }, {
    unified: '1F9D1-1F3FC-200D-1F91D-200D-1F9D1-1F3FE',
    sheet: [48, 50],
    hidden: ['facebook']
  }, {
    unified: '1F9D1-1F3FC-200D-1F91D-200D-1F9D1-1F3FF',
    sheet: [48, 51],
    hidden: ['facebook']
  }, {
    unified: '1F9D1-1F3FD-200D-1F91D-200D-1F9D1-1F3FB',
    sheet: [48, 52]
  }, {
    unified: '1F9D1-1F3FD-200D-1F91D-200D-1F9D1-1F3FC',
    sheet: [48, 53]
  }, {
    unified: '1F9D1-1F3FD-200D-1F91D-200D-1F9D1-1F3FD',
    sheet: [48, 54]
  }, {
    unified: '1F9D1-1F3FD-200D-1F91D-200D-1F9D1-1F3FE',
    sheet: [48, 55],
    hidden: ['facebook']
  }, {
    unified: '1F9D1-1F3FD-200D-1F91D-200D-1F9D1-1F3FF',
    sheet: [48, 56],
    hidden: ['facebook']
  }, {
    unified: '1F9D1-1F3FE-200D-1F91D-200D-1F9D1-1F3FB',
    sheet: [48, 57]
  }, {
    unified: '1F9D1-1F3FE-200D-1F91D-200D-1F9D1-1F3FC',
    sheet: [48, 58]
  }, {
    unified: '1F9D1-1F3FE-200D-1F91D-200D-1F9D1-1F3FD',
    sheet: [48, 59]
  }, {
    unified: '1F9D1-1F3FE-200D-1F91D-200D-1F9D1-1F3FE',
    sheet: [48, 60]
  }, {
    unified: '1F9D1-1F3FE-200D-1F91D-200D-1F9D1-1F3FF',
    sheet: [49, 0],
    hidden: ['facebook']
  }, {
    unified: '1F9D1-1F3FF-200D-1F91D-200D-1F9D1-1F3FB',
    sheet: [49, 1]
  }, {
    unified: '1F9D1-1F3FF-200D-1F91D-200D-1F9D1-1F3FC',
    sheet: [49, 2]
  }, {
    unified: '1F9D1-1F3FF-200D-1F91D-200D-1F9D1-1F3FD',
    sheet: [49, 3]
  }, {
    unified: '1F9D1-1F3FF-200D-1F91D-200D-1F9D1-1F3FE',
    sheet: [49, 4]
  }, {
    unified: '1F9D1-1F3FF-200D-1F91D-200D-1F9D1-1F3FF',
    sheet: [49, 5]
  }],
  shortName: 'people_holding_hands'
}, {
  name: 'Two Women Holding Hands',
  unified: '1F46D',
  keywords: ['women_holding_hands', 'pair', 'friendship', 'couple', 'love', 'like', 'female', 'people', 'human'],
  sheet: [22, 31],
  skinVariations: [{
    unified: '1F46D-1F3FB',
    sheet: [22, 32]
  }, {
    unified: '1F46D-1F3FC',
    sheet: [22, 33]
  }, {
    unified: '1F46D-1F3FD',
    sheet: [22, 34]
  }, {
    unified: '1F46D-1F3FE',
    sheet: [22, 35]
  }, {
    unified: '1F46D-1F3FF',
    sheet: [22, 36]
  }, {
    unified: '1F469-1F3FB-200D-1F91D-200D-1F469-1F3FC',
    sheet: [22, 37],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FB-200D-1F91D-200D-1F469-1F3FD',
    sheet: [22, 38],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FB-200D-1F91D-200D-1F469-1F3FE',
    sheet: [22, 39],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FB-200D-1F91D-200D-1F469-1F3FF',
    sheet: [22, 40],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FC-200D-1F91D-200D-1F469-1F3FB',
    sheet: [22, 41]
  }, {
    unified: '1F469-1F3FC-200D-1F91D-200D-1F469-1F3FD',
    sheet: [22, 42],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FC-200D-1F91D-200D-1F469-1F3FE',
    sheet: [22, 43],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FC-200D-1F91D-200D-1F469-1F3FF',
    sheet: [22, 44],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FD-200D-1F91D-200D-1F469-1F3FB',
    sheet: [22, 45]
  }, {
    unified: '1F469-1F3FD-200D-1F91D-200D-1F469-1F3FC',
    sheet: [22, 46]
  }, {
    unified: '1F469-1F3FD-200D-1F91D-200D-1F469-1F3FE',
    sheet: [22, 47],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FD-200D-1F91D-200D-1F469-1F3FF',
    sheet: [22, 48],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FE-200D-1F91D-200D-1F469-1F3FB',
    sheet: [22, 49]
  }, {
    unified: '1F469-1F3FE-200D-1F91D-200D-1F469-1F3FC',
    sheet: [22, 50]
  }, {
    unified: '1F469-1F3FE-200D-1F91D-200D-1F469-1F3FD',
    sheet: [22, 51]
  }, {
    unified: '1F469-1F3FE-200D-1F91D-200D-1F469-1F3FF',
    sheet: [22, 52],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FF-200D-1F91D-200D-1F469-1F3FB',
    sheet: [22, 53]
  }, {
    unified: '1F469-1F3FF-200D-1F91D-200D-1F469-1F3FC',
    sheet: [22, 54]
  }, {
    unified: '1F469-1F3FF-200D-1F91D-200D-1F469-1F3FD',
    sheet: [22, 55]
  }, {
    unified: '1F469-1F3FF-200D-1F91D-200D-1F469-1F3FE',
    sheet: [22, 56]
  }],
  shortNames: ['women_holding_hands'],
  shortName: 'two_women_holding_hands'
}, {
  name: 'Man and Woman Holding Hands',
  unified: '1F46B',
  keywords: ['woman_and_man_holding_hands', 'pair', 'people', 'human', 'love', 'date', 'dating', 'like', 'affection', 'valentines', 'marriage'],
  sheet: [21, 40],
  skinVariations: [{
    unified: '1F46B-1F3FB',
    sheet: [21, 41]
  }, {
    unified: '1F46B-1F3FC',
    sheet: [21, 42]
  }, {
    unified: '1F46B-1F3FD',
    sheet: [21, 43]
  }, {
    unified: '1F46B-1F3FE',
    sheet: [21, 44]
  }, {
    unified: '1F46B-1F3FF',
    sheet: [21, 45]
  }, {
    unified: '1F469-1F3FB-200D-1F91D-200D-1F468-1F3FC',
    sheet: [21, 46]
  }, {
    unified: '1F469-1F3FB-200D-1F91D-200D-1F468-1F3FD',
    sheet: [21, 47]
  }, {
    unified: '1F469-1F3FB-200D-1F91D-200D-1F468-1F3FE',
    sheet: [21, 48]
  }, {
    unified: '1F469-1F3FB-200D-1F91D-200D-1F468-1F3FF',
    sheet: [21, 49]
  }, {
    unified: '1F469-1F3FC-200D-1F91D-200D-1F468-1F3FB',
    sheet: [21, 50]
  }, {
    unified: '1F469-1F3FC-200D-1F91D-200D-1F468-1F3FD',
    sheet: [21, 51]
  }, {
    unified: '1F469-1F3FC-200D-1F91D-200D-1F468-1F3FE',
    sheet: [21, 52]
  }, {
    unified: '1F469-1F3FC-200D-1F91D-200D-1F468-1F3FF',
    sheet: [21, 53]
  }, {
    unified: '1F469-1F3FD-200D-1F91D-200D-1F468-1F3FB',
    sheet: [21, 54]
  }, {
    unified: '1F469-1F3FD-200D-1F91D-200D-1F468-1F3FC',
    sheet: [21, 55]
  }, {
    unified: '1F469-1F3FD-200D-1F91D-200D-1F468-1F3FE',
    sheet: [21, 56]
  }, {
    unified: '1F469-1F3FD-200D-1F91D-200D-1F468-1F3FF',
    sheet: [21, 57]
  }, {
    unified: '1F469-1F3FE-200D-1F91D-200D-1F468-1F3FB',
    sheet: [21, 58]
  }, {
    unified: '1F469-1F3FE-200D-1F91D-200D-1F468-1F3FC',
    sheet: [21, 59]
  }, {
    unified: '1F469-1F3FE-200D-1F91D-200D-1F468-1F3FD',
    sheet: [21, 60]
  }, {
    unified: '1F469-1F3FE-200D-1F91D-200D-1F468-1F3FF',
    sheet: [22, 0]
  }, {
    unified: '1F469-1F3FF-200D-1F91D-200D-1F468-1F3FB',
    sheet: [22, 1]
  }, {
    unified: '1F469-1F3FF-200D-1F91D-200D-1F468-1F3FC',
    sheet: [22, 2]
  }, {
    unified: '1F469-1F3FF-200D-1F91D-200D-1F468-1F3FD',
    sheet: [22, 3]
  }, {
    unified: '1F469-1F3FF-200D-1F91D-200D-1F468-1F3FE',
    sheet: [22, 4]
  }],
  shortNames: ['woman_and_man_holding_hands', 'couple'],
  shortName: 'man_and_woman_holding_hands'
}, {
  name: 'Two Men Holding Hands',
  unified: '1F46C',
  keywords: ['men_holding_hands', 'pair', 'couple', 'love', 'like', 'bromance', 'friendship', 'people', 'human'],
  sheet: [22, 5],
  skinVariations: [{
    unified: '1F46C-1F3FB',
    sheet: [22, 6]
  }, {
    unified: '1F46C-1F3FC',
    sheet: [22, 7]
  }, {
    unified: '1F46C-1F3FD',
    sheet: [22, 8]
  }, {
    unified: '1F46C-1F3FE',
    sheet: [22, 9]
  }, {
    unified: '1F46C-1F3FF',
    sheet: [22, 10]
  }, {
    unified: '1F468-1F3FB-200D-1F91D-200D-1F468-1F3FC',
    sheet: [22, 11],
    hidden: ['facebook']
  }, {
    unified: '1F468-1F3FB-200D-1F91D-200D-1F468-1F3FD',
    sheet: [22, 12],
    hidden: ['facebook']
  }, {
    unified: '1F468-1F3FB-200D-1F91D-200D-1F468-1F3FE',
    sheet: [22, 13],
    hidden: ['facebook']
  }, {
    unified: '1F468-1F3FB-200D-1F91D-200D-1F468-1F3FF',
    sheet: [22, 14],
    hidden: ['facebook']
  }, {
    unified: '1F468-1F3FC-200D-1F91D-200D-1F468-1F3FB',
    sheet: [22, 15]
  }, {
    unified: '1F468-1F3FC-200D-1F91D-200D-1F468-1F3FD',
    sheet: [22, 16],
    hidden: ['facebook']
  }, {
    unified: '1F468-1F3FC-200D-1F91D-200D-1F468-1F3FE',
    sheet: [22, 17],
    hidden: ['facebook']
  }, {
    unified: '1F468-1F3FC-200D-1F91D-200D-1F468-1F3FF',
    sheet: [22, 18],
    hidden: ['facebook']
  }, {
    unified: '1F468-1F3FD-200D-1F91D-200D-1F468-1F3FB',
    sheet: [22, 19]
  }, {
    unified: '1F468-1F3FD-200D-1F91D-200D-1F468-1F3FC',
    sheet: [22, 20]
  }, {
    unified: '1F468-1F3FD-200D-1F91D-200D-1F468-1F3FE',
    sheet: [22, 21],
    hidden: ['facebook']
  }, {
    unified: '1F468-1F3FD-200D-1F91D-200D-1F468-1F3FF',
    sheet: [22, 22],
    hidden: ['facebook']
  }, {
    unified: '1F468-1F3FE-200D-1F91D-200D-1F468-1F3FB',
    sheet: [22, 23]
  }, {
    unified: '1F468-1F3FE-200D-1F91D-200D-1F468-1F3FC',
    sheet: [22, 24]
  }, {
    unified: '1F468-1F3FE-200D-1F91D-200D-1F468-1F3FD',
    sheet: [22, 25]
  }, {
    unified: '1F468-1F3FE-200D-1F91D-200D-1F468-1F3FF',
    sheet: [22, 26],
    hidden: ['facebook']
  }, {
    unified: '1F468-1F3FF-200D-1F91D-200D-1F468-1F3FB',
    sheet: [22, 27]
  }, {
    unified: '1F468-1F3FF-200D-1F91D-200D-1F468-1F3FC',
    sheet: [22, 28]
  }, {
    unified: '1F468-1F3FF-200D-1F91D-200D-1F468-1F3FD',
    sheet: [22, 29]
  }, {
    unified: '1F468-1F3FF-200D-1F91D-200D-1F468-1F3FE',
    sheet: [22, 30]
  }],
  shortNames: ['men_holding_hands'],
  shortName: 'two_men_holding_hands'
}, {
  name: 'Kiss',
  unified: '1F48F',
  keywords: ['kiss', 'pair', 'valentines', 'love', 'like', 'dating', 'marriage'],
  sheet: [26, 41],
  skinVariations: [{
    unified: '1F48F-1F3FB',
    sheet: [26, 42]
  }, {
    unified: '1F48F-1F3FC',
    sheet: [26, 43]
  }, {
    unified: '1F48F-1F3FD',
    sheet: [26, 44]
  }, {
    unified: '1F48F-1F3FE',
    sheet: [26, 45]
  }, {
    unified: '1F48F-1F3FF',
    sheet: [26, 46]
  }, {
    unified: '1F9D1-1F3FB-200D-2764-FE0F-200D-1F48B-200D-1F9D1-1F3FC',
    sheet: [26, 47],
    hidden: ['facebook']
  }, {
    unified: '1F9D1-1F3FB-200D-2764-FE0F-200D-1F48B-200D-1F9D1-1F3FD',
    sheet: [26, 48],
    hidden: ['facebook']
  }, {
    unified: '1F9D1-1F3FB-200D-2764-FE0F-200D-1F48B-200D-1F9D1-1F3FE',
    sheet: [26, 49],
    hidden: ['facebook']
  }, {
    unified: '1F9D1-1F3FB-200D-2764-FE0F-200D-1F48B-200D-1F9D1-1F3FF',
    sheet: [26, 50],
    hidden: ['facebook']
  }, {
    unified: '1F9D1-1F3FC-200D-2764-FE0F-200D-1F48B-200D-1F9D1-1F3FB',
    sheet: [26, 51],
    hidden: ['facebook']
  }, {
    unified: '1F9D1-1F3FC-200D-2764-FE0F-200D-1F48B-200D-1F9D1-1F3FD',
    sheet: [26, 52],
    hidden: ['facebook']
  }, {
    unified: '1F9D1-1F3FC-200D-2764-FE0F-200D-1F48B-200D-1F9D1-1F3FE',
    sheet: [26, 53],
    hidden: ['facebook']
  }, {
    unified: '1F9D1-1F3FC-200D-2764-FE0F-200D-1F48B-200D-1F9D1-1F3FF',
    sheet: [26, 54],
    hidden: ['facebook']
  }, {
    unified: '1F9D1-1F3FD-200D-2764-FE0F-200D-1F48B-200D-1F9D1-1F3FB',
    sheet: [26, 55],
    hidden: ['facebook']
  }, {
    unified: '1F9D1-1F3FD-200D-2764-FE0F-200D-1F48B-200D-1F9D1-1F3FC',
    sheet: [26, 56],
    hidden: ['facebook']
  }, {
    unified: '1F9D1-1F3FD-200D-2764-FE0F-200D-1F48B-200D-1F9D1-1F3FE',
    sheet: [26, 57],
    hidden: ['facebook']
  }, {
    unified: '1F9D1-1F3FD-200D-2764-FE0F-200D-1F48B-200D-1F9D1-1F3FF',
    sheet: [26, 58],
    hidden: ['facebook']
  }, {
    unified: '1F9D1-1F3FE-200D-2764-FE0F-200D-1F48B-200D-1F9D1-1F3FB',
    sheet: [26, 59],
    hidden: ['facebook']
  }, {
    unified: '1F9D1-1F3FE-200D-2764-FE0F-200D-1F48B-200D-1F9D1-1F3FC',
    sheet: [26, 60],
    hidden: ['facebook']
  }, {
    unified: '1F9D1-1F3FE-200D-2764-FE0F-200D-1F48B-200D-1F9D1-1F3FD',
    sheet: [27, 0],
    hidden: ['facebook']
  }, {
    unified: '1F9D1-1F3FE-200D-2764-FE0F-200D-1F48B-200D-1F9D1-1F3FF',
    sheet: [27, 1],
    hidden: ['facebook']
  }, {
    unified: '1F9D1-1F3FF-200D-2764-FE0F-200D-1F48B-200D-1F9D1-1F3FB',
    sheet: [27, 2],
    hidden: ['facebook']
  }, {
    unified: '1F9D1-1F3FF-200D-2764-FE0F-200D-1F48B-200D-1F9D1-1F3FC',
    sheet: [27, 3],
    hidden: ['facebook']
  }, {
    unified: '1F9D1-1F3FF-200D-2764-FE0F-200D-1F48B-200D-1F9D1-1F3FD',
    sheet: [27, 4],
    hidden: ['facebook']
  }, {
    unified: '1F9D1-1F3FF-200D-2764-FE0F-200D-1F48B-200D-1F9D1-1F3FE',
    sheet: [27, 5],
    hidden: ['facebook']
  }],
  shortName: 'couplekiss'
}, {
  name: 'Kiss: Woman, Man',
  unified: '1F469-200D-2764-FE0F-200D-1F48B-200D-1F468',
  keywords: ['kiss_woman_man', 'love'],
  sheet: [20, 42],
  skinVariations: [{
    unified: '1F469-1F3FB-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FB',
    sheet: [20, 43],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FB-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FC',
    sheet: [20, 44],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FB-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FD',
    sheet: [20, 45],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FB-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FE',
    sheet: [20, 46],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FB-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FF',
    sheet: [20, 47],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FC-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FB',
    sheet: [20, 48],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FC-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FC',
    sheet: [20, 49],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FC-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FD',
    sheet: [20, 50],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FC-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FE',
    sheet: [20, 51],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FC-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FF',
    sheet: [20, 52],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FD-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FB',
    sheet: [20, 53],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FD-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FC',
    sheet: [20, 54],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FD-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FD',
    sheet: [20, 55],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FD-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FE',
    sheet: [20, 56],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FD-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FF',
    sheet: [20, 57],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FE-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FB',
    sheet: [20, 58],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FE-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FC',
    sheet: [20, 59],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FE-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FD',
    sheet: [20, 60],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FE-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FE',
    sheet: [21, 0],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FE-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FF',
    sheet: [21, 1],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FF-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FB',
    sheet: [21, 2],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FF-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FC',
    sheet: [21, 3],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FF-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FD',
    sheet: [21, 4],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FF-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FE',
    sheet: [21, 5],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FF-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FF',
    sheet: [21, 6],
    hidden: ['facebook']
  }],
  shortName: 'woman-kiss-man'
}, {
  name: 'Kiss: Man, Man',
  unified: '1F468-200D-2764-FE0F-200D-1F48B-200D-1F468',
  keywords: ['kiss_man_man', 'pair', 'valentines', 'love', 'like', 'dating', 'marriage'],
  sheet: [16, 48],
  skinVariations: [{
    unified: '1F468-1F3FB-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FB',
    sheet: [16, 49],
    hidden: ['facebook']
  }, {
    unified: '1F468-1F3FB-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FC',
    sheet: [16, 50],
    hidden: ['facebook']
  }, {
    unified: '1F468-1F3FB-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FD',
    sheet: [16, 51],
    hidden: ['facebook']
  }, {
    unified: '1F468-1F3FB-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FE',
    sheet: [16, 52],
    hidden: ['facebook']
  }, {
    unified: '1F468-1F3FB-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FF',
    sheet: [16, 53],
    hidden: ['facebook']
  }, {
    unified: '1F468-1F3FC-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FB',
    sheet: [16, 54],
    hidden: ['facebook']
  }, {
    unified: '1F468-1F3FC-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FC',
    sheet: [16, 55],
    hidden: ['facebook']
  }, {
    unified: '1F468-1F3FC-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FD',
    sheet: [16, 56],
    hidden: ['facebook']
  }, {
    unified: '1F468-1F3FC-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FE',
    sheet: [16, 57],
    hidden: ['facebook']
  }, {
    unified: '1F468-1F3FC-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FF',
    sheet: [16, 58],
    hidden: ['facebook']
  }, {
    unified: '1F468-1F3FD-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FB',
    sheet: [16, 59],
    hidden: ['facebook']
  }, {
    unified: '1F468-1F3FD-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FC',
    sheet: [16, 60],
    hidden: ['facebook']
  }, {
    unified: '1F468-1F3FD-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FD',
    sheet: [17, 0],
    hidden: ['facebook']
  }, {
    unified: '1F468-1F3FD-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FE',
    sheet: [17, 1],
    hidden: ['facebook']
  }, {
    unified: '1F468-1F3FD-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FF',
    sheet: [17, 2],
    hidden: ['facebook']
  }, {
    unified: '1F468-1F3FE-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FB',
    sheet: [17, 3],
    hidden: ['facebook']
  }, {
    unified: '1F468-1F3FE-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FC',
    sheet: [17, 4],
    hidden: ['facebook']
  }, {
    unified: '1F468-1F3FE-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FD',
    sheet: [17, 5],
    hidden: ['facebook']
  }, {
    unified: '1F468-1F3FE-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FE',
    sheet: [17, 6],
    hidden: ['facebook']
  }, {
    unified: '1F468-1F3FE-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FF',
    sheet: [17, 7],
    hidden: ['facebook']
  }, {
    unified: '1F468-1F3FF-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FB',
    sheet: [17, 8],
    hidden: ['facebook']
  }, {
    unified: '1F468-1F3FF-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FC',
    sheet: [17, 9],
    hidden: ['facebook']
  }, {
    unified: '1F468-1F3FF-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FD',
    sheet: [17, 10],
    hidden: ['facebook']
  }, {
    unified: '1F468-1F3FF-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FE',
    sheet: [17, 11],
    hidden: ['facebook']
  }, {
    unified: '1F468-1F3FF-200D-2764-FE0F-200D-1F48B-200D-1F468-1F3FF',
    sheet: [17, 12],
    hidden: ['facebook']
  }],
  shortName: 'man-kiss-man'
}, {
  name: 'Kiss: Woman, Woman',
  unified: '1F469-200D-2764-FE0F-200D-1F48B-200D-1F469',
  keywords: ['kiss_woman_woman', 'pair', 'valentines', 'love', 'like', 'dating', 'marriage'],
  sheet: [21, 7],
  skinVariations: [{
    unified: '1F469-1F3FB-200D-2764-FE0F-200D-1F48B-200D-1F469-1F3FB',
    sheet: [21, 8],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FB-200D-2764-FE0F-200D-1F48B-200D-1F469-1F3FC',
    sheet: [21, 9],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FB-200D-2764-FE0F-200D-1F48B-200D-1F469-1F3FD',
    sheet: [21, 10],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FB-200D-2764-FE0F-200D-1F48B-200D-1F469-1F3FE',
    sheet: [21, 11],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FB-200D-2764-FE0F-200D-1F48B-200D-1F469-1F3FF',
    sheet: [21, 12],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FC-200D-2764-FE0F-200D-1F48B-200D-1F469-1F3FB',
    sheet: [21, 13],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FC-200D-2764-FE0F-200D-1F48B-200D-1F469-1F3FC',
    sheet: [21, 14],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FC-200D-2764-FE0F-200D-1F48B-200D-1F469-1F3FD',
    sheet: [21, 15],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FC-200D-2764-FE0F-200D-1F48B-200D-1F469-1F3FE',
    sheet: [21, 16],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FC-200D-2764-FE0F-200D-1F48B-200D-1F469-1F3FF',
    sheet: [21, 17],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FD-200D-2764-FE0F-200D-1F48B-200D-1F469-1F3FB',
    sheet: [21, 18],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FD-200D-2764-FE0F-200D-1F48B-200D-1F469-1F3FC',
    sheet: [21, 19],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FD-200D-2764-FE0F-200D-1F48B-200D-1F469-1F3FD',
    sheet: [21, 20],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FD-200D-2764-FE0F-200D-1F48B-200D-1F469-1F3FE',
    sheet: [21, 21],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FD-200D-2764-FE0F-200D-1F48B-200D-1F469-1F3FF',
    sheet: [21, 22],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FE-200D-2764-FE0F-200D-1F48B-200D-1F469-1F3FB',
    sheet: [21, 23],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FE-200D-2764-FE0F-200D-1F48B-200D-1F469-1F3FC',
    sheet: [21, 24],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FE-200D-2764-FE0F-200D-1F48B-200D-1F469-1F3FD',
    sheet: [21, 25],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FE-200D-2764-FE0F-200D-1F48B-200D-1F469-1F3FE',
    sheet: [21, 26],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FE-200D-2764-FE0F-200D-1F48B-200D-1F469-1F3FF',
    sheet: [21, 27],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FF-200D-2764-FE0F-200D-1F48B-200D-1F469-1F3FB',
    sheet: [21, 28],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FF-200D-2764-FE0F-200D-1F48B-200D-1F469-1F3FC',
    sheet: [21, 29],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FF-200D-2764-FE0F-200D-1F48B-200D-1F469-1F3FD',
    sheet: [21, 30],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FF-200D-2764-FE0F-200D-1F48B-200D-1F469-1F3FE',
    sheet: [21, 31],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FF-200D-2764-FE0F-200D-1F48B-200D-1F469-1F3FF',
    sheet: [21, 32],
    hidden: ['facebook']
  }],
  shortName: 'woman-kiss-woman'
}, {
  name: 'Couple with Heart',
  unified: '1F491',
  keywords: ['couple_with_heart', 'pair', 'love', 'like', 'affection', 'human', 'dating', 'valentines', 'marriage'],
  sheet: [27, 7],
  skinVariations: [{
    unified: '1F491-1F3FB',
    sheet: [27, 8]
  }, {
    unified: '1F491-1F3FC',
    sheet: [27, 9]
  }, {
    unified: '1F491-1F3FD',
    sheet: [27, 10]
  }, {
    unified: '1F491-1F3FE',
    sheet: [27, 11]
  }, {
    unified: '1F491-1F3FF',
    sheet: [27, 12]
  }, {
    unified: '1F9D1-1F3FB-200D-2764-FE0F-200D-1F9D1-1F3FC',
    sheet: [27, 13],
    hidden: ['facebook']
  }, {
    unified: '1F9D1-1F3FB-200D-2764-FE0F-200D-1F9D1-1F3FD',
    sheet: [27, 14],
    hidden: ['facebook']
  }, {
    unified: '1F9D1-1F3FB-200D-2764-FE0F-200D-1F9D1-1F3FE',
    sheet: [27, 15],
    hidden: ['facebook']
  }, {
    unified: '1F9D1-1F3FB-200D-2764-FE0F-200D-1F9D1-1F3FF',
    sheet: [27, 16],
    hidden: ['facebook']
  }, {
    unified: '1F9D1-1F3FC-200D-2764-FE0F-200D-1F9D1-1F3FB',
    sheet: [27, 17],
    hidden: ['facebook']
  }, {
    unified: '1F9D1-1F3FC-200D-2764-FE0F-200D-1F9D1-1F3FD',
    sheet: [27, 18],
    hidden: ['facebook']
  }, {
    unified: '1F9D1-1F3FC-200D-2764-FE0F-200D-1F9D1-1F3FE',
    sheet: [27, 19],
    hidden: ['facebook']
  }, {
    unified: '1F9D1-1F3FC-200D-2764-FE0F-200D-1F9D1-1F3FF',
    sheet: [27, 20],
    hidden: ['facebook']
  }, {
    unified: '1F9D1-1F3FD-200D-2764-FE0F-200D-1F9D1-1F3FB',
    sheet: [27, 21],
    hidden: ['facebook']
  }, {
    unified: '1F9D1-1F3FD-200D-2764-FE0F-200D-1F9D1-1F3FC',
    sheet: [27, 22],
    hidden: ['facebook']
  }, {
    unified: '1F9D1-1F3FD-200D-2764-FE0F-200D-1F9D1-1F3FE',
    sheet: [27, 23],
    hidden: ['facebook']
  }, {
    unified: '1F9D1-1F3FD-200D-2764-FE0F-200D-1F9D1-1F3FF',
    sheet: [27, 24],
    hidden: ['facebook']
  }, {
    unified: '1F9D1-1F3FE-200D-2764-FE0F-200D-1F9D1-1F3FB',
    sheet: [27, 25],
    hidden: ['facebook']
  }, {
    unified: '1F9D1-1F3FE-200D-2764-FE0F-200D-1F9D1-1F3FC',
    sheet: [27, 26],
    hidden: ['facebook']
  }, {
    unified: '1F9D1-1F3FE-200D-2764-FE0F-200D-1F9D1-1F3FD',
    sheet: [27, 27],
    hidden: ['facebook']
  }, {
    unified: '1F9D1-1F3FE-200D-2764-FE0F-200D-1F9D1-1F3FF',
    sheet: [27, 28],
    hidden: ['facebook']
  }, {
    unified: '1F9D1-1F3FF-200D-2764-FE0F-200D-1F9D1-1F3FB',
    sheet: [27, 29],
    hidden: ['facebook']
  }, {
    unified: '1F9D1-1F3FF-200D-2764-FE0F-200D-1F9D1-1F3FC',
    sheet: [27, 30],
    hidden: ['facebook']
  }, {
    unified: '1F9D1-1F3FF-200D-2764-FE0F-200D-1F9D1-1F3FD',
    sheet: [27, 31],
    hidden: ['facebook']
  }, {
    unified: '1F9D1-1F3FF-200D-2764-FE0F-200D-1F9D1-1F3FE',
    sheet: [27, 32],
    hidden: ['facebook']
  }],
  shortName: 'couple_with_heart'
}, {
  name: 'Couple with Heart: Woman, Man',
  unified: '1F469-200D-2764-FE0F-200D-1F468',
  keywords: ['couple_with_heart_woman_man', 'love'],
  sheet: [19, 51],
  skinVariations: [{
    unified: '1F469-1F3FB-200D-2764-FE0F-200D-1F468-1F3FB',
    sheet: [19, 52],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FB-200D-2764-FE0F-200D-1F468-1F3FC',
    sheet: [19, 53],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FB-200D-2764-FE0F-200D-1F468-1F3FD',
    sheet: [19, 54],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FB-200D-2764-FE0F-200D-1F468-1F3FE',
    sheet: [19, 55],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FB-200D-2764-FE0F-200D-1F468-1F3FF',
    sheet: [19, 56],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FC-200D-2764-FE0F-200D-1F468-1F3FB',
    sheet: [19, 57],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FC-200D-2764-FE0F-200D-1F468-1F3FC',
    sheet: [19, 58],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FC-200D-2764-FE0F-200D-1F468-1F3FD',
    sheet: [19, 59],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FC-200D-2764-FE0F-200D-1F468-1F3FE',
    sheet: [19, 60],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FC-200D-2764-FE0F-200D-1F468-1F3FF',
    sheet: [20, 0],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FD-200D-2764-FE0F-200D-1F468-1F3FB',
    sheet: [20, 1],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FD-200D-2764-FE0F-200D-1F468-1F3FC',
    sheet: [20, 2],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FD-200D-2764-FE0F-200D-1F468-1F3FD',
    sheet: [20, 3],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FD-200D-2764-FE0F-200D-1F468-1F3FE',
    sheet: [20, 4],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FD-200D-2764-FE0F-200D-1F468-1F3FF',
    sheet: [20, 5],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FE-200D-2764-FE0F-200D-1F468-1F3FB',
    sheet: [20, 6],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FE-200D-2764-FE0F-200D-1F468-1F3FC',
    sheet: [20, 7],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FE-200D-2764-FE0F-200D-1F468-1F3FD',
    sheet: [20, 8],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FE-200D-2764-FE0F-200D-1F468-1F3FE',
    sheet: [20, 9],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FE-200D-2764-FE0F-200D-1F468-1F3FF',
    sheet: [20, 10],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FF-200D-2764-FE0F-200D-1F468-1F3FB',
    sheet: [20, 11],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FF-200D-2764-FE0F-200D-1F468-1F3FC',
    sheet: [20, 12],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FF-200D-2764-FE0F-200D-1F468-1F3FD',
    sheet: [20, 13],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FF-200D-2764-FE0F-200D-1F468-1F3FE',
    sheet: [20, 14],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FF-200D-2764-FE0F-200D-1F468-1F3FF',
    sheet: [20, 15],
    hidden: ['facebook']
  }],
  shortName: 'woman-heart-man'
}, {
  name: 'Couple with Heart: Man, Man',
  unified: '1F468-200D-2764-FE0F-200D-1F468',
  keywords: ['couple_with_heart_man_man', 'pair', 'love', 'like', 'affection', 'human', 'dating', 'valentines', 'marriage'],
  sheet: [16, 22],
  skinVariations: [{
    unified: '1F468-1F3FB-200D-2764-FE0F-200D-1F468-1F3FB',
    sheet: [16, 23],
    hidden: ['facebook']
  }, {
    unified: '1F468-1F3FB-200D-2764-FE0F-200D-1F468-1F3FC',
    sheet: [16, 24],
    hidden: ['facebook']
  }, {
    unified: '1F468-1F3FB-200D-2764-FE0F-200D-1F468-1F3FD',
    sheet: [16, 25],
    hidden: ['facebook']
  }, {
    unified: '1F468-1F3FB-200D-2764-FE0F-200D-1F468-1F3FE',
    sheet: [16, 26],
    hidden: ['facebook']
  }, {
    unified: '1F468-1F3FB-200D-2764-FE0F-200D-1F468-1F3FF',
    sheet: [16, 27],
    hidden: ['facebook']
  }, {
    unified: '1F468-1F3FC-200D-2764-FE0F-200D-1F468-1F3FB',
    sheet: [16, 28],
    hidden: ['facebook']
  }, {
    unified: '1F468-1F3FC-200D-2764-FE0F-200D-1F468-1F3FC',
    sheet: [16, 29],
    hidden: ['facebook']
  }, {
    unified: '1F468-1F3FC-200D-2764-FE0F-200D-1F468-1F3FD',
    sheet: [16, 30],
    hidden: ['facebook']
  }, {
    unified: '1F468-1F3FC-200D-2764-FE0F-200D-1F468-1F3FE',
    sheet: [16, 31],
    hidden: ['facebook']
  }, {
    unified: '1F468-1F3FC-200D-2764-FE0F-200D-1F468-1F3FF',
    sheet: [16, 32],
    hidden: ['facebook']
  }, {
    unified: '1F468-1F3FD-200D-2764-FE0F-200D-1F468-1F3FB',
    sheet: [16, 33],
    hidden: ['facebook']
  }, {
    unified: '1F468-1F3FD-200D-2764-FE0F-200D-1F468-1F3FC',
    sheet: [16, 34],
    hidden: ['facebook']
  }, {
    unified: '1F468-1F3FD-200D-2764-FE0F-200D-1F468-1F3FD',
    sheet: [16, 35],
    hidden: ['facebook']
  }, {
    unified: '1F468-1F3FD-200D-2764-FE0F-200D-1F468-1F3FE',
    sheet: [16, 36],
    hidden: ['facebook']
  }, {
    unified: '1F468-1F3FD-200D-2764-FE0F-200D-1F468-1F3FF',
    sheet: [16, 37],
    hidden: ['facebook']
  }, {
    unified: '1F468-1F3FE-200D-2764-FE0F-200D-1F468-1F3FB',
    sheet: [16, 38],
    hidden: ['facebook']
  }, {
    unified: '1F468-1F3FE-200D-2764-FE0F-200D-1F468-1F3FC',
    sheet: [16, 39],
    hidden: ['facebook']
  }, {
    unified: '1F468-1F3FE-200D-2764-FE0F-200D-1F468-1F3FD',
    sheet: [16, 40],
    hidden: ['facebook']
  }, {
    unified: '1F468-1F3FE-200D-2764-FE0F-200D-1F468-1F3FE',
    sheet: [16, 41],
    hidden: ['facebook']
  }, {
    unified: '1F468-1F3FE-200D-2764-FE0F-200D-1F468-1F3FF',
    sheet: [16, 42],
    hidden: ['facebook']
  }, {
    unified: '1F468-1F3FF-200D-2764-FE0F-200D-1F468-1F3FB',
    sheet: [16, 43],
    hidden: ['facebook']
  }, {
    unified: '1F468-1F3FF-200D-2764-FE0F-200D-1F468-1F3FC',
    sheet: [16, 44],
    hidden: ['facebook']
  }, {
    unified: '1F468-1F3FF-200D-2764-FE0F-200D-1F468-1F3FD',
    sheet: [16, 45],
    hidden: ['facebook']
  }, {
    unified: '1F468-1F3FF-200D-2764-FE0F-200D-1F468-1F3FE',
    sheet: [16, 46],
    hidden: ['facebook']
  }, {
    unified: '1F468-1F3FF-200D-2764-FE0F-200D-1F468-1F3FF',
    sheet: [16, 47],
    hidden: ['facebook']
  }],
  shortName: 'man-heart-man'
}, {
  name: 'Couple with Heart: Woman, Woman',
  unified: '1F469-200D-2764-FE0F-200D-1F469',
  keywords: ['couple_with_heart_woman_woman', 'pair', 'love', 'like', 'affection', 'human', 'dating', 'valentines', 'marriage'],
  sheet: [20, 16],
  skinVariations: [{
    unified: '1F469-1F3FB-200D-2764-FE0F-200D-1F469-1F3FB',
    sheet: [20, 17],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FB-200D-2764-FE0F-200D-1F469-1F3FC',
    sheet: [20, 18],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FB-200D-2764-FE0F-200D-1F469-1F3FD',
    sheet: [20, 19],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FB-200D-2764-FE0F-200D-1F469-1F3FE',
    sheet: [20, 20],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FB-200D-2764-FE0F-200D-1F469-1F3FF',
    sheet: [20, 21],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FC-200D-2764-FE0F-200D-1F469-1F3FB',
    sheet: [20, 22],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FC-200D-2764-FE0F-200D-1F469-1F3FC',
    sheet: [20, 23],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FC-200D-2764-FE0F-200D-1F469-1F3FD',
    sheet: [20, 24],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FC-200D-2764-FE0F-200D-1F469-1F3FE',
    sheet: [20, 25],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FC-200D-2764-FE0F-200D-1F469-1F3FF',
    sheet: [20, 26],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FD-200D-2764-FE0F-200D-1F469-1F3FB',
    sheet: [20, 27],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FD-200D-2764-FE0F-200D-1F469-1F3FC',
    sheet: [20, 28],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FD-200D-2764-FE0F-200D-1F469-1F3FD',
    sheet: [20, 29],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FD-200D-2764-FE0F-200D-1F469-1F3FE',
    sheet: [20, 30],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FD-200D-2764-FE0F-200D-1F469-1F3FF',
    sheet: [20, 31],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FE-200D-2764-FE0F-200D-1F469-1F3FB',
    sheet: [20, 32],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FE-200D-2764-FE0F-200D-1F469-1F3FC',
    sheet: [20, 33],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FE-200D-2764-FE0F-200D-1F469-1F3FD',
    sheet: [20, 34],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FE-200D-2764-FE0F-200D-1F469-1F3FE',
    sheet: [20, 35],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FE-200D-2764-FE0F-200D-1F469-1F3FF',
    sheet: [20, 36],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FF-200D-2764-FE0F-200D-1F469-1F3FB',
    sheet: [20, 37],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FF-200D-2764-FE0F-200D-1F469-1F3FC',
    sheet: [20, 38],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FF-200D-2764-FE0F-200D-1F469-1F3FD',
    sheet: [20, 39],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FF-200D-2764-FE0F-200D-1F469-1F3FE',
    sheet: [20, 40],
    hidden: ['facebook']
  }, {
    unified: '1F469-1F3FF-200D-2764-FE0F-200D-1F469-1F3FF',
    sheet: [20, 41],
    hidden: ['facebook']
  }],
  shortName: 'woman-heart-woman'
}, {
  name: 'Family',
  unified: '1F46A',
  keywords: ['family', 'home', 'parents', 'child', 'mom', 'dad', 'father', 'mother', 'people', 'human'],
  sheet: [21, 39],
  shortName: 'family',
  obsoletedBy: '1F468-200D-1F469-200D-1F466'
}, {
  name: 'Family: Man, Woman, Boy',
  unified: '1F468-200D-1F469-200D-1F466',
  obsoletes: '1F46A',
  keywords: ['family_man_woman_boy', 'love'],
  sheet: [14, 43],
  shortName: 'man-woman-boy'
}, {
  name: 'Family: Man, Woman, Girl',
  unified: '1F468-200D-1F469-200D-1F467',
  keywords: ['family_man_woman_girl', 'home', 'parents', 'people', 'human', 'child'],
  sheet: [14, 45],
  shortName: 'man-woman-girl'
}, {
  name: 'Family: Man, Woman, Girl, Boy',
  unified: '1F468-200D-1F469-200D-1F467-200D-1F466',
  keywords: ['family_man_woman_girl_boy', 'home', 'parents', 'people', 'human', 'children'],
  sheet: [14, 46],
  shortName: 'man-woman-girl-boy'
}, {
  name: 'Family: Man, Woman, Boy, Boy',
  unified: '1F468-200D-1F469-200D-1F466-200D-1F466',
  keywords: ['family_man_woman_boy_boy', 'home', 'parents', 'people', 'human', 'children'],
  sheet: [14, 44],
  shortName: 'man-woman-boy-boy'
}, {
  name: 'Family: Man, Woman, Girl, Girl',
  unified: '1F468-200D-1F469-200D-1F467-200D-1F467',
  keywords: ['family_man_woman_girl_girl', 'home', 'parents', 'people', 'human', 'children'],
  sheet: [14, 47],
  shortName: 'man-woman-girl-girl'
}, {
  name: 'Family: Man, Man, Boy',
  unified: '1F468-200D-1F468-200D-1F466',
  keywords: ['family_man_man_boy', 'home', 'parents', 'people', 'human', 'children'],
  sheet: [14, 38],
  shortName: 'man-man-boy'
}, {
  name: 'Family: Man, Man, Girl',
  unified: '1F468-200D-1F468-200D-1F467',
  keywords: ['family_man_man_girl', 'home', 'parents', 'people', 'human', 'children'],
  sheet: [14, 40],
  shortName: 'man-man-girl'
}, {
  name: 'Family: Man, Man, Girl, Boy',
  unified: '1F468-200D-1F468-200D-1F467-200D-1F466',
  keywords: ['family_man_man_girl_boy', 'home', 'parents', 'people', 'human', 'children'],
  sheet: [14, 41],
  shortName: 'man-man-girl-boy'
}, {
  name: 'Family: Man, Man, Boy, Boy',
  unified: '1F468-200D-1F468-200D-1F466-200D-1F466',
  keywords: ['family_man_man_boy_boy', 'home', 'parents', 'people', 'human', 'children'],
  sheet: [14, 39],
  shortName: 'man-man-boy-boy'
}, {
  name: 'Family: Man, Man, Girl, Girl',
  unified: '1F468-200D-1F468-200D-1F467-200D-1F467',
  keywords: ['family_man_man_girl_girl', 'home', 'parents', 'people', 'human', 'children'],
  sheet: [14, 42],
  shortName: 'man-man-girl-girl'
}, {
  name: 'Family: Woman, Woman, Boy',
  unified: '1F469-200D-1F469-200D-1F466',
  keywords: ['family_woman_woman_boy', 'home', 'parents', 'people', 'human', 'children'],
  sheet: [18, 11],
  shortName: 'woman-woman-boy'
}, {
  name: 'Family: Woman, Woman, Girl',
  unified: '1F469-200D-1F469-200D-1F467',
  keywords: ['family_woman_woman_girl', 'home', 'parents', 'people', 'human', 'children'],
  sheet: [18, 13],
  shortName: 'woman-woman-girl'
}, {
  name: 'Family: Woman, Woman, Girl, Boy',
  unified: '1F469-200D-1F469-200D-1F467-200D-1F466',
  keywords: ['family_woman_woman_girl_boy', 'home', 'parents', 'people', 'human', 'children'],
  sheet: [18, 14],
  shortName: 'woman-woman-girl-boy'
}, {
  name: 'Family: Woman, Woman, Boy, Boy',
  unified: '1F469-200D-1F469-200D-1F466-200D-1F466',
  keywords: ['family_woman_woman_boy_boy', 'home', 'parents', 'people', 'human', 'children'],
  sheet: [18, 12],
  shortName: 'woman-woman-boy-boy'
}, {
  name: 'Family: Woman, Woman, Girl, Girl',
  unified: '1F469-200D-1F469-200D-1F467-200D-1F467',
  keywords: ['family_woman_woman_girl_girl', 'home', 'parents', 'people', 'human', 'children'],
  sheet: [18, 15],
  shortName: 'woman-woman-girl-girl'
}, {
  name: 'Family: Man, Boy',
  unified: '1F468-200D-1F466',
  keywords: ['family_man_boy', 'home', 'parent', 'people', 'human', 'child'],
  sheet: [14, 34],
  shortName: 'man-boy'
}, {
  name: 'Family: Man, Boy, Boy',
  unified: '1F468-200D-1F466-200D-1F466',
  keywords: ['family_man_boy_boy', 'home', 'parent', 'people', 'human', 'children'],
  sheet: [14, 33],
  shortName: 'man-boy-boy'
}, {
  name: 'Family: Man, Girl',
  unified: '1F468-200D-1F467',
  keywords: ['family_man_girl', 'home', 'parent', 'people', 'human', 'child'],
  sheet: [14, 37],
  shortName: 'man-girl'
}, {
  name: 'Family: Man, Girl, Boy',
  unified: '1F468-200D-1F467-200D-1F466',
  keywords: ['family_man_girl_boy', 'home', 'parent', 'people', 'human', 'children'],
  sheet: [14, 35],
  shortName: 'man-girl-boy'
}, {
  name: 'Family: Man, Girl, Girl',
  unified: '1F468-200D-1F467-200D-1F467',
  keywords: ['family_man_girl_girl', 'home', 'parent', 'people', 'human', 'children'],
  sheet: [14, 36],
  shortName: 'man-girl-girl'
}, {
  name: 'Family: Woman, Boy',
  unified: '1F469-200D-1F466',
  keywords: ['family_woman_boy', 'home', 'parent', 'people', 'human', 'child'],
  sheet: [18, 7],
  shortName: 'woman-boy'
}, {
  name: 'Family: Woman, Boy, Boy',
  unified: '1F469-200D-1F466-200D-1F466',
  keywords: ['family_woman_boy_boy', 'home', 'parent', 'people', 'human', 'children'],
  sheet: [18, 6],
  shortName: 'woman-boy-boy'
}, {
  name: 'Family: Woman, Girl',
  unified: '1F469-200D-1F467',
  keywords: ['family_woman_girl', 'home', 'parent', 'people', 'human', 'child'],
  sheet: [18, 10],
  shortName: 'woman-girl'
}, {
  name: 'Family: Woman, Girl, Boy',
  unified: '1F469-200D-1F467-200D-1F466',
  keywords: ['family_woman_girl_boy', 'home', 'parent', 'people', 'human', 'children'],
  sheet: [18, 8],
  shortName: 'woman-girl-boy'
}, {
  name: 'Family: Woman, Girl, Girl',
  unified: '1F469-200D-1F467-200D-1F467',
  keywords: ['family_woman_girl_girl', 'home', 'parent', 'people', 'human', 'children'],
  sheet: [18, 9],
  shortName: 'woman-girl-girl'
}, {
  name: 'Speaking Head',
  unified: '1F5E3-FE0F',
  keywords: ['speaking_head', 'user', 'person', 'human', 'sing', 'say', 'talk'],
  sheet: [32, 10],
  shortName: 'speaking_head_in_silhouette'
}, {
  name: 'Bust in Silhouette',
  unified: '1F464',
  keywords: ['bust_in_silhouette', 'user', 'person', 'human'],
  sheet: [13, 32],
  shortName: 'bust_in_silhouette'
}, {
  name: 'Busts in Silhouette',
  unified: '1F465',
  keywords: ['busts_in_silhouette', 'user', 'person', 'human', 'group', 'team'],
  sheet: [13, 33],
  shortName: 'busts_in_silhouette'
}, {
  name: 'People Hugging',
  unified: '1FAC2',
  keywords: ['people hugging', 'care'],
  sheet: [54, 44],
  shortName: 'people_hugging'
}, {
  name: 'Footprints',
  unified: '1F463',
  keywords: ['footprints', 'feet', 'tracking', 'walking', 'beach'],
  sheet: [13, 31],
  shortName: 'footprints'
}, {
  name: 'Emoji Modifier Fitzpatrick Type-1-2',
  unified: '1F3FB',
  sheet: [10, 41],
  shortName: 'skin-tone-2'
}, {
  name: 'Emoji Modifier Fitzpatrick Type-3',
  unified: '1F3FC',
  sheet: [10, 42],
  shortName: 'skin-tone-3'
}, {
  name: 'Emoji Modifier Fitzpatrick Type-4',
  unified: '1F3FD',
  sheet: [10, 43],
  shortName: 'skin-tone-4'
}, {
  name: 'Emoji Modifier Fitzpatrick Type-5',
  unified: '1F3FE',
  sheet: [10, 44],
  shortName: 'skin-tone-5'
}, {
  name: 'Emoji Modifier Fitzpatrick Type-6',
  unified: '1F3FF',
  sheet: [10, 45],
  shortName: 'skin-tone-6'
}, {
  name: 'Monkey Face',
  unified: '1F435',
  emoticons: [':o)'],
  keywords: ['monkey_face', 'animal', 'nature', 'circus'],
  sheet: [11, 40],
  shortName: 'monkey_face'
}, {
  name: 'Monkey',
  unified: '1F412',
  keywords: ['monkey', 'animal', 'nature', 'banana', 'circus'],
  sheet: [11, 4],
  shortName: 'monkey'
}, {
  name: 'Gorilla',
  unified: '1F98D',
  keywords: ['gorilla', 'animal', 'nature', 'circus'],
  sheet: [44, 31],
  shortName: 'gorilla'
}, {
  name: 'Orangutan',
  unified: '1F9A7',
  keywords: ['orangutan', 'animal'],
  sheet: [44, 57],
  shortName: 'orangutan'
}, {
  name: 'Dog Face',
  unified: '1F436',
  keywords: ['dog_face', 'animal', 'friend', 'nature', 'woof', 'puppy', 'pet', 'faithful'],
  sheet: [11, 41],
  shortName: 'dog'
}, {
  name: 'Dog',
  unified: '1F415',
  keywords: ['dog', 'animal', 'nature', 'friend', 'doge', 'pet', 'faithful'],
  sheet: [11, 8],
  shortName: 'dog2'
}, {
  name: 'Guide Dog',
  unified: '1F9AE',
  keywords: ['guide_dog', 'animal', 'blind'],
  sheet: [45, 3],
  shortName: 'guide_dog'
}, {
  name: 'Service Dog',
  unified: '1F415-200D-1F9BA',
  keywords: ['service_dog', 'blind', 'animal'],
  sheet: [11, 7],
  shortName: 'service_dog'
}, {
  name: 'Poodle',
  unified: '1F429',
  keywords: ['poodle', 'dog', 'animal', '101', 'nature', 'pet'],
  sheet: [11, 28],
  shortName: 'poodle'
}, {
  name: 'Wolf Face',
  unified: '1F43A',
  keywords: ['wolf', 'animal', 'nature', 'wild'],
  sheet: [11, 45],
  shortName: 'wolf'
}, {
  name: 'Fox Face',
  unified: '1F98A',
  keywords: ['fox', 'animal', 'nature', 'face'],
  sheet: [44, 28],
  shortName: 'fox_face'
}, {
  name: 'Raccoon',
  unified: '1F99D',
  keywords: ['raccoon', 'animal', 'nature'],
  sheet: [44, 47],
  shortName: 'raccoon'
}, {
  name: 'Cat Face',
  unified: '1F431',
  keywords: ['cat_face', 'animal', 'meow', 'nature', 'pet', 'kitten'],
  sheet: [11, 36],
  shortName: 'cat'
}, {
  name: 'Cat',
  unified: '1F408',
  keywords: ['cat', 'animal', 'meow', 'pet', 'cats'],
  sheet: [10, 55],
  shortName: 'cat2'
}, {
  name: 'Black Cat',
  unified: '1F408-200D-2B1B',
  keywords: ['black cat', 'superstition', 'luck'],
  sheet: [10, 54],
  shortName: 'black_cat'
}, {
  name: 'Lion Face',
  unified: '1F981',
  keywords: ['lion', 'animal', 'nature'],
  sheet: [44, 19],
  shortName: 'lion_face'
}, {
  name: 'Tiger Face',
  unified: '1F42F',
  keywords: ['tiger_face', 'animal', 'cat', 'danger', 'wild', 'nature', 'roar'],
  sheet: [11, 34],
  shortName: 'tiger'
}, {
  name: 'Tiger',
  unified: '1F405',
  keywords: ['tiger', 'animal', 'nature', 'roar'],
  sheet: [10, 51],
  shortName: 'tiger2'
}, {
  name: 'Leopard',
  unified: '1F406',
  keywords: ['leopard', 'animal', 'nature'],
  sheet: [10, 52],
  shortName: 'leopard'
}, {
  name: 'Horse Face',
  unified: '1F434',
  keywords: ['horse_face', 'animal', 'brown', 'nature'],
  sheet: [11, 39],
  shortName: 'horse'
}, {
  name: 'Horse',
  unified: '1F40E',
  keywords: ['horse', 'animal', 'gamble', 'luck'],
  sheet: [11, 0],
  shortName: 'racehorse'
}, {
  name: 'Unicorn Face',
  unified: '1F984',
  keywords: ['unicorn', 'animal', 'nature', 'mystical'],
  sheet: [44, 22],
  shortName: 'unicorn_face'
}, {
  name: 'Zebra Face',
  unified: '1F993',
  keywords: ['zebra', 'animal', 'nature', 'stripes', 'safari'],
  sheet: [44, 37],
  shortName: 'zebra_face'
}, {
  name: 'Deer',
  unified: '1F98C',
  keywords: ['deer', 'animal', 'nature', 'horns', 'venison'],
  sheet: [44, 30],
  shortName: 'deer'
}, {
  name: 'Bison',
  unified: '1F9AC',
  keywords: ['bison', 'ox'],
  sheet: [45, 1],
  shortName: 'bison'
}, {
  name: 'Cow Face',
  unified: '1F42E',
  keywords: ['cow_face', 'beef', 'ox', 'animal', 'nature', 'moo', 'milk'],
  sheet: [11, 33],
  shortName: 'cow'
}, {
  name: 'Ox',
  unified: '1F402',
  keywords: ['ox', 'animal', 'cow', 'beef'],
  sheet: [10, 48],
  shortName: 'ox'
}, {
  name: 'Water Buffalo',
  unified: '1F403',
  keywords: ['water_buffalo', 'animal', 'nature', 'ox', 'cow'],
  sheet: [10, 49],
  shortName: 'water_buffalo'
}, {
  name: 'Cow',
  unified: '1F404',
  keywords: ['cow', 'beef', 'ox', 'animal', 'nature', 'moo', 'milk'],
  sheet: [10, 50],
  shortName: 'cow2'
}, {
  name: 'Pig Face',
  unified: '1F437',
  keywords: ['pig_face', 'animal', 'oink', 'nature'],
  sheet: [11, 42],
  shortName: 'pig'
}, {
  name: 'Pig',
  unified: '1F416',
  keywords: ['pig', 'animal', 'nature'],
  sheet: [11, 9],
  shortName: 'pig2'
}, {
  name: 'Boar',
  unified: '1F417',
  keywords: ['boar', 'animal', 'nature'],
  sheet: [11, 10],
  shortName: 'boar'
}, {
  name: 'Pig Nose',
  unified: '1F43D',
  keywords: ['pig_nose', 'animal', 'oink'],
  sheet: [11, 49],
  shortName: 'pig_nose'
}, {
  name: 'Ram',
  unified: '1F40F',
  keywords: ['ram', 'animal', 'sheep', 'nature'],
  sheet: [11, 1],
  shortName: 'ram'
}, {
  name: 'Sheep',
  unified: '1F411',
  keywords: ['ewe', 'animal', 'nature', 'wool', 'shipit'],
  sheet: [11, 3],
  shortName: 'sheep'
}, {
  name: 'Goat',
  unified: '1F410',
  keywords: ['goat', 'animal', 'nature'],
  sheet: [11, 2],
  shortName: 'goat'
}, {
  name: 'Dromedary Camel',
  unified: '1F42A',
  keywords: ['camel', 'animal', 'hot', 'desert', 'hump'],
  sheet: [11, 29],
  shortName: 'dromedary_camel'
}, {
  name: 'Bactrian Camel',
  unified: '1F42B',
  keywords: ['two_hump_camel', 'animal', 'nature', 'hot', 'desert', 'hump'],
  sheet: [11, 30],
  shortName: 'camel'
}, {
  name: 'Llama',
  unified: '1F999',
  keywords: ['llama', 'animal', 'nature', 'alpaca'],
  sheet: [44, 43],
  shortName: 'llama'
}, {
  name: 'Giraffe Face',
  unified: '1F992',
  keywords: ['giraffe', 'animal', 'nature', 'spots', 'safari'],
  sheet: [44, 36],
  shortName: 'giraffe_face'
}, {
  name: 'Elephant',
  unified: '1F418',
  keywords: ['elephant', 'animal', 'nature', 'nose', 'th', 'circus'],
  sheet: [11, 11],
  shortName: 'elephant'
}, {
  name: 'Mammoth',
  unified: '1F9A3',
  keywords: ['mammoth', 'elephant', 'tusks'],
  sheet: [44, 53],
  shortName: 'mammoth'
}, {
  name: 'Rhinoceros',
  unified: '1F98F',
  keywords: ['rhinoceros', 'animal', 'nature', 'horn'],
  sheet: [44, 33],
  shortName: 'rhinoceros'
}, {
  name: 'Hippopotamus',
  unified: '1F99B',
  keywords: ['hippopotamus', 'animal', 'nature'],
  sheet: [44, 45],
  shortName: 'hippopotamus'
}, {
  name: 'Mouse Face',
  unified: '1F42D',
  keywords: ['mouse_face', 'animal', 'nature', 'cheese_wedge', 'rodent'],
  sheet: [11, 32],
  shortName: 'mouse'
}, {
  name: 'Mouse',
  unified: '1F401',
  keywords: ['mouse', 'animal', 'nature', 'rodent'],
  sheet: [10, 47],
  shortName: 'mouse2'
}, {
  name: 'Rat',
  unified: '1F400',
  keywords: ['rat', 'animal', 'mouse', 'rodent'],
  sheet: [10, 46],
  shortName: 'rat'
}, {
  name: 'Hamster Face',
  unified: '1F439',
  keywords: ['hamster', 'animal', 'nature'],
  sheet: [11, 44],
  shortName: 'hamster'
}, {
  name: 'Rabbit Face',
  unified: '1F430',
  keywords: ['rabbit_face', 'animal', 'nature', 'pet', 'spring', 'magic', 'bunny'],
  sheet: [11, 35],
  shortName: 'rabbit'
}, {
  name: 'Rabbit',
  unified: '1F407',
  keywords: ['rabbit', 'animal', 'nature', 'pet', 'magic', 'spring'],
  sheet: [10, 53],
  shortName: 'rabbit2'
}, {
  name: 'Chipmunk',
  unified: '1F43F-FE0F',
  keywords: ['chipmunk', 'animal', 'nature', 'rodent', 'squirrel'],
  sheet: [11, 51],
  shortName: 'chipmunk'
}, {
  name: 'Beaver',
  unified: '1F9AB',
  keywords: ['beaver', 'animal', 'rodent'],
  sheet: [45, 0],
  shortName: 'beaver'
}, {
  name: 'Hedgehog',
  unified: '1F994',
  keywords: ['hedgehog', 'animal', 'nature', 'spiny'],
  sheet: [44, 38],
  shortName: 'hedgehog'
}, {
  name: 'Bat',
  unified: '1F987',
  keywords: ['bat', 'animal', 'nature', 'blind', 'vampire'],
  sheet: [44, 25],
  shortName: 'bat'
}, {
  name: 'Bear Face',
  unified: '1F43B',
  keywords: ['bear', 'animal', 'nature', 'wild'],
  sheet: [11, 47],
  shortName: 'bear'
}, {
  name: 'Polar Bear',
  unified: '1F43B-200D-2744-FE0F',
  keywords: ['polar bear', 'animal', 'arctic'],
  sheet: [11, 46],
  shortName: 'polar_bear'
}, {
  name: 'Koala',
  unified: '1F428',
  keywords: ['koala', 'animal', 'nature'],
  sheet: [11, 27],
  shortName: 'koala'
}, {
  name: 'Panda Face',
  unified: '1F43C',
  keywords: ['panda', 'animal', 'nature', 'panda'],
  sheet: [11, 48],
  shortName: 'panda_face'
}, {
  name: 'Sloth',
  unified: '1F9A5',
  keywords: ['sloth', 'animal'],
  sheet: [44, 55],
  shortName: 'sloth'
}, {
  name: 'Otter',
  unified: '1F9A6',
  keywords: ['otter', 'animal'],
  sheet: [44, 56],
  shortName: 'otter'
}, {
  name: 'Skunk',
  unified: '1F9A8',
  keywords: ['skunk', 'animal'],
  sheet: [44, 58],
  shortName: 'skunk'
}, {
  name: 'Kangaroo',
  unified: '1F998',
  keywords: ['kangaroo', 'animal', 'nature', 'australia', 'joey', 'hop', 'marsupial'],
  sheet: [44, 42],
  shortName: 'kangaroo'
}, {
  name: 'Badger',
  unified: '1F9A1',
  keywords: ['badger', 'animal', 'nature', 'honey'],
  sheet: [44, 51],
  shortName: 'badger'
}, {
  name: 'Paw Prints',
  unified: '1F43E',
  keywords: ['paw_prints', 'animal', 'tracking', 'footprints', 'dog', 'cat', 'pet', 'feet'],
  sheet: [11, 50],
  shortNames: ['paw_prints'],
  shortName: 'feet'
}, {
  name: 'Turkey',
  unified: '1F983',
  keywords: ['turkey', 'animal', 'bird'],
  sheet: [44, 21],
  shortName: 'turkey'
}, {
  name: 'Chicken',
  unified: '1F414',
  keywords: ['chicken', 'animal', 'cluck', 'nature', 'bird'],
  sheet: [11, 6],
  shortName: 'chicken'
}, {
  name: 'Rooster',
  unified: '1F413',
  keywords: ['rooster', 'animal', 'nature', 'chicken'],
  sheet: [11, 5],
  shortName: 'rooster'
}, {
  name: 'Hatching Chick',
  unified: '1F423',
  keywords: ['hatching_chick', 'animal', 'chicken', 'egg', 'born', 'baby', 'bird'],
  sheet: [11, 22],
  shortName: 'hatching_chick'
}, {
  name: 'Baby Chick',
  unified: '1F424',
  keywords: ['baby_chick', 'animal', 'chicken', 'bird'],
  sheet: [11, 23],
  shortName: 'baby_chick'
}, {
  name: 'Front-Facing Baby Chick',
  unified: '1F425',
  keywords: ['front_facing_baby_chick', 'animal', 'chicken', 'baby', 'bird'],
  sheet: [11, 24],
  shortName: 'hatched_chick'
}, {
  name: 'Bird',
  unified: '1F426',
  keywords: ['bird', 'animal', 'nature', 'fly', 'tweet', 'spring'],
  sheet: [11, 25],
  shortName: 'bird'
}, {
  name: 'Penguin',
  unified: '1F427',
  keywords: ['penguin', 'animal', 'nature'],
  sheet: [11, 26],
  shortName: 'penguin'
}, {
  name: 'Dove',
  unified: '1F54A-FE0F',
  keywords: ['dove', 'animal', 'bird'],
  sheet: [30, 27],
  shortName: 'dove_of_peace'
}, {
  name: 'Eagle',
  unified: '1F985',
  keywords: ['eagle', 'animal', 'nature', 'bird'],
  sheet: [44, 23],
  shortName: 'eagle'
}, {
  name: 'Duck',
  unified: '1F986',
  keywords: ['duck', 'animal', 'nature', 'bird', 'mallard'],
  sheet: [44, 24],
  shortName: 'duck'
}, {
  name: 'Swan',
  unified: '1F9A2',
  keywords: ['swan', 'animal', 'nature', 'bird'],
  sheet: [44, 52],
  shortName: 'swan'
}, {
  name: 'Owl',
  unified: '1F989',
  keywords: ['owl', 'animal', 'nature', 'bird', 'hoot'],
  sheet: [44, 27],
  shortName: 'owl'
}, {
  name: 'Dodo',
  unified: '1F9A4',
  keywords: ['dodo', 'animal', 'bird'],
  sheet: [44, 54],
  shortName: 'dodo'
}, {
  name: 'Feather',
  unified: '1FAB6',
  keywords: ['feather', 'bird', 'fly'],
  sheet: [54, 37],
  shortName: 'feather'
}, {
  name: 'Flamingo',
  unified: '1F9A9',
  keywords: ['flamingo', 'animal'],
  sheet: [44, 59],
  shortName: 'flamingo'
}, {
  name: 'Peacock',
  unified: '1F99A',
  keywords: ['peacock', 'animal', 'nature', 'peahen', 'bird'],
  sheet: [44, 44],
  shortName: 'peacock'
}, {
  name: 'Parrot',
  unified: '1F99C',
  keywords: ['parrot', 'animal', 'nature', 'bird', 'pirate', 'talk'],
  sheet: [44, 46],
  shortName: 'parrot'
}, {
  name: 'Frog Face',
  unified: '1F438',
  keywords: ['frog', 'animal', 'nature', 'croak', 'toad'],
  sheet: [11, 43],
  shortName: 'frog'
}, {
  name: 'Crocodile',
  unified: '1F40A',
  keywords: ['crocodile', 'animal', 'nature', 'reptile', 'lizard', 'alligator'],
  sheet: [10, 57],
  shortName: 'crocodile'
}, {
  name: 'Turtle',
  unified: '1F422',
  keywords: ['turtle', 'animal', 'slow', 'nature', 'tortoise'],
  sheet: [11, 21],
  shortName: 'turtle'
}, {
  name: 'Lizard',
  unified: '1F98E',
  keywords: ['lizard', 'animal', 'nature', 'reptile'],
  sheet: [44, 32],
  shortName: 'lizard'
}, {
  name: 'Snake',
  unified: '1F40D',
  keywords: ['snake', 'animal', 'evil', 'nature', 'hiss', 'python'],
  sheet: [10, 60],
  shortName: 'snake'
}, {
  name: 'Dragon Face',
  unified: '1F432',
  keywords: ['dragon_face', 'animal', 'myth', 'nature', 'chinese', 'green'],
  sheet: [11, 37],
  shortName: 'dragon_face'
}, {
  name: 'Dragon',
  unified: '1F409',
  keywords: ['dragon', 'animal', 'myth', 'nature', 'chinese', 'green'],
  sheet: [10, 56],
  shortName: 'dragon'
}, {
  name: 'Sauropod',
  unified: '1F995',
  keywords: ['sauropod', 'animal', 'nature', 'dinosaur', 'brachiosaurus', 'brontosaurus', 'diplodocus', 'extinct'],
  sheet: [44, 39],
  shortName: 'sauropod'
}, {
  name: 'T-Rex',
  unified: '1F996',
  keywords: ['t_rex', 'animal', 'nature', 'dinosaur', 'tyrannosaurus', 'extinct'],
  sheet: [44, 40],
  shortName: 't-rex'
}, {
  name: 'Spouting Whale',
  unified: '1F433',
  keywords: ['spouting_whale', 'animal', 'nature', 'sea', 'ocean'],
  sheet: [11, 38],
  shortName: 'whale'
}, {
  name: 'Whale',
  unified: '1F40B',
  keywords: ['whale', 'animal', 'nature', 'sea', 'ocean'],
  sheet: [10, 58],
  shortName: 'whale2'
}, {
  name: 'Dolphin',
  unified: '1F42C',
  keywords: ['dolphin', 'animal', 'nature', 'fish', 'sea', 'ocean', 'flipper', 'fins', 'beach'],
  sheet: [11, 31],
  shortNames: ['flipper'],
  shortName: 'dolphin'
}, {
  name: 'Seal',
  unified: '1F9AD',
  keywords: ['seal', 'animal', 'creature', 'sea'],
  sheet: [45, 2],
  shortName: 'seal'
}, {
  name: 'Fish',
  unified: '1F41F',
  keywords: ['fish', 'animal', 'food', 'nature'],
  sheet: [11, 18],
  shortName: 'fish'
}, {
  name: 'Tropical Fish',
  unified: '1F420',
  keywords: ['tropical_fish', 'animal', 'swim', 'ocean', 'beach', 'nemo'],
  sheet: [11, 19],
  shortName: 'tropical_fish'
}, {
  name: 'Blowfish',
  unified: '1F421',
  keywords: ['blowfish', 'animal', 'nature', 'food', 'sea', 'ocean'],
  sheet: [11, 20],
  shortName: 'blowfish'
}, {
  name: 'Shark',
  unified: '1F988',
  keywords: ['shark', 'animal', 'nature', 'fish', 'sea', 'ocean', 'jaws', 'fins', 'beach'],
  sheet: [44, 26],
  shortName: 'shark'
}, {
  name: 'Octopus',
  unified: '1F419',
  keywords: ['octopus', 'animal', 'creature', 'ocean', 'sea', 'nature', 'beach'],
  sheet: [11, 12],
  shortName: 'octopus'
}, {
  name: 'Spiral Shell',
  unified: '1F41A',
  keywords: ['spiral_shell', 'nature', 'sea', 'beach'],
  sheet: [11, 13],
  shortName: 'shell'
}, {
  name: 'Coral',
  unified: '1FAB8',
  keywords: ['coral', 'ocean', 'sea', 'reef'],
  sheet: [54, 39],
  hidden: ['facebook'],
  shortName: 'coral'
}, {
  name: 'Snail',
  unified: '1F40C',
  keywords: ['snail', 'slow', 'animal', 'shell'],
  sheet: [10, 59],
  shortName: 'snail'
}, {
  name: 'Butterfly',
  unified: '1F98B',
  keywords: ['butterfly', 'animal', 'insect', 'nature', 'caterpillar'],
  sheet: [44, 29],
  shortName: 'butterfly'
}, {
  name: 'Bug',
  unified: '1F41B',
  keywords: ['bug', 'animal', 'insect', 'nature', 'worm'],
  sheet: [11, 14],
  shortName: 'bug'
}, {
  name: 'Ant',
  unified: '1F41C',
  keywords: ['ant', 'animal', 'insect', 'nature', 'bug'],
  sheet: [11, 15],
  shortName: 'ant'
}, {
  name: 'Honeybee',
  unified: '1F41D',
  keywords: ['honeybee', 'animal', 'insect', 'nature', 'bug', 'spring', 'honey'],
  sheet: [11, 16],
  shortNames: ['honeybee'],
  shortName: 'bee'
}, {
  name: 'Beetle',
  unified: '1FAB2',
  keywords: ['beetle', 'insect'],
  sheet: [54, 33],
  shortName: 'beetle'
}, {
  name: 'Lady Beetle',
  unified: '1F41E',
  keywords: ['lady_beetle', 'animal', 'insect', 'nature', 'ladybug'],
  sheet: [11, 17],
  shortNames: ['lady_beetle'],
  shortName: 'ladybug'
}, {
  name: 'Cricket',
  unified: '1F997',
  keywords: ['cricket', 'animal', 'cricket', 'chirp'],
  sheet: [44, 41],
  shortName: 'cricket'
}, {
  name: 'Cockroach',
  unified: '1FAB3',
  keywords: ['cockroach', 'insect', 'pests'],
  sheet: [54, 34],
  shortName: 'cockroach'
}, {
  name: 'Spider',
  unified: '1F577-FE0F',
  keywords: ['spider', 'animal', 'arachnid'],
  sheet: [31, 23],
  shortName: 'spider'
}, {
  name: 'Spider Web',
  unified: '1F578-FE0F',
  keywords: ['spider_web', 'animal', 'insect', 'arachnid', 'silk'],
  sheet: [31, 24],
  shortName: 'spider_web'
}, {
  name: 'Scorpion',
  unified: '1F982',
  keywords: ['scorpion', 'animal', 'arachnid'],
  sheet: [44, 20],
  shortName: 'scorpion'
}, {
  name: 'Mosquito',
  unified: '1F99F',
  keywords: ['mosquito', 'animal', 'nature', 'insect', 'malaria'],
  sheet: [44, 49],
  shortName: 'mosquito'
}, {
  name: 'Fly',
  unified: '1FAB0',
  keywords: ['fly', 'insect'],
  sheet: [54, 31],
  shortName: 'fly'
}, {
  name: 'Worm',
  unified: '1FAB1',
  keywords: ['worm', 'animal'],
  sheet: [54, 32],
  shortName: 'worm'
}, {
  name: 'Microbe',
  unified: '1F9A0',
  keywords: ['microbe', 'amoeba', 'bacteria', 'germs', 'virus', 'covid'],
  sheet: [44, 50],
  shortName: 'microbe'
}, {
  name: 'Bouquet',
  unified: '1F490',
  keywords: ['bouquet', 'flowers', 'nature', 'spring'],
  sheet: [27, 6],
  shortName: 'bouquet'
}, {
  name: 'Cherry Blossom',
  unified: '1F338',
  keywords: ['cherry_blossom', 'nature', 'plant', 'spring', 'flower'],
  sheet: [5, 53],
  shortName: 'cherry_blossom'
}, {
  name: 'White Flower',
  unified: '1F4AE',
  keywords: ['white_flower', 'japanese', 'spring'],
  sheet: [28, 5],
  shortName: 'white_flower'
}, {
  name: 'Lotus',
  unified: '1FAB7',
  keywords: ['lotus', 'flower', 'calm', 'meditation'],
  sheet: [54, 38],
  hidden: ['facebook'],
  shortName: 'lotus'
}, {
  name: 'Rosette',
  unified: '1F3F5-FE0F',
  keywords: ['rosette', 'flower', 'decoration', 'military'],
  sheet: [10, 36],
  shortName: 'rosette'
}, {
  name: 'Rose',
  unified: '1F339',
  keywords: ['rose', 'flowers', 'valentines', 'love', 'spring'],
  sheet: [5, 54],
  shortName: 'rose'
}, {
  name: 'Wilted Flower',
  unified: '1F940',
  keywords: ['wilted_flower', 'plant', 'nature', 'flower', 'rose'],
  sheet: [43, 11],
  shortName: 'wilted_flower'
}, {
  name: 'Hibiscus',
  unified: '1F33A',
  keywords: ['hibiscus', 'plant', 'vegetable', 'flowers', 'beach'],
  sheet: [5, 55],
  shortName: 'hibiscus'
}, {
  name: 'Sunflower',
  unified: '1F33B',
  keywords: ['sunflower', 'nature', 'plant', 'fall'],
  sheet: [5, 56],
  shortName: 'sunflower'
}, {
  name: 'Blossom',
  unified: '1F33C',
  keywords: ['blossom', 'nature', 'flowers', 'yellow'],
  sheet: [5, 57],
  shortName: 'blossom'
}, {
  name: 'Tulip',
  unified: '1F337',
  keywords: ['tulip', 'flowers', 'plant', 'nature', 'summer', 'spring'],
  sheet: [5, 52],
  shortName: 'tulip'
}, {
  name: 'Seedling',
  unified: '1F331',
  keywords: ['seedling', 'plant', 'nature', 'grass', 'lawn', 'spring'],
  sheet: [5, 46],
  shortName: 'seedling'
}, {
  name: 'Potted Plant',
  unified: '1FAB4',
  keywords: ['potted plant', 'greenery', 'house'],
  sheet: [54, 35],
  shortName: 'potted_plant'
}, {
  name: 'Evergreen Tree',
  unified: '1F332',
  keywords: ['evergreen_tree', 'plant', 'nature'],
  sheet: [5, 47],
  shortName: 'evergreen_tree'
}, {
  name: 'Deciduous Tree',
  unified: '1F333',
  keywords: ['deciduous_tree', 'plant', 'nature'],
  sheet: [5, 48],
  shortName: 'deciduous_tree'
}, {
  name: 'Palm Tree',
  unified: '1F334',
  keywords: ['palm_tree', 'plant', 'vegetable', 'nature', 'summer', 'beach', 'mojito', 'tropical'],
  sheet: [5, 49],
  shortName: 'palm_tree'
}, {
  name: 'Cactus',
  unified: '1F335',
  keywords: ['cactus', 'vegetable', 'plant', 'nature'],
  sheet: [5, 50],
  shortName: 'cactus'
}, {
  name: 'Ear of Rice',
  unified: '1F33E',
  keywords: ['sheaf_of_rice', 'nature', 'plant'],
  sheet: [5, 59],
  shortName: 'ear_of_rice'
}, {
  name: 'Herb',
  unified: '1F33F',
  keywords: ['herb', 'vegetable', 'plant', 'medicine', 'weed', 'grass', 'lawn'],
  sheet: [5, 60],
  shortName: 'herb'
}, {
  name: 'Shamrock',
  unified: '2618-FE0F',
  keywords: ['shamrock', 'vegetable', 'plant', 'nature', 'irish', 'clover'],
  sheet: [56, 49],
  shortName: 'shamrock'
}, {
  name: 'Four Leaf Clover',
  unified: '1F340',
  keywords: ['four_leaf_clover', 'vegetable', 'plant', 'nature', 'lucky', 'irish'],
  sheet: [6, 0],
  shortName: 'four_leaf_clover'
}, {
  name: 'Maple Leaf',
  unified: '1F341',
  keywords: ['maple_leaf', 'nature', 'plant', 'vegetable', 'ca', 'fall'],
  sheet: [6, 1],
  shortName: 'maple_leaf'
}, {
  name: 'Fallen Leaf',
  unified: '1F342',
  keywords: ['fallen_leaf', 'nature', 'plant', 'vegetable', 'leaves'],
  sheet: [6, 2],
  shortName: 'fallen_leaf'
}, {
  name: 'Leaf Fluttering in Wind',
  unified: '1F343',
  keywords: ['leaf_fluttering_in_wind', 'nature', 'plant', 'tree', 'vegetable', 'grass', 'lawn', 'spring'],
  sheet: [6, 3],
  shortName: 'leaves'
}, {
  name: 'Empty Nest',
  unified: '1FAB9',
  keywords: ['empty nest', 'bird'],
  sheet: [54, 40],
  hidden: ['facebook'],
  shortName: 'empty_nest'
}, {
  name: 'Nest with Eggs',
  unified: '1FABA',
  keywords: ['nest with eggs', 'bird'],
  sheet: [54, 41],
  hidden: ['facebook'],
  shortName: 'nest_with_eggs'
}, {
  name: 'Grapes',
  unified: '1F347',
  keywords: ['grapes', 'fruit', 'food', 'wine'],
  sheet: [6, 7],
  shortName: 'grapes'
}, {
  name: 'Melon',
  unified: '1F348',
  keywords: ['melon', 'fruit', 'nature', 'food'],
  sheet: [6, 8],
  shortName: 'melon'
}, {
  name: 'Watermelon',
  unified: '1F349',
  keywords: ['watermelon', 'fruit', 'food', 'picnic', 'summer'],
  sheet: [6, 9],
  shortName: 'watermelon'
}, {
  name: 'Tangerine',
  unified: '1F34A',
  keywords: ['tangerine', 'food', 'fruit', 'nature', 'orange'],
  sheet: [6, 10],
  shortName: 'tangerine'
}, {
  name: 'Lemon',
  unified: '1F34B',
  keywords: ['lemon', 'fruit', 'nature'],
  sheet: [6, 11],
  shortName: 'lemon'
}, {
  name: 'Banana',
  unified: '1F34C',
  keywords: ['banana', 'fruit', 'food', 'monkey'],
  sheet: [6, 12],
  shortName: 'banana'
}, {
  name: 'Pineapple',
  unified: '1F34D',
  keywords: ['pineapple', 'fruit', 'nature', 'food'],
  sheet: [6, 13],
  shortName: 'pineapple'
}, {
  name: 'Mango',
  unified: '1F96D',
  keywords: ['mango', 'fruit', 'food', 'tropical'],
  sheet: [43, 55],
  shortName: 'mango'
}, {
  name: 'Red Apple',
  unified: '1F34E',
  keywords: ['red_apple', 'fruit', 'mac', 'school'],
  sheet: [6, 14],
  shortName: 'apple'
}, {
  name: 'Green Apple',
  unified: '1F34F',
  keywords: ['green_apple', 'fruit', 'nature'],
  sheet: [6, 15],
  shortName: 'green_apple'
}, {
  name: 'Pear',
  unified: '1F350',
  keywords: ['pear', 'fruit', 'nature', 'food'],
  sheet: [6, 16],
  shortName: 'pear'
}, {
  name: 'Peach',
  unified: '1F351',
  keywords: ['peach', 'fruit', 'nature', 'food'],
  sheet: [6, 17],
  shortName: 'peach'
}, {
  name: 'Cherries',
  unified: '1F352',
  keywords: ['cherries', 'food', 'fruit'],
  sheet: [6, 18],
  shortName: 'cherries'
}, {
  name: 'Strawberry',
  unified: '1F353',
  keywords: ['strawberry', 'fruit', 'food', 'nature'],
  sheet: [6, 19],
  shortName: 'strawberry'
}, {
  name: 'Blueberries',
  unified: '1FAD0',
  keywords: ['blueberries', 'fruit'],
  sheet: [55, 2],
  shortName: 'blueberries'
}, {
  name: 'Kiwifruit',
  unified: '1F95D',
  keywords: ['kiwi_fruit', 'fruit', 'food'],
  sheet: [43, 39],
  shortName: 'kiwifruit'
}, {
  name: 'Tomato',
  unified: '1F345',
  keywords: ['tomato', 'fruit', 'vegetable', 'nature', 'food'],
  sheet: [6, 5],
  shortName: 'tomato'
}, {
  name: 'Olive',
  unified: '1FAD2',
  keywords: ['olive', 'fruit'],
  sheet: [55, 4],
  shortName: 'olive'
}, {
  name: 'Coconut',
  unified: '1F965',
  keywords: ['coconut', 'fruit', 'nature', 'food', 'palm'],
  sheet: [43, 47],
  shortName: 'coconut'
}, {
  name: 'Avocado',
  unified: '1F951',
  keywords: ['avocado', 'fruit', 'food'],
  sheet: [43, 27],
  shortName: 'avocado'
}, {
  name: 'Aubergine',
  unified: '1F346',
  keywords: ['eggplant', 'vegetable', 'nature', 'food', 'aubergine'],
  sheet: [6, 6],
  shortName: 'eggplant'
}, {
  name: 'Potato',
  unified: '1F954',
  keywords: ['potato', 'food', 'tuber', 'vegatable', 'starch'],
  sheet: [43, 30],
  shortName: 'potato'
}, {
  name: 'Carrot',
  unified: '1F955',
  keywords: ['carrot', 'vegetable', 'food', 'orange'],
  sheet: [43, 31],
  shortName: 'carrot'
}, {
  name: 'Ear of Maize',
  unified: '1F33D',
  keywords: ['ear_of_corn', 'food', 'vegetable', 'plant'],
  sheet: [5, 58],
  shortName: 'corn'
}, {
  name: 'Hot Pepper',
  unified: '1F336-FE0F',
  keywords: ['hot_pepper', 'food', 'spicy', 'chilli', 'chili'],
  sheet: [5, 51],
  shortName: 'hot_pepper'
}, {
  name: 'Bell Pepper',
  unified: '1FAD1',
  keywords: ['bell pepper', 'fruit', 'plant'],
  sheet: [55, 3],
  shortName: 'bell_pepper'
}, {
  name: 'Cucumber',
  unified: '1F952',
  keywords: ['cucumber', 'fruit', 'food', 'pickle'],
  sheet: [43, 28],
  shortName: 'cucumber'
}, {
  name: 'Leafy Green',
  unified: '1F96C',
  keywords: ['leafy_green', 'food', 'vegetable', 'plant', 'bok choy', 'cabbage', 'kale', 'lettuce'],
  sheet: [43, 54],
  shortName: 'leafy_green'
}, {
  name: 'Broccoli',
  unified: '1F966',
  keywords: ['broccoli', 'fruit', 'food', 'vegetable'],
  sheet: [43, 48],
  shortName: 'broccoli'
}, {
  name: 'Garlic',
  unified: '1F9C4',
  keywords: ['garlic', 'food', 'spice', 'cook'],
  sheet: [46, 9],
  shortName: 'garlic'
}, {
  name: 'Onion',
  unified: '1F9C5',
  keywords: ['onion', 'cook', 'food', 'spice'],
  sheet: [46, 10],
  shortName: 'onion'
}, {
  name: 'Mushroom',
  unified: '1F344',
  keywords: ['mushroom', 'plant', 'vegetable'],
  sheet: [6, 4],
  shortName: 'mushroom'
}, {
  name: 'Peanuts',
  unified: '1F95C',
  keywords: ['peanuts', 'food', 'nut'],
  sheet: [43, 38],
  shortName: 'peanuts'
}, {
  name: 'Beans',
  unified: '1FAD8',
  keywords: ['beans', 'food'],
  sheet: [55, 10],
  hidden: ['facebook'],
  shortName: 'beans'
}, {
  name: 'Chestnut',
  unified: '1F330',
  keywords: ['chestnut', 'food', 'squirrel'],
  sheet: [5, 45],
  shortName: 'chestnut'
}, {
  name: 'Bread',
  unified: '1F35E',
  keywords: ['bread', 'food', 'wheat', 'breakfast', 'toast'],
  sheet: [6, 30],
  shortName: 'bread'
}, {
  name: 'Croissant',
  unified: '1F950',
  keywords: ['croissant', 'food', 'bread', 'french'],
  sheet: [43, 26],
  shortName: 'croissant'
}, {
  name: 'Baguette Bread',
  unified: '1F956',
  keywords: ['baguette_bread', 'food', 'bread', 'french', 'france', 'bakery'],
  sheet: [43, 32],
  shortName: 'baguette_bread'
}, {
  name: 'Flatbread',
  unified: '1FAD3',
  keywords: ['flatbread', 'flour', 'food', 'bakery'],
  sheet: [55, 5],
  shortName: 'flatbread'
}, {
  name: 'Pretzel',
  unified: '1F968',
  keywords: ['pretzel', 'food', 'bread', 'twisted', 'germany', 'bakery'],
  sheet: [43, 50],
  shortName: 'pretzel'
}, {
  name: 'Bagel',
  unified: '1F96F',
  keywords: ['bagel', 'food', 'bread', 'bakery', 'schmear', 'jewish', 'bakery'],
  sheet: [43, 57],
  shortName: 'bagel'
}, {
  name: 'Pancakes',
  unified: '1F95E',
  keywords: ['pancakes', 'food', 'breakfast', 'flapjacks', 'hotcakes', 'brunch'],
  sheet: [43, 40],
  shortName: 'pancakes'
}, {
  name: 'Waffle',
  unified: '1F9C7',
  keywords: ['waffle', 'food', 'breakfast', 'brunch'],
  sheet: [46, 12],
  shortName: 'waffle'
}, {
  name: 'Cheese Wedge',
  unified: '1F9C0',
  keywords: ['cheese_wedge', 'food', 'chadder', 'swiss'],
  sheet: [46, 5],
  shortName: 'cheese_wedge'
}, {
  name: 'Meat on Bone',
  unified: '1F356',
  keywords: ['meat_on_bone', 'good', 'food', 'drumstick'],
  sheet: [6, 22],
  shortName: 'meat_on_bone'
}, {
  name: 'Poultry Leg',
  unified: '1F357',
  keywords: ['poultry_leg', 'food', 'meat', 'drumstick', 'bird', 'chicken', 'turkey'],
  sheet: [6, 23],
  shortName: 'poultry_leg'
}, {
  name: 'Cut of Meat',
  unified: '1F969',
  keywords: ['cut_of_meat', 'food', 'cow', 'meat', 'cut', 'chop', 'lambchop', 'porkchop'],
  sheet: [43, 51],
  shortName: 'cut_of_meat'
}, {
  name: 'Bacon',
  unified: '1F953',
  keywords: ['bacon', 'food', 'breakfast', 'pork', 'pig', 'meat', 'brunch'],
  sheet: [43, 29],
  shortName: 'bacon'
}, {
  name: 'Hamburger',
  unified: '1F354',
  keywords: ['hamburger', 'meat', 'fast food', 'beef', 'cheeseburger', 'mcdonalds', 'burger king'],
  sheet: [6, 20],
  shortName: 'hamburger'
}, {
  name: 'French Fries',
  unified: '1F35F',
  keywords: ['french_fries', 'chips', 'snack', 'fast food', 'potato'],
  sheet: [6, 31],
  shortName: 'fries'
}, {
  name: 'Slice of Pizza',
  unified: '1F355',
  keywords: ['pizza', 'food', 'party', 'italy'],
  sheet: [6, 21],
  shortName: 'pizza'
}, {
  name: 'Hot Dog',
  unified: '1F32D',
  keywords: ['hot_dog', 'food', 'frankfurter', 'america'],
  sheet: [5, 42],
  shortName: 'hotdog'
}, {
  name: 'Sandwich',
  unified: '1F96A',
  keywords: ['sandwich', 'food', 'lunch', 'bread', 'toast', 'bakery'],
  sheet: [43, 52],
  shortName: 'sandwich'
}, {
  name: 'Taco',
  unified: '1F32E',
  keywords: ['taco', 'food', 'mexican'],
  sheet: [5, 43],
  shortName: 'taco'
}, {
  name: 'Burrito',
  unified: '1F32F',
  keywords: ['burrito', 'food', 'mexican'],
  sheet: [5, 44],
  shortName: 'burrito'
}, {
  name: 'Tamale',
  unified: '1FAD4',
  keywords: ['tamale', 'food', 'masa'],
  sheet: [55, 6],
  shortName: 'tamale'
}, {
  name: 'Stuffed Flatbread',
  unified: '1F959',
  keywords: ['stuffed_flatbread', 'food', 'flatbread', 'stuffed', 'gyro', 'mediterranean'],
  sheet: [43, 35],
  shortName: 'stuffed_flatbread'
}, {
  name: 'Falafel',
  unified: '1F9C6',
  keywords: ['falafel', 'food', 'mediterranean'],
  sheet: [46, 11],
  shortName: 'falafel'
}, {
  name: 'Egg',
  unified: '1F95A',
  keywords: ['egg', 'food', 'chicken', 'breakfast'],
  sheet: [43, 36],
  shortName: 'egg'
}, {
  name: 'Cooking',
  unified: '1F373',
  keywords: ['cooking', 'food', 'breakfast', 'kitchen', 'egg', 'skillet'],
  sheet: [6, 51],
  shortNames: ['cooking'],
  shortName: 'fried_egg'
}, {
  name: 'Shallow Pan of Food',
  unified: '1F958',
  keywords: ['shallow_pan_of_food', 'food', 'cooking', 'casserole', 'paella', 'skillet'],
  sheet: [43, 34],
  shortName: 'shallow_pan_of_food'
}, {
  name: 'Pot of Food',
  unified: '1F372',
  keywords: ['pot_of_food', 'food', 'meat', 'soup', 'hot pot'],
  sheet: [6, 50],
  shortName: 'stew'
}, {
  name: 'Fondue',
  unified: '1FAD5',
  keywords: ['fondue', 'cheese', 'pot', 'food'],
  sheet: [55, 7],
  shortName: 'fondue'
}, {
  name: 'Bowl with Spoon',
  unified: '1F963',
  keywords: ['bowl_with_spoon', 'food', 'breakfast', 'cereal', 'oatmeal', 'porridge'],
  sheet: [43, 45],
  shortName: 'bowl_with_spoon'
}, {
  name: 'Green Salad',
  unified: '1F957',
  keywords: ['green_salad', 'food', 'healthy', 'lettuce', 'vegetable'],
  sheet: [43, 33],
  shortName: 'green_salad'
}, {
  name: 'Popcorn',
  unified: '1F37F',
  keywords: ['popcorn', 'food', 'movie theater', 'films', 'snack', 'drama'],
  sheet: [7, 2],
  shortName: 'popcorn'
}, {
  name: 'Butter',
  unified: '1F9C8',
  keywords: ['butter', 'food', 'cook'],
  sheet: [46, 13],
  shortName: 'butter'
}, {
  name: 'Salt Shaker',
  unified: '1F9C2',
  keywords: ['salt', 'condiment', 'shaker'],
  sheet: [46, 7],
  shortName: 'salt'
}, {
  name: 'Canned Food',
  unified: '1F96B',
  keywords: ['canned_food', 'food', 'soup', 'tomatoes'],
  sheet: [43, 53],
  shortName: 'canned_food'
}, {
  name: 'Bento Box',
  unified: '1F371',
  keywords: ['bento_box', 'food', 'japanese', 'box', 'lunch'],
  sheet: [6, 49],
  shortName: 'bento'
}, {
  name: 'Rice Cracker',
  unified: '1F358',
  keywords: ['rice_cracker', 'food', 'japanese', 'snack'],
  sheet: [6, 24],
  shortName: 'rice_cracker'
}, {
  name: 'Rice Ball',
  unified: '1F359',
  keywords: ['rice_ball', 'food', 'japanese'],
  sheet: [6, 25],
  shortName: 'rice_ball'
}, {
  name: 'Cooked Rice',
  unified: '1F35A',
  keywords: ['cooked_rice', 'food', 'asian'],
  sheet: [6, 26],
  shortName: 'rice'
}, {
  name: 'Curry and Rice',
  unified: '1F35B',
  keywords: ['curry_rice', 'food', 'spicy', 'hot', 'indian'],
  sheet: [6, 27],
  shortName: 'curry'
}, {
  name: 'Steaming Bowl',
  unified: '1F35C',
  keywords: ['steaming_bowl', 'food', 'japanese', 'noodle', 'chopsticks', 'ramen'],
  sheet: [6, 28],
  shortName: 'ramen'
}, {
  name: 'Spaghetti',
  unified: '1F35D',
  keywords: ['spaghetti', 'food', 'italian', 'pasta', 'noodle'],
  sheet: [6, 29],
  shortName: 'spaghetti'
}, {
  name: 'Roasted Sweet Potato',
  unified: '1F360',
  keywords: ['roasted_sweet_potato', 'food', 'nature', 'plant'],
  sheet: [6, 32],
  shortName: 'sweet_potato'
}, {
  name: 'Oden',
  unified: '1F362',
  keywords: ['oden', 'food', 'japanese'],
  sheet: [6, 34],
  shortName: 'oden'
}, {
  name: 'Sushi',
  unified: '1F363',
  keywords: ['sushi', 'food', 'fish', 'japanese', 'rice'],
  sheet: [6, 35],
  shortName: 'sushi'
}, {
  name: 'Fried Shrimp',
  unified: '1F364',
  keywords: ['fried_shrimp', 'food', 'animal', 'appetizer', 'summer'],
  sheet: [6, 36],
  shortName: 'fried_shrimp'
}, {
  name: 'Fish Cake with Swirl Design',
  unified: '1F365',
  keywords: ['fish_cake_with_swirl', 'food', 'japan', 'sea', 'beach', 'narutomaki', 'pink', 'swirl', 'kamaboko', 'surimi', 'ramen'],
  sheet: [6, 37],
  shortName: 'fish_cake'
}, {
  name: 'Moon Cake',
  unified: '1F96E',
  keywords: ['moon_cake', 'food', 'autumn', 'dessert'],
  sheet: [43, 56],
  shortName: 'moon_cake'
}, {
  name: 'Dango',
  unified: '1F361',
  keywords: ['dango', 'food', 'dessert', 'sweet', 'japanese', 'barbecue', 'meat'],
  sheet: [6, 33],
  shortName: 'dango'
}, {
  name: 'Dumpling',
  unified: '1F95F',
  keywords: ['dumpling', 'food', 'empanada', 'pierogi', 'potsticker', 'gyoza'],
  sheet: [43, 41],
  shortName: 'dumpling'
}, {
  name: 'Fortune Cookie',
  unified: '1F960',
  keywords: ['fortune_cookie', 'food', 'prophecy', 'dessert'],
  sheet: [43, 42],
  shortName: 'fortune_cookie'
}, {
  name: 'Takeout Box',
  unified: '1F961',
  keywords: ['takeout_box', 'food', 'leftovers'],
  sheet: [43, 43],
  shortName: 'takeout_box'
}, {
  name: 'Crab',
  unified: '1F980',
  keywords: ['crab', 'animal', 'crustacean'],
  sheet: [44, 18],
  shortName: 'crab'
}, {
  name: 'Lobster',
  unified: '1F99E',
  keywords: ['lobster', 'animal', 'nature', 'bisque', 'claws', 'seafood'],
  sheet: [44, 48],
  shortName: 'lobster'
}, {
  name: 'Shrimp',
  unified: '1F990',
  keywords: ['shrimp', 'animal', 'ocean', 'nature', 'seafood'],
  sheet: [44, 34],
  shortName: 'shrimp'
}, {
  name: 'Squid',
  unified: '1F991',
  keywords: ['squid', 'animal', 'nature', 'ocean', 'sea'],
  sheet: [44, 35],
  shortName: 'squid'
}, {
  name: 'Oyster',
  unified: '1F9AA',
  keywords: ['oyster', 'food'],
  sheet: [44, 60],
  shortName: 'oyster'
}, {
  name: 'Soft Ice Cream',
  unified: '1F366',
  keywords: ['soft_ice_cream', 'food', 'hot', 'dessert', 'summer'],
  sheet: [6, 38],
  shortName: 'icecream'
}, {
  name: 'Shaved Ice',
  unified: '1F367',
  keywords: ['shaved_ice', 'hot', 'dessert', 'summer'],
  sheet: [6, 39],
  shortName: 'shaved_ice'
}, {
  name: 'Ice Cream',
  unified: '1F368',
  keywords: ['ice_cream', 'food', 'hot', 'dessert'],
  sheet: [6, 40],
  shortName: 'ice_cream'
}, {
  name: 'Doughnut',
  unified: '1F369',
  keywords: ['doughnut', 'food', 'dessert', 'snack', 'sweet', 'donut'],
  sheet: [6, 41],
  shortName: 'doughnut'
}, {
  name: 'Cookie',
  unified: '1F36A',
  keywords: ['cookie', 'food', 'snack', 'oreo', 'chocolate', 'sweet', 'dessert'],
  sheet: [6, 42],
  shortName: 'cookie'
}, {
  name: 'Birthday Cake',
  unified: '1F382',
  keywords: ['birthday_cake', 'food', 'dessert', 'cake'],
  sheet: [7, 5],
  shortName: 'birthday'
}, {
  name: 'Shortcake',
  unified: '1F370',
  keywords: ['shortcake', 'food', 'dessert'],
  sheet: [6, 48],
  shortName: 'cake'
}, {
  name: 'Cupcake',
  unified: '1F9C1',
  keywords: ['cupcake', 'food', 'dessert', 'bakery', 'sweet'],
  sheet: [46, 6],
  shortName: 'cupcake'
}, {
  name: 'Pie',
  unified: '1F967',
  keywords: ['pie', 'food', 'dessert', 'pastry'],
  sheet: [43, 49],
  shortName: 'pie'
}, {
  name: 'Chocolate Bar',
  unified: '1F36B',
  keywords: ['chocolate_bar', 'food', 'snack', 'dessert', 'sweet'],
  sheet: [6, 43],
  shortName: 'chocolate_bar'
}, {
  name: 'Candy',
  unified: '1F36C',
  keywords: ['candy', 'snack', 'dessert', 'sweet', 'lolly'],
  sheet: [6, 44],
  shortName: 'candy'
}, {
  name: 'Lollipop',
  unified: '1F36D',
  keywords: ['lollipop', 'food', 'snack', 'candy', 'sweet'],
  sheet: [6, 45],
  shortName: 'lollipop'
}, {
  name: 'Custard',
  unified: '1F36E',
  keywords: ['custard', 'dessert', 'food'],
  sheet: [6, 46],
  shortName: 'custard'
}, {
  name: 'Honey Pot',
  unified: '1F36F',
  keywords: ['honey_pot', 'bees', 'sweet', 'kitchen'],
  sheet: [6, 47],
  shortName: 'honey_pot'
}, {
  name: 'Baby Bottle',
  unified: '1F37C',
  keywords: ['baby_bottle', 'food', 'container', 'milk'],
  sheet: [6, 60],
  shortName: 'baby_bottle'
}, {
  name: 'Glass of Milk',
  unified: '1F95B',
  keywords: ['glass_of_milk', 'beverage', 'drink', 'cow'],
  sheet: [43, 37],
  shortName: 'glass_of_milk'
}, {
  name: 'Hot Beverage',
  unified: '2615',
  keywords: ['hot_beverage', 'beverage', 'caffeine', 'latte', 'espresso', 'coffee', 'mug'],
  sheet: [56, 48],
  shortName: 'coffee'
}, {
  name: 'Teapot',
  unified: '1FAD6',
  keywords: ['teapot', 'drink', 'hot'],
  sheet: [55, 8],
  shortName: 'teapot'
}, {
  name: 'Teacup Without Handle',
  unified: '1F375',
  keywords: ['teacup_without_handle', 'drink', 'bowl', 'breakfast', 'green', 'british'],
  sheet: [6, 53],
  shortName: 'tea'
}, {
  name: 'Sake Bottle and Cup',
  unified: '1F376',
  keywords: ['sake', 'wine', 'drink', 'drunk', 'beverage', 'japanese', 'alcohol', 'booze'],
  sheet: [6, 54],
  shortName: 'sake'
}, {
  name: 'Bottle with Popping Cork',
  unified: '1F37E',
  keywords: ['bottle_with_popping_cork', 'drink', 'wine', 'bottle', 'celebration'],
  sheet: [7, 1],
  shortName: 'champagne'
}, {
  name: 'Wine Glass',
  unified: '1F377',
  keywords: ['wine_glass', 'drink', 'beverage', 'drunk', 'alcohol', 'booze'],
  sheet: [6, 55],
  shortName: 'wine_glass'
}, {
  name: 'Cocktail Glass',
  unified: '1F378',
  keywords: ['cocktail_glass', 'drink', 'drunk', 'alcohol', 'beverage', 'booze', 'mojito'],
  sheet: [6, 56],
  shortName: 'cocktail'
}, {
  name: 'Tropical Drink',
  unified: '1F379',
  keywords: ['tropical_drink', 'beverage', 'cocktail', 'summer', 'beach', 'alcohol', 'booze', 'mojito'],
  sheet: [6, 57],
  shortName: 'tropical_drink'
}, {
  name: 'Beer Mug',
  unified: '1F37A',
  keywords: ['beer_mug', 'relax', 'beverage', 'drink', 'drunk', 'party', 'pub', 'summer', 'alcohol', 'booze'],
  sheet: [6, 58],
  shortName: 'beer'
}, {
  name: 'Clinking Beer Mugs',
  unified: '1F37B',
  keywords: ['clinking_beer_mugs', 'relax', 'beverage', 'drink', 'drunk', 'party', 'pub', 'summer', 'alcohol', 'booze'],
  sheet: [6, 59],
  shortName: 'beers'
}, {
  name: 'Clinking Glasses',
  unified: '1F942',
  keywords: ['clinking_glasses', 'beverage', 'drink', 'party', 'alcohol', 'celebrate', 'cheers', 'wine', 'champagne', 'toast'],
  sheet: [43, 13],
  shortName: 'clinking_glasses'
}, {
  name: 'Tumbler Glass',
  unified: '1F943',
  keywords: ['tumbler_glass', 'drink', 'beverage', 'drunk', 'alcohol', 'liquor', 'booze', 'bourbon', 'scotch', 'whisky', 'glass', 'shot'],
  sheet: [43, 14],
  shortName: 'tumbler_glass'
}, {
  name: 'Pouring Liquid',
  unified: '1FAD7',
  keywords: ['pouring liquid', 'cup', 'water'],
  sheet: [55, 9],
  hidden: ['facebook'],
  shortName: 'pouring_liquid'
}, {
  name: 'Cup with Straw',
  unified: '1F964',
  keywords: ['cup_with_straw', 'drink', 'soda'],
  sheet: [43, 46],
  shortName: 'cup_with_straw'
}, {
  name: 'Bubble Tea',
  unified: '1F9CB',
  keywords: ['bubble tea', 'taiwan', 'boba', 'milk tea', 'straw'],
  sheet: [46, 16],
  shortName: 'bubble_tea'
}, {
  name: 'Beverage Box',
  unified: '1F9C3',
  keywords: ['beverage_box', 'drink'],
  sheet: [46, 8],
  shortName: 'beverage_box'
}, {
  name: 'Mate Drink',
  unified: '1F9C9',
  keywords: ['mate', 'drink', 'tea', 'beverage'],
  sheet: [46, 14],
  shortName: 'mate_drink'
}, {
  name: 'Ice Cube',
  unified: '1F9CA',
  keywords: ['ice', 'water', 'cold'],
  sheet: [46, 15],
  shortName: 'ice_cube'
}, {
  name: 'Chopsticks',
  unified: '1F962',
  keywords: ['chopsticks', 'food'],
  sheet: [43, 44],
  shortName: 'chopsticks'
}, {
  name: 'Fork and Knife with Plate',
  unified: '1F37D-FE0F',
  keywords: ['fork_and_knife_with_plate', 'food', 'eat', 'meal', 'lunch', 'dinner', 'restaurant'],
  sheet: [7, 0],
  shortName: 'knife_fork_plate'
}, {
  name: 'Fork and Knife',
  unified: '1F374',
  keywords: ['fork_and_knife', 'cutlery', 'kitchen'],
  sheet: [6, 52],
  shortName: 'fork_and_knife'
}, {
  name: 'Spoon',
  unified: '1F944',
  keywords: ['spoon', 'cutlery', 'kitchen', 'tableware'],
  sheet: [43, 15],
  shortName: 'spoon'
}, {
  name: 'Hocho',
  unified: '1F52A',
  keywords: ['kitchen_knife', 'knife', 'blade', 'cutlery', 'kitchen', 'weapon'],
  sheet: [30, 6],
  shortNames: ['knife'],
  shortName: 'hocho'
}, {
  name: 'Jar',
  unified: '1FAD9',
  keywords: ['jar', 'container', 'sauce'],
  sheet: [55, 11],
  hidden: ['facebook'],
  shortName: 'jar'
}, {
  name: 'Amphora',
  unified: '1F3FA',
  keywords: ['amphora', 'vase', 'jar'],
  sheet: [10, 40],
  shortName: 'amphora'
}, {
  name: 'Earth Globe Europe-Africa',
  unified: '1F30D',
  keywords: ['globe_showing_europe_africa', 'globe', 'world', 'international'],
  sheet: [5, 12],
  shortName: 'earth_africa'
}, {
  name: 'Earth Globe Americas',
  unified: '1F30E',
  keywords: ['globe_showing_americas', 'globe', 'world', 'USA', 'international'],
  sheet: [5, 13],
  shortName: 'earth_americas'
}, {
  name: 'Earth Globe Asia-Australia',
  unified: '1F30F',
  keywords: ['globe_showing_asia_australia', 'globe', 'world', 'east', 'international'],
  sheet: [5, 14],
  shortName: 'earth_asia'
}, {
  name: 'Globe with Meridians',
  unified: '1F310',
  keywords: ['globe_with_meridians', 'earth', 'international', 'world', 'internet', 'interweb', 'i18n'],
  sheet: [5, 15],
  shortName: 'globe_with_meridians'
}, {
  name: 'World Map',
  unified: '1F5FA-FE0F',
  keywords: ['world_map', 'location', 'direction'],
  sheet: [32, 14],
  shortName: 'world_map'
}, {
  name: 'Silhouette of Japan',
  unified: '1F5FE',
  keywords: ['map_of_japan', 'nation', 'country', 'japanese', 'asia'],
  sheet: [32, 18],
  shortName: 'japan'
}, {
  name: 'Compass',
  unified: '1F9ED',
  keywords: ['compass', 'magnetic', 'navigation', 'orienteering'],
  sheet: [53, 27],
  shortName: 'compass'
}, {
  name: 'Snow-Capped Mountain',
  unified: '1F3D4-FE0F',
  keywords: ['snow_capped_mountain', 'photo', 'nature', 'environment', 'winter', 'cold'],
  sheet: [9, 60],
  shortName: 'snow_capped_mountain'
}, {
  name: 'Mountain',
  unified: '26F0-FE0F',
  keywords: ['mountain', 'photo', 'nature', 'environment'],
  sheet: [57, 56],
  shortName: 'mountain'
}, {
  name: 'Volcano',
  unified: '1F30B',
  keywords: ['volcano', 'photo', 'nature', 'disaster'],
  sheet: [5, 10],
  shortName: 'volcano'
}, {
  name: 'Mount Fuji',
  unified: '1F5FB',
  keywords: ['mount_fuji', 'photo', 'mountain', 'nature', 'japanese'],
  sheet: [32, 15],
  shortName: 'mount_fuji'
}, {
  name: 'Camping',
  unified: '1F3D5-FE0F',
  keywords: ['camping', 'photo', 'outdoors', 'tent'],
  sheet: [10, 0],
  shortName: 'camping'
}, {
  name: 'Beach with Umbrella',
  unified: '1F3D6-FE0F',
  keywords: ['beach_with_umbrella', 'weather', 'summer', 'sunny', 'sand', 'mojito'],
  sheet: [10, 1],
  shortName: 'beach_with_umbrella'
}, {
  name: 'Desert',
  unified: '1F3DC-FE0F',
  keywords: ['desert', 'photo', 'warm', 'saharah'],
  sheet: [10, 7],
  shortName: 'desert'
}, {
  name: 'Desert Island',
  unified: '1F3DD-FE0F',
  keywords: ['desert_island', 'photo', 'tropical', 'mojito'],
  sheet: [10, 8],
  shortName: 'desert_island'
}, {
  name: 'National Park',
  unified: '1F3DE-FE0F',
  keywords: ['national_park', 'photo', 'environment', 'nature'],
  sheet: [10, 9],
  shortName: 'national_park'
}, {
  name: 'Stadium',
  unified: '1F3DF-FE0F',
  keywords: ['stadium', 'photo', 'place', 'sports', 'concert', 'venue'],
  sheet: [10, 10],
  shortName: 'stadium'
}, {
  name: 'Classical Building',
  unified: '1F3DB-FE0F',
  keywords: ['classical_building', 'art', 'culture', 'history'],
  sheet: [10, 6],
  shortName: 'classical_building'
}, {
  name: 'Building Construction',
  unified: '1F3D7-FE0F',
  keywords: ['building_construction', 'wip', 'working', 'progress'],
  sheet: [10, 2],
  shortName: 'building_construction'
}, {
  name: 'Brick',
  unified: '1F9F1',
  keywords: ['brick', 'bricks'],
  sheet: [53, 31],
  shortName: 'bricks'
}, {
  name: 'Rock',
  unified: '1FAA8',
  keywords: ['rock', 'stone'],
  sheet: [54, 26],
  shortName: 'rock'
}, {
  name: 'Wood',
  unified: '1FAB5',
  keywords: ['wood', 'nature', 'timber', 'trunk'],
  sheet: [54, 36],
  shortName: 'wood'
}, {
  name: 'Hut',
  unified: '1F6D6',
  keywords: ['hut', 'house', 'structure'],
  sheet: [38, 6],
  shortName: 'hut'
}, {
  name: 'Houses',
  unified: '1F3D8-FE0F',
  keywords: ['houses', 'buildings', 'photo'],
  sheet: [10, 3],
  shortName: 'house_buildings'
}, {
  name: 'Derelict House',
  unified: '1F3DA-FE0F',
  keywords: ['derelict_house', 'abandon', 'evict', 'broken', 'building'],
  sheet: [10, 5],
  shortName: 'derelict_house_building'
}, {
  name: 'House Building',
  unified: '1F3E0',
  keywords: ['house', 'building', 'home'],
  sheet: [10, 11],
  shortName: 'house'
}, {
  name: 'House with Garden',
  unified: '1F3E1',
  keywords: ['house_with_garden', 'home', 'plant', 'nature'],
  sheet: [10, 12],
  shortName: 'house_with_garden'
}, {
  name: 'Office Building',
  unified: '1F3E2',
  keywords: ['office_building', 'building', 'bureau', 'work'],
  sheet: [10, 13],
  shortName: 'office'
}, {
  name: 'Japanese Post Office',
  unified: '1F3E3',
  keywords: ['japanese_post_office', 'building', 'envelope', 'communication'],
  sheet: [10, 14],
  shortName: 'post_office'
}, {
  name: 'European Post Office',
  unified: '1F3E4',
  keywords: ['post_office', 'building', 'email'],
  sheet: [10, 15],
  shortName: 'european_post_office'
}, {
  name: 'Hospital',
  unified: '1F3E5',
  keywords: ['hospital', 'building', 'health', 'surgery', 'doctor'],
  sheet: [10, 16],
  shortName: 'hospital'
}, {
  name: 'Bank',
  unified: '1F3E6',
  keywords: ['bank', 'building', 'money', 'sales', 'cash', 'business', 'enterprise'],
  sheet: [10, 17],
  shortName: 'bank'
}, {
  name: 'Hotel',
  unified: '1F3E8',
  keywords: ['hotel', 'building', 'accomodation', 'checkin'],
  sheet: [10, 19],
  shortName: 'hotel'
}, {
  name: 'Love Hotel',
  unified: '1F3E9',
  keywords: ['love_hotel', 'like', 'affection', 'dating'],
  sheet: [10, 20],
  shortName: 'love_hotel'
}, {
  name: 'Convenience Store',
  unified: '1F3EA',
  keywords: ['convenience_store', 'building', 'shopping', 'groceries'],
  sheet: [10, 21],
  shortName: 'convenience_store'
}, {
  name: 'School',
  unified: '1F3EB',
  keywords: ['school', 'building', 'student', 'education', 'learn', 'teach'],
  sheet: [10, 22],
  shortName: 'school'
}, {
  name: 'Department Store',
  unified: '1F3EC',
  keywords: ['department_store', 'building', 'shopping', 'mall'],
  sheet: [10, 23],
  shortName: 'department_store'
}, {
  name: 'Factory',
  unified: '1F3ED',
  keywords: ['factory', 'building', 'industry', 'pollution', 'smoke'],
  sheet: [10, 24],
  shortName: 'factory'
}, {
  name: 'Japanese Castle',
  unified: '1F3EF',
  keywords: ['japanese_castle', 'photo', 'building'],
  sheet: [10, 26],
  shortName: 'japanese_castle'
}, {
  name: 'European Castle',
  unified: '1F3F0',
  keywords: ['castle', 'building', 'royalty', 'history'],
  sheet: [10, 27],
  shortName: 'european_castle'
}, {
  name: 'Wedding',
  unified: '1F492',
  keywords: ['wedding', 'love', 'like', 'affection', 'couple', 'marriage', 'bride', 'groom'],
  sheet: [27, 33],
  shortName: 'wedding'
}, {
  name: 'Tokyo Tower',
  unified: '1F5FC',
  keywords: ['tokyo_tower', 'photo', 'japanese'],
  sheet: [32, 16],
  shortName: 'tokyo_tower'
}, {
  name: 'Statue of Liberty',
  unified: '1F5FD',
  keywords: ['statue_of_liberty', 'american', 'newyork'],
  sheet: [32, 17],
  shortName: 'statue_of_liberty'
}, {
  name: 'Church',
  unified: '26EA',
  keywords: ['church', 'building', 'religion', 'christ'],
  sheet: [57, 55],
  shortName: 'church'
}, {
  name: 'Mosque',
  unified: '1F54C',
  keywords: ['mosque', 'islam', 'worship', 'minaret'],
  sheet: [30, 29],
  shortName: 'mosque'
}, {
  name: 'Hindu Temple',
  unified: '1F6D5',
  keywords: ['hindu_temple', 'religion'],
  sheet: [38, 5],
  shortName: 'hindu_temple'
}, {
  name: 'Synagogue',
  unified: '1F54D',
  keywords: ['synagogue', 'judaism', 'worship', 'temple', 'jewish'],
  sheet: [30, 30],
  shortName: 'synagogue'
}, {
  name: 'Shinto Shrine',
  unified: '26E9-FE0F',
  keywords: ['shinto_shrine', 'temple', 'japan', 'kyoto'],
  sheet: [57, 54],
  shortName: 'shinto_shrine'
}, {
  name: 'Kaaba',
  unified: '1F54B',
  keywords: ['kaaba', 'mecca', 'mosque', 'islam'],
  sheet: [30, 28],
  shortName: 'kaaba'
}, {
  name: 'Fountain',
  unified: '26F2',
  keywords: ['fountain', 'photo', 'summer', 'water', 'fresh'],
  sheet: [57, 58],
  shortName: 'fountain'
}, {
  name: 'Tent',
  unified: '26FA',
  keywords: ['tent', 'photo', 'camping', 'outdoors'],
  sheet: [58, 21],
  shortName: 'tent'
}, {
  name: 'Foggy',
  unified: '1F301',
  keywords: ['foggy', 'photo', 'mountain'],
  sheet: [5, 0],
  shortName: 'foggy'
}, {
  name: 'Night with Stars',
  unified: '1F303',
  keywords: ['night_with_stars', 'evening', 'city', 'downtown'],
  sheet: [5, 2],
  shortName: 'night_with_stars'
}, {
  name: 'Cityscape',
  unified: '1F3D9-FE0F',
  keywords: ['cityscape', 'photo', 'night life', 'urban'],
  sheet: [10, 4],
  shortName: 'cityscape'
}, {
  name: 'Sunrise over Mountains',
  unified: '1F304',
  keywords: ['sunrise_over_mountains', 'view', 'vacation', 'photo'],
  sheet: [5, 3],
  shortName: 'sunrise_over_mountains'
}, {
  name: 'Sunrise',
  unified: '1F305',
  keywords: ['sunrise', 'morning', 'view', 'vacation', 'photo'],
  sheet: [5, 4],
  shortName: 'sunrise'
}, {
  name: 'Cityscape at Dusk',
  unified: '1F306',
  keywords: ['cityscape_at_dusk', 'photo', 'evening', 'sky', 'buildings'],
  sheet: [5, 5],
  shortName: 'city_sunset'
}, {
  name: 'Sunset over Buildings',
  unified: '1F307',
  keywords: ['sunset', 'photo', 'good morning', 'dawn'],
  sheet: [5, 6],
  shortName: 'city_sunrise'
}, {
  name: 'Bridge at Night',
  unified: '1F309',
  keywords: ['bridge_at_night', 'photo', 'sanfrancisco'],
  sheet: [5, 8],
  shortName: 'bridge_at_night'
}, {
  name: 'Hot Springs',
  unified: '2668-FE0F',
  keywords: ['hot_springs', 'bath', 'warm', 'relax'],
  sheet: [57, 24],
  shortName: 'hotsprings'
}, {
  name: 'Carousel Horse',
  unified: '1F3A0',
  keywords: ['carousel_horse', 'photo', 'carnival'],
  sheet: [7, 35],
  shortName: 'carousel_horse'
}, {
  name: 'Playground Slide',
  unified: '1F6DD',
  keywords: ['playground slide', 'fun', 'park'],
  sheet: [38, 8],
  hidden: ['facebook'],
  shortName: 'playground_slide'
}, {
  name: 'Ferris Wheel',
  unified: '1F3A1',
  keywords: ['ferris_wheel', 'photo', 'carnival', 'londoneye'],
  sheet: [7, 36],
  shortName: 'ferris_wheel'
}, {
  name: 'Roller Coaster',
  unified: '1F3A2',
  keywords: ['roller_coaster', 'carnival', 'playground', 'photo', 'fun'],
  sheet: [7, 37],
  shortName: 'roller_coaster'
}, {
  name: 'Barber Pole',
  unified: '1F488',
  keywords: ['barber_pole', 'hair', 'salon', 'style'],
  sheet: [26, 34],
  shortName: 'barber'
}, {
  name: 'Circus Tent',
  unified: '1F3AA',
  keywords: ['circus_tent', 'festival', 'carnival', 'party'],
  sheet: [7, 45],
  shortName: 'circus_tent'
}, {
  name: 'Steam Locomotive',
  unified: '1F682',
  keywords: ['locomotive', 'transportation', 'vehicle', 'train'],
  sheet: [35, 34],
  shortName: 'steam_locomotive'
}, {
  name: 'Railway Car',
  unified: '1F683',
  keywords: ['railway_car', 'transportation', 'vehicle'],
  sheet: [35, 35],
  shortName: 'railway_car'
}, {
  name: 'High-Speed Train',
  unified: '1F684',
  keywords: ['high_speed_train', 'transportation', 'vehicle'],
  sheet: [35, 36],
  shortName: 'bullettrain_side'
}, {
  name: 'High-Speed Train with Bullet Nose',
  unified: '1F685',
  keywords: ['bullet_train', 'transportation', 'vehicle', 'speed', 'fast', 'public', 'travel'],
  sheet: [35, 37],
  shortName: 'bullettrain_front'
}, {
  name: 'Train',
  unified: '1F686',
  keywords: ['train', 'transportation', 'vehicle'],
  sheet: [35, 38],
  shortName: 'train2'
}, {
  name: 'Metro',
  unified: '1F687',
  keywords: ['metro', 'transportation', 'blue-square', 'mrt', 'underground', 'tube'],
  sheet: [35, 39],
  shortName: 'metro'
}, {
  name: 'Light Rail',
  unified: '1F688',
  keywords: ['light_rail', 'transportation', 'vehicle'],
  sheet: [35, 40],
  shortName: 'light_rail'
}, {
  name: 'Station',
  unified: '1F689',
  keywords: ['station', 'transportation', 'vehicle', 'public'],
  sheet: [35, 41],
  shortName: 'station'
}, {
  name: 'Tram',
  unified: '1F68A',
  keywords: ['tram', 'transportation', 'vehicle'],
  sheet: [35, 42],
  shortName: 'tram'
}, {
  name: 'Monorail',
  unified: '1F69D',
  keywords: ['monorail', 'transportation', 'vehicle'],
  sheet: [36, 0],
  shortName: 'monorail'
}, {
  name: 'Mountain Railway',
  unified: '1F69E',
  keywords: ['mountain_railway', 'transportation', 'vehicle'],
  sheet: [36, 1],
  shortName: 'mountain_railway'
}, {
  name: 'Tram Car',
  unified: '1F68B',
  keywords: ['tram_car', 'transportation', 'vehicle', 'carriage', 'public', 'travel'],
  sheet: [35, 43],
  shortName: 'train'
}, {
  name: 'Bus',
  unified: '1F68C',
  keywords: ['bus', 'car', 'vehicle', 'transportation'],
  sheet: [35, 44],
  shortName: 'bus'
}, {
  name: 'Oncoming Bus',
  unified: '1F68D',
  keywords: ['oncoming_bus', 'vehicle', 'transportation'],
  sheet: [35, 45],
  shortName: 'oncoming_bus'
}, {
  name: 'Trolleybus',
  unified: '1F68E',
  keywords: ['trolleybus', 'bart', 'transportation', 'vehicle'],
  sheet: [35, 46],
  shortName: 'trolleybus'
}, {
  name: 'Minibus',
  unified: '1F690',
  keywords: ['minibus', 'vehicle', 'car', 'transportation'],
  sheet: [35, 48],
  shortName: 'minibus'
}, {
  name: 'Ambulance',
  unified: '1F691',
  keywords: ['ambulance', 'health', '911', 'hospital'],
  sheet: [35, 49],
  shortName: 'ambulance'
}, {
  name: 'Fire Engine',
  unified: '1F692',
  keywords: ['fire_engine', 'transportation', 'cars', 'vehicle'],
  sheet: [35, 50],
  shortName: 'fire_engine'
}, {
  name: 'Police Car',
  unified: '1F693',
  keywords: ['police_car', 'vehicle', 'cars', 'transportation', 'law', 'legal', 'enforcement'],
  sheet: [35, 51],
  shortName: 'police_car'
}, {
  name: 'Oncoming Police Car',
  unified: '1F694',
  keywords: ['oncoming_police_car', 'vehicle', 'law', 'legal', 'enforcement', '911'],
  sheet: [35, 52],
  shortName: 'oncoming_police_car'
}, {
  name: 'Taxi',
  unified: '1F695',
  keywords: ['taxi', 'uber', 'vehicle', 'cars', 'transportation'],
  sheet: [35, 53],
  shortName: 'taxi'
}, {
  name: 'Oncoming Taxi',
  unified: '1F696',
  keywords: ['oncoming_taxi', 'vehicle', 'cars', 'uber'],
  sheet: [35, 54],
  shortName: 'oncoming_taxi'
}, {
  name: 'Automobile',
  unified: '1F697',
  keywords: ['automobile', 'red', 'transportation', 'vehicle'],
  sheet: [35, 55],
  shortNames: ['red_car'],
  shortName: 'car'
}, {
  name: 'Oncoming Automobile',
  unified: '1F698',
  keywords: ['oncoming_automobile', 'car', 'vehicle', 'transportation'],
  sheet: [35, 56],
  shortName: 'oncoming_automobile'
}, {
  name: 'Recreational Vehicle',
  unified: '1F699',
  keywords: ['sport_utility_vehicle', 'transportation', 'vehicle'],
  sheet: [35, 57],
  shortName: 'blue_car'
}, {
  name: 'Pickup Truck',
  unified: '1F6FB',
  keywords: ['pickup truck', 'car', 'transportation'],
  sheet: [38, 29],
  shortName: 'pickup_truck'
}, {
  name: 'Delivery Truck',
  unified: '1F69A',
  keywords: ['delivery_truck', 'cars', 'transportation'],
  sheet: [35, 58],
  shortName: 'truck'
}, {
  name: 'Articulated Lorry',
  unified: '1F69B',
  keywords: ['articulated_lorry', 'vehicle', 'cars', 'transportation', 'express'],
  sheet: [35, 59],
  shortName: 'articulated_lorry'
}, {
  name: 'Tractor',
  unified: '1F69C',
  keywords: ['tractor', 'vehicle', 'car', 'farming', 'agriculture'],
  sheet: [35, 60],
  shortName: 'tractor'
}, {
  name: 'Racing Car',
  unified: '1F3CE-FE0F',
  keywords: ['racing_car', 'sports', 'race', 'fast', 'formula', 'f1'],
  sheet: [9, 54],
  shortName: 'racing_car'
}, {
  name: 'Motorcycle',
  unified: '1F3CD-FE0F',
  keywords: ['motorcycle', 'race', 'sports', 'fast'],
  sheet: [9, 53],
  shortName: 'racing_motorcycle'
}, {
  name: 'Motor Scooter',
  unified: '1F6F5',
  keywords: ['motor_scooter', 'vehicle', 'vespa', 'sasha'],
  sheet: [38, 23],
  shortName: 'motor_scooter'
}, {
  name: 'Manual Wheelchair',
  unified: '1F9BD',
  keywords: ['manual_wheelchair', 'accessibility'],
  sheet: [46, 2],
  shortName: 'manual_wheelchair'
}, {
  name: 'Motorized Wheelchair',
  unified: '1F9BC',
  keywords: ['motorized_wheelchair', 'accessibility'],
  sheet: [46, 1],
  shortName: 'motorized_wheelchair'
}, {
  name: 'Auto Rickshaw',
  unified: '1F6FA',
  keywords: ['auto_rickshaw', 'move', 'transportation'],
  sheet: [38, 28],
  shortName: 'auto_rickshaw'
}, {
  name: 'Bicycle',
  unified: '1F6B2',
  keywords: ['bicycle', 'sports', 'bicycle', 'exercise', 'hipster'],
  sheet: [36, 38],
  shortName: 'bike'
}, {
  name: 'Scooter',
  unified: '1F6F4',
  keywords: ['kick_scooter', 'vehicle', 'kick', 'razor'],
  sheet: [38, 22],
  shortName: 'scooter'
}, {
  name: 'Skateboard',
  unified: '1F6F9',
  keywords: ['skateboard', 'board'],
  sheet: [38, 27],
  shortName: 'skateboard'
}, {
  name: 'Roller Skate',
  unified: '1F6FC',
  keywords: ['roller skate', 'footwear', 'sports'],
  sheet: [38, 30],
  shortName: 'roller_skate'
}, {
  name: 'Bus Stop',
  unified: '1F68F',
  keywords: ['bus_stop', 'transportation', 'wait'],
  sheet: [35, 47],
  shortName: 'busstop'
}, {
  name: 'Motorway',
  unified: '1F6E3-FE0F',
  keywords: ['motorway', 'road', 'cupertino', 'interstate', 'highway'],
  sheet: [38, 14],
  shortName: 'motorway'
}, {
  name: 'Railway Track',
  unified: '1F6E4-FE0F',
  keywords: ['railway_track', 'train', 'transportation'],
  sheet: [38, 15],
  shortName: 'railway_track'
}, {
  name: 'Oil Drum',
  unified: '1F6E2-FE0F',
  keywords: ['oil_drum', 'barrell'],
  sheet: [38, 13],
  shortName: 'oil_drum'
}, {
  name: 'Fuel Pump',
  unified: '26FD',
  keywords: ['fuel_pump', 'gas station', 'petroleum'],
  sheet: [58, 22],
  shortName: 'fuelpump'
}, {
  name: 'Wheel',
  unified: '1F6DE',
  keywords: ['wheel', 'car', 'transport'],
  sheet: [38, 9],
  hidden: ['facebook'],
  shortName: 'wheel'
}, {
  name: 'Police Cars Revolving Light',
  unified: '1F6A8',
  keywords: ['police_car_light', 'police', 'ambulance', '911', 'emergency', 'alert', 'error', 'pinged', 'law', 'legal'],
  sheet: [36, 28],
  shortName: 'rotating_light'
}, {
  name: 'Horizontal Traffic Light',
  unified: '1F6A5',
  keywords: ['horizontal_traffic_light', 'transportation', 'signal'],
  sheet: [36, 25],
  shortName: 'traffic_light'
}, {
  name: 'Vertical Traffic Light',
  unified: '1F6A6',
  keywords: ['vertical_traffic_light', 'transportation', 'driving'],
  sheet: [36, 26],
  shortName: 'vertical_traffic_light'
}, {
  name: 'Octagonal Sign',
  unified: '1F6D1',
  keywords: ['stop_sign', 'stop'],
  sheet: [38, 3],
  shortName: 'octagonal_sign'
}, {
  name: 'Construction Sign',
  unified: '1F6A7',
  keywords: ['construction', 'wip', 'progress', 'caution', 'warning'],
  sheet: [36, 27],
  shortName: 'construction'
}, {
  name: 'Anchor',
  unified: '2693',
  keywords: ['anchor', 'ship', 'ferry', 'sea', 'boat'],
  sheet: [57, 29],
  shortName: 'anchor'
}, {
  name: 'Ring Buoy',
  unified: '1F6DF',
  keywords: ['ring buoy', 'life saver', 'life preserver'],
  sheet: [38, 10],
  hidden: ['facebook'],
  shortName: 'ring_buoy'
}, {
  name: 'Sailboat',
  unified: '26F5',
  keywords: ['sailboat', 'ship', 'summer', 'transportation', 'water', 'sailing'],
  sheet: [58, 0],
  shortNames: ['sailboat'],
  shortName: 'boat'
}, {
  name: 'Canoe',
  unified: '1F6F6',
  keywords: ['canoe', 'boat', 'paddle', 'water', 'ship'],
  sheet: [38, 24],
  shortName: 'canoe'
}, {
  name: 'Speedboat',
  unified: '1F6A4',
  keywords: ['speedboat', 'ship', 'transportation', 'vehicle', 'summer'],
  sheet: [36, 24],
  shortName: 'speedboat'
}, {
  name: 'Passenger Ship',
  unified: '1F6F3-FE0F',
  keywords: ['passenger_ship', 'yacht', 'cruise', 'ferry'],
  sheet: [38, 21],
  shortName: 'passenger_ship'
}, {
  name: 'Ferry',
  unified: '26F4-FE0F',
  keywords: ['ferry', 'boat', 'ship', 'yacht'],
  sheet: [57, 60],
  shortName: 'ferry'
}, {
  name: 'Motor Boat',
  unified: '1F6E5-FE0F',
  keywords: ['motor_boat', 'ship'],
  sheet: [38, 16],
  shortName: 'motor_boat'
}, {
  name: 'Ship',
  unified: '1F6A2',
  keywords: ['ship', 'transportation', 'titanic', 'deploy'],
  sheet: [36, 5],
  shortName: 'ship'
}, {
  name: 'Airplane',
  unified: '2708-FE0F',
  keywords: ['airplane', 'vehicle', 'transportation', 'flight', 'fly'],
  sheet: [58, 25],
  shortName: 'airplane'
}, {
  name: 'Small Airplane',
  unified: '1F6E9-FE0F',
  keywords: ['small_airplane', 'flight', 'transportation', 'fly', 'vehicle'],
  sheet: [38, 17],
  shortName: 'small_airplane'
}, {
  name: 'Airplane Departure',
  unified: '1F6EB',
  keywords: ['airplane_departure', 'airport', 'flight', 'landing'],
  sheet: [38, 18],
  shortName: 'airplane_departure'
}, {
  name: 'Airplane Arriving',
  unified: '1F6EC',
  keywords: ['airplane_arrival', 'airport', 'flight', 'boarding'],
  sheet: [38, 19],
  shortName: 'airplane_arriving'
}, {
  name: 'Parachute',
  unified: '1FA82',
  keywords: ['parachute', 'fly', 'glide'],
  sheet: [53, 58],
  shortName: 'parachute'
}, {
  name: 'Seat',
  unified: '1F4BA',
  keywords: ['seat', 'sit', 'airplane', 'transport', 'bus', 'flight', 'fly'],
  sheet: [28, 17],
  shortName: 'seat'
}, {
  name: 'Helicopter',
  unified: '1F681',
  keywords: ['helicopter', 'transportation', 'vehicle', 'fly'],
  sheet: [35, 33],
  shortName: 'helicopter'
}, {
  name: 'Suspension Railway',
  unified: '1F69F',
  keywords: ['suspension_railway', 'vehicle', 'transportation'],
  sheet: [36, 2],
  shortName: 'suspension_railway'
}, {
  name: 'Mountain Cableway',
  unified: '1F6A0',
  keywords: ['mountain_cableway', 'transportation', 'vehicle', 'ski'],
  sheet: [36, 3],
  shortName: 'mountain_cableway'
}, {
  name: 'Aerial Tramway',
  unified: '1F6A1',
  keywords: ['aerial_tramway', 'transportation', 'vehicle', 'ski'],
  sheet: [36, 4],
  shortName: 'aerial_tramway'
}, {
  name: 'Satellite',
  unified: '1F6F0-FE0F',
  keywords: ['satellite', 'communication', 'gps', 'orbit', 'spaceflight', 'NASA', 'ISS'],
  sheet: [38, 20],
  shortName: 'satellite'
}, {
  name: 'Rocket',
  unified: '1F680',
  keywords: ['rocket', 'launch', 'ship', 'staffmode', 'NASA', 'outer space', 'outer_space', 'fly'],
  sheet: [35, 32],
  shortName: 'rocket'
}, {
  name: 'Flying Saucer',
  unified: '1F6F8',
  keywords: ['flying_saucer', 'transportation', 'vehicle', 'ufo'],
  sheet: [38, 26],
  shortName: 'flying_saucer'
}, {
  name: 'Bellhop Bell',
  unified: '1F6CE-FE0F',
  keywords: ['bellhop_bell', 'service'],
  sheet: [38, 0],
  shortName: 'bellhop_bell'
}, {
  name: 'Luggage',
  unified: '1F9F3',
  keywords: ['luggage', 'packing', 'travel'],
  sheet: [53, 33],
  shortName: 'luggage'
}, {
  name: 'Hourglass',
  unified: '231B',
  keywords: ['hourglass_done', 'time', 'clock', 'oldschool', 'limit', 'exam', 'quiz', 'test'],
  sheet: [56, 14],
  shortName: 'hourglass'
}, {
  name: 'Hourglass with Flowing Sand',
  unified: '23F3',
  keywords: ['hourglass_not_done', 'oldschool', 'time', 'countdown'],
  sheet: [56, 27],
  shortName: 'hourglass_flowing_sand'
}, {
  name: 'Watch',
  unified: '231A',
  keywords: ['watch', 'time', 'accessories'],
  sheet: [56, 13],
  shortName: 'watch'
}, {
  name: 'Alarm Clock',
  unified: '23F0',
  keywords: ['alarm_clock', 'time', 'wake'],
  sheet: [56, 24],
  shortName: 'alarm_clock'
}, {
  name: 'Stopwatch',
  unified: '23F1-FE0F',
  keywords: ['stopwatch', 'time', 'deadline'],
  sheet: [56, 25],
  shortName: 'stopwatch'
}, {
  name: 'Timer Clock',
  unified: '23F2-FE0F',
  keywords: ['timer_clock', 'alarm'],
  sheet: [56, 26],
  shortName: 'timer_clock'
}, {
  name: 'Mantelpiece Clock',
  unified: '1F570-FE0F',
  keywords: ['mantelpiece_clock', 'time'],
  sheet: [30, 57],
  shortName: 'mantelpiece_clock'
}, {
  name: 'Clock Face Twelve Oclock',
  unified: '1F55B',
  keywords: ['twelve_o_clock', '12', '00:00', '0000', '12:00', '1200', 'time', 'noon', 'midnight', 'midday', 'late', 'early', 'schedule'],
  sheet: [30, 43],
  shortName: 'clock12'
}, {
  name: 'Clock Face Twelve-Thirty',
  unified: '1F567',
  keywords: ['twelve_thirty', '00:30', '0030', '12:30', '1230', 'time', 'late', 'early', 'schedule'],
  sheet: [30, 55],
  shortName: 'clock1230'
}, {
  name: 'Clock Face One Oclock',
  unified: '1F550',
  keywords: ['one_o_clock', '1', '1:00', '100', '13:00', '1300', 'time', 'late', 'early', 'schedule'],
  sheet: [30, 32],
  shortName: 'clock1'
}, {
  name: 'Clock Face One-Thirty',
  unified: '1F55C',
  keywords: ['one_thirty', '1:30', '130', '13:30', '1330', 'time', 'late', 'early', 'schedule'],
  sheet: [30, 44],
  shortName: 'clock130'
}, {
  name: 'Clock Face Two Oclock',
  unified: '1F551',
  keywords: ['two_o_clock', '2', '2:00', '200', '14:00', '1400', 'time', 'late', 'early', 'schedule'],
  sheet: [30, 33],
  shortName: 'clock2'
}, {
  name: 'Clock Face Two-Thirty',
  unified: '1F55D',
  keywords: ['two_thirty', '2:30', '230', '14:30', '1430', 'time', 'late', 'early', 'schedule'],
  sheet: [30, 45],
  shortName: 'clock230'
}, {
  name: 'Clock Face Three Oclock',
  unified: '1F552',
  keywords: ['three_o_clock', '3', '3:00', '300', '15:00', '1500', 'time', 'late', 'early', 'schedule'],
  sheet: [30, 34],
  shortName: 'clock3'
}, {
  name: 'Clock Face Three-Thirty',
  unified: '1F55E',
  keywords: ['three_thirty', '3:30', '330', '15:30', '1530', 'time', 'late', 'early', 'schedule'],
  sheet: [30, 46],
  shortName: 'clock330'
}, {
  name: 'Clock Face Four Oclock',
  unified: '1F553',
  keywords: ['four_o_clock', '4', '4:00', '400', '16:00', '1600', 'time', 'late', 'early', 'schedule'],
  sheet: [30, 35],
  shortName: 'clock4'
}, {
  name: 'Clock Face Four-Thirty',
  unified: '1F55F',
  keywords: ['four_thirty', '4:30', '430', '16:30', '1630', 'time', 'late', 'early', 'schedule'],
  sheet: [30, 47],
  shortName: 'clock430'
}, {
  name: 'Clock Face Five Oclock',
  unified: '1F554',
  keywords: ['five_o_clock', '5', '5:00', '500', '17:00', '1700', 'time', 'late', 'early', 'schedule'],
  sheet: [30, 36],
  shortName: 'clock5'
}, {
  name: 'Clock Face Five-Thirty',
  unified: '1F560',
  keywords: ['five_thirty', '5:30', '530', '17:30', '1730', 'time', 'late', 'early', 'schedule'],
  sheet: [30, 48],
  shortName: 'clock530'
}, {
  name: 'Clock Face Six Oclock',
  unified: '1F555',
  keywords: ['six_o_clock', '6', '6:00', '600', '18:00', '1800', 'time', 'late', 'early', 'schedule', 'dawn', 'dusk'],
  sheet: [30, 37],
  shortName: 'clock6'
}, {
  name: 'Clock Face Six-Thirty',
  unified: '1F561',
  keywords: ['six_thirty', '6:30', '630', '18:30', '1830', 'time', 'late', 'early', 'schedule'],
  sheet: [30, 49],
  shortName: 'clock630'
}, {
  name: 'Clock Face Seven Oclock',
  unified: '1F556',
  keywords: ['seven_o_clock', '7', '7:00', '700', '19:00', '1900', 'time', 'late', 'early', 'schedule'],
  sheet: [30, 38],
  shortName: 'clock7'
}, {
  name: 'Clock Face Seven-Thirty',
  unified: '1F562',
  keywords: ['seven_thirty', '7:30', '730', '19:30', '1930', 'time', 'late', 'early', 'schedule'],
  sheet: [30, 50],
  shortName: 'clock730'
}, {
  name: 'Clock Face Eight Oclock',
  unified: '1F557',
  keywords: ['eight_o_clock', '8', '8:00', '800', '20:00', '2000', 'time', 'late', 'early', 'schedule'],
  sheet: [30, 39],
  shortName: 'clock8'
}, {
  name: 'Clock Face Eight-Thirty',
  unified: '1F563',
  keywords: ['eight_thirty', '8:30', '830', '20:30', '2030', 'time', 'late', 'early', 'schedule'],
  sheet: [30, 51],
  shortName: 'clock830'
}, {
  name: 'Clock Face Nine Oclock',
  unified: '1F558',
  keywords: ['nine_o_clock', '9', '9:00', '900', '21:00', '2100', 'time', 'late', 'early', 'schedule'],
  sheet: [30, 40],
  shortName: 'clock9'
}, {
  name: 'Clock Face Nine-Thirty',
  unified: '1F564',
  keywords: ['nine_thirty', '9:30', '930', '21:30', '2130', 'time', 'late', 'early', 'schedule'],
  sheet: [30, 52],
  shortName: 'clock930'
}, {
  name: 'Clock Face Ten Oclock',
  unified: '1F559',
  keywords: ['ten_o_clock', '10', '10:00', '1000', '22:00', '2200', 'time', 'late', 'early', 'schedule'],
  sheet: [30, 41],
  shortName: 'clock10'
}, {
  name: 'Clock Face Ten-Thirty',
  unified: '1F565',
  keywords: ['ten_thirty', '10:30', '1030', '22:30', '2230', 'time', 'late', 'early', 'schedule'],
  sheet: [30, 53],
  shortName: 'clock1030'
}, {
  name: 'Clock Face Eleven Oclock',
  unified: '1F55A',
  keywords: ['eleven_o_clock', '11', '11:00', '1100', '23:00', '2300', 'time', 'late', 'early', 'schedule'],
  sheet: [30, 42],
  shortName: 'clock11'
}, {
  name: 'Clock Face Eleven-Thirty',
  unified: '1F566',
  keywords: ['eleven_thirty', '11:30', '1130', '23:30', '2330', 'time', 'late', 'early', 'schedule'],
  sheet: [30, 54],
  shortName: 'clock1130'
}, {
  name: 'New Moon Symbol',
  unified: '1F311',
  keywords: ['new_moon', 'nature', 'twilight', 'planet', 'space', 'night', 'evening', 'sleep'],
  sheet: [5, 16],
  shortName: 'new_moon'
}, {
  name: 'Waxing Crescent Moon Symbol',
  unified: '1F312',
  keywords: ['waxing_crescent_moon', 'nature', 'twilight', 'planet', 'space', 'night', 'evening', 'sleep'],
  sheet: [5, 17],
  shortName: 'waxing_crescent_moon'
}, {
  name: 'First Quarter Moon Symbol',
  unified: '1F313',
  keywords: ['first_quarter_moon', 'nature', 'twilight', 'planet', 'space', 'night', 'evening', 'sleep'],
  sheet: [5, 18],
  shortName: 'first_quarter_moon'
}, {
  name: 'Waxing Gibbous Moon Symbol',
  unified: '1F314',
  keywords: ['waxing_gibbous_moon', 'nature', 'night', 'sky', 'gray', 'twilight', 'planet', 'space', 'evening', 'sleep'],
  sheet: [5, 19],
  shortNames: ['waxing_gibbous_moon'],
  shortName: 'moon'
}, {
  name: 'Full Moon Symbol',
  unified: '1F315',
  keywords: ['full_moon', 'nature', 'yellow', 'twilight', 'planet', 'space', 'night', 'evening', 'sleep'],
  sheet: [5, 20],
  shortName: 'full_moon'
}, {
  name: 'Waning Gibbous Moon Symbol',
  unified: '1F316',
  keywords: ['waning_gibbous_moon', 'nature', 'twilight', 'planet', 'space', 'night', 'evening', 'sleep', 'waxing_gibbous_moon'],
  sheet: [5, 21],
  shortName: 'waning_gibbous_moon'
}, {
  name: 'Last Quarter Moon Symbol',
  unified: '1F317',
  keywords: ['last_quarter_moon', 'nature', 'twilight', 'planet', 'space', 'night', 'evening', 'sleep'],
  sheet: [5, 22],
  shortName: 'last_quarter_moon'
}, {
  name: 'Waning Crescent Moon Symbol',
  unified: '1F318',
  keywords: ['waning_crescent_moon', 'nature', 'twilight', 'planet', 'space', 'night', 'evening', 'sleep'],
  sheet: [5, 23],
  shortName: 'waning_crescent_moon'
}, {
  name: 'Crescent Moon',
  unified: '1F319',
  keywords: ['crescent_moon', 'night', 'sleep', 'sky', 'evening', 'magic'],
  sheet: [5, 24],
  shortName: 'crescent_moon'
}, {
  name: 'New Moon with Face',
  unified: '1F31A',
  keywords: ['new_moon_face', 'nature', 'twilight', 'planet', 'space', 'night', 'evening', 'sleep'],
  sheet: [5, 25],
  shortName: 'new_moon_with_face'
}, {
  name: 'First Quarter Moon with Face',
  unified: '1F31B',
  keywords: ['first_quarter_moon_face', 'nature', 'twilight', 'planet', 'space', 'night', 'evening', 'sleep'],
  sheet: [5, 26],
  shortName: 'first_quarter_moon_with_face'
}, {
  name: 'Last Quarter Moon with Face',
  unified: '1F31C',
  keywords: ['last_quarter_moon_face', 'nature', 'twilight', 'planet', 'space', 'night', 'evening', 'sleep'],
  sheet: [5, 27],
  shortName: 'last_quarter_moon_with_face'
}, {
  name: 'Thermometer',
  unified: '1F321-FE0F',
  keywords: ['thermometer', 'weather', 'temperature', 'hot', 'cold'],
  sheet: [5, 32],
  shortName: 'thermometer'
}, {
  name: 'Black Sun with Rays',
  unified: '2600-FE0F',
  keywords: ['sun', 'weather', 'nature', 'brightness', 'summer', 'beach', 'spring'],
  sheet: [56, 40],
  shortName: 'sunny'
}, {
  name: 'Full Moon with Face',
  unified: '1F31D',
  keywords: ['full_moon_face', 'nature', 'twilight', 'planet', 'space', 'night', 'evening', 'sleep'],
  sheet: [5, 28],
  shortName: 'full_moon_with_face'
}, {
  name: 'Sun with Face',
  unified: '1F31E',
  keywords: ['sun_with_face', 'nature', 'morning', 'sky'],
  sheet: [5, 29],
  shortName: 'sun_with_face'
}, {
  name: 'Ringed Planet',
  unified: '1FA90',
  keywords: ['ringed_planet', 'outerspace'],
  sheet: [54, 2],
  shortName: 'ringed_planet'
}, {
  name: 'White Medium Star',
  unified: '2B50',
  keywords: ['star', 'night', 'yellow'],
  sheet: [59, 24],
  shortName: 'star'
}, {
  name: 'Glowing Star',
  unified: '1F31F',
  keywords: ['glowing_star', 'night', 'sparkle', 'awesome', 'good', 'magic'],
  sheet: [5, 30],
  shortName: 'star2'
}, {
  name: 'Shooting Star',
  unified: '1F320',
  keywords: ['shooting_star', 'night', 'photo'],
  sheet: [5, 31],
  shortName: 'stars'
}, {
  name: 'Milky Way',
  unified: '1F30C',
  keywords: ['milky_way', 'photo', 'space', 'stars'],
  sheet: [5, 11],
  shortName: 'milky_way'
}, {
  name: 'Cloud',
  unified: '2601-FE0F',
  keywords: ['cloud', 'weather', 'sky'],
  sheet: [56, 41],
  shortName: 'cloud'
}, {
  name: 'Sun Behind Cloud',
  unified: '26C5',
  keywords: ['sun_behind_cloud', 'weather', 'nature', 'cloudy', 'morning', 'fall', 'spring'],
  sheet: [57, 47],
  shortName: 'partly_sunny'
}, {
  name: 'Cloud with Lightning and Rain',
  unified: '26C8-FE0F',
  keywords: ['cloud_with_lightning_and_rain', 'weather', 'lightning'],
  sheet: [57, 48],
  shortName: 'thunder_cloud_and_rain'
}, {
  name: 'Sun Behind Small Cloud',
  unified: '1F324-FE0F',
  keywords: ['sun_behind_small_cloud', 'weather'],
  sheet: [5, 33],
  shortNames: ['sun_small_cloud'],
  shortName: 'mostly_sunny'
}, {
  name: 'Sun Behind Large Cloud',
  unified: '1F325-FE0F',
  keywords: ['sun_behind_large_cloud', 'weather'],
  sheet: [5, 34],
  shortNames: ['sun_behind_cloud'],
  shortName: 'barely_sunny'
}, {
  name: 'Sun Behind Rain Cloud',
  unified: '1F326-FE0F',
  keywords: ['sun_behind_rain_cloud', 'weather'],
  sheet: [5, 35],
  shortNames: ['sun_behind_rain_cloud'],
  shortName: 'partly_sunny_rain'
}, {
  name: 'Cloud with Rain',
  unified: '1F327-FE0F',
  keywords: ['cloud_with_rain', 'weather'],
  sheet: [5, 36],
  shortName: 'rain_cloud'
}, {
  name: 'Cloud with Snow',
  unified: '1F328-FE0F',
  keywords: ['cloud_with_snow', 'weather'],
  sheet: [5, 37],
  shortName: 'snow_cloud'
}, {
  name: 'Cloud with Lightning',
  unified: '1F329-FE0F',
  keywords: ['cloud_with_lightning', 'weather', 'thunder'],
  sheet: [5, 38],
  shortNames: ['lightning_cloud'],
  shortName: 'lightning'
}, {
  name: 'Tornado',
  unified: '1F32A-FE0F',
  keywords: ['tornado', 'weather', 'cyclone', 'twister'],
  sheet: [5, 39],
  shortNames: ['tornado_cloud'],
  shortName: 'tornado'
}, {
  name: 'Fog',
  unified: '1F32B-FE0F',
  keywords: ['fog', 'weather'],
  sheet: [5, 40],
  shortName: 'fog'
}, {
  name: 'Wind Face',
  unified: '1F32C-FE0F',
  keywords: ['wind_face', 'gust', 'air'],
  sheet: [5, 41],
  shortName: 'wind_blowing_face'
}, {
  name: 'Cyclone',
  unified: '1F300',
  keywords: ['cyclone', 'weather', 'swirl', 'blue', 'cloud', 'vortex', 'spiral', 'whirlpool', 'spin', 'tornado', 'hurricane', 'typhoon'],
  sheet: [4, 60],
  shortName: 'cyclone'
}, {
  name: 'Rainbow',
  unified: '1F308',
  keywords: ['rainbow', 'nature', 'happy', 'unicorn_face', 'photo', 'sky', 'spring'],
  sheet: [5, 7],
  shortName: 'rainbow'
}, {
  name: 'Closed Umbrella',
  unified: '1F302',
  keywords: ['closed_umbrella', 'weather', 'rain', 'drizzle'],
  sheet: [5, 1],
  shortName: 'closed_umbrella'
}, {
  name: 'Umbrella',
  unified: '2602-FE0F',
  keywords: ['umbrella', 'weather', 'spring'],
  sheet: [56, 42],
  shortName: 'umbrella'
}, {
  name: 'Umbrella with Rain Drops',
  unified: '2614',
  keywords: ['umbrella_with_rain_drops', 'rainy', 'weather', 'spring'],
  sheet: [56, 47],
  shortName: 'umbrella_with_rain_drops'
}, {
  name: 'Umbrella on Ground',
  unified: '26F1-FE0F',
  keywords: ['umbrella_on_ground', 'weather', 'summer'],
  sheet: [57, 57],
  shortName: 'umbrella_on_ground'
}, {
  name: 'High Voltage Sign',
  unified: '26A1',
  keywords: ['high_voltage', 'thunder', 'weather', 'lightning bolt', 'fast'],
  sheet: [57, 38],
  shortName: 'zap'
}, {
  name: 'Snowflake',
  unified: '2744-FE0F',
  keywords: ['snowflake', 'winter', 'season', 'cold', 'weather', 'christmas', 'xmas'],
  sheet: [58, 60],
  shortName: 'snowflake'
}, {
  name: 'Snowman',
  unified: '2603-FE0F',
  keywords: ['snowman', 'winter', 'season', 'cold', 'weather', 'christmas', 'xmas', 'frozen'],
  sheet: [56, 43],
  shortName: 'snowman'
}, {
  name: 'Snowman Without Snow',
  unified: '26C4',
  keywords: ['snowman_without_snow', 'winter', 'season', 'cold', 'weather', 'christmas', 'xmas', 'frozen', 'without_snow'],
  sheet: [57, 46],
  shortName: 'snowman_without_snow'
}, {
  name: 'Comet',
  unified: '2604-FE0F',
  keywords: ['comet', 'space'],
  sheet: [56, 44],
  shortName: 'comet'
}, {
  name: 'Fire',
  unified: '1F525',
  keywords: ['fire', 'hot', 'cook', 'flame'],
  sheet: [30, 1],
  shortName: 'fire'
}, {
  name: 'Droplet',
  unified: '1F4A7',
  keywords: ['droplet', 'water', 'drip', 'faucet', 'spring'],
  sheet: [27, 54],
  shortName: 'droplet'
}, {
  name: 'Water Wave',
  unified: '1F30A',
  keywords: ['water_wave', 'sea', 'water', 'wave', 'nature', 'tsunami', 'disaster'],
  sheet: [5, 9],
  shortName: 'ocean'
}, {
  name: 'Jack-O-Lantern',
  unified: '1F383',
  keywords: ['jack_o_lantern', 'halloween', 'light', 'pumpkin', 'creepy', 'fall'],
  sheet: [7, 6],
  shortName: 'jack_o_lantern'
}, {
  name: 'Christmas Tree',
  unified: '1F384',
  keywords: ['christmas_tree', 'festival', 'vacation', 'december', 'xmas', 'celebration'],
  sheet: [7, 7],
  shortName: 'christmas_tree'
}, {
  name: 'Fireworks',
  unified: '1F386',
  keywords: ['fireworks', 'photo', 'festival', 'carnival', 'congratulations'],
  sheet: [7, 14],
  shortName: 'fireworks'
}, {
  name: 'Firework Sparkler',
  unified: '1F387',
  keywords: ['sparkler', 'stars', 'night', 'shine'],
  sheet: [7, 15],
  shortName: 'sparkler'
}, {
  name: 'Firecracker',
  unified: '1F9E8',
  keywords: ['firecracker', 'dynamite', 'boom', 'explode', 'explosion', 'explosive'],
  sheet: [53, 22],
  shortName: 'firecracker'
}, {
  name: 'Sparkles',
  unified: '2728',
  keywords: ['sparkles', 'stars', 'shine', 'shiny', 'cool', 'awesome', 'good', 'magic'],
  sheet: [58, 57],
  shortName: 'sparkles'
}, {
  name: 'Balloon',
  unified: '1F388',
  keywords: ['balloon', 'party', 'celebration', 'birthday', 'circus'],
  sheet: [7, 16],
  shortName: 'balloon'
}, {
  name: 'Party Popper',
  unified: '1F389',
  keywords: ['party_popper', 'party', 'congratulations', 'birthday', 'magic', 'circus', 'celebration', 'tada'],
  sheet: [7, 17],
  shortName: 'tada'
}, {
  name: 'Confetti Ball',
  unified: '1F38A',
  keywords: ['confetti_ball', 'festival', 'party', 'birthday', 'circus'],
  sheet: [7, 18],
  shortName: 'confetti_ball'
}, {
  name: 'Tanabata Tree',
  unified: '1F38B',
  keywords: ['tanabata_tree', 'plant', 'nature', 'branch', 'summer', 'bamboo', 'wish', 'star_festival', 'tanzaku'],
  sheet: [7, 19],
  shortName: 'tanabata_tree'
}, {
  name: 'Pine Decoration',
  unified: '1F38D',
  keywords: ['pine_decoration', 'japanese', 'plant', 'nature', 'vegetable', 'panda', 'new_years', 'bamboo'],
  sheet: [7, 21],
  shortName: 'bamboo'
}, {
  name: 'Japanese Dolls',
  unified: '1F38E',
  keywords: ['japanese_dolls', 'japanese', 'toy', 'kimono'],
  sheet: [7, 22],
  shortName: 'dolls'
}, {
  name: 'Carp Streamer',
  unified: '1F38F',
  keywords: ['carp_streamer', 'fish', 'japanese', 'koinobori', 'carp', 'banner'],
  sheet: [7, 23],
  shortName: 'flags'
}, {
  name: 'Wind Chime',
  unified: '1F390',
  keywords: ['wind_chime', 'nature', 'ding', 'spring', 'bell'],
  sheet: [7, 24],
  shortName: 'wind_chime'
}, {
  name: 'Moon Viewing Ceremony',
  unified: '1F391',
  keywords: ['moon_viewing_ceremony', 'photo', 'japan', 'asia', 'tsukimi'],
  sheet: [7, 25],
  shortName: 'rice_scene'
}, {
  name: 'Red Gift Envelope',
  unified: '1F9E7',
  keywords: ['red_envelope', 'gift'],
  sheet: [53, 21],
  shortName: 'red_envelope'
}, {
  name: 'Ribbon',
  unified: '1F380',
  keywords: ['ribbon', 'decoration', 'pink', 'girl', 'bowtie'],
  sheet: [7, 3],
  shortName: 'ribbon'
}, {
  name: 'Wrapped Present',
  unified: '1F381',
  keywords: ['wrapped_gift', 'present', 'birthday', 'christmas', 'xmas'],
  sheet: [7, 4],
  shortName: 'gift'
}, {
  name: 'Reminder Ribbon',
  unified: '1F397-FE0F',
  keywords: ['reminder_ribbon', 'sports', 'cause', 'support', 'awareness'],
  sheet: [7, 29],
  shortName: 'reminder_ribbon'
}, {
  name: 'Admission Tickets',
  unified: '1F39F-FE0F',
  keywords: ['admission_tickets', 'sports', 'concert', 'entrance'],
  sheet: [7, 34],
  shortName: 'admission_tickets'
}, {
  name: 'Ticket',
  unified: '1F3AB',
  keywords: ['ticket', 'event', 'concert', 'pass'],
  sheet: [7, 46],
  shortName: 'ticket'
}, {
  name: 'Military Medal',
  unified: '1F396-FE0F',
  keywords: ['military_medal', 'award', 'winning', 'army'],
  sheet: [7, 28],
  shortName: 'medal'
}, {
  name: 'Trophy',
  unified: '1F3C6',
  keywords: ['trophy', 'win', 'award', 'contest', 'place', 'ftw', 'ceremony'],
  sheet: [8, 51],
  shortName: 'trophy'
}, {
  name: 'Sports Medal',
  unified: '1F3C5',
  keywords: ['sports_medal', 'award', 'winning'],
  sheet: [8, 50],
  shortName: 'sports_medal'
}, {
  name: 'First Place Medal',
  unified: '1F947',
  keywords: ['1st_place_medal', 'award', 'winning', 'first'],
  sheet: [43, 17],
  shortName: 'first_place_medal'
}, {
  name: 'Second Place Medal',
  unified: '1F948',
  keywords: ['2nd_place_medal', 'award', 'second'],
  sheet: [43, 18],
  shortName: 'second_place_medal'
}, {
  name: 'Third Place Medal',
  unified: '1F949',
  keywords: ['3rd_place_medal', 'award', 'third'],
  sheet: [43, 19],
  shortName: 'third_place_medal'
}, {
  name: 'Soccer Ball',
  unified: '26BD',
  keywords: ['soccer_ball', 'sports', 'football'],
  sheet: [57, 44],
  shortName: 'soccer'
}, {
  name: 'Baseball',
  unified: '26BE',
  keywords: ['baseball', 'sports', 'balls'],
  sheet: [57, 45],
  shortName: 'baseball'
}, {
  name: 'Softball',
  unified: '1F94E',
  keywords: ['softball', 'sports', 'balls'],
  sheet: [43, 24],
  shortName: 'softball'
}, {
  name: 'Basketball and Hoop',
  unified: '1F3C0',
  keywords: ['basketball', 'sports', 'balls', 'NBA'],
  sheet: [8, 6],
  shortName: 'basketball'
}, {
  name: 'Volleyball',
  unified: '1F3D0',
  keywords: ['volleyball', 'sports', 'balls'],
  sheet: [9, 56],
  shortName: 'volleyball'
}, {
  name: 'American Football',
  unified: '1F3C8',
  keywords: ['american_football', 'sports', 'balls', 'NFL'],
  sheet: [8, 58],
  shortName: 'football'
}, {
  name: 'Rugby Football',
  unified: '1F3C9',
  keywords: ['rugby_football', 'sports', 'team'],
  sheet: [8, 59],
  shortName: 'rugby_football'
}, {
  name: 'Tennis Racquet and Ball',
  unified: '1F3BE',
  keywords: ['tennis', 'sports', 'balls', 'green'],
  sheet: [8, 4],
  shortName: 'tennis'
}, {
  name: 'Flying Disc',
  unified: '1F94F',
  keywords: ['flying_disc', 'sports', 'frisbee', 'ultimate'],
  sheet: [43, 25],
  shortName: 'flying_disc'
}, {
  name: 'Bowling',
  unified: '1F3B3',
  keywords: ['bowling', 'sports', 'fun', 'play'],
  sheet: [7, 54],
  shortName: 'bowling'
}, {
  name: 'Cricket Bat and Ball',
  unified: '1F3CF',
  keywords: ['cricket_game', 'sports'],
  sheet: [9, 55],
  shortName: 'cricket_bat_and_ball'
}, {
  name: 'Field Hockey Stick and Ball',
  unified: '1F3D1',
  keywords: ['field_hockey', 'sports'],
  sheet: [9, 57],
  shortName: 'field_hockey_stick_and_ball'
}, {
  name: 'Ice Hockey Stick and Puck',
  unified: '1F3D2',
  keywords: ['ice_hockey', 'sports'],
  sheet: [9, 58],
  shortName: 'ice_hockey_stick_and_puck'
}, {
  name: 'Lacrosse Stick and Ball',
  unified: '1F94D',
  keywords: ['lacrosse', 'sports', 'ball', 'stick'],
  sheet: [43, 23],
  shortName: 'lacrosse'
}, {
  name: 'Table Tennis Paddle and Ball',
  unified: '1F3D3',
  keywords: ['ping_pong', 'sports', 'pingpong'],
  sheet: [9, 59],
  shortName: 'table_tennis_paddle_and_ball'
}, {
  name: 'Badminton Racquet and Shuttlecock',
  unified: '1F3F8',
  keywords: ['badminton', 'sports'],
  sheet: [10, 38],
  shortName: 'badminton_racquet_and_shuttlecock'
}, {
  name: 'Boxing Glove',
  unified: '1F94A',
  keywords: ['boxing_glove', 'sports', 'fighting'],
  sheet: [43, 20],
  shortName: 'boxing_glove'
}, {
  name: 'Martial Arts Uniform',
  unified: '1F94B',
  keywords: ['martial_arts_uniform', 'judo', 'karate', 'taekwondo'],
  sheet: [43, 21],
  shortName: 'martial_arts_uniform'
}, {
  name: 'Goal Net',
  unified: '1F945',
  keywords: ['goal_net', 'sports'],
  sheet: [43, 16],
  shortName: 'goal_net'
}, {
  name: 'Flag in Hole',
  unified: '26F3',
  keywords: ['flag_in_hole', 'sports', 'business', 'flag', 'hole', 'summer'],
  sheet: [57, 59],
  shortName: 'golf'
}, {
  name: 'Ice Skate',
  unified: '26F8-FE0F',
  keywords: ['ice_skate', 'sports'],
  sheet: [58, 2],
  shortName: 'ice_skate'
}, {
  name: 'Fishing Pole and Fish',
  unified: '1F3A3',
  keywords: ['fishing_pole', 'food', 'hobby', 'summer'],
  sheet: [7, 38],
  shortName: 'fishing_pole_and_fish'
}, {
  name: 'Diving Mask',
  unified: '1F93F',
  keywords: ['diving_mask', 'sport', 'ocean'],
  sheet: [43, 10],
  shortName: 'diving_mask'
}, {
  name: 'Running Shirt with Sash',
  unified: '1F3BD',
  keywords: ['running_shirt', 'play', 'pageant'],
  sheet: [8, 3],
  shortName: 'running_shirt_with_sash'
}, {
  name: 'Ski and Ski Boot',
  unified: '1F3BF',
  keywords: ['skis', 'sports', 'winter', 'cold', 'snow'],
  sheet: [8, 5],
  shortName: 'ski'
}, {
  name: 'Sled',
  unified: '1F6F7',
  keywords: ['sled', 'sleigh', 'luge', 'toboggan'],
  sheet: [38, 25],
  shortName: 'sled'
}, {
  name: 'Curling Stone',
  unified: '1F94C',
  keywords: ['curling_stone', 'sports'],
  sheet: [43, 22],
  shortName: 'curling_stone'
}, {
  name: 'Direct Hit',
  unified: '1F3AF',
  keywords: ['direct_hit', 'game', 'play', 'bar', 'target', 'bullseye'],
  sheet: [7, 50],
  shortName: 'dart'
}, {
  name: 'Yo-Yo',
  unified: '1FA80',
  keywords: ['yo_yo', 'toy'],
  sheet: [53, 56],
  shortName: 'yo-yo'
}, {
  name: 'Kite',
  unified: '1FA81',
  keywords: ['kite', 'wind', 'fly'],
  sheet: [53, 57],
  shortName: 'kite'
}, {
  name: 'Billiards',
  unified: '1F3B1',
  keywords: ['pool_8_ball', 'pool', 'hobby', 'game', 'luck', 'magic'],
  sheet: [7, 52],
  shortName: '8ball'
}, {
  name: 'Crystal Ball',
  unified: '1F52E',
  keywords: ['crystal_ball', 'disco', 'party', 'magic', 'circus', 'fortune_teller'],
  sheet: [30, 10],
  shortName: 'crystal_ball'
}, {
  name: 'Magic Wand',
  unified: '1FA84',
  keywords: ['magic wand', 'supernature', 'power'],
  sheet: [53, 60],
  shortName: 'magic_wand'
}, {
  name: 'Nazar Amulet',
  unified: '1F9FF',
  keywords: ['nazar_amulet', 'bead', 'charm'],
  sheet: [53, 45],
  shortName: 'nazar_amulet'
}, {
  name: 'Hamsa',
  unified: '1FAAC',
  keywords: ['hamsa', 'religion', 'protection'],
  sheet: [54, 30],
  hidden: ['facebook'],
  shortName: 'hamsa'
}, {
  name: 'Video Game',
  unified: '1F3AE',
  keywords: ['video_game', 'play', 'console', 'PS4', 'controller'],
  sheet: [7, 49],
  shortName: 'video_game'
}, {
  name: 'Joystick',
  unified: '1F579-FE0F',
  keywords: ['joystick', 'game', 'play'],
  sheet: [31, 25],
  shortName: 'joystick'
}, {
  name: 'Slot Machine',
  unified: '1F3B0',
  keywords: ['slot_machine', 'bet', 'gamble', 'vegas', 'fruit machine', 'luck', 'casino'],
  sheet: [7, 51],
  shortName: 'slot_machine'
}, {
  name: 'Game Die',
  unified: '1F3B2',
  keywords: ['game_die', 'dice', 'random', 'tabletop', 'play', 'luck'],
  sheet: [7, 53],
  shortName: 'game_die'
}, {
  name: 'Jigsaw Puzzle Piece',
  unified: '1F9E9',
  keywords: ['puzzle_piece', 'interlocking', 'puzzle', 'piece'],
  sheet: [53, 23],
  shortName: 'jigsaw'
}, {
  name: 'Teddy Bear',
  unified: '1F9F8',
  keywords: ['teddy_bear', 'plush', 'stuffed'],
  sheet: [53, 38],
  shortName: 'teddy_bear'
}, {
  name: 'Pinata',
  unified: '1FA85',
  keywords: ['pinata', 'mexico', 'candy', 'celebration'],
  sheet: [54, 0],
  shortName: 'pinata'
}, {
  name: 'Mirror Ball',
  unified: '1FAA9',
  keywords: ['mirror ball', 'disco', 'dance', 'party'],
  sheet: [54, 27],
  hidden: ['facebook'],
  shortName: 'mirror_ball'
}, {
  name: 'Nesting Dolls',
  unified: '1FA86',
  keywords: ['nesting dolls', 'matryoshka', 'toy'],
  sheet: [54, 1],
  shortName: 'nesting_dolls'
}, {
  name: 'Black Spade Suit',
  unified: '2660-FE0F',
  keywords: ['spade_suit', 'poker', 'cards', 'suits', 'magic'],
  sheet: [57, 20],
  shortName: 'spades'
}, {
  name: 'Black Heart Suit',
  unified: '2665-FE0F',
  keywords: ['heart_suit', 'poker', 'cards', 'magic', 'suits'],
  sheet: [57, 22],
  shortName: 'hearts'
}, {
  name: 'Black Diamond Suit',
  unified: '2666-FE0F',
  keywords: ['diamond_suit', 'poker', 'cards', 'magic', 'suits'],
  sheet: [57, 23],
  shortName: 'diamonds'
}, {
  name: 'Black Club Suit',
  unified: '2663-FE0F',
  keywords: ['club_suit', 'poker', 'cards', 'magic', 'suits'],
  sheet: [57, 21],
  shortName: 'clubs'
}, {
  name: 'Chess Pawn',
  unified: '265F-FE0F',
  keywords: ['chess_pawn', 'expendable'],
  sheet: [57, 19],
  shortName: 'chess_pawn'
}, {
  name: 'Playing Card Black Joker',
  unified: '1F0CF',
  keywords: ['joker', 'poker', 'cards', 'game', 'play', 'magic'],
  sheet: [0, 15],
  shortName: 'black_joker'
}, {
  name: 'Mahjong Tile Red Dragon',
  unified: '1F004',
  keywords: ['mahjong_red_dragon', 'game', 'play', 'chinese', 'kanji'],
  sheet: [0, 14],
  shortName: 'mahjong'
}, {
  name: 'Flower Playing Cards',
  unified: '1F3B4',
  keywords: ['flower_playing_cards', 'game', 'sunset', 'red'],
  sheet: [7, 55],
  shortName: 'flower_playing_cards'
}, {
  name: 'Performing Arts',
  unified: '1F3AD',
  keywords: ['performing_arts', 'acting', 'theater', 'drama'],
  sheet: [7, 48],
  shortName: 'performing_arts'
}, {
  name: 'Framed Picture',
  unified: '1F5BC-FE0F',
  keywords: ['framed_picture', 'photography'],
  sheet: [31, 60],
  shortName: 'frame_with_picture'
}, {
  name: 'Artist Palette',
  unified: '1F3A8',
  keywords: ['artist_palette', 'design', 'paint', 'draw', 'colors'],
  sheet: [7, 43],
  shortName: 'art'
}, {
  name: 'Spool of Thread',
  unified: '1F9F5',
  keywords: ['thread', 'needle', 'sewing', 'spool', 'string'],
  sheet: [53, 35],
  shortName: 'thread'
}, {
  name: 'Sewing Needle',
  unified: '1FAA1',
  keywords: ['sewing needle', 'stitches'],
  sheet: [54, 19],
  shortName: 'sewing_needle'
}, {
  name: 'Ball of Yarn',
  unified: '1F9F6',
  keywords: ['yarn', 'ball', 'crochet', 'knit'],
  sheet: [53, 36],
  shortName: 'yarn'
}, {
  name: 'Knot',
  unified: '1FAA2',
  keywords: ['knot', 'rope', 'scout'],
  sheet: [54, 20],
  shortName: 'knot'
}, {
  name: 'Eyeglasses',
  unified: '1F453',
  keywords: ['glasses', 'fashion', 'accessories', 'eyesight', 'nerdy', 'dork', 'geek'],
  sheet: [13, 15],
  shortName: 'eyeglasses'
}, {
  name: 'Sunglasses',
  unified: '1F576-FE0F',
  keywords: ['sunglasses', 'face', 'cool', 'accessories'],
  sheet: [31, 22],
  shortName: 'dark_sunglasses'
}, {
  name: 'Goggles',
  unified: '1F97D',
  keywords: ['goggles', 'eyes', 'protection', 'safety'],
  sheet: [44, 15],
  shortName: 'goggles'
}, {
  name: 'Lab Coat',
  unified: '1F97C',
  keywords: ['lab_coat', 'doctor', 'experiment', 'scientist', 'chemist'],
  sheet: [44, 14],
  shortName: 'lab_coat'
}, {
  name: 'Safety Vest',
  unified: '1F9BA',
  keywords: ['safety_vest', 'protection'],
  sheet: [45, 55],
  shortName: 'safety_vest'
}, {
  name: 'Necktie',
  unified: '1F454',
  keywords: ['necktie', 'shirt', 'suitup', 'formal', 'fashion', 'cloth', 'business'],
  sheet: [13, 16],
  shortName: 'necktie'
}, {
  name: 'T-Shirt',
  unified: '1F455',
  keywords: ['t_shirt', 'fashion', 'cloth', 'casual', 'shirt', 'tee'],
  sheet: [13, 17],
  shortNames: ['tshirt'],
  shortName: 'shirt'
}, {
  name: 'Jeans',
  unified: '1F456',
  keywords: ['jeans', 'fashion', 'shopping'],
  sheet: [13, 18],
  shortName: 'jeans'
}, {
  name: 'Scarf',
  unified: '1F9E3',
  keywords: ['scarf', 'neck', 'winter', 'clothes'],
  sheet: [53, 17],
  shortName: 'scarf'
}, {
  name: 'Gloves',
  unified: '1F9E4',
  keywords: ['gloves', 'hands', 'winter', 'clothes'],
  sheet: [53, 18],
  shortName: 'gloves'
}, {
  name: 'Coat',
  unified: '1F9E5',
  keywords: ['coat', 'jacket'],
  sheet: [53, 19],
  shortName: 'coat'
}, {
  name: 'Socks',
  unified: '1F9E6',
  keywords: ['socks', 'stockings', 'clothes'],
  sheet: [53, 20],
  shortName: 'socks'
}, {
  name: 'Dress',
  unified: '1F457',
  keywords: ['dress', 'clothes', 'fashion', 'shopping'],
  sheet: [13, 19],
  shortName: 'dress'
}, {
  name: 'Kimono',
  unified: '1F458',
  keywords: ['kimono', 'dress', 'fashion', 'women', 'female', 'japanese'],
  sheet: [13, 20],
  shortName: 'kimono'
}, {
  name: 'Sari',
  unified: '1F97B',
  keywords: ['sari', 'dress'],
  sheet: [44, 13],
  shortName: 'sari'
}, {
  name: 'One-Piece Swimsuit',
  unified: '1FA71',
  keywords: ['one_piece_swimsuit', 'fashion'],
  sheet: [53, 47],
  shortName: 'one-piece_swimsuit'
}, {
  name: 'Briefs',
  unified: '1FA72',
  keywords: ['briefs', 'clothing'],
  sheet: [53, 48],
  shortName: 'briefs'
}, {
  name: 'Shorts',
  unified: '1FA73',
  keywords: ['shorts', 'clothing'],
  sheet: [53, 49],
  shortName: 'shorts'
}, {
  name: 'Bikini',
  unified: '1F459',
  keywords: ['bikini', 'swimming', 'female', 'woman', 'girl', 'fashion', 'beach', 'summer'],
  sheet: [13, 21],
  shortName: 'bikini'
}, {
  name: 'Womans Clothes',
  unified: '1F45A',
  keywords: ['woman_s_clothes', 'fashion', 'shopping_bags', 'female'],
  sheet: [13, 22],
  shortName: 'womans_clothes'
}, {
  name: 'Purse',
  unified: '1F45B',
  keywords: ['purse', 'fashion', 'accessories', 'money', 'sales', 'shopping'],
  sheet: [13, 23],
  shortName: 'purse'
}, {
  name: 'Handbag',
  unified: '1F45C',
  keywords: ['handbag', 'fashion', 'accessory', 'accessories', 'shopping'],
  sheet: [13, 24],
  shortName: 'handbag'
}, {
  name: 'Pouch',
  unified: '1F45D',
  keywords: ['clutch_bag', 'bag', 'accessories', 'shopping'],
  sheet: [13, 25],
  shortName: 'pouch'
}, {
  name: 'Shopping Bags',
  unified: '1F6CD-FE0F',
  keywords: ['shopping_bags', 'mall', 'buy', 'purchase'],
  sheet: [37, 60],
  shortName: 'shopping_bags'
}, {
  name: 'School Satchel',
  unified: '1F392',
  keywords: ['backpack', 'student', 'education', 'bag', 'backpack'],
  sheet: [7, 26],
  shortName: 'school_satchel'
}, {
  name: 'Thong Sandal',
  unified: '1FA74',
  keywords: ['thong sandal', 'footwear', 'summer'],
  sheet: [53, 50],
  shortName: 'thong_sandal'
}, {
  name: 'Mans Shoe',
  unified: '1F45E',
  keywords: ['man_s_shoe', 'fashion', 'male'],
  sheet: [13, 26],
  shortNames: ['shoe'],
  shortName: 'mans_shoe'
}, {
  name: 'Athletic Shoe',
  unified: '1F45F',
  keywords: ['running_shoe', 'shoes', 'sports', 'sneakers'],
  sheet: [13, 27],
  shortName: 'athletic_shoe'
}, {
  name: 'Hiking Boot',
  unified: '1F97E',
  keywords: ['hiking_boot', 'backpacking', 'camping', 'hiking'],
  sheet: [44, 16],
  shortName: 'hiking_boot'
}, {
  name: 'Flat Shoe',
  unified: '1F97F',
  keywords: ['flat_shoe', 'ballet', 'slip-on', 'slipper'],
  sheet: [44, 17],
  shortName: 'womans_flat_shoe'
}, {
  name: 'High-Heeled Shoe',
  unified: '1F460',
  keywords: ['high_heeled_shoe', 'fashion', 'shoes', 'female', 'pumps', 'stiletto'],
  sheet: [13, 28],
  shortName: 'high_heel'
}, {
  name: 'Womans Sandal',
  unified: '1F461',
  keywords: ['woman_s_sandal', 'shoes', 'fashion', 'flip flops'],
  sheet: [13, 29],
  shortName: 'sandal'
}, {
  name: 'Ballet Shoes',
  unified: '1FA70',
  keywords: ['ballet_shoes', 'dance'],
  sheet: [53, 46],
  shortName: 'ballet_shoes'
}, {
  name: 'Womans Boots',
  unified: '1F462',
  keywords: ['woman_s_boot', 'shoes', 'fashion'],
  sheet: [13, 30],
  shortName: 'boot'
}, {
  name: 'Crown',
  unified: '1F451',
  keywords: ['crown', 'king', 'kod', 'leader', 'royalty', 'lord'],
  sheet: [13, 13],
  shortName: 'crown'
}, {
  name: 'Womans Hat',
  unified: '1F452',
  keywords: ['woman_s_hat', 'fashion', 'accessories', 'female', 'lady', 'spring'],
  sheet: [13, 14],
  shortName: 'womans_hat'
}, {
  name: 'Top Hat',
  unified: '1F3A9',
  keywords: ['top_hat', 'magic', 'gentleman', 'classy', 'circus'],
  sheet: [7, 44],
  shortName: 'tophat'
}, {
  name: 'Graduation Cap',
  unified: '1F393',
  keywords: ['graduation_cap', 'school', 'college', 'degree', 'university', 'graduation', 'cap', 'hat', 'legal', 'learn', 'education'],
  sheet: [7, 27],
  shortName: 'mortar_board'
}, {
  name: 'Billed Cap',
  unified: '1F9E2',
  keywords: ['billed_cap', 'cap', 'baseball'],
  sheet: [53, 16],
  shortName: 'billed_cap'
}, {
  name: 'Military Helmet',
  unified: '1FA96',
  keywords: ['military helmet', 'army', 'protection'],
  sheet: [54, 8],
  shortName: 'military_helmet'
}, {
  name: 'Rescue Worker’s Helmet',
  unified: '26D1-FE0F',
  keywords: ['rescue_worker_s_helmet', 'construction', 'build'],
  sheet: [57, 51],
  shortName: 'helmet_with_white_cross'
}, {
  name: 'Prayer Beads',
  unified: '1F4FF',
  keywords: ['prayer_beads', 'dhikr', 'religious'],
  sheet: [29, 24],
  shortName: 'prayer_beads'
}, {
  name: 'Lipstick',
  unified: '1F484',
  keywords: ['lipstick', 'female', 'girl', 'fashion', 'woman'],
  sheet: [25, 52],
  shortName: 'lipstick'
}, {
  name: 'Ring',
  unified: '1F48D',
  keywords: ['ring', 'wedding', 'propose', 'marriage', 'valentines', 'diamond', 'fashion', 'jewelry', 'gem', 'engagement'],
  sheet: [26, 39],
  shortName: 'ring'
}, {
  name: 'Gem Stone',
  unified: '1F48E',
  keywords: ['gem_stone', 'blue', 'ruby', 'diamond', 'jewelry'],
  sheet: [26, 40],
  shortName: 'gem'
}, {
  name: 'Speaker with Cancellation Stroke',
  unified: '1F507',
  keywords: ['muted_speaker', 'sound', 'volume', 'silence', 'quiet'],
  sheet: [29, 32],
  shortName: 'mute'
}, {
  name: 'Speaker',
  unified: '1F508',
  keywords: ['speaker_low_volume', 'sound', 'volume', 'silence', 'broadcast'],
  sheet: [29, 33],
  shortName: 'speaker'
}, {
  name: 'Speaker with One Sound Wave',
  unified: '1F509',
  keywords: ['speaker_medium_volume', 'volume', 'speaker', 'broadcast'],
  sheet: [29, 34],
  shortName: 'sound'
}, {
  name: 'Speaker with Three Sound Waves',
  unified: '1F50A',
  keywords: ['speaker_high_volume', 'volume', 'noise', 'noisy', 'speaker', 'broadcast'],
  sheet: [29, 35],
  shortName: 'loud_sound'
}, {
  name: 'Public Address Loudspeaker',
  unified: '1F4E2',
  keywords: ['loudspeaker', 'volume', 'sound'],
  sheet: [28, 57],
  shortName: 'loudspeaker'
}, {
  name: 'Cheering Megaphone',
  unified: '1F4E3',
  keywords: ['megaphone', 'sound', 'speaker', 'volume'],
  sheet: [28, 58],
  shortName: 'mega'
}, {
  name: 'Postal Horn',
  unified: '1F4EF',
  keywords: ['postal_horn', 'instrument', 'music'],
  sheet: [29, 9],
  shortName: 'postal_horn'
}, {
  name: 'Bell',
  unified: '1F514',
  keywords: ['bell', 'sound', 'notification', 'christmas', 'xmas', 'chime'],
  sheet: [29, 45],
  shortName: 'bell'
}, {
  name: 'Bell with Cancellation Stroke',
  unified: '1F515',
  keywords: ['bell_with_slash', 'sound', 'volume', 'mute', 'quiet', 'silent'],
  sheet: [29, 46],
  shortName: 'no_bell'
}, {
  name: 'Musical Score',
  unified: '1F3BC',
  keywords: ['musical_score', 'treble', 'clef', 'compose'],
  sheet: [8, 2],
  shortName: 'musical_score'
}, {
  name: 'Musical Note',
  unified: '1F3B5',
  keywords: ['musical_note', 'score', 'tone', 'sound'],
  sheet: [7, 56],
  shortName: 'musical_note'
}, {
  name: 'Multiple Musical Notes',
  unified: '1F3B6',
  keywords: ['musical_notes', 'music', 'score'],
  sheet: [7, 57],
  shortName: 'notes'
}, {
  name: 'Studio Microphone',
  unified: '1F399-FE0F',
  keywords: ['studio_microphone', 'sing', 'recording', 'artist', 'talkshow'],
  sheet: [7, 30],
  shortName: 'studio_microphone'
}, {
  name: 'Level Slider',
  unified: '1F39A-FE0F',
  keywords: ['level_slider', 'scale'],
  sheet: [7, 31],
  shortName: 'level_slider'
}, {
  name: 'Control Knobs',
  unified: '1F39B-FE0F',
  keywords: ['control_knobs', 'dial'],
  sheet: [7, 32],
  shortName: 'control_knobs'
}, {
  name: 'Microphone',
  unified: '1F3A4',
  keywords: ['microphone', 'sound', 'music', 'PA', 'sing', 'talkshow'],
  sheet: [7, 39],
  shortName: 'microphone'
}, {
  name: 'Headphone',
  unified: '1F3A7',
  keywords: ['headphone', 'music', 'score', 'gadgets'],
  sheet: [7, 42],
  shortName: 'headphones'
}, {
  name: 'Radio',
  unified: '1F4FB',
  keywords: ['radio', 'communication', 'music', 'podcast', 'program'],
  sheet: [29, 21],
  shortName: 'radio'
}, {
  name: 'Saxophone',
  unified: '1F3B7',
  keywords: ['saxophone', 'music', 'instrument', 'jazz', 'blues'],
  sheet: [7, 58],
  shortName: 'saxophone'
}, {
  name: 'Accordion',
  unified: '1FA97',
  keywords: ['accordion', 'music'],
  sheet: [54, 9],
  shortName: 'accordion'
}, {
  name: 'Guitar',
  unified: '1F3B8',
  keywords: ['guitar', 'music', 'instrument'],
  sheet: [7, 59],
  shortName: 'guitar'
}, {
  name: 'Musical Keyboard',
  unified: '1F3B9',
  keywords: ['musical_keyboard', 'piano', 'instrument', 'compose'],
  sheet: [7, 60],
  shortName: 'musical_keyboard'
}, {
  name: 'Trumpet',
  unified: '1F3BA',
  keywords: ['trumpet', 'music', 'brass'],
  sheet: [8, 0],
  shortName: 'trumpet'
}, {
  name: 'Violin',
  unified: '1F3BB',
  keywords: ['violin', 'music', 'instrument', 'orchestra', 'symphony'],
  sheet: [8, 1],
  shortName: 'violin'
}, {
  name: 'Banjo',
  unified: '1FA95',
  keywords: ['banjo', 'music', 'instructment'],
  sheet: [54, 7],
  shortName: 'banjo'
}, {
  name: 'Drum with Drumsticks',
  unified: '1F941',
  keywords: ['drum', 'music', 'instrument', 'drumsticks', 'snare'],
  sheet: [43, 12],
  shortName: 'drum_with_drumsticks'
}, {
  name: 'Long Drum',
  unified: '1FA98',
  keywords: ['long drum', 'music'],
  sheet: [54, 10],
  shortName: 'long_drum'
}, {
  name: 'Mobile Phone',
  unified: '1F4F1',
  keywords: ['mobile_phone', 'technology', 'apple', 'gadgets', 'dial'],
  sheet: [29, 11],
  shortName: 'iphone'
}, {
  name: 'Mobile Phone with Rightwards Arrow at Left',
  unified: '1F4F2',
  keywords: ['mobile_phone_with_arrow', 'iphone', 'incoming'],
  sheet: [29, 12],
  shortName: 'calling'
}, {
  name: 'Black Telephone',
  unified: '260E-FE0F',
  keywords: ['telephone', 'technology', 'communication', 'dial', 'telephone'],
  sheet: [56, 45],
  shortNames: ['telephone'],
  shortName: 'phone'
}, {
  name: 'Telephone Receiver',
  unified: '1F4DE',
  keywords: ['telephone_receiver', 'technology', 'communication', 'dial'],
  sheet: [28, 53],
  shortName: 'telephone_receiver'
}, {
  name: 'Pager',
  unified: '1F4DF',
  keywords: ['pager', 'bbcall', 'oldschool', '90s'],
  sheet: [28, 54],
  shortName: 'pager'
}, {
  name: 'Fax Machine',
  unified: '1F4E0',
  keywords: ['fax_machine', 'communication', 'technology'],
  sheet: [28, 55],
  shortName: 'fax'
}, {
  name: 'Battery',
  unified: '1F50B',
  keywords: ['battery', 'power', 'energy', 'sustain'],
  sheet: [29, 36],
  shortName: 'battery'
}, {
  name: 'Low Battery',
  unified: '1FAAB',
  keywords: ['low battery', 'drained', 'dead'],
  sheet: [54, 29],
  hidden: ['facebook'],
  shortName: 'low_battery'
}, {
  name: 'Electric Plug',
  unified: '1F50C',
  keywords: ['electric_plug', 'charger', 'power'],
  sheet: [29, 37],
  shortName: 'electric_plug'
}, {
  name: 'Personal Computer',
  unified: '1F4BB',
  keywords: ['laptop', 'technology', 'laptop', 'screen', 'display', 'monitor'],
  sheet: [28, 18],
  shortName: 'computer'
}, {
  name: 'Desktop Computer',
  unified: '1F5A5-FE0F',
  keywords: ['desktop_computer', 'technology', 'computing', 'screen'],
  sheet: [31, 56],
  shortName: 'desktop_computer'
}, {
  name: 'Printer',
  unified: '1F5A8-FE0F',
  keywords: ['printer', 'paper', 'ink'],
  sheet: [31, 57],
  shortName: 'printer'
}, {
  name: 'Keyboard',
  unified: '2328-FE0F',
  keywords: ['keyboard', 'technology', 'computer', 'type', 'input', 'text'],
  sheet: [56, 15],
  shortName: 'keyboard'
}, {
  name: 'Computer Mouse',
  unified: '1F5B1-FE0F',
  keywords: ['computer_mouse', 'click'],
  sheet: [31, 58],
  shortName: 'three_button_mouse'
}, {
  name: 'Trackball',
  unified: '1F5B2-FE0F',
  keywords: ['trackball', 'technology', 'trackpad'],
  sheet: [31, 59],
  shortName: 'trackball'
}, {
  name: 'Minidisc',
  unified: '1F4BD',
  keywords: ['computer_disk', 'technology', 'record', 'data', 'disk', '90s'],
  sheet: [28, 20],
  shortName: 'minidisc'
}, {
  name: 'Floppy Disk',
  unified: '1F4BE',
  keywords: ['floppy_disk', 'oldschool', 'technology', 'save', '90s', '80s'],
  sheet: [28, 21],
  shortName: 'floppy_disk'
}, {
  name: 'Optical Disc',
  unified: '1F4BF',
  keywords: ['optical_disk', 'technology', 'dvd', 'disk', 'disc', '90s'],
  sheet: [28, 22],
  shortName: 'cd'
}, {
  name: 'Dvd',
  unified: '1F4C0',
  keywords: ['dvd', 'cd', 'disk', 'disc'],
  sheet: [28, 23],
  shortName: 'dvd'
}, {
  name: 'Abacus',
  unified: '1F9EE',
  keywords: ['abacus', 'calculation'],
  sheet: [53, 28],
  shortName: 'abacus'
}, {
  name: 'Movie Camera',
  unified: '1F3A5',
  keywords: ['movie_camera', 'film', 'record'],
  sheet: [7, 40],
  shortName: 'movie_camera'
}, {
  name: 'Film Frames',
  unified: '1F39E-FE0F',
  keywords: ['film_frames', 'movie'],
  sheet: [7, 33],
  shortName: 'film_frames'
}, {
  name: 'Film Projector',
  unified: '1F4FD-FE0F',
  keywords: ['film_projector', 'video', 'tape', 'record', 'movie'],
  sheet: [29, 23],
  shortName: 'film_projector'
}, {
  name: 'Clapper Board',
  unified: '1F3AC',
  keywords: ['clapper_board', 'movie', 'film', 'record'],
  sheet: [7, 47],
  shortName: 'clapper'
}, {
  name: 'Television',
  unified: '1F4FA',
  keywords: ['television', 'technology', 'program', 'oldschool', 'show', 'television'],
  sheet: [29, 20],
  shortName: 'tv'
}, {
  name: 'Camera',
  unified: '1F4F7',
  keywords: ['camera', 'gadgets', 'photography'],
  sheet: [29, 17],
  shortName: 'camera'
}, {
  name: 'Camera with Flash',
  unified: '1F4F8',
  keywords: ['camera_with_flash', 'photography', 'gadgets'],
  sheet: [29, 18],
  shortName: 'camera_with_flash'
}, {
  name: 'Video Camera',
  unified: '1F4F9',
  keywords: ['video_camera', 'film', 'record'],
  sheet: [29, 19],
  shortName: 'video_camera'
}, {
  name: 'Videocassette',
  unified: '1F4FC',
  keywords: ['videocassette', 'record', 'video', 'oldschool', '90s', '80s'],
  sheet: [29, 22],
  shortName: 'vhs'
}, {
  name: 'Left-Pointing Magnifying Glass',
  unified: '1F50D',
  keywords: ['magnifying_glass_tilted_left', 'search', 'zoom', 'find', 'detective'],
  sheet: [29, 38],
  shortName: 'mag'
}, {
  name: 'Right-Pointing Magnifying Glass',
  unified: '1F50E',
  keywords: ['magnifying_glass_tilted_right', 'search', 'zoom', 'find', 'detective'],
  sheet: [29, 39],
  shortName: 'mag_right'
}, {
  name: 'Candle',
  unified: '1F56F-FE0F',
  keywords: ['candle', 'fire', 'wax'],
  sheet: [30, 56],
  shortName: 'candle'
}, {
  name: 'Electric Light Bulb',
  unified: '1F4A1',
  keywords: ['light_bulb', 'light', 'electricity', 'idea'],
  sheet: [27, 48],
  shortName: 'bulb'
}, {
  name: 'Electric Torch',
  unified: '1F526',
  keywords: ['flashlight', 'dark', 'camping', 'sight', 'night'],
  sheet: [30, 2],
  shortName: 'flashlight'
}, {
  name: 'Izakaya Lantern',
  unified: '1F3EE',
  keywords: ['red_paper_lantern', 'light', 'paper', 'halloween', 'spooky'],
  sheet: [10, 25],
  shortNames: ['lantern'],
  shortName: 'izakaya_lantern'
}, {
  name: 'Diya Lamp',
  unified: '1FA94',
  keywords: ['diya_lamp', 'lighting'],
  sheet: [54, 6],
  shortName: 'diya_lamp'
}, {
  name: 'Notebook with Decorative Cover',
  unified: '1F4D4',
  keywords: ['notebook_with_decorative_cover', 'classroom', 'notes', 'record', 'paper', 'study'],
  sheet: [28, 43],
  shortName: 'notebook_with_decorative_cover'
}, {
  name: 'Closed Book',
  unified: '1F4D5',
  keywords: ['closed_book', 'read', 'library', 'knowledge', 'textbook', 'learn'],
  sheet: [28, 44],
  shortName: 'closed_book'
}, {
  name: 'Open Book',
  unified: '1F4D6',
  keywords: ['open_book', 'book', 'read', 'library', 'knowledge', 'literature', 'learn', 'study'],
  sheet: [28, 45],
  shortNames: ['open_book'],
  shortName: 'book'
}, {
  name: 'Green Book',
  unified: '1F4D7',
  keywords: ['green_book', 'read', 'library', 'knowledge', 'study'],
  sheet: [28, 46],
  shortName: 'green_book'
}, {
  name: 'Blue Book',
  unified: '1F4D8',
  keywords: ['blue_book', 'read', 'library', 'knowledge', 'learn', 'study'],
  sheet: [28, 47],
  shortName: 'blue_book'
}, {
  name: 'Orange Book',
  unified: '1F4D9',
  keywords: ['orange_book', 'read', 'library', 'knowledge', 'textbook', 'study'],
  sheet: [28, 48],
  shortName: 'orange_book'
}, {
  name: 'Books',
  unified: '1F4DA',
  keywords: ['books', 'literature', 'library', 'study'],
  sheet: [28, 49],
  shortName: 'books'
}, {
  name: 'Notebook',
  unified: '1F4D3',
  keywords: ['notebook', 'stationery', 'record', 'notes', 'paper', 'study'],
  sheet: [28, 42],
  shortName: 'notebook'
}, {
  name: 'Ledger',
  unified: '1F4D2',
  keywords: ['ledger', 'notes', 'paper'],
  sheet: [28, 41],
  shortName: 'ledger'
}, {
  name: 'Page with Curl',
  unified: '1F4C3',
  keywords: ['page_with_curl', 'documents', 'office', 'paper'],
  sheet: [28, 26],
  shortName: 'page_with_curl'
}, {
  name: 'Scroll',
  unified: '1F4DC',
  keywords: ['scroll', 'documents', 'ancient', 'history', 'paper'],
  sheet: [28, 51],
  shortName: 'scroll'
}, {
  name: 'Page Facing Up',
  unified: '1F4C4',
  keywords: ['page_facing_up', 'documents', 'office', 'paper', 'information'],
  sheet: [28, 27],
  shortName: 'page_facing_up'
}, {
  name: 'Newspaper',
  unified: '1F4F0',
  keywords: ['newspaper', 'press', 'headline'],
  sheet: [29, 10],
  shortName: 'newspaper'
}, {
  name: 'Rolled-Up Newspaper',
  unified: '1F5DE-FE0F',
  keywords: ['rolled_up_newspaper', 'press', 'headline'],
  sheet: [32, 8],
  shortName: 'rolled_up_newspaper'
}, {
  name: 'Bookmark Tabs',
  unified: '1F4D1',
  keywords: ['bookmark_tabs', 'favorite', 'save', 'order', 'tidy'],
  sheet: [28, 40],
  shortName: 'bookmark_tabs'
}, {
  name: 'Bookmark',
  unified: '1F516',
  keywords: ['bookmark', 'favorite', 'label', 'save'],
  sheet: [29, 47],
  shortName: 'bookmark'
}, {
  name: 'Label',
  unified: '1F3F7-FE0F',
  keywords: ['label', 'sale', 'tag'],
  sheet: [10, 37],
  shortName: 'label'
}, {
  name: 'Money Bag',
  unified: '1F4B0',
  keywords: ['money_bag', 'dollar', 'payment', 'coins', 'sale'],
  sheet: [28, 7],
  shortName: 'moneybag'
}, {
  name: 'Coin',
  unified: '1FA99',
  keywords: ['coin', 'money', 'currency'],
  sheet: [54, 11],
  shortName: 'coin'
}, {
  name: 'Banknote with Yen Sign',
  unified: '1F4B4',
  keywords: ['yen_banknote', 'money', 'sales', 'japanese', 'dollar', 'currency'],
  sheet: [28, 11],
  shortName: 'yen'
}, {
  name: 'Banknote with Dollar Sign',
  unified: '1F4B5',
  keywords: ['dollar_banknote', 'money', 'sales', 'bill', 'currency'],
  sheet: [28, 12],
  shortName: 'dollar'
}, {
  name: 'Banknote with Euro Sign',
  unified: '1F4B6',
  keywords: ['euro_banknote', 'money', 'sales', 'dollar', 'currency'],
  sheet: [28, 13],
  shortName: 'euro'
}, {
  name: 'Banknote with Pound Sign',
  unified: '1F4B7',
  keywords: ['pound_banknote', 'british', 'sterling', 'money', 'sales', 'bills', 'uk', 'england', 'currency'],
  sheet: [28, 14],
  shortName: 'pound'
}, {
  name: 'Money with Wings',
  unified: '1F4B8',
  keywords: ['money_with_wings', 'dollar', 'bills', 'payment', 'sale'],
  sheet: [28, 15],
  shortName: 'money_with_wings'
}, {
  name: 'Credit Card',
  unified: '1F4B3',
  keywords: ['credit_card', 'money', 'sales', 'dollar', 'bill', 'payment', 'shopping'],
  sheet: [28, 10],
  shortName: 'credit_card'
}, {
  name: 'Receipt',
  unified: '1F9FE',
  keywords: ['receipt', 'accounting', 'expenses'],
  sheet: [53, 44],
  shortName: 'receipt'
}, {
  name: 'Chart with Upwards Trend and Yen Sign',
  unified: '1F4B9',
  keywords: ['chart_increasing_with_yen', 'green-square', 'graph', 'presentation', 'stats'],
  sheet: [28, 16],
  shortName: 'chart'
}, {
  name: 'Envelope',
  unified: '2709-FE0F',
  keywords: ['envelope', 'letter', 'postal', 'inbox', 'communication'],
  sheet: [58, 26],
  shortNames: ['envelope'],
  shortName: 'email'
}, {
  name: 'E-Mail Symbol',
  unified: '1F4E7',
  keywords: ['e_mail', 'communication', 'inbox'],
  sheet: [29, 1],
  shortName: 'e-mail'
}, {
  name: 'Incoming Envelope',
  unified: '1F4E8',
  keywords: ['incoming_envelope', 'email', 'inbox'],
  sheet: [29, 2],
  shortName: 'incoming_envelope'
}, {
  name: 'Envelope with Downwards Arrow Above',
  unified: '1F4E9',
  keywords: ['envelope_with_arrow', 'email', 'communication'],
  sheet: [29, 3],
  shortName: 'envelope_with_arrow'
}, {
  name: 'Outbox Tray',
  unified: '1F4E4',
  keywords: ['outbox_tray', 'inbox', 'email'],
  sheet: [28, 59],
  shortName: 'outbox_tray'
}, {
  name: 'Inbox Tray',
  unified: '1F4E5',
  keywords: ['inbox_tray', 'email', 'documents'],
  sheet: [28, 60],
  shortName: 'inbox_tray'
}, {
  name: 'Package',
  unified: '1F4E6',
  keywords: ['package', 'mail', 'gift', 'cardboard', 'box', 'moving'],
  sheet: [29, 0],
  shortName: 'package'
}, {
  name: 'Closed Mailbox with Raised Flag',
  unified: '1F4EB',
  keywords: ['closed_mailbox_with_raised_flag', 'email', 'inbox', 'communication'],
  sheet: [29, 5],
  shortName: 'mailbox'
}, {
  name: 'Closed Mailbox with Lowered Flag',
  unified: '1F4EA',
  keywords: ['closed_mailbox_with_lowered_flag', 'email', 'communication', 'inbox'],
  sheet: [29, 4],
  shortName: 'mailbox_closed'
}, {
  name: 'Open Mailbox with Raised Flag',
  unified: '1F4EC',
  keywords: ['open_mailbox_with_raised_flag', 'email', 'inbox', 'communication'],
  sheet: [29, 6],
  shortName: 'mailbox_with_mail'
}, {
  name: 'Open Mailbox with Lowered Flag',
  unified: '1F4ED',
  keywords: ['open_mailbox_with_lowered_flag', 'email', 'inbox'],
  sheet: [29, 7],
  shortName: 'mailbox_with_no_mail'
}, {
  name: 'Postbox',
  unified: '1F4EE',
  keywords: ['postbox', 'email', 'letter', 'envelope'],
  sheet: [29, 8],
  shortName: 'postbox'
}, {
  name: 'Ballot Box with Ballot',
  unified: '1F5F3-FE0F',
  keywords: ['ballot_box_with_ballot', 'election', 'vote'],
  sheet: [32, 13],
  shortName: 'ballot_box_with_ballot'
}, {
  name: 'Pencil',
  unified: '270F-FE0F',
  keywords: ['pencil', 'stationery', 'write', 'paper', 'writing', 'school', 'study'],
  sheet: [58, 51],
  shortName: 'pencil2'
}, {
  name: 'Black Nib',
  unified: '2712-FE0F',
  keywords: ['black_nib', 'pen', 'stationery', 'writing', 'write'],
  sheet: [58, 52],
  shortName: 'black_nib'
}, {
  name: 'Fountain Pen',
  unified: '1F58B-FE0F',
  keywords: ['fountain_pen', 'stationery', 'writing', 'write'],
  sheet: [31, 34],
  shortName: 'lower_left_fountain_pen'
}, {
  name: 'Pen',
  unified: '1F58A-FE0F',
  keywords: ['pen', 'stationery', 'writing', 'write'],
  sheet: [31, 33],
  shortName: 'lower_left_ballpoint_pen'
}, {
  name: 'Paintbrush',
  unified: '1F58C-FE0F',
  keywords: ['paintbrush', 'drawing', 'creativity', 'art'],
  sheet: [31, 35],
  shortName: 'lower_left_paintbrush'
}, {
  name: 'Crayon',
  unified: '1F58D-FE0F',
  keywords: ['crayon', 'drawing', 'creativity'],
  sheet: [31, 36],
  shortName: 'lower_left_crayon'
}, {
  name: 'Memo',
  unified: '1F4DD',
  keywords: ['memo', 'write', 'documents', 'stationery', 'pencil', 'paper', 'writing', 'legal', 'exam', 'quiz', 'test', 'study', 'compose'],
  sheet: [28, 52],
  shortNames: ['pencil'],
  shortName: 'memo'
}, {
  name: 'Briefcase',
  unified: '1F4BC',
  keywords: ['briefcase', 'business', 'documents', 'work', 'law', 'legal', 'job', 'career'],
  sheet: [28, 19],
  shortName: 'briefcase'
}, {
  name: 'File Folder',
  unified: '1F4C1',
  keywords: ['file_folder', 'documents', 'business', 'office'],
  sheet: [28, 24],
  shortName: 'file_folder'
}, {
  name: 'Open File Folder',
  unified: '1F4C2',
  keywords: ['open_file_folder', 'documents', 'load'],
  sheet: [28, 25],
  shortName: 'open_file_folder'
}, {
  name: 'Card Index Dividers',
  unified: '1F5C2-FE0F',
  keywords: ['card_index_dividers', 'organizing', 'business', 'stationery'],
  sheet: [32, 0],
  shortName: 'card_index_dividers'
}, {
  name: 'Calendar',
  unified: '1F4C5',
  keywords: ['calendar', 'calendar', 'schedule'],
  sheet: [28, 28],
  shortName: 'date'
}, {
  name: 'Tear-off Calendar',
  unified: '1F4C6',
  keywords: ['tear_off_calendar', 'schedule', 'date', 'planning'],
  sheet: [28, 29],
  shortName: 'calendar'
}, {
  name: 'Spiral Notepad',
  unified: '1F5D2-FE0F',
  keywords: ['spiral_notepad', 'memo', 'stationery'],
  sheet: [32, 4],
  shortName: 'spiral_note_pad'
}, {
  name: 'Spiral Calendar',
  unified: '1F5D3-FE0F',
  keywords: ['spiral_calendar', 'date', 'schedule', 'planning'],
  sheet: [32, 5],
  shortName: 'spiral_calendar_pad'
}, {
  name: 'Card Index',
  unified: '1F4C7',
  keywords: ['card_index', 'business', 'stationery'],
  sheet: [28, 30],
  shortName: 'card_index'
}, {
  name: 'Chart with Upwards Trend',
  unified: '1F4C8',
  keywords: ['chart_increasing', 'graph', 'presentation', 'stats', 'recovery', 'business', 'economics', 'money', 'sales', 'good', 'success'],
  sheet: [28, 31],
  shortName: 'chart_with_upwards_trend'
}, {
  name: 'Chart with Downwards Trend',
  unified: '1F4C9',
  keywords: ['chart_decreasing', 'graph', 'presentation', 'stats', 'recession', 'business', 'economics', 'money', 'sales', 'bad', 'failure'],
  sheet: [28, 32],
  shortName: 'chart_with_downwards_trend'
}, {
  name: 'Bar Chart',
  unified: '1F4CA',
  keywords: ['bar_chart', 'graph', 'presentation', 'stats'],
  sheet: [28, 33],
  shortName: 'bar_chart'
}, {
  name: 'Clipboard',
  unified: '1F4CB',
  keywords: ['clipboard', 'stationery', 'documents'],
  sheet: [28, 34],
  shortName: 'clipboard'
}, {
  name: 'Pushpin',
  unified: '1F4CC',
  keywords: ['pushpin', 'stationery', 'mark', 'here'],
  sheet: [28, 35],
  shortName: 'pushpin'
}, {
  name: 'Round Pushpin',
  unified: '1F4CD',
  keywords: ['round_pushpin', 'stationery', 'location', 'map', 'here'],
  sheet: [28, 36],
  shortName: 'round_pushpin'
}, {
  name: 'Paperclip',
  unified: '1F4CE',
  keywords: ['paperclip', 'documents', 'stationery'],
  sheet: [28, 37],
  shortName: 'paperclip'
}, {
  name: 'Linked Paperclips',
  unified: '1F587-FE0F',
  keywords: ['linked_paperclips', 'documents', 'stationery'],
  sheet: [31, 32],
  shortName: 'linked_paperclips'
}, {
  name: 'Straight Ruler',
  unified: '1F4CF',
  keywords: ['straight_ruler', 'stationery', 'calculate', 'length', 'math', 'school', 'drawing', 'architect', 'sketch'],
  sheet: [28, 38],
  shortName: 'straight_ruler'
}, {
  name: 'Triangular Ruler',
  unified: '1F4D0',
  keywords: ['triangular_ruler', 'stationery', 'math', 'architect', 'sketch'],
  sheet: [28, 39],
  shortName: 'triangular_ruler'
}, {
  name: 'Black Scissors',
  unified: '2702-FE0F',
  keywords: ['scissors', 'stationery', 'cut'],
  sheet: [58, 23],
  shortName: 'scissors'
}, {
  name: 'Card File Box',
  unified: '1F5C3-FE0F',
  keywords: ['card_file_box', 'business', 'stationery'],
  sheet: [32, 1],
  shortName: 'card_file_box'
}, {
  name: 'File Cabinet',
  unified: '1F5C4-FE0F',
  keywords: ['file_cabinet', 'filing', 'organizing'],
  sheet: [32, 2],
  shortName: 'file_cabinet'
}, {
  name: 'Wastebasket',
  unified: '1F5D1-FE0F',
  keywords: ['wastebasket', 'bin', 'trash', 'rubbish', 'garbage', 'toss'],
  sheet: [32, 3],
  shortName: 'wastebasket'
}, {
  name: 'Lock',
  unified: '1F512',
  keywords: ['locked', 'security', 'password', 'padlock'],
  sheet: [29, 43],
  shortName: 'lock'
}, {
  name: 'Open Lock',
  unified: '1F513',
  keywords: ['unlocked', 'privacy', 'security'],
  sheet: [29, 44],
  shortName: 'unlock'
}, {
  name: 'Lock with Ink Pen',
  unified: '1F50F',
  keywords: ['locked_with_pen', 'security', 'secret'],
  sheet: [29, 40],
  shortName: 'lock_with_ink_pen'
}, {
  name: 'Closed Lock with Key',
  unified: '1F510',
  keywords: ['locked_with_key', 'security', 'privacy'],
  sheet: [29, 41],
  shortName: 'closed_lock_with_key'
}, {
  name: 'Key',
  unified: '1F511',
  keywords: ['key', 'lock', 'door', 'password'],
  sheet: [29, 42],
  shortName: 'key'
}, {
  name: 'Old Key',
  unified: '1F5DD-FE0F',
  keywords: ['old_key', 'lock', 'door', 'password'],
  sheet: [32, 7],
  shortName: 'old_key'
}, {
  name: 'Hammer',
  unified: '1F528',
  keywords: ['hammer', 'tools', 'build', 'create'],
  sheet: [30, 4],
  shortName: 'hammer'
}, {
  name: 'Axe',
  unified: '1FA93',
  keywords: ['axe', 'tool', 'chop', 'cut'],
  sheet: [54, 5],
  shortName: 'axe'
}, {
  name: 'Pick',
  unified: '26CF-FE0F',
  keywords: ['pick', 'tools', 'dig'],
  sheet: [57, 50],
  shortName: 'pick'
}, {
  name: 'Hammer and Pick',
  unified: '2692-FE0F',
  keywords: ['hammer_and_pick', 'tools', 'build', 'create'],
  sheet: [57, 28],
  shortName: 'hammer_and_pick'
}, {
  name: 'Hammer and Wrench',
  unified: '1F6E0-FE0F',
  keywords: ['hammer_and_wrench', 'tools', 'build', 'create'],
  sheet: [38, 11],
  shortName: 'hammer_and_wrench'
}, {
  name: 'Dagger',
  unified: '1F5E1-FE0F',
  keywords: ['dagger', 'weapon'],
  sheet: [32, 9],
  shortName: 'dagger_knife'
}, {
  name: 'Crossed Swords',
  unified: '2694-FE0F',
  keywords: ['crossed_swords', 'weapon'],
  sheet: [57, 30],
  shortName: 'crossed_swords'
}, {
  name: 'Pistol',
  unified: '1F52B',
  keywords: ['pistol', 'violence', 'weapon', 'pistol', 'revolver'],
  sheet: [30, 7],
  shortName: 'gun'
}, {
  name: 'Boomerang',
  unified: '1FA83',
  keywords: ['boomerang', 'weapon'],
  sheet: [53, 59],
  shortName: 'boomerang'
}, {
  name: 'Bow and Arrow',
  unified: '1F3F9',
  keywords: ['bow_and_arrow', 'sports'],
  sheet: [10, 39],
  shortName: 'bow_and_arrow'
}, {
  name: 'Shield',
  unified: '1F6E1-FE0F',
  keywords: ['shield', 'protection', 'security'],
  sheet: [38, 12],
  shortName: 'shield'
}, {
  name: 'Carpentry Saw',
  unified: '1FA9A',
  keywords: ['carpentry saw', 'cut', 'chop'],
  sheet: [54, 12],
  shortName: 'carpentry_saw'
}, {
  name: 'Wrench',
  unified: '1F527',
  keywords: ['wrench', 'tools', 'diy', 'ikea', 'fix', 'maintainer'],
  sheet: [30, 3],
  shortName: 'wrench'
}, {
  name: 'Screwdriver',
  unified: '1FA9B',
  keywords: ['screwdriver', 'tools'],
  sheet: [54, 13],
  shortName: 'screwdriver'
}, {
  name: 'Nut and Bolt',
  unified: '1F529',
  keywords: ['nut_and_bolt', 'handy', 'tools', 'fix'],
  sheet: [30, 5],
  shortName: 'nut_and_bolt'
}, {
  name: 'Gear',
  unified: '2699-FE0F',
  keywords: ['gear', 'cog'],
  sheet: [57, 34],
  shortName: 'gear'
}, {
  name: 'Clamp',
  unified: '1F5DC-FE0F',
  keywords: ['clamp', 'tool'],
  sheet: [32, 6],
  shortName: 'compression'
}, {
  name: 'Balance Scale',
  unified: '2696-FE0F',
  keywords: ['balance_scale', 'law', 'fairness', 'weight'],
  sheet: [57, 32],
  shortName: 'scales'
}, {
  name: 'Probing Cane',
  unified: '1F9AF',
  keywords: ['probing_cane', 'accessibility'],
  sheet: [45, 4],
  shortName: 'probing_cane'
}, {
  name: 'Link Symbol',
  unified: '1F517',
  keywords: ['link', 'rings', 'url'],
  sheet: [29, 48],
  shortName: 'link'
}, {
  name: 'Chains',
  unified: '26D3-FE0F',
  keywords: ['chains', 'lock', 'arrest'],
  sheet: [57, 52],
  shortName: 'chains'
}, {
  name: 'Hook',
  unified: '1FA9D',
  keywords: ['hook', 'tools'],
  sheet: [54, 15],
  shortName: 'hook'
}, {
  name: 'Toolbox',
  unified: '1F9F0',
  keywords: ['toolbox', 'tools', 'diy', 'fix', 'maintainer', 'mechanic'],
  sheet: [53, 30],
  shortName: 'toolbox'
}, {
  name: 'Magnet',
  unified: '1F9F2',
  keywords: ['magnet', 'attraction', 'magnetic'],
  sheet: [53, 32],
  shortName: 'magnet'
}, {
  name: 'Ladder',
  unified: '1FA9C',
  keywords: ['ladder', 'tools'],
  sheet: [54, 14],
  shortName: 'ladder'
}, {
  name: 'Alembic',
  unified: '2697-FE0F',
  keywords: ['alembic', 'distilling', 'science', 'experiment', 'chemistry'],
  sheet: [57, 33],
  shortName: 'alembic'
}, {
  name: 'Test Tube',
  unified: '1F9EA',
  keywords: ['test_tube', 'chemistry', 'experiment', 'lab', 'science'],
  sheet: [53, 24],
  shortName: 'test_tube'
}, {
  name: 'Petri Dish',
  unified: '1F9EB',
  keywords: ['petri_dish', 'bacteria', 'biology', 'culture', 'lab'],
  sheet: [53, 25],
  shortName: 'petri_dish'
}, {
  name: 'Dna Double Helix',
  unified: '1F9EC',
  keywords: ['dna', 'biologist', 'genetics', 'life'],
  sheet: [53, 26],
  shortName: 'dna'
}, {
  name: 'Microscope',
  unified: '1F52C',
  keywords: ['microscope', 'laboratory', 'experiment', 'zoomin', 'science', 'study'],
  sheet: [30, 8],
  shortName: 'microscope'
}, {
  name: 'Telescope',
  unified: '1F52D',
  keywords: ['telescope', 'stars', 'space', 'zoom', 'science', 'astronomy'],
  sheet: [30, 9],
  shortName: 'telescope'
}, {
  name: 'Satellite Antenna',
  unified: '1F4E1',
  keywords: ['satellite_antenna', 'communication', 'future', 'radio', 'space'],
  sheet: [28, 56],
  shortName: 'satellite_antenna'
}, {
  name: 'Syringe',
  unified: '1F489',
  keywords: ['syringe', 'health', 'hospital', 'drugs', 'blood', 'medicine', 'needle', 'doctor', 'nurse'],
  sheet: [26, 35],
  shortName: 'syringe'
}, {
  name: 'Drop of Blood',
  unified: '1FA78',
  keywords: ['drop_of_blood', 'period', 'hurt', 'harm', 'wound'],
  sheet: [53, 51],
  shortName: 'drop_of_blood'
}, {
  name: 'Pill',
  unified: '1F48A',
  keywords: ['pill', 'health', 'medicine', 'doctor', 'pharmacy', 'drug'],
  sheet: [26, 36],
  shortName: 'pill'
}, {
  name: 'Adhesive Bandage',
  unified: '1FA79',
  keywords: ['adhesive_bandage', 'heal'],
  sheet: [53, 52],
  shortName: 'adhesive_bandage'
}, {
  name: 'Crutch',
  unified: '1FA7C',
  keywords: ['crutch', 'accessibility', 'assist'],
  sheet: [53, 55],
  hidden: ['facebook'],
  shortName: 'crutch'
}, {
  name: 'Stethoscope',
  unified: '1FA7A',
  keywords: ['stethoscope', 'health'],
  sheet: [53, 53],
  shortName: 'stethoscope'
}, {
  name: 'X-Ray',
  unified: '1FA7B',
  keywords: ['x-ray', 'skeleton', 'medicine'],
  sheet: [53, 54],
  hidden: ['facebook'],
  shortName: 'x-ray'
}, {
  name: 'Door',
  unified: '1F6AA',
  keywords: ['door', 'house', 'entry', 'exit'],
  sheet: [36, 30],
  shortName: 'door'
}, {
  name: 'Elevator',
  unified: '1F6D7',
  keywords: ['elevator', 'lift'],
  sheet: [38, 7],
  shortName: 'elevator'
}, {
  name: 'Mirror',
  unified: '1FA9E',
  keywords: ['mirror', 'reflection'],
  sheet: [54, 16],
  shortName: 'mirror'
}, {
  name: 'Window',
  unified: '1FA9F',
  keywords: ['window', 'scenery'],
  sheet: [54, 17],
  shortName: 'window'
}, {
  name: 'Bed',
  unified: '1F6CF-FE0F',
  keywords: ['bed', 'sleep', 'rest'],
  sheet: [38, 1],
  shortName: 'bed'
}, {
  name: 'Couch and Lamp',
  unified: '1F6CB-FE0F',
  keywords: ['couch_and_lamp', 'read', 'chill'],
  sheet: [37, 53],
  shortName: 'couch_and_lamp'
}, {
  name: 'Chair',
  unified: '1FA91',
  keywords: ['chair', 'sit', 'furniture'],
  sheet: [54, 3],
  shortName: 'chair'
}, {
  name: 'Toilet',
  unified: '1F6BD',
  keywords: ['toilet', 'restroom', 'wc', 'washroom', 'bathroom', 'potty'],
  sheet: [37, 39],
  shortName: 'toilet'
}, {
  name: 'Plunger',
  unified: '1FAA0',
  keywords: ['plunger', 'toilet'],
  sheet: [54, 18],
  shortName: 'plunger'
}, {
  name: 'Shower',
  unified: '1F6BF',
  keywords: ['shower', 'clean', 'water', 'bathroom'],
  sheet: [37, 41],
  shortName: 'shower'
}, {
  name: 'Bathtub',
  unified: '1F6C1',
  keywords: ['bathtub', 'clean', 'shower', 'bathroom'],
  sheet: [37, 48],
  shortName: 'bathtub'
}, {
  name: 'Mouse Trap',
  unified: '1FAA4',
  keywords: ['mouse trap', 'cheese'],
  sheet: [54, 22],
  shortName: 'mouse_trap'
}, {
  name: 'Razor',
  unified: '1FA92',
  keywords: ['razor', 'cut'],
  sheet: [54, 4],
  shortName: 'razor'
}, {
  name: 'Lotion Bottle',
  unified: '1F9F4',
  keywords: ['lotion_bottle', 'moisturizer', 'sunscreen'],
  sheet: [53, 34],
  shortName: 'lotion_bottle'
}, {
  name: 'Safety Pin',
  unified: '1F9F7',
  keywords: ['safety_pin', 'diaper'],
  sheet: [53, 37],
  shortName: 'safety_pin'
}, {
  name: 'Broom',
  unified: '1F9F9',
  keywords: ['broom', 'cleaning', 'sweeping', 'witch'],
  sheet: [53, 39],
  shortName: 'broom'
}, {
  name: 'Basket',
  unified: '1F9FA',
  keywords: ['basket', 'laundry'],
  sheet: [53, 40],
  shortName: 'basket'
}, {
  name: 'Roll of Paper',
  unified: '1F9FB',
  keywords: ['roll_of_paper', 'roll'],
  sheet: [53, 41],
  shortName: 'roll_of_paper'
}, {
  name: 'Bucket',
  unified: '1FAA3',
  keywords: ['bucket', 'water', 'container'],
  sheet: [54, 21],
  shortName: 'bucket'
}, {
  name: 'Bar of Soap',
  unified: '1F9FC',
  keywords: ['soap', 'bar', 'bathing', 'cleaning', 'lather'],
  sheet: [53, 42],
  shortName: 'soap'
}, {
  name: 'Bubbles',
  unified: '1FAE7',
  keywords: ['bubbles', 'soap', 'fun', 'carbonation', 'sparkling'],
  sheet: [55, 19],
  hidden: ['facebook'],
  shortName: 'bubbles'
}, {
  name: 'Toothbrush',
  unified: '1FAA5',
  keywords: ['toothbrush', 'hygiene', 'dental'],
  sheet: [54, 23],
  shortName: 'toothbrush'
}, {
  name: 'Sponge',
  unified: '1F9FD',
  keywords: ['sponge', 'absorbing', 'cleaning', 'porous'],
  sheet: [53, 43],
  shortName: 'sponge'
}, {
  name: 'Fire Extinguisher',
  unified: '1F9EF',
  keywords: ['fire_extinguisher', 'quench'],
  sheet: [53, 29],
  shortName: 'fire_extinguisher'
}, {
  name: 'Shopping Trolley',
  unified: '1F6D2',
  keywords: ['shopping_cart', 'trolley'],
  sheet: [38, 4],
  shortName: 'shopping_trolley'
}, {
  name: 'Smoking Symbol',
  unified: '1F6AC',
  keywords: ['cigarette', 'kills', 'tobacco', 'cigarette', 'joint', 'smoke'],
  sheet: [36, 32],
  shortName: 'smoking'
}, {
  name: 'Coffin',
  unified: '26B0-FE0F',
  keywords: ['coffin', 'vampire', 'dead', 'die', 'death', 'rip', 'graveyard', 'cemetery', 'casket', 'funeral', 'box'],
  sheet: [57, 42],
  shortName: 'coffin'
}, {
  name: 'Headstone',
  unified: '1FAA6',
  keywords: ['headstone', 'death', 'rip', 'grave'],
  sheet: [54, 24],
  shortName: 'headstone'
}, {
  name: 'Funeral Urn',
  unified: '26B1-FE0F',
  keywords: ['funeral_urn', 'dead', 'die', 'death', 'rip', 'ashes'],
  sheet: [57, 43],
  shortName: 'funeral_urn'
}, {
  name: 'Moyai',
  unified: '1F5FF',
  keywords: ['moai', 'rock', 'easter island', 'moai'],
  sheet: [32, 19],
  shortName: 'moyai'
}, {
  name: 'Placard',
  unified: '1FAA7',
  keywords: ['placard', 'announcement'],
  sheet: [54, 25],
  shortName: 'placard'
}, {
  name: 'Identification Card',
  unified: '1FAAA',
  keywords: ['identification card', 'document'],
  sheet: [54, 28],
  hidden: ['facebook'],
  shortName: 'identification_card'
}, {
  name: 'Automated Teller Machine',
  unified: '1F3E7',
  keywords: ['atm_sign', 'money', 'sales', 'cash', 'blue-square', 'payment', 'bank'],
  sheet: [10, 18],
  shortName: 'atm'
}, {
  name: 'Put Litter in Its Place Symbol',
  unified: '1F6AE',
  keywords: ['litter_in_bin_sign', 'blue-square', 'sign', 'human', 'info'],
  sheet: [36, 34],
  shortName: 'put_litter_in_its_place'
}, {
  name: 'Potable Water Symbol',
  unified: '1F6B0',
  keywords: ['potable_water', 'blue-square', 'liquid', 'restroom', 'cleaning', 'faucet'],
  sheet: [36, 36],
  shortName: 'potable_water'
}, {
  name: 'Wheelchair Symbol',
  unified: '267F',
  keywords: ['wheelchair_symbol', 'blue-square', 'disabled', 'accessibility'],
  sheet: [57, 27],
  shortName: 'wheelchair'
}, {
  name: 'Mens Symbol',
  unified: '1F6B9',
  keywords: ['men_s_room', 'toilet', 'restroom', 'wc', 'blue-square', 'gender', 'male'],
  sheet: [37, 35],
  shortName: 'mens'
}, {
  name: 'Womens Symbol',
  unified: '1F6BA',
  keywords: ['women_s_room', 'purple-square', 'woman', 'female', 'toilet', 'loo', 'restroom', 'gender'],
  sheet: [37, 36],
  shortName: 'womens'
}, {
  name: 'Restroom',
  unified: '1F6BB',
  keywords: ['restroom', 'blue-square', 'toilet', 'refresh', 'wc', 'gender'],
  sheet: [37, 37],
  shortName: 'restroom'
}, {
  name: 'Baby Symbol',
  unified: '1F6BC',
  keywords: ['baby_symbol', 'orange-square', 'child'],
  sheet: [37, 38],
  shortName: 'baby_symbol'
}, {
  name: 'Water Closet',
  unified: '1F6BE',
  keywords: ['water_closet', 'toilet', 'restroom', 'blue-square'],
  sheet: [37, 40],
  shortName: 'wc'
}, {
  name: 'Passport Control',
  unified: '1F6C2',
  keywords: ['passport_control', 'custom', 'blue-square'],
  sheet: [37, 49],
  shortName: 'passport_control'
}, {
  name: 'Customs',
  unified: '1F6C3',
  keywords: ['customs', 'passport', 'border', 'blue-square'],
  sheet: [37, 50],
  shortName: 'customs'
}, {
  name: 'Baggage Claim',
  unified: '1F6C4',
  keywords: ['baggage_claim', 'blue-square', 'airport', 'transport'],
  sheet: [37, 51],
  shortName: 'baggage_claim'
}, {
  name: 'Left Luggage',
  unified: '1F6C5',
  keywords: ['left_luggage', 'blue-square', 'travel'],
  sheet: [37, 52],
  shortName: 'left_luggage'
}, {
  name: 'Warning Sign',
  unified: '26A0-FE0F',
  keywords: ['warning', 'exclamation', 'wip', 'alert', 'error', 'problem', 'issue'],
  sheet: [57, 37],
  shortName: 'warning'
}, {
  name: 'Children Crossing',
  unified: '1F6B8',
  keywords: ['children_crossing', 'school', 'warning', 'danger', 'sign', 'driving', 'yellow-diamond'],
  sheet: [37, 34],
  shortName: 'children_crossing'
}, {
  name: 'No Entry',
  unified: '26D4',
  keywords: ['no_entry', 'limit', 'security', 'privacy', 'bad', 'denied', 'stop', 'circle'],
  sheet: [57, 53],
  shortName: 'no_entry'
}, {
  name: 'No Entry Sign',
  unified: '1F6AB',
  keywords: ['prohibited', 'forbid', 'stop', 'limit', 'denied', 'disallow', 'circle'],
  sheet: [36, 31],
  shortName: 'no_entry_sign'
}, {
  name: 'No Bicycles',
  unified: '1F6B3',
  keywords: ['no_bicycles', 'cyclist', 'prohibited', 'circle'],
  sheet: [36, 39],
  shortName: 'no_bicycles'
}, {
  name: 'No Smoking Symbol',
  unified: '1F6AD',
  keywords: ['no_smoking', 'cigarette', 'blue-square', 'smell', 'smoke'],
  sheet: [36, 33],
  shortName: 'no_smoking'
}, {
  name: 'Do Not Litter Symbol',
  unified: '1F6AF',
  keywords: ['no_littering', 'trash', 'bin', 'garbage', 'circle'],
  sheet: [36, 35],
  shortName: 'do_not_litter'
}, {
  name: 'Non-Potable Water Symbol',
  unified: '1F6B1',
  keywords: ['non_potable_water', 'drink', 'faucet', 'tap', 'circle'],
  sheet: [36, 37],
  shortName: 'non-potable_water'
}, {
  name: 'No Pedestrians',
  unified: '1F6B7',
  keywords: ['no_pedestrians', 'rules', 'crossing', 'walking', 'circle'],
  sheet: [37, 33],
  shortName: 'no_pedestrians'
}, {
  name: 'No Mobile Phones',
  unified: '1F4F5',
  keywords: ['no_mobile_phones', 'iphone', 'mute', 'circle'],
  sheet: [29, 15],
  shortName: 'no_mobile_phones'
}, {
  name: 'No One Under Eighteen Symbol',
  unified: '1F51E',
  keywords: ['no_one_under_eighteen', '18', 'drink', 'pub', 'night', 'minor', 'circle'],
  sheet: [29, 55],
  shortName: 'underage'
}, {
  name: 'Radioactive',
  unified: '2622-FE0F',
  keywords: ['radioactive', 'nuclear', 'danger'],
  sheet: [56, 57],
  shortName: 'radioactive_sign'
}, {
  name: 'Biohazard',
  unified: '2623-FE0F',
  keywords: ['biohazard', 'danger'],
  sheet: [56, 58],
  shortName: 'biohazard_sign'
}, {
  name: 'Upwards Black Arrow',
  unified: '2B06-FE0F',
  keywords: ['up_arrow', 'blue-square', 'continue', 'top', 'direction'],
  sheet: [59, 20],
  shortName: 'arrow_up'
}, {
  name: 'North East Arrow',
  unified: '2197-FE0F',
  keywords: ['up_right_arrow', 'blue-square', 'point', 'direction', 'diagonal', 'northeast'],
  sheet: [56, 8],
  shortName: 'arrow_upper_right'
}, {
  name: 'Black Rightwards Arrow',
  unified: '27A1-FE0F',
  keywords: ['right_arrow', 'blue-square', 'next'],
  sheet: [59, 14],
  shortName: 'arrow_right'
}, {
  name: 'South East Arrow',
  unified: '2198-FE0F',
  keywords: ['down_right_arrow', 'blue-square', 'direction', 'diagonal', 'southeast'],
  sheet: [56, 9],
  shortName: 'arrow_lower_right'
}, {
  name: 'Downwards Black Arrow',
  unified: '2B07-FE0F',
  keywords: ['down_arrow', 'blue-square', 'direction', 'bottom'],
  sheet: [59, 21],
  shortName: 'arrow_down'
}, {
  name: 'South West Arrow',
  unified: '2199-FE0F',
  keywords: ['down_left_arrow', 'blue-square', 'direction', 'diagonal', 'southwest'],
  sheet: [56, 10],
  shortName: 'arrow_lower_left'
}, {
  name: 'Leftwards Black Arrow',
  unified: '2B05-FE0F',
  keywords: ['left_arrow', 'blue-square', 'previous', 'back'],
  sheet: [59, 19],
  shortName: 'arrow_left'
}, {
  name: 'North West Arrow',
  unified: '2196-FE0F',
  keywords: ['up_left_arrow', 'blue-square', 'point', 'direction', 'diagonal', 'northwest'],
  sheet: [56, 7],
  shortName: 'arrow_upper_left'
}, {
  name: 'Up Down Arrow',
  unified: '2195-FE0F',
  keywords: ['up_down_arrow', 'blue-square', 'direction', 'way', 'vertical'],
  sheet: [56, 6],
  shortName: 'arrow_up_down'
}, {
  name: 'Left Right Arrow',
  unified: '2194-FE0F',
  keywords: ['left_right_arrow', 'shape', 'direction', 'horizontal', 'sideways'],
  sheet: [56, 5],
  shortName: 'left_right_arrow'
}, {
  name: 'Leftwards Arrow with Hook',
  unified: '21A9-FE0F',
  keywords: ['right_arrow_curving_left', 'back', 'return', 'blue-square', 'undo', 'enter'],
  sheet: [56, 11],
  shortName: 'leftwards_arrow_with_hook'
}, {
  name: 'Rightwards Arrow with Hook',
  unified: '21AA-FE0F',
  keywords: ['left_arrow_curving_right', 'blue-square', 'return', 'rotate', 'direction'],
  sheet: [56, 12],
  shortName: 'arrow_right_hook'
}, {
  name: 'Arrow Pointing Rightwards Then Curving Upwards',
  unified: '2934-FE0F',
  keywords: ['right_arrow_curving_up', 'blue-square', 'direction', 'top'],
  sheet: [59, 17],
  shortName: 'arrow_heading_up'
}, {
  name: 'Arrow Pointing Rightwards Then Curving Downwards',
  unified: '2935-FE0F',
  keywords: ['right_arrow_curving_down', 'blue-square', 'direction', 'bottom'],
  sheet: [59, 18],
  shortName: 'arrow_heading_down'
}, {
  name: 'Clockwise Downwards and Upwards Open Circle Arrows',
  unified: '1F503',
  keywords: ['clockwise_vertical_arrows', 'sync', 'cycle', 'round', 'repeat'],
  sheet: [29, 28],
  shortName: 'arrows_clockwise'
}, {
  name: 'Anticlockwise Downwards and Upwards Open Circle Arrows',
  unified: '1F504',
  keywords: ['counterclockwise_arrows_button', 'blue-square', 'sync', 'cycle'],
  sheet: [29, 29],
  shortName: 'arrows_counterclockwise'
}, {
  name: 'Back with Leftwards Arrow Above',
  unified: '1F519',
  keywords: ['back_arrow', 'arrow', 'words', 'return'],
  sheet: [29, 50],
  shortName: 'back'
}, {
  name: 'End with Leftwards Arrow Above',
  unified: '1F51A',
  keywords: ['end_arrow', 'words', 'arrow'],
  sheet: [29, 51],
  shortName: 'end'
}, {
  name: 'On with Exclamation Mark with Left Right Arrow Above',
  unified: '1F51B',
  keywords: ['on_arrow', 'arrow', 'words'],
  sheet: [29, 52],
  shortName: 'on'
}, {
  name: 'Soon with Rightwards Arrow Above',
  unified: '1F51C',
  keywords: ['soon_arrow', 'arrow', 'words'],
  sheet: [29, 53],
  shortName: 'soon'
}, {
  name: 'Top with Upwards Arrow Above',
  unified: '1F51D',
  keywords: ['top_arrow', 'words', 'blue-square'],
  sheet: [29, 54],
  shortName: 'top'
}, {
  name: 'Place of Worship',
  unified: '1F6D0',
  keywords: ['place_of_worship', 'religion', 'church', 'temple', 'prayer'],
  sheet: [38, 2],
  shortName: 'place_of_worship'
}, {
  name: 'Atom Symbol',
  unified: '269B-FE0F',
  keywords: ['atom_symbol', 'science', 'physics', 'chemistry'],
  sheet: [57, 35],
  shortName: 'atom_symbol'
}, {
  name: 'Om',
  unified: '1F549-FE0F',
  keywords: ['om', 'hinduism', 'buddhism', 'sikhism', 'jainism'],
  sheet: [30, 26],
  shortName: 'om_symbol'
}, {
  name: 'Star of David',
  unified: '2721-FE0F',
  keywords: ['star_of_david', 'judaism'],
  sheet: [58, 56],
  shortName: 'star_of_david'
}, {
  name: 'Wheel of Dharma',
  unified: '2638-FE0F',
  keywords: ['wheel_of_dharma', 'hinduism', 'buddhism', 'sikhism', 'jainism'],
  sheet: [57, 2],
  shortName: 'wheel_of_dharma'
}, {
  name: 'Yin Yang',
  unified: '262F-FE0F',
  keywords: ['yin_yang', 'balance'],
  sheet: [57, 1],
  shortName: 'yin_yang'
}, {
  name: 'Latin Cross',
  unified: '271D-FE0F',
  keywords: ['latin_cross', 'christianity'],
  sheet: [58, 55],
  shortName: 'latin_cross'
}, {
  name: 'Orthodox Cross',
  unified: '2626-FE0F',
  keywords: ['orthodox_cross', 'suppedaneum', 'religion'],
  sheet: [56, 59],
  shortName: 'orthodox_cross'
}, {
  name: 'Star and Crescent',
  unified: '262A-FE0F',
  keywords: ['star_and_crescent', 'islam'],
  sheet: [56, 60],
  shortName: 'star_and_crescent'
}, {
  name: 'Peace Symbol',
  unified: '262E-FE0F',
  keywords: ['peace_symbol', 'hippie'],
  sheet: [57, 0],
  shortName: 'peace_symbol'
}, {
  name: 'Menorah with Nine Branches',
  unified: '1F54E',
  keywords: ['menorah', 'hanukkah', 'candles', 'jewish'],
  sheet: [30, 31],
  shortName: 'menorah_with_nine_branches'
}, {
  name: 'Six Pointed Star with Middle Dot',
  unified: '1F52F',
  keywords: ['dotted_six_pointed_star', 'purple-square', 'religion', 'jewish', 'hexagram'],
  sheet: [30, 11],
  shortName: 'six_pointed_star'
}, {
  name: 'Aries',
  unified: '2648',
  keywords: ['aries', 'sign', 'purple-square', 'zodiac', 'astrology'],
  sheet: [57, 7],
  shortName: 'aries'
}, {
  name: 'Taurus',
  unified: '2649',
  keywords: ['taurus', 'purple-square', 'sign', 'zodiac', 'astrology'],
  sheet: [57, 8],
  shortName: 'taurus'
}, {
  name: 'Gemini',
  unified: '264A',
  keywords: ['gemini', 'sign', 'zodiac', 'purple-square', 'astrology'],
  sheet: [57, 9],
  shortName: 'gemini'
}, {
  name: 'Cancer',
  unified: '264B',
  keywords: ['cancer', 'sign', 'zodiac', 'purple-square', 'astrology'],
  sheet: [57, 10],
  shortName: 'cancer'
}, {
  name: 'Leo',
  unified: '264C',
  keywords: ['leo', 'sign', 'purple-square', 'zodiac', 'astrology'],
  sheet: [57, 11],
  shortName: 'leo'
}, {
  name: 'Virgo',
  unified: '264D',
  keywords: ['virgo', 'sign', 'zodiac', 'purple-square', 'astrology'],
  sheet: [57, 12],
  shortName: 'virgo'
}, {
  name: 'Libra',
  unified: '264E',
  keywords: ['libra', 'sign', 'purple-square', 'zodiac', 'astrology'],
  sheet: [57, 13],
  shortName: 'libra'
}, {
  name: 'Scorpius',
  unified: '264F',
  keywords: ['scorpio', 'sign', 'zodiac', 'purple-square', 'astrology', 'scorpio'],
  sheet: [57, 14],
  shortName: 'scorpius'
}, {
  name: 'Sagittarius',
  unified: '2650',
  keywords: ['sagittarius', 'sign', 'zodiac', 'purple-square', 'astrology'],
  sheet: [57, 15],
  shortName: 'sagittarius'
}, {
  name: 'Capricorn',
  unified: '2651',
  keywords: ['capricorn', 'sign', 'zodiac', 'purple-square', 'astrology'],
  sheet: [57, 16],
  shortName: 'capricorn'
}, {
  name: 'Aquarius',
  unified: '2652',
  keywords: ['aquarius', 'sign', 'purple-square', 'zodiac', 'astrology'],
  sheet: [57, 17],
  shortName: 'aquarius'
}, {
  name: 'Pisces',
  unified: '2653',
  keywords: ['pisces', 'purple-square', 'sign', 'zodiac', 'astrology'],
  sheet: [57, 18],
  shortName: 'pisces'
}, {
  name: 'Ophiuchus',
  unified: '26CE',
  keywords: ['ophiuchus', 'sign', 'purple-square', 'constellation', 'astrology'],
  sheet: [57, 49],
  shortName: 'ophiuchus'
}, {
  name: 'Twisted Rightwards Arrows',
  unified: '1F500',
  keywords: ['shuffle_tracks_button', 'blue-square', 'shuffle', 'music', 'random'],
  sheet: [29, 25],
  shortName: 'twisted_rightwards_arrows'
}, {
  name: 'Clockwise Rightwards and Leftwards Open Circle Arrows',
  unified: '1F501',
  keywords: ['repeat_button', 'loop', 'record'],
  sheet: [29, 26],
  shortName: 'repeat'
}, {
  name: 'Clockwise Rightwards and Leftwards Open Circle Arrows with Circled One Overlay',
  unified: '1F502',
  keywords: ['repeat_single_button', 'blue-square', 'loop'],
  sheet: [29, 27],
  shortName: 'repeat_one'
}, {
  name: 'Black Right-Pointing Triangle',
  unified: '25B6-FE0F',
  keywords: ['play_button', 'blue-square', 'right', 'direction', 'play'],
  sheet: [56, 34],
  shortName: 'arrow_forward'
}, {
  name: 'Black Right-Pointing Double Triangle',
  unified: '23E9',
  keywords: ['fast_forward_button', 'blue-square', 'play', 'speed', 'continue'],
  sheet: [56, 17],
  shortName: 'fast_forward'
}, {
  name: 'Next Track Button',
  unified: '23ED-FE0F',
  keywords: ['next_track_button', 'forward', 'next', 'blue-square'],
  sheet: [56, 21],
  shortName: 'black_right_pointing_double_triangle_with_vertical_bar'
}, {
  name: 'Play or Pause Button',
  unified: '23EF-FE0F',
  keywords: ['play_or_pause_button', 'blue-square', 'play', 'pause'],
  sheet: [56, 23],
  shortName: 'black_right_pointing_triangle_with_double_vertical_bar'
}, {
  name: 'Black Left-Pointing Triangle',
  unified: '25C0-FE0F',
  keywords: ['reverse_button', 'blue-square', 'left', 'direction'],
  sheet: [56, 35],
  shortName: 'arrow_backward'
}, {
  name: 'Black Left-Pointing Double Triangle',
  unified: '23EA',
  keywords: ['fast_reverse_button', 'play', 'blue-square'],
  sheet: [56, 18],
  shortName: 'rewind'
}, {
  name: 'Last Track Button',
  unified: '23EE-FE0F',
  keywords: ['last_track_button', 'backward'],
  sheet: [56, 22],
  shortName: 'black_left_pointing_double_triangle_with_vertical_bar'
}, {
  name: 'Up-Pointing Small Red Triangle',
  unified: '1F53C',
  keywords: ['upwards_button', 'blue-square', 'triangle', 'direction', 'point', 'forward', 'top'],
  sheet: [30, 24],
  shortName: 'arrow_up_small'
}, {
  name: 'Black Up-Pointing Double Triangle',
  unified: '23EB',
  keywords: ['fast_up_button', 'blue-square', 'direction', 'top'],
  sheet: [56, 19],
  shortName: 'arrow_double_up'
}, {
  name: 'Down-Pointing Small Red Triangle',
  unified: '1F53D',
  keywords: ['downwards_button', 'blue-square', 'direction', 'bottom'],
  sheet: [30, 25],
  shortName: 'arrow_down_small'
}, {
  name: 'Black Down-Pointing Double Triangle',
  unified: '23EC',
  keywords: ['fast_down_button', 'blue-square', 'direction', 'bottom'],
  sheet: [56, 20],
  shortName: 'arrow_double_down'
}, {
  name: 'Pause Button',
  unified: '23F8-FE0F',
  keywords: ['pause_button', 'pause', 'blue-square'],
  sheet: [56, 28],
  shortName: 'double_vertical_bar'
}, {
  name: 'Stop Button',
  unified: '23F9-FE0F',
  keywords: ['stop_button', 'blue-square'],
  sheet: [56, 29],
  shortName: 'black_square_for_stop'
}, {
  name: 'Record Button',
  unified: '23FA-FE0F',
  keywords: ['record_button', 'blue-square'],
  sheet: [56, 30],
  shortName: 'black_circle_for_record'
}, {
  name: 'Eject Button',
  unified: '23CF-FE0F',
  keywords: ['eject_button', 'blue-square'],
  sheet: [56, 16],
  shortName: 'eject'
}, {
  name: 'Cinema',
  unified: '1F3A6',
  keywords: ['cinema', 'blue-square', 'record', 'film', 'movie', 'curtain', 'stage', 'theater'],
  sheet: [7, 41],
  shortName: 'cinema'
}, {
  name: 'Low Brightness Symbol',
  unified: '1F505',
  keywords: ['dim_button', 'sun', 'afternoon', 'warm', 'summer'],
  sheet: [29, 30],
  shortName: 'low_brightness'
}, {
  name: 'High Brightness Symbol',
  unified: '1F506',
  keywords: ['bright_button', 'sun', 'light'],
  sheet: [29, 31],
  shortName: 'high_brightness'
}, {
  name: 'Antenna with Bars',
  unified: '1F4F6',
  keywords: ['antenna_bars', 'blue-square', 'reception', 'phone', 'internet', 'connection', 'wifi', 'bluetooth', 'bars'],
  sheet: [29, 16],
  shortName: 'signal_strength'
}, {
  name: 'Vibration Mode',
  unified: '1F4F3',
  keywords: ['vibration_mode', 'orange-square', 'phone'],
  sheet: [29, 13],
  shortName: 'vibration_mode'
}, {
  name: 'Mobile Phone off',
  unified: '1F4F4',
  keywords: ['mobile_phone_off', 'mute', 'orange-square', 'silence', 'quiet'],
  sheet: [29, 14],
  shortName: 'mobile_phone_off'
}, {
  name: 'Female Sign',
  unified: '2640-FE0F',
  keywords: ['female_sign', 'woman', 'women', 'lady', 'girl'],
  sheet: [57, 5],
  hidden: ['apple'],
  shortName: 'female_sign'
}, {
  name: 'Male Sign',
  unified: '2642-FE0F',
  keywords: ['male_sign', 'man', 'boy', 'men'],
  sheet: [57, 6],
  hidden: ['apple'],
  shortName: 'male_sign'
}, {
  name: 'Transgender Symbol',
  unified: '26A7-FE0F',
  keywords: ['transgender symbol', 'lgbtq'],
  sheet: [57, 39],
  shortName: 'transgender_symbol'
}, {
  name: 'Heavy Multiplication X',
  unified: '2716-FE0F',
  keywords: ['multiplication_sign', 'math', 'calculation'],
  sheet: [58, 54],
  shortName: 'heavy_multiplication_x'
}, {
  name: 'Heavy Plus Sign',
  unified: '2795',
  keywords: ['plus_sign', 'math', 'calculation', 'addition', 'more', 'increase'],
  sheet: [59, 11],
  shortName: 'heavy_plus_sign'
}, {
  name: 'Heavy Minus Sign',
  unified: '2796',
  keywords: ['minus_sign', 'math', 'calculation', 'subtract', 'less'],
  sheet: [59, 12],
  shortName: 'heavy_minus_sign'
}, {
  name: 'Heavy Division Sign',
  unified: '2797',
  keywords: ['division_sign', 'divide', 'math', 'calculation'],
  sheet: [59, 13],
  shortName: 'heavy_division_sign'
}, {
  name: 'Heavy Equals Sign',
  unified: '1F7F0',
  keywords: ['heavy equals sign', 'math'],
  sheet: [38, 43],
  hidden: ['facebook'],
  shortName: 'heavy_equals_sign'
}, {
  name: 'Infinity',
  unified: '267E-FE0F',
  keywords: ['infinity', 'forever'],
  sheet: [57, 26],
  shortName: 'infinity'
}, {
  name: 'Double Exclamation Mark',
  unified: '203C-FE0F',
  keywords: ['double_exclamation_mark', 'exclamation', 'surprise'],
  sheet: [56, 1],
  shortName: 'bangbang'
}, {
  name: 'Exclamation Question Mark',
  unified: '2049-FE0F',
  keywords: ['exclamation_question_mark', 'wat', 'punctuation', 'surprise'],
  sheet: [56, 2],
  shortName: 'interrobang'
}, {
  name: 'Black Question Mark Ornament',
  unified: '2753',
  keywords: ['question_mark', 'doubt', 'confused'],
  sheet: [59, 3],
  shortName: 'question'
}, {
  name: 'White Question Mark Ornament',
  unified: '2754',
  keywords: ['white_question_mark', 'doubts', 'gray', 'huh', 'confused'],
  sheet: [59, 4],
  shortName: 'grey_question'
}, {
  name: 'White Exclamation Mark Ornament',
  unified: '2755',
  keywords: ['white_exclamation_mark', 'surprise', 'punctuation', 'gray', 'wow', 'warning'],
  sheet: [59, 5],
  shortName: 'grey_exclamation'
}, {
  name: 'Heavy Exclamation Mark Symbol',
  unified: '2757',
  keywords: ['exclamation_mark', 'heavy_exclamation_mark', 'danger', 'surprise', 'punctuation', 'wow', 'warning'],
  sheet: [59, 6],
  shortNames: ['heavy_exclamation_mark'],
  shortName: 'exclamation'
}, {
  name: 'Wavy Dash',
  unified: '3030-FE0F',
  keywords: ['wavy_dash', 'draw', 'line', 'moustache', 'mustache', 'squiggle', 'scribble'],
  sheet: [59, 26],
  shortName: 'wavy_dash'
}, {
  name: 'Currency Exchange',
  unified: '1F4B1',
  keywords: ['currency_exchange', 'money', 'sales', 'dollar', 'travel'],
  sheet: [28, 8],
  shortName: 'currency_exchange'
}, {
  name: 'Heavy Dollar Sign',
  unified: '1F4B2',
  keywords: ['heavy_dollar_sign', 'money', 'sales', 'payment', 'currency', 'buck'],
  sheet: [28, 9],
  shortName: 'heavy_dollar_sign'
}, {
  name: 'Medical Symbol',
  unified: '2695-FE0F',
  keywords: ['medical_symbol', 'health', 'hospital'],
  sheet: [57, 31],
  hidden: ['apple'],
  shortNames: ['staff_of_aesculapius'],
  shortName: 'medical_symbol'
}, {
  name: 'Black Universal Recycling Symbol',
  unified: '267B-FE0F',
  keywords: ['recycling_symbol', 'arrow', 'environment', 'garbage', 'trash'],
  sheet: [57, 25],
  shortName: 'recycle'
}, {
  name: 'Fleur-De-Lis',
  unified: '269C-FE0F',
  keywords: ['fleur_de_lis', 'decorative', 'scout'],
  sheet: [57, 36],
  shortName: 'fleur_de_lis'
}, {
  name: 'Trident Emblem',
  unified: '1F531',
  keywords: ['trident_emblem', 'weapon', 'spear'],
  sheet: [30, 13],
  shortName: 'trident'
}, {
  name: 'Name Badge',
  unified: '1F4DB',
  keywords: ['name_badge', 'fire', 'forbid'],
  sheet: [28, 50],
  shortName: 'name_badge'
}, {
  name: 'Japanese Symbol for Beginner',
  unified: '1F530',
  keywords: ['japanese_symbol_for_beginner', 'badge', 'shield'],
  sheet: [30, 12],
  shortName: 'beginner'
}, {
  name: 'Heavy Large Circle',
  unified: '2B55',
  keywords: ['hollow_red_circle', 'circle', 'round'],
  sheet: [59, 25],
  shortName: 'o'
}, {
  name: 'White Heavy Check Mark',
  unified: '2705',
  keywords: ['check_mark_button', 'green-square', 'ok', 'agree', 'vote', 'election', 'answer', 'tick'],
  sheet: [58, 24],
  shortName: 'white_check_mark'
}, {
  name: 'Ballot Box with Check',
  unified: '2611-FE0F',
  keywords: ['check_box_with_check', 'ok', 'agree', 'confirm', 'black-square', 'vote', 'election', 'yes', 'tick'],
  sheet: [56, 46],
  shortName: 'ballot_box_with_check'
}, {
  name: 'Heavy Check Mark',
  unified: '2714-FE0F',
  keywords: ['check_mark', 'ok', 'nike', 'answer', 'yes', 'tick'],
  sheet: [58, 53],
  shortName: 'heavy_check_mark'
}, {
  name: 'Cross Mark',
  unified: '274C',
  keywords: ['cross_mark', 'no', 'delete', 'remove', 'cancel', 'red'],
  sheet: [59, 1],
  shortName: 'x'
}, {
  name: 'Negative Squared Cross Mark',
  unified: '274E',
  keywords: ['cross_mark_button', 'x', 'green-square', 'no', 'deny'],
  sheet: [59, 2],
  shortName: 'negative_squared_cross_mark'
}, {
  name: 'Curly Loop',
  unified: '27B0',
  keywords: ['curly_loop', 'scribble', 'draw', 'shape', 'squiggle'],
  sheet: [59, 15],
  shortName: 'curly_loop'
}, {
  name: 'Double Curly Loop',
  unified: '27BF',
  keywords: ['double_curly_loop', 'tape', 'cassette'],
  sheet: [59, 16],
  shortName: 'loop'
}, {
  name: 'Part Alternation Mark',
  unified: '303D-FE0F',
  keywords: ['part_alternation_mark', 'graph', 'presentation', 'stats', 'business', 'economics', 'bad'],
  sheet: [59, 27],
  shortName: 'part_alternation_mark'
}, {
  name: 'Eight Spoked Asterisk',
  unified: '2733-FE0F',
  keywords: ['eight_spoked_asterisk', 'star', 'sparkle', 'green-square'],
  sheet: [58, 58],
  shortName: 'eight_spoked_asterisk'
}, {
  name: 'Eight Pointed Black Star',
  unified: '2734-FE0F',
  keywords: ['eight_pointed_star', 'orange-square', 'shape', 'polygon'],
  sheet: [58, 59],
  shortName: 'eight_pointed_black_star'
}, {
  name: 'Sparkle',
  unified: '2747-FE0F',
  keywords: ['sparkle', 'stars', 'green-square', 'awesome', 'good', 'fireworks'],
  sheet: [59, 0],
  shortName: 'sparkle'
}, {
  name: 'Copyright Sign',
  unified: '00A9-FE0F',
  keywords: ['copyright', 'ip', 'license', 'circle', 'law', 'legal'],
  sheet: [0, 12],
  hidden: ['facebook'],
  shortName: 'copyright'
}, {
  name: 'Registered Sign',
  unified: '00AE-FE0F',
  keywords: ['registered', 'alphabet', 'circle'],
  sheet: [0, 13],
  hidden: ['facebook'],
  shortName: 'registered'
}, {
  name: 'Trade Mark Sign',
  unified: '2122-FE0F',
  keywords: ['trade_mark', 'trademark', 'brand', 'law', 'legal'],
  sheet: [56, 3],
  shortName: 'tm'
}, {
  name: 'Hash Key',
  unified: '0023-FE0F-20E3',
  keywords: ['keycap_', 'symbol', 'blue-square', 'twitter'],
  sheet: [0, 0],
  hidden: ['facebook'],
  shortName: 'hash'
}, {
  name: 'Keycap: *',
  unified: '002A-FE0F-20E3',
  keywords: ['keycap_', 'star', 'keycap'],
  sheet: [0, 1],
  hidden: ['facebook'],
  shortName: 'keycap_star'
}, {
  name: 'Keycap 0',
  unified: '0030-FE0F-20E3',
  keywords: ['keycap_0', '0', 'numbers', 'blue-square', 'null'],
  sheet: [0, 2],
  hidden: ['facebook'],
  shortName: 'zero'
}, {
  name: 'Keycap 1',
  unified: '0031-FE0F-20E3',
  keywords: ['keycap_1', 'blue-square', 'numbers', '1'],
  sheet: [0, 3],
  hidden: ['facebook'],
  shortName: 'one'
}, {
  name: 'Keycap 2',
  unified: '0032-FE0F-20E3',
  keywords: ['keycap_2', 'numbers', '2', 'prime', 'blue-square'],
  sheet: [0, 4],
  hidden: ['facebook'],
  shortName: 'two'
}, {
  name: 'Keycap 3',
  unified: '0033-FE0F-20E3',
  keywords: ['keycap_3', '3', 'numbers', 'prime', 'blue-square'],
  sheet: [0, 5],
  hidden: ['facebook'],
  shortName: 'three'
}, {
  name: 'Keycap 4',
  unified: '0034-FE0F-20E3',
  keywords: ['keycap_4', '4', 'numbers', 'blue-square'],
  sheet: [0, 6],
  hidden: ['facebook'],
  shortName: 'four'
}, {
  name: 'Keycap 5',
  unified: '0035-FE0F-20E3',
  keywords: ['keycap_5', '5', 'numbers', 'blue-square', 'prime'],
  sheet: [0, 7],
  hidden: ['facebook'],
  shortName: 'five'
}, {
  name: 'Keycap 6',
  unified: '0036-FE0F-20E3',
  keywords: ['keycap_6', '6', 'numbers', 'blue-square'],
  sheet: [0, 8],
  hidden: ['facebook'],
  shortName: 'six'
}, {
  name: 'Keycap 7',
  unified: '0037-FE0F-20E3',
  keywords: ['keycap_7', '7', 'numbers', 'blue-square', 'prime'],
  sheet: [0, 9],
  hidden: ['facebook'],
  shortName: 'seven'
}, {
  name: 'Keycap 8',
  unified: '0038-FE0F-20E3',
  keywords: ['keycap_8', '8', 'blue-square', 'numbers'],
  sheet: [0, 10],
  hidden: ['facebook'],
  shortName: 'eight'
}, {
  name: 'Keycap 9',
  unified: '0039-FE0F-20E3',
  keywords: ['keycap_9', 'blue-square', 'numbers', '9'],
  sheet: [0, 11],
  hidden: ['facebook'],
  shortName: 'nine'
}, {
  name: 'Keycap Ten',
  unified: '1F51F',
  keywords: ['keycap_10', 'numbers', '10', 'blue-square'],
  sheet: [29, 56],
  shortName: 'keycap_ten'
}, {
  name: 'Input Symbol for Latin Capital Letters',
  unified: '1F520',
  keywords: ['input_latin_uppercase', 'alphabet', 'words', 'blue-square'],
  sheet: [29, 57],
  shortName: 'capital_abcd'
}, {
  name: 'Input Symbol for Latin Small Letters',
  unified: '1F521',
  keywords: ['input_latin_lowercase', 'blue-square', 'alphabet'],
  sheet: [29, 58],
  shortName: 'abcd'
}, {
  name: 'Input Symbol for Numbers',
  unified: '1F522',
  keywords: ['input_numbers', 'numbers', 'blue-square', '1234', '1', '2', '3', '4'],
  sheet: [29, 59],
  shortName: '1234'
}, {
  name: 'Input Symbol for Symbols',
  unified: '1F523',
  keywords: ['input_symbols', 'blue-square', 'music', 'note', 'ampersand', 'percent', 'glyphs', 'characters'],
  sheet: [29, 60],
  shortName: 'symbols'
}, {
  name: 'Input Symbol for Latin Letters',
  unified: '1F524',
  keywords: ['input_latin_letters', 'blue-square', 'alphabet'],
  sheet: [30, 0],
  shortName: 'abc'
}, {
  name: 'Negative Squared Latin Capital Letter a',
  unified: '1F170-FE0F',
  keywords: ['a_button', 'red-square', 'alphabet', 'letter'],
  sheet: [0, 16],
  shortName: 'a'
}, {
  name: 'Negative Squared Ab',
  unified: '1F18E',
  keywords: ['ab_button', 'red-square', 'alphabet'],
  sheet: [0, 20],
  shortName: 'ab'
}, {
  name: 'Negative Squared Latin Capital Letter B',
  unified: '1F171-FE0F',
  keywords: ['b_button', 'red-square', 'alphabet', 'letter'],
  sheet: [0, 17],
  shortName: 'b'
}, {
  name: 'Squared Cl',
  unified: '1F191',
  keywords: ['cl_button', 'alphabet', 'words', 'red-square'],
  sheet: [0, 21],
  shortName: 'cl'
}, {
  name: 'Squared Cool',
  unified: '1F192',
  keywords: ['cool_button', 'words', 'blue-square'],
  sheet: [0, 22],
  shortName: 'cool'
}, {
  name: 'Squared Free',
  unified: '1F193',
  keywords: ['free_button', 'blue-square', 'words'],
  sheet: [0, 23],
  shortName: 'free'
}, {
  name: 'Information Source',
  unified: '2139-FE0F',
  keywords: ['information', 'blue-square', 'alphabet', 'letter'],
  sheet: [56, 4],
  shortName: 'information_source'
}, {
  name: 'Squared Id',
  unified: '1F194',
  keywords: ['id_button', 'purple-square', 'words'],
  sheet: [0, 24],
  shortName: 'id'
}, {
  name: 'Circled Latin Capital Letter M',
  unified: '24C2-FE0F',
  keywords: ['circled_m', 'alphabet', 'blue-circle', 'letter'],
  sheet: [56, 31],
  shortName: 'm'
}, {
  name: 'Squared New',
  unified: '1F195',
  keywords: ['new_button', 'blue-square', 'words', 'start'],
  sheet: [0, 25],
  shortName: 'new'
}, {
  name: 'Squared Ng',
  unified: '1F196',
  keywords: ['ng_button', 'blue-square', 'words', 'shape', 'icon'],
  sheet: [0, 26],
  shortName: 'ng'
}, {
  name: 'Negative Squared Latin Capital Letter O',
  unified: '1F17E-FE0F',
  keywords: ['o_button', 'alphabet', 'red-square', 'letter'],
  sheet: [0, 18],
  shortName: 'o2'
}, {
  name: 'Squared Ok',
  unified: '1F197',
  keywords: ['ok_button', 'good', 'agree', 'yes', 'blue-square'],
  sheet: [0, 27],
  shortName: 'ok'
}, {
  name: 'Negative Squared Latin Capital Letter P',
  unified: '1F17F-FE0F',
  keywords: ['p_button', 'cars', 'blue-square', 'alphabet', 'letter'],
  sheet: [0, 19],
  shortName: 'parking'
}, {
  name: 'Squared Sos',
  unified: '1F198',
  keywords: ['sos_button', 'help', 'red-square', 'words', 'emergency', '911'],
  sheet: [0, 28],
  shortName: 'sos'
}, {
  name: 'Squared Up with Exclamation Mark',
  unified: '1F199',
  keywords: ['up_button', 'blue-square', 'above', 'high'],
  sheet: [0, 29],
  shortName: 'up'
}, {
  name: 'Squared Vs',
  unified: '1F19A',
  keywords: ['vs_button', 'words', 'orange-square'],
  sheet: [0, 30],
  shortName: 'vs'
}, {
  name: 'Squared Katakana Koko',
  unified: '1F201',
  keywords: ['japanese_here_button', 'blue-square', 'here', 'katakana', 'japanese', 'destination'],
  sheet: [4, 45],
  shortName: 'koko'
}, {
  name: 'Squared Katakana Sa',
  unified: '1F202-FE0F',
  keywords: ['japanese_service_charge_button', 'japanese', 'blue-square', 'katakana'],
  sheet: [4, 46],
  shortName: 'sa'
}, {
  name: 'Squared Cjk Unified Ideograph-6708',
  unified: '1F237-FE0F',
  keywords: ['japanese_monthly_amount_button', 'chinese', 'month', 'moon', 'japanese', 'orange-square', 'kanji'],
  sheet: [4, 54],
  shortName: 'u6708'
}, {
  name: 'Squared Cjk Unified Ideograph-6709',
  unified: '1F236',
  keywords: ['japanese_not_free_of_charge_button', 'orange-square', 'chinese', 'have', 'kanji'],
  sheet: [4, 53],
  shortName: 'u6709'
}, {
  name: 'Squared Cjk Unified Ideograph-6307',
  unified: '1F22F',
  keywords: ['japanese_reserved_button', 'chinese', 'point', 'green-square', 'kanji'],
  sheet: [4, 48],
  shortName: 'u6307'
}, {
  name: 'Circled Ideograph Advantage',
  unified: '1F250',
  keywords: ['japanese_bargain_button', 'chinese', 'kanji', 'obtain', 'get', 'circle'],
  sheet: [4, 58],
  shortName: 'ideograph_advantage'
}, {
  name: 'Squared Cjk Unified Ideograph-5272',
  unified: '1F239',
  keywords: ['japanese_discount_button', 'cut', 'divide', 'chinese', 'kanji', 'pink-square'],
  sheet: [4, 56],
  shortName: 'u5272'
}, {
  name: 'Squared Cjk Unified Ideograph-7121',
  unified: '1F21A',
  keywords: ['japanese_free_of_charge_button', 'nothing', 'chinese', 'kanji', 'japanese', 'orange-square'],
  sheet: [4, 47],
  shortName: 'u7121'
}, {
  name: 'Squared Cjk Unified Ideograph-7981',
  unified: '1F232',
  keywords: ['japanese_prohibited_button', 'kanji', 'japanese', 'chinese', 'forbidden', 'limit', 'restricted', 'red-square'],
  sheet: [4, 49],
  shortName: 'u7981'
}, {
  name: 'Circled Ideograph Accept',
  unified: '1F251',
  keywords: ['japanese_acceptable_button', 'ok', 'good', 'chinese', 'kanji', 'agree', 'yes', 'orange-circle'],
  sheet: [4, 59],
  shortName: 'accept'
}, {
  name: 'Squared Cjk Unified Ideograph-7533',
  unified: '1F238',
  keywords: ['japanese_application_button', 'chinese', 'japanese', 'kanji', 'orange-square'],
  sheet: [4, 55],
  shortName: 'u7533'
}, {
  name: 'Squared Cjk Unified Ideograph-5408',
  unified: '1F234',
  keywords: ['japanese_passing_grade_button', 'japanese', 'chinese', 'join', 'kanji', 'red-square'],
  sheet: [4, 51],
  shortName: 'u5408'
}, {
  name: 'Squared Cjk Unified Ideograph-7a7a',
  unified: '1F233',
  keywords: ['japanese_vacancy_button', 'kanji', 'japanese', 'chinese', 'empty', 'sky', 'blue-square'],
  sheet: [4, 50],
  shortName: 'u7a7a'
}, {
  name: 'Circled Ideograph Congratulation',
  unified: '3297-FE0F',
  keywords: ['japanese_congratulations_button', 'chinese', 'kanji', 'japanese', 'red-circle'],
  sheet: [59, 28],
  shortName: 'congratulations'
}, {
  name: 'Circled Ideograph Secret',
  unified: '3299-FE0F',
  keywords: ['japanese_secret_button', 'privacy', 'chinese', 'sshh', 'kanji', 'red-circle'],
  sheet: [59, 29],
  shortName: 'secret'
}, {
  name: 'Squared Cjk Unified Ideograph-55b6',
  unified: '1F23A',
  keywords: ['japanese_open_for_business_button', 'japanese', 'opening hours', 'orange-square'],
  sheet: [4, 57],
  shortName: 'u55b6'
}, {
  name: 'Squared Cjk Unified Ideograph-6e80',
  unified: '1F235',
  keywords: ['japanese_no_vacancy_button', 'full', 'chinese', 'japanese', 'red-square', 'kanji'],
  sheet: [4, 52],
  shortName: 'u6e80'
}, {
  name: 'Large Red Circle',
  unified: '1F534',
  keywords: ['red_circle', 'shape', 'error', 'danger'],
  sheet: [30, 16],
  shortName: 'red_circle'
}, {
  name: 'Large Orange Circle',
  unified: '1F7E0',
  keywords: ['orange_circle', 'round'],
  sheet: [38, 31],
  shortName: 'large_orange_circle'
}, {
  name: 'Large Yellow Circle',
  unified: '1F7E1',
  keywords: ['yellow_circle', 'round'],
  sheet: [38, 32],
  shortName: 'large_yellow_circle'
}, {
  name: 'Large Green Circle',
  unified: '1F7E2',
  keywords: ['green_circle', 'round'],
  sheet: [38, 33],
  shortName: 'large_green_circle'
}, {
  name: 'Large Blue Circle',
  unified: '1F535',
  keywords: ['blue_circle', 'shape', 'icon', 'button'],
  sheet: [30, 17],
  shortName: 'large_blue_circle'
}, {
  name: 'Large Purple Circle',
  unified: '1F7E3',
  keywords: ['purple_circle', 'round'],
  sheet: [38, 34],
  shortName: 'large_purple_circle'
}, {
  name: 'Large Brown Circle',
  unified: '1F7E4',
  keywords: ['brown_circle', 'round'],
  sheet: [38, 35],
  shortName: 'large_brown_circle'
}, {
  name: 'Medium Black Circle',
  unified: '26AB',
  keywords: ['black_circle', 'shape', 'button', 'round'],
  sheet: [57, 41],
  shortName: 'black_circle'
}, {
  name: 'Medium White Circle',
  unified: '26AA',
  keywords: ['white_circle', 'shape', 'round'],
  sheet: [57, 40],
  shortName: 'white_circle'
}, {
  name: 'Large Red Square',
  unified: '1F7E5',
  keywords: ['red_square'],
  sheet: [38, 36],
  shortName: 'large_red_square'
}, {
  name: 'Large Orange Square',
  unified: '1F7E7',
  keywords: ['orange_square'],
  sheet: [38, 38],
  shortName: 'large_orange_square'
}, {
  name: 'Large Yellow Square',
  unified: '1F7E8',
  keywords: ['yellow_square'],
  sheet: [38, 39],
  shortName: 'large_yellow_square'
}, {
  name: 'Large Green Square',
  unified: '1F7E9',
  keywords: ['green_square'],
  sheet: [38, 40],
  shortName: 'large_green_square'
}, {
  name: 'Large Blue Square',
  unified: '1F7E6',
  keywords: ['blue_square'],
  sheet: [38, 37],
  shortName: 'large_blue_square'
}, {
  name: 'Large Purple Square',
  unified: '1F7EA',
  keywords: ['purple_square'],
  sheet: [38, 41],
  shortName: 'large_purple_square'
}, {
  name: 'Large Brown Square',
  unified: '1F7EB',
  keywords: ['brown_square'],
  sheet: [38, 42],
  shortName: 'large_brown_square'
}, {
  name: 'Black Large Square',
  unified: '2B1B',
  keywords: ['black_large_square', 'shape', 'icon', 'button'],
  sheet: [59, 22],
  shortName: 'black_large_square'
}, {
  name: 'White Large Square',
  unified: '2B1C',
  keywords: ['white_large_square', 'shape', 'icon', 'stone', 'button'],
  sheet: [59, 23],
  shortName: 'white_large_square'
}, {
  name: 'Black Medium Square',
  unified: '25FC-FE0F',
  keywords: ['black_medium_square', 'shape', 'button', 'icon'],
  sheet: [56, 37],
  shortName: 'black_medium_square'
}, {
  name: 'White Medium Square',
  unified: '25FB-FE0F',
  keywords: ['white_medium_square', 'shape', 'stone', 'icon'],
  sheet: [56, 36],
  shortName: 'white_medium_square'
}, {
  name: 'Black Medium Small Square',
  unified: '25FE',
  keywords: ['black_medium_small_square', 'icon', 'shape', 'button'],
  sheet: [56, 39],
  shortName: 'black_medium_small_square'
}, {
  name: 'White Medium Small Square',
  unified: '25FD',
  keywords: ['white_medium_small_square', 'shape', 'stone', 'icon', 'button'],
  sheet: [56, 38],
  shortName: 'white_medium_small_square'
}, {
  name: 'Black Small Square',
  unified: '25AA-FE0F',
  keywords: ['black_small_square', 'shape', 'icon'],
  sheet: [56, 32],
  shortName: 'black_small_square'
}, {
  name: 'White Small Square',
  unified: '25AB-FE0F',
  keywords: ['white_small_square', 'shape', 'icon'],
  sheet: [56, 33],
  shortName: 'white_small_square'
}, {
  name: 'Large Orange Diamond',
  unified: '1F536',
  keywords: ['large_orange_diamond', 'shape', 'jewel', 'gem'],
  sheet: [30, 18],
  shortName: 'large_orange_diamond'
}, {
  name: 'Large Blue Diamond',
  unified: '1F537',
  keywords: ['large_blue_diamond', 'shape', 'jewel', 'gem'],
  sheet: [30, 19],
  shortName: 'large_blue_diamond'
}, {
  name: 'Small Orange Diamond',
  unified: '1F538',
  keywords: ['small_orange_diamond', 'shape', 'jewel', 'gem'],
  sheet: [30, 20],
  shortName: 'small_orange_diamond'
}, {
  name: 'Small Blue Diamond',
  unified: '1F539',
  keywords: ['small_blue_diamond', 'shape', 'jewel', 'gem'],
  sheet: [30, 21],
  shortName: 'small_blue_diamond'
}, {
  name: 'Up-Pointing Red Triangle',
  unified: '1F53A',
  keywords: ['red_triangle_pointed_up', 'shape', 'direction', 'up', 'top'],
  sheet: [30, 22],
  shortName: 'small_red_triangle'
}, {
  name: 'Down-Pointing Red Triangle',
  unified: '1F53B',
  keywords: ['red_triangle_pointed_down', 'shape', 'direction', 'bottom'],
  sheet: [30, 23],
  shortName: 'small_red_triangle_down'
}, {
  name: 'Diamond Shape with a Dot Inside',
  unified: '1F4A0',
  keywords: ['diamond_with_a_dot', 'jewel', 'blue', 'gem', 'crystal', 'fancy'],
  sheet: [27, 47],
  shortName: 'diamond_shape_with_a_dot_inside'
}, {
  name: 'Radio Button',
  unified: '1F518',
  keywords: ['radio_button', 'input', 'old', 'music', 'circle'],
  sheet: [29, 49],
  shortName: 'radio_button'
}, {
  name: 'White Square Button',
  unified: '1F533',
  keywords: ['white_square_button', 'shape', 'input'],
  sheet: [30, 15],
  shortName: 'white_square_button'
}, {
  name: 'Black Square Button',
  unified: '1F532',
  keywords: ['black_square_button', 'shape', 'input', 'frame'],
  sheet: [30, 14],
  shortName: 'black_square_button'
}, {
  name: 'Chequered Flag',
  unified: '1F3C1',
  keywords: ['chequered_flag', 'contest', 'finishline', 'race', 'gokart'],
  sheet: [8, 7],
  shortName: 'checkered_flag'
}, {
  name: 'Triangular Flag on Post',
  unified: '1F6A9',
  keywords: ['triangular_flag', 'mark', 'milestone', 'place'],
  sheet: [36, 29],
  shortName: 'triangular_flag_on_post'
}, {
  name: 'Crossed Flags',
  unified: '1F38C',
  keywords: ['crossed_flags', 'japanese', 'nation', 'country', 'border'],
  sheet: [7, 20],
  shortName: 'crossed_flags'
}, {
  name: 'Waving Black Flag',
  unified: '1F3F4',
  keywords: ['black_flag', 'pirate'],
  sheet: [10, 35],
  shortName: 'waving_black_flag'
}, {
  name: 'White Flag',
  unified: '1F3F3-FE0F',
  keywords: ['white_flag', 'losing', 'loser', 'lost', 'surrender', 'give up', 'fail'],
  sheet: [10, 30],
  shortName: 'waving_white_flag'
}, {
  name: 'Rainbow Flag',
  unified: '1F3F3-FE0F-200D-1F308',
  keywords: ['rainbow_flag', 'flag', 'rainbow', 'pride', 'gay', 'lgbt', 'glbt', 'queer', 'homosexual', 'lesbian', 'bisexual', 'transgender'],
  sheet: [10, 28],
  shortName: 'rainbow-flag'
}, {
  name: 'Transgender Flag',
  unified: '1F3F3-FE0F-200D-26A7-FE0F',
  keywords: ['transgender flag', 'lgbtq'],
  sheet: [10, 29],
  hidden: ['facebook'],
  shortName: 'transgender_flag'
}, {
  name: 'Pirate Flag',
  unified: '1F3F4-200D-2620-FE0F',
  keywords: ['pirate_flag', 'skull', 'crossbones', 'flag', 'banner'],
  sheet: [10, 31],
  shortName: 'pirate_flag'
}, {
  name: 'Ascension Island Flag',
  unified: '1F1E6-1F1E8',
  keywords: ['flag_ascension_island'],
  sheet: [0, 31],
  shortName: 'flag-ac'
}, {
  name: 'Andorra Flag',
  unified: '1F1E6-1F1E9',
  keywords: ['flag_andorra', 'ad', 'flag', 'nation', 'country', 'banner', 'andorra'],
  sheet: [0, 32],
  shortName: 'flag-ad'
}, {
  name: 'United Arab Emirates Flag',
  unified: '1F1E6-1F1EA',
  keywords: ['flag_united_arab_emirates', 'united', 'arab', 'emirates', 'flag', 'nation', 'country', 'banner', 'united_arab_emirates'],
  sheet: [0, 33],
  shortName: 'flag-ae'
}, {
  name: 'Afghanistan Flag',
  unified: '1F1E6-1F1EB',
  keywords: ['flag_afghanistan', 'af', 'flag', 'nation', 'country', 'banner', 'afghanistan'],
  sheet: [0, 34],
  shortName: 'flag-af'
}, {
  name: 'Antigua & Barbuda Flag',
  unified: '1F1E6-1F1EC',
  keywords: ['flag_antigua_barbuda', 'antigua', 'barbuda', 'flag', 'nation', 'country', 'banner', 'antigua_barbuda'],
  sheet: [0, 35],
  shortName: 'flag-ag'
}, {
  name: 'Anguilla Flag',
  unified: '1F1E6-1F1EE',
  keywords: ['flag_anguilla', 'ai', 'flag', 'nation', 'country', 'banner', 'anguilla'],
  sheet: [0, 36],
  shortName: 'flag-ai'
}, {
  name: 'Albania Flag',
  unified: '1F1E6-1F1F1',
  keywords: ['flag_albania', 'al', 'flag', 'nation', 'country', 'banner', 'albania'],
  sheet: [0, 37],
  shortName: 'flag-al'
}, {
  name: 'Armenia Flag',
  unified: '1F1E6-1F1F2',
  keywords: ['flag_armenia', 'am', 'flag', 'nation', 'country', 'banner', 'armenia'],
  sheet: [0, 38],
  shortName: 'flag-am'
}, {
  name: 'Angola Flag',
  unified: '1F1E6-1F1F4',
  keywords: ['flag_angola', 'ao', 'flag', 'nation', 'country', 'banner', 'angola'],
  sheet: [0, 39],
  shortName: 'flag-ao'
}, {
  name: 'Antarctica Flag',
  unified: '1F1E6-1F1F6',
  keywords: ['flag_antarctica', 'aq', 'flag', 'nation', 'country', 'banner', 'antarctica'],
  sheet: [0, 40],
  shortName: 'flag-aq'
}, {
  name: 'Argentina Flag',
  unified: '1F1E6-1F1F7',
  keywords: ['flag_argentina', 'ar', 'flag', 'nation', 'country', 'banner', 'argentina'],
  sheet: [0, 41],
  shortName: 'flag-ar'
}, {
  name: 'American Samoa Flag',
  unified: '1F1E6-1F1F8',
  keywords: ['flag_american_samoa', 'american', 'ws', 'flag', 'nation', 'country', 'banner', 'american_samoa'],
  sheet: [0, 42],
  shortName: 'flag-as'
}, {
  name: 'Austria Flag',
  unified: '1F1E6-1F1F9',
  keywords: ['flag_austria', 'at', 'flag', 'nation', 'country', 'banner', 'austria'],
  sheet: [0, 43],
  shortName: 'flag-at'
}, {
  name: 'Australia Flag',
  unified: '1F1E6-1F1FA',
  keywords: ['flag_australia', 'au', 'flag', 'nation', 'country', 'banner', 'australia'],
  sheet: [0, 44],
  shortName: 'flag-au'
}, {
  name: 'Aruba Flag',
  unified: '1F1E6-1F1FC',
  keywords: ['flag_aruba', 'aw', 'flag', 'nation', 'country', 'banner', 'aruba'],
  sheet: [0, 45],
  shortName: 'flag-aw'
}, {
  name: 'Åland Islands Flag',
  unified: '1F1E6-1F1FD',
  keywords: ['flag_aland_islands', 'Åland', 'islands', 'flag', 'nation', 'country', 'banner', 'aland_islands'],
  sheet: [0, 46],
  shortName: 'flag-ax'
}, {
  name: 'Azerbaijan Flag',
  unified: '1F1E6-1F1FF',
  keywords: ['flag_azerbaijan', 'az', 'flag', 'nation', 'country', 'banner', 'azerbaijan'],
  sheet: [0, 47],
  shortName: 'flag-az'
}, {
  name: 'Bosnia & Herzegovina Flag',
  unified: '1F1E7-1F1E6',
  keywords: ['flag_bosnia_herzegovina', 'bosnia', 'herzegovina', 'flag', 'nation', 'country', 'banner', 'bosnia_herzegovina'],
  sheet: [0, 48],
  shortName: 'flag-ba'
}, {
  name: 'Barbados Flag',
  unified: '1F1E7-1F1E7',
  keywords: ['flag_barbados', 'bb', 'flag', 'nation', 'country', 'banner', 'barbados'],
  sheet: [0, 49],
  shortName: 'flag-bb'
}, {
  name: 'Bangladesh Flag',
  unified: '1F1E7-1F1E9',
  keywords: ['flag_bangladesh', 'bd', 'flag', 'nation', 'country', 'banner', 'bangladesh'],
  sheet: [0, 50],
  shortName: 'flag-bd'
}, {
  name: 'Belgium Flag',
  unified: '1F1E7-1F1EA',
  keywords: ['flag_belgium', 'be', 'flag', 'nation', 'country', 'banner', 'belgium'],
  sheet: [0, 51],
  shortName: 'flag-be'
}, {
  name: 'Burkina Faso Flag',
  unified: '1F1E7-1F1EB',
  keywords: ['flag_burkina_faso', 'burkina', 'faso', 'flag', 'nation', 'country', 'banner', 'burkina_faso'],
  sheet: [0, 52],
  shortName: 'flag-bf'
}, {
  name: 'Bulgaria Flag',
  unified: '1F1E7-1F1EC',
  keywords: ['flag_bulgaria', 'bg', 'flag', 'nation', 'country', 'banner', 'bulgaria'],
  sheet: [0, 53],
  shortName: 'flag-bg'
}, {
  name: 'Bahrain Flag',
  unified: '1F1E7-1F1ED',
  keywords: ['flag_bahrain', 'bh', 'flag', 'nation', 'country', 'banner', 'bahrain'],
  sheet: [0, 54],
  shortName: 'flag-bh'
}, {
  name: 'Burundi Flag',
  unified: '1F1E7-1F1EE',
  keywords: ['flag_burundi', 'bi', 'flag', 'nation', 'country', 'banner', 'burundi'],
  sheet: [0, 55],
  shortName: 'flag-bi'
}, {
  name: 'Benin Flag',
  unified: '1F1E7-1F1EF',
  keywords: ['flag_benin', 'bj', 'flag', 'nation', 'country', 'banner', 'benin'],
  sheet: [0, 56],
  shortName: 'flag-bj'
}, {
  name: 'St. Barthélemy Flag',
  unified: '1F1E7-1F1F1',
  keywords: ['flag_st_barthelemy', 'saint', 'barthélemy', 'flag', 'nation', 'country', 'banner', 'st_barthelemy'],
  sheet: [0, 57],
  shortName: 'flag-bl'
}, {
  name: 'Bermuda Flag',
  unified: '1F1E7-1F1F2',
  keywords: ['flag_bermuda', 'bm', 'flag', 'nation', 'country', 'banner', 'bermuda'],
  sheet: [0, 58],
  shortName: 'flag-bm'
}, {
  name: 'Brunei Flag',
  unified: '1F1E7-1F1F3',
  keywords: ['flag_brunei', 'bn', 'darussalam', 'flag', 'nation', 'country', 'banner', 'brunei'],
  sheet: [0, 59],
  shortName: 'flag-bn'
}, {
  name: 'Bolivia Flag',
  unified: '1F1E7-1F1F4',
  keywords: ['flag_bolivia', 'bo', 'flag', 'nation', 'country', 'banner', 'bolivia'],
  sheet: [0, 60],
  shortName: 'flag-bo'
}, {
  name: 'Caribbean Netherlands Flag',
  unified: '1F1E7-1F1F6',
  keywords: ['flag_caribbean_netherlands', 'bonaire', 'flag', 'nation', 'country', 'banner', 'caribbean_netherlands'],
  sheet: [1, 0],
  shortName: 'flag-bq'
}, {
  name: 'Brazil Flag',
  unified: '1F1E7-1F1F7',
  keywords: ['flag_brazil', 'br', 'flag', 'nation', 'country', 'banner', 'brazil'],
  sheet: [1, 1],
  shortName: 'flag-br'
}, {
  name: 'Bahamas Flag',
  unified: '1F1E7-1F1F8',
  keywords: ['flag_bahamas', 'bs', 'flag', 'nation', 'country', 'banner', 'bahamas'],
  sheet: [1, 2],
  shortName: 'flag-bs'
}, {
  name: 'Bhutan Flag',
  unified: '1F1E7-1F1F9',
  keywords: ['flag_bhutan', 'bt', 'flag', 'nation', 'country', 'banner', 'bhutan'],
  sheet: [1, 3],
  shortName: 'flag-bt'
}, {
  name: 'Bouvet Island Flag',
  unified: '1F1E7-1F1FB',
  keywords: ['flag_bouvet_island', 'norway'],
  sheet: [1, 4],
  shortName: 'flag-bv'
}, {
  name: 'Botswana Flag',
  unified: '1F1E7-1F1FC',
  keywords: ['flag_botswana', 'bw', 'flag', 'nation', 'country', 'banner', 'botswana'],
  sheet: [1, 5],
  shortName: 'flag-bw'
}, {
  name: 'Belarus Flag',
  unified: '1F1E7-1F1FE',
  keywords: ['flag_belarus', 'by', 'flag', 'nation', 'country', 'banner', 'belarus'],
  sheet: [1, 6],
  shortName: 'flag-by'
}, {
  name: 'Belize Flag',
  unified: '1F1E7-1F1FF',
  keywords: ['flag_belize', 'bz', 'flag', 'nation', 'country', 'banner', 'belize'],
  sheet: [1, 7],
  shortName: 'flag-bz'
}, {
  name: 'Canada Flag',
  unified: '1F1E8-1F1E6',
  keywords: ['flag_canada', 'ca', 'flag', 'nation', 'country', 'banner', 'canada'],
  sheet: [1, 8],
  shortName: 'flag-ca'
}, {
  name: 'Cocos (keeling) Islands Flag',
  unified: '1F1E8-1F1E8',
  keywords: ['flag_cocos_islands', 'cocos', 'keeling', 'islands', 'flag', 'nation', 'country', 'banner', 'cocos_islands'],
  sheet: [1, 9],
  shortName: 'flag-cc'
}, {
  name: 'Congo - Kinshasa Flag',
  unified: '1F1E8-1F1E9',
  keywords: ['flag_congo_kinshasa', 'congo', 'democratic', 'republic', 'flag', 'nation', 'country', 'banner', 'congo_kinshasa'],
  sheet: [1, 10],
  shortName: 'flag-cd'
}, {
  name: 'Central African Republic Flag',
  unified: '1F1E8-1F1EB',
  keywords: ['flag_central_african_republic', 'central', 'african', 'republic', 'flag', 'nation', 'country', 'banner', 'central_african_republic'],
  sheet: [1, 11],
  shortName: 'flag-cf'
}, {
  name: 'Congo - Brazzaville Flag',
  unified: '1F1E8-1F1EC',
  keywords: ['flag_congo_brazzaville', 'congo', 'flag', 'nation', 'country', 'banner', 'congo_brazzaville'],
  sheet: [1, 12],
  shortName: 'flag-cg'
}, {
  name: 'Switzerland Flag',
  unified: '1F1E8-1F1ED',
  keywords: ['flag_switzerland', 'ch', 'flag', 'nation', 'country', 'banner', 'switzerland'],
  sheet: [1, 13],
  shortName: 'flag-ch'
}, {
  name: 'Côte D’ivoire Flag',
  unified: '1F1E8-1F1EE',
  keywords: ['flag_cote_d_ivoire', 'ivory', 'coast', 'flag', 'nation', 'country', 'banner', 'cote_d_ivoire'],
  sheet: [1, 14],
  shortName: 'flag-ci'
}, {
  name: 'Cook Islands Flag',
  unified: '1F1E8-1F1F0',
  keywords: ['flag_cook_islands', 'cook', 'islands', 'flag', 'nation', 'country', 'banner', 'cook_islands'],
  sheet: [1, 15],
  shortName: 'flag-ck'
}, {
  name: 'Chile Flag',
  unified: '1F1E8-1F1F1',
  keywords: ['flag_chile', 'flag', 'nation', 'country', 'banner', 'chile'],
  sheet: [1, 16],
  shortName: 'flag-cl'
}, {
  name: 'Cameroon Flag',
  unified: '1F1E8-1F1F2',
  keywords: ['flag_cameroon', 'cm', 'flag', 'nation', 'country', 'banner', 'cameroon'],
  sheet: [1, 17],
  shortName: 'flag-cm'
}, {
  name: 'China Flag',
  unified: '1F1E8-1F1F3',
  keywords: ['flag_china', 'china', 'chinese', 'prc', 'flag', 'country', 'nation', 'banner', 'china'],
  sheet: [1, 18],
  shortNames: ['flag-cn'],
  shortName: 'cn'
}, {
  name: 'Colombia Flag',
  unified: '1F1E8-1F1F4',
  keywords: ['flag_colombia', 'co', 'flag', 'nation', 'country', 'banner', 'colombia'],
  sheet: [1, 19],
  shortName: 'flag-co'
}, {
  name: 'Clipperton Island Flag',
  unified: '1F1E8-1F1F5',
  keywords: ['flag_clipperton_island'],
  sheet: [1, 20],
  shortName: 'flag-cp'
}, {
  name: 'Costa Rica Flag',
  unified: '1F1E8-1F1F7',
  keywords: ['flag_costa_rica', 'costa', 'rica', 'flag', 'nation', 'country', 'banner', 'costa_rica'],
  sheet: [1, 21],
  shortName: 'flag-cr'
}, {
  name: 'Cuba Flag',
  unified: '1F1E8-1F1FA',
  keywords: ['flag_cuba', 'cu', 'flag', 'nation', 'country', 'banner', 'cuba'],
  sheet: [1, 22],
  shortName: 'flag-cu'
}, {
  name: 'Cape Verde Flag',
  unified: '1F1E8-1F1FB',
  keywords: ['flag_cape_verde', 'cabo', 'verde', 'flag', 'nation', 'country', 'banner', 'cape_verde'],
  sheet: [1, 23],
  shortName: 'flag-cv'
}, {
  name: 'Curaçao Flag',
  unified: '1F1E8-1F1FC',
  keywords: ['flag_curacao', 'curaçao', 'flag', 'nation', 'country', 'banner', 'curacao'],
  sheet: [1, 24],
  shortName: 'flag-cw'
}, {
  name: 'Christmas Island Flag',
  unified: '1F1E8-1F1FD',
  keywords: ['flag_christmas_island', 'christmas', 'island', 'flag', 'nation', 'country', 'banner', 'christmas_island'],
  sheet: [1, 25],
  shortName: 'flag-cx'
}, {
  name: 'Cyprus Flag',
  unified: '1F1E8-1F1FE',
  keywords: ['flag_cyprus', 'cy', 'flag', 'nation', 'country', 'banner', 'cyprus'],
  sheet: [1, 26],
  shortName: 'flag-cy'
}, {
  name: 'Czechia Flag',
  unified: '1F1E8-1F1FF',
  keywords: ['flag_czechia', 'cz', 'flag', 'nation', 'country', 'banner', 'czechia'],
  sheet: [1, 27],
  shortName: 'flag-cz'
}, {
  name: 'Germany Flag',
  unified: '1F1E9-1F1EA',
  keywords: ['flag_germany', 'german', 'nation', 'flag', 'country', 'banner', 'germany'],
  sheet: [1, 28],
  shortNames: ['flag-de'],
  shortName: 'de'
}, {
  name: 'Diego Garcia Flag',
  unified: '1F1E9-1F1EC',
  keywords: ['flag_diego_garcia'],
  sheet: [1, 29],
  shortName: 'flag-dg'
}, {
  name: 'Djibouti Flag',
  unified: '1F1E9-1F1EF',
  keywords: ['flag_djibouti', 'dj', 'flag', 'nation', 'country', 'banner', 'djibouti'],
  sheet: [1, 30],
  shortName: 'flag-dj'
}, {
  name: 'Denmark Flag',
  unified: '1F1E9-1F1F0',
  keywords: ['flag_denmark', 'dk', 'flag', 'nation', 'country', 'banner', 'denmark'],
  sheet: [1, 31],
  shortName: 'flag-dk'
}, {
  name: 'Dominica Flag',
  unified: '1F1E9-1F1F2',
  keywords: ['flag_dominica', 'dm', 'flag', 'nation', 'country', 'banner', 'dominica'],
  sheet: [1, 32],
  shortName: 'flag-dm'
}, {
  name: 'Dominican Republic Flag',
  unified: '1F1E9-1F1F4',
  keywords: ['flag_dominican_republic', 'dominican', 'republic', 'flag', 'nation', 'country', 'banner', 'dominican_republic'],
  sheet: [1, 33],
  shortName: 'flag-do'
}, {
  name: 'Algeria Flag',
  unified: '1F1E9-1F1FF',
  keywords: ['flag_algeria', 'dz', 'flag', 'nation', 'country', 'banner', 'algeria'],
  sheet: [1, 34],
  shortName: 'flag-dz'
}, {
  name: 'Ceuta & Melilla Flag',
  unified: '1F1EA-1F1E6',
  keywords: ['flag_ceuta_melilla'],
  sheet: [1, 35],
  shortName: 'flag-ea'
}, {
  name: 'Ecuador Flag',
  unified: '1F1EA-1F1E8',
  keywords: ['flag_ecuador', 'ec', 'flag', 'nation', 'country', 'banner', 'ecuador'],
  sheet: [1, 36],
  shortName: 'flag-ec'
}, {
  name: 'Estonia Flag',
  unified: '1F1EA-1F1EA',
  keywords: ['flag_estonia', 'ee', 'flag', 'nation', 'country', 'banner', 'estonia'],
  sheet: [1, 37],
  shortName: 'flag-ee'
}, {
  name: 'Egypt Flag',
  unified: '1F1EA-1F1EC',
  keywords: ['flag_egypt', 'eg', 'flag', 'nation', 'country', 'banner', 'egypt'],
  sheet: [1, 38],
  shortName: 'flag-eg'
}, {
  name: 'Western Sahara Flag',
  unified: '1F1EA-1F1ED',
  keywords: ['flag_western_sahara', 'western', 'sahara', 'flag', 'nation', 'country', 'banner', 'western_sahara'],
  sheet: [1, 39],
  shortName: 'flag-eh'
}, {
  name: 'Eritrea Flag',
  unified: '1F1EA-1F1F7',
  keywords: ['flag_eritrea', 'er', 'flag', 'nation', 'country', 'banner', 'eritrea'],
  sheet: [1, 40],
  shortName: 'flag-er'
}, {
  name: 'Spain Flag',
  unified: '1F1EA-1F1F8',
  keywords: ['flag_spain', 'spain', 'flag', 'nation', 'country', 'banner', 'spain'],
  sheet: [1, 41],
  shortNames: ['flag-es'],
  shortName: 'es'
}, {
  name: 'Ethiopia Flag',
  unified: '1F1EA-1F1F9',
  keywords: ['flag_ethiopia', 'et', 'flag', 'nation', 'country', 'banner', 'ethiopia'],
  sheet: [1, 42],
  shortName: 'flag-et'
}, {
  name: 'European Union Flag',
  unified: '1F1EA-1F1FA',
  keywords: ['flag_european_union', 'european', 'union', 'flag', 'banner'],
  sheet: [1, 43],
  shortName: 'flag-eu'
}, {
  name: 'Finland Flag',
  unified: '1F1EB-1F1EE',
  keywords: ['flag_finland', 'fi', 'flag', 'nation', 'country', 'banner', 'finland'],
  sheet: [1, 44],
  shortName: 'flag-fi'
}, {
  name: 'Fiji Flag',
  unified: '1F1EB-1F1EF',
  keywords: ['flag_fiji', 'fj', 'flag', 'nation', 'country', 'banner', 'fiji'],
  sheet: [1, 45],
  shortName: 'flag-fj'
}, {
  name: 'Falkland Islands Flag',
  unified: '1F1EB-1F1F0',
  keywords: ['flag_falkland_islands', 'falkland', 'islands', 'malvinas', 'flag', 'nation', 'country', 'banner', 'falkland_islands'],
  sheet: [1, 46],
  shortName: 'flag-fk'
}, {
  name: 'Micronesia Flag',
  unified: '1F1EB-1F1F2',
  keywords: ['flag_micronesia', 'micronesia', 'federated', 'states', 'flag', 'nation', 'country', 'banner', 'micronesia'],
  sheet: [1, 47],
  shortName: 'flag-fm'
}, {
  name: 'Faroe Islands Flag',
  unified: '1F1EB-1F1F4',
  keywords: ['flag_faroe_islands', 'faroe', 'islands', 'flag', 'nation', 'country', 'banner', 'faroe_islands'],
  sheet: [1, 48],
  shortName: 'flag-fo'
}, {
  name: 'France Flag',
  unified: '1F1EB-1F1F7',
  keywords: ['flag_france', 'banner', 'flag', 'nation', 'france', 'french', 'country', 'france'],
  sheet: [1, 49],
  shortNames: ['flag-fr'],
  shortName: 'fr'
}, {
  name: 'Gabon Flag',
  unified: '1F1EC-1F1E6',
  keywords: ['flag_gabon', 'ga', 'flag', 'nation', 'country', 'banner', 'gabon'],
  sheet: [1, 50],
  shortName: 'flag-ga'
}, {
  name: 'United Kingdom Flag',
  unified: '1F1EC-1F1E7',
  keywords: ['flag_united_kingdom', 'united', 'kingdom', 'great', 'britain', 'northern', 'ireland', 'flag', 'nation', 'country', 'banner', 'british', 'UK', 'english', 'england', 'union jack', 'united_kingdom'],
  sheet: [1, 51],
  shortNames: ['uk', 'flag-gb'],
  shortName: 'gb'
}, {
  name: 'Grenada Flag',
  unified: '1F1EC-1F1E9',
  keywords: ['flag_grenada', 'gd', 'flag', 'nation', 'country', 'banner', 'grenada'],
  sheet: [1, 52],
  shortName: 'flag-gd'
}, {
  name: 'Georgia Flag',
  unified: '1F1EC-1F1EA',
  keywords: ['flag_georgia', 'ge', 'flag', 'nation', 'country', 'banner', 'georgia'],
  sheet: [1, 53],
  shortName: 'flag-ge'
}, {
  name: 'French Guiana Flag',
  unified: '1F1EC-1F1EB',
  keywords: ['flag_french_guiana', 'french', 'guiana', 'flag', 'nation', 'country', 'banner', 'french_guiana'],
  sheet: [1, 54],
  shortName: 'flag-gf'
}, {
  name: 'Guernsey Flag',
  unified: '1F1EC-1F1EC',
  keywords: ['flag_guernsey', 'gg', 'flag', 'nation', 'country', 'banner', 'guernsey'],
  sheet: [1, 55],
  shortName: 'flag-gg'
}, {
  name: 'Ghana Flag',
  unified: '1F1EC-1F1ED',
  keywords: ['flag_ghana', 'gh', 'flag', 'nation', 'country', 'banner', 'ghana'],
  sheet: [1, 56],
  shortName: 'flag-gh'
}, {
  name: 'Gibraltar Flag',
  unified: '1F1EC-1F1EE',
  keywords: ['flag_gibraltar', 'gi', 'flag', 'nation', 'country', 'banner', 'gibraltar'],
  sheet: [1, 57],
  shortName: 'flag-gi'
}, {
  name: 'Greenland Flag',
  unified: '1F1EC-1F1F1',
  keywords: ['flag_greenland', 'gl', 'flag', 'nation', 'country', 'banner', 'greenland'],
  sheet: [1, 58],
  shortName: 'flag-gl'
}, {
  name: 'Gambia Flag',
  unified: '1F1EC-1F1F2',
  keywords: ['flag_gambia', 'gm', 'flag', 'nation', 'country', 'banner', 'gambia'],
  sheet: [1, 59],
  shortName: 'flag-gm'
}, {
  name: 'Guinea Flag',
  unified: '1F1EC-1F1F3',
  keywords: ['flag_guinea', 'gn', 'flag', 'nation', 'country', 'banner', 'guinea'],
  sheet: [1, 60],
  shortName: 'flag-gn'
}, {
  name: 'Guadeloupe Flag',
  unified: '1F1EC-1F1F5',
  keywords: ['flag_guadeloupe', 'gp', 'flag', 'nation', 'country', 'banner', 'guadeloupe'],
  sheet: [2, 0],
  shortName: 'flag-gp'
}, {
  name: 'Equatorial Guinea Flag',
  unified: '1F1EC-1F1F6',
  keywords: ['flag_equatorial_guinea', 'equatorial', 'gn', 'flag', 'nation', 'country', 'banner', 'equatorial_guinea'],
  sheet: [2, 1],
  shortName: 'flag-gq'
}, {
  name: 'Greece Flag',
  unified: '1F1EC-1F1F7',
  keywords: ['flag_greece', 'gr', 'flag', 'nation', 'country', 'banner', 'greece'],
  sheet: [2, 2],
  shortName: 'flag-gr'
}, {
  name: 'South Georgia & South Sandwich Islands Flag',
  unified: '1F1EC-1F1F8',
  keywords: ['flag_south_georgia_south_sandwich_islands', 'south', 'georgia', 'sandwich', 'islands', 'flag', 'nation', 'country', 'banner', 'south_georgia_south_sandwich_islands'],
  sheet: [2, 3],
  shortName: 'flag-gs'
}, {
  name: 'Guatemala Flag',
  unified: '1F1EC-1F1F9',
  keywords: ['flag_guatemala', 'gt', 'flag', 'nation', 'country', 'banner', 'guatemala'],
  sheet: [2, 4],
  shortName: 'flag-gt'
}, {
  name: 'Guam Flag',
  unified: '1F1EC-1F1FA',
  keywords: ['flag_guam', 'gu', 'flag', 'nation', 'country', 'banner', 'guam'],
  sheet: [2, 5],
  shortName: 'flag-gu'
}, {
  name: 'Guinea-Bissau Flag',
  unified: '1F1EC-1F1FC',
  keywords: ['flag_guinea_bissau', 'gw', 'bissau', 'flag', 'nation', 'country', 'banner', 'guinea_bissau'],
  sheet: [2, 6],
  shortName: 'flag-gw'
}, {
  name: 'Guyana Flag',
  unified: '1F1EC-1F1FE',
  keywords: ['flag_guyana', 'gy', 'flag', 'nation', 'country', 'banner', 'guyana'],
  sheet: [2, 7],
  shortName: 'flag-gy'
}, {
  name: 'Hong Kong Sar China Flag',
  unified: '1F1ED-1F1F0',
  keywords: ['flag_hong_kong_sar_china', 'hong', 'kong', 'flag', 'nation', 'country', 'banner', 'hong_kong_sar_china'],
  sheet: [2, 8],
  shortName: 'flag-hk'
}, {
  name: 'Heard & Mcdonald Islands Flag',
  unified: '1F1ED-1F1F2',
  keywords: ['flag_heard_mcdonald_islands'],
  sheet: [2, 9],
  shortName: 'flag-hm'
}, {
  name: 'Honduras Flag',
  unified: '1F1ED-1F1F3',
  keywords: ['flag_honduras', 'hn', 'flag', 'nation', 'country', 'banner', 'honduras'],
  sheet: [2, 10],
  shortName: 'flag-hn'
}, {
  name: 'Croatia Flag',
  unified: '1F1ED-1F1F7',
  keywords: ['flag_croatia', 'hr', 'flag', 'nation', 'country', 'banner', 'croatia'],
  sheet: [2, 11],
  shortName: 'flag-hr'
}, {
  name: 'Haiti Flag',
  unified: '1F1ED-1F1F9',
  keywords: ['flag_haiti', 'ht', 'flag', 'nation', 'country', 'banner', 'haiti'],
  sheet: [2, 12],
  shortName: 'flag-ht'
}, {
  name: 'Hungary Flag',
  unified: '1F1ED-1F1FA',
  keywords: ['flag_hungary', 'hu', 'flag', 'nation', 'country', 'banner', 'hungary'],
  sheet: [2, 13],
  shortName: 'flag-hu'
}, {
  name: 'Canary Islands Flag',
  unified: '1F1EE-1F1E8',
  keywords: ['flag_canary_islands', 'canary', 'islands', 'flag', 'nation', 'country', 'banner', 'canary_islands'],
  sheet: [2, 14],
  shortName: 'flag-ic'
}, {
  name: 'Indonesia Flag',
  unified: '1F1EE-1F1E9',
  keywords: ['flag_indonesia', 'flag', 'nation', 'country', 'banner', 'indonesia'],
  sheet: [2, 15],
  shortName: 'flag-id'
}, {
  name: 'Ireland Flag',
  unified: '1F1EE-1F1EA',
  keywords: ['flag_ireland', 'ie', 'flag', 'nation', 'country', 'banner', 'ireland'],
  sheet: [2, 16],
  shortName: 'flag-ie'
}, {
  name: 'Israel Flag',
  unified: '1F1EE-1F1F1',
  keywords: ['flag_israel', 'il', 'flag', 'nation', 'country', 'banner', 'israel'],
  sheet: [2, 17],
  shortName: 'flag-il'
}, {
  name: 'Isle of Man Flag',
  unified: '1F1EE-1F1F2',
  keywords: ['flag_isle_of_man', 'isle', 'man', 'flag', 'nation', 'country', 'banner', 'isle_of_man'],
  sheet: [2, 18],
  shortName: 'flag-im'
}, {
  name: 'India Flag',
  unified: '1F1EE-1F1F3',
  keywords: ['flag_india', 'in', 'flag', 'nation', 'country', 'banner', 'india'],
  sheet: [2, 19],
  shortName: 'flag-in'
}, {
  name: 'British Indian Ocean Territory Flag',
  unified: '1F1EE-1F1F4',
  keywords: ['flag_british_indian_ocean_territory', 'british', 'indian', 'ocean', 'territory', 'flag', 'nation', 'country', 'banner', 'british_indian_ocean_territory'],
  sheet: [2, 20],
  shortName: 'flag-io'
}, {
  name: 'Iraq Flag',
  unified: '1F1EE-1F1F6',
  keywords: ['flag_iraq', 'iq', 'flag', 'nation', 'country', 'banner', 'iraq'],
  sheet: [2, 21],
  shortName: 'flag-iq'
}, {
  name: 'Iran Flag',
  unified: '1F1EE-1F1F7',
  keywords: ['flag_iran', 'iran', 'islamic', 'republic', 'flag', 'nation', 'country', 'banner', 'iran'],
  sheet: [2, 22],
  shortName: 'flag-ir'
}, {
  name: 'Iceland Flag',
  unified: '1F1EE-1F1F8',
  keywords: ['flag_iceland', 'is', 'flag', 'nation', 'country', 'banner', 'iceland'],
  sheet: [2, 23],
  shortName: 'flag-is'
}, {
  name: 'Italy Flag',
  unified: '1F1EE-1F1F9',
  keywords: ['flag_italy', 'italy', 'flag', 'nation', 'country', 'banner', 'italy'],
  sheet: [2, 24],
  shortNames: ['flag-it'],
  shortName: 'it'
}, {
  name: 'Jersey Flag',
  unified: '1F1EF-1F1EA',
  keywords: ['flag_jersey', 'je', 'flag', 'nation', 'country', 'banner', 'jersey'],
  sheet: [2, 25],
  shortName: 'flag-je'
}, {
  name: 'Jamaica Flag',
  unified: '1F1EF-1F1F2',
  keywords: ['flag_jamaica', 'jm', 'flag', 'nation', 'country', 'banner', 'jamaica'],
  sheet: [2, 26],
  shortName: 'flag-jm'
}, {
  name: 'Jordan Flag',
  unified: '1F1EF-1F1F4',
  keywords: ['flag_jordan', 'jo', 'flag', 'nation', 'country', 'banner', 'jordan'],
  sheet: [2, 27],
  shortName: 'flag-jo'
}, {
  name: 'Japan Flag',
  unified: '1F1EF-1F1F5',
  keywords: ['flag_japan', 'japanese', 'nation', 'flag', 'country', 'banner', 'japan', 'jp', 'ja'],
  sheet: [2, 28],
  shortNames: ['flag-jp'],
  shortName: 'jp'
}, {
  name: 'Kenya Flag',
  unified: '1F1F0-1F1EA',
  keywords: ['flag_kenya', 'ke', 'flag', 'nation', 'country', 'banner', 'kenya'],
  sheet: [2, 29],
  shortName: 'flag-ke'
}, {
  name: 'Kyrgyzstan Flag',
  unified: '1F1F0-1F1EC',
  keywords: ['flag_kyrgyzstan', 'kg', 'flag', 'nation', 'country', 'banner', 'kyrgyzstan'],
  sheet: [2, 30],
  shortName: 'flag-kg'
}, {
  name: 'Cambodia Flag',
  unified: '1F1F0-1F1ED',
  keywords: ['flag_cambodia', 'kh', 'flag', 'nation', 'country', 'banner', 'cambodia'],
  sheet: [2, 31],
  shortName: 'flag-kh'
}, {
  name: 'Kiribati Flag',
  unified: '1F1F0-1F1EE',
  keywords: ['flag_kiribati', 'ki', 'flag', 'nation', 'country', 'banner', 'kiribati'],
  sheet: [2, 32],
  shortName: 'flag-ki'
}, {
  name: 'Comoros Flag',
  unified: '1F1F0-1F1F2',
  keywords: ['flag_comoros', 'km', 'flag', 'nation', 'country', 'banner', 'comoros'],
  sheet: [2, 33],
  shortName: 'flag-km'
}, {
  name: 'St. Kitts & Nevis Flag',
  unified: '1F1F0-1F1F3',
  keywords: ['flag_st_kitts_nevis', 'saint', 'kitts', 'nevis', 'flag', 'nation', 'country', 'banner', 'st_kitts_nevis'],
  sheet: [2, 34],
  shortName: 'flag-kn'
}, {
  name: 'North Korea Flag',
  unified: '1F1F0-1F1F5',
  keywords: ['flag_north_korea', 'north', 'korea', 'nation', 'flag', 'country', 'banner', 'north_korea'],
  sheet: [2, 35],
  shortName: 'flag-kp'
}, {
  name: 'South Korea Flag',
  unified: '1F1F0-1F1F7',
  keywords: ['flag_south_korea', 'south', 'korea', 'nation', 'flag', 'country', 'banner', 'south_korea'],
  sheet: [2, 36],
  shortNames: ['flag-kr'],
  shortName: 'kr'
}, {
  name: 'Kuwait Flag',
  unified: '1F1F0-1F1FC',
  keywords: ['flag_kuwait', 'kw', 'flag', 'nation', 'country', 'banner', 'kuwait'],
  sheet: [2, 37],
  shortName: 'flag-kw'
}, {
  name: 'Cayman Islands Flag',
  unified: '1F1F0-1F1FE',
  keywords: ['flag_cayman_islands', 'cayman', 'islands', 'flag', 'nation', 'country', 'banner', 'cayman_islands'],
  sheet: [2, 38],
  shortName: 'flag-ky'
}, {
  name: 'Kazakhstan Flag',
  unified: '1F1F0-1F1FF',
  keywords: ['flag_kazakhstan', 'kz', 'flag', 'nation', 'country', 'banner', 'kazakhstan'],
  sheet: [2, 39],
  shortName: 'flag-kz'
}, {
  name: 'Laos Flag',
  unified: '1F1F1-1F1E6',
  keywords: ['flag_laos', 'lao', 'democratic', 'republic', 'flag', 'nation', 'country', 'banner', 'laos'],
  sheet: [2, 40],
  shortName: 'flag-la'
}, {
  name: 'Lebanon Flag',
  unified: '1F1F1-1F1E7',
  keywords: ['flag_lebanon', 'lb', 'flag', 'nation', 'country', 'banner', 'lebanon'],
  sheet: [2, 41],
  shortName: 'flag-lb'
}, {
  name: 'St. Lucia Flag',
  unified: '1F1F1-1F1E8',
  keywords: ['flag_st_lucia', 'saint', 'lucia', 'flag', 'nation', 'country', 'banner', 'st_lucia'],
  sheet: [2, 42],
  shortName: 'flag-lc'
}, {
  name: 'Liechtenstein Flag',
  unified: '1F1F1-1F1EE',
  keywords: ['flag_liechtenstein', 'li', 'flag', 'nation', 'country', 'banner', 'liechtenstein'],
  sheet: [2, 43],
  shortName: 'flag-li'
}, {
  name: 'Sri Lanka Flag',
  unified: '1F1F1-1F1F0',
  keywords: ['flag_sri_lanka', 'sri', 'lanka', 'flag', 'nation', 'country', 'banner', 'sri_lanka'],
  sheet: [2, 44],
  shortName: 'flag-lk'
}, {
  name: 'Liberia Flag',
  unified: '1F1F1-1F1F7',
  keywords: ['flag_liberia', 'lr', 'flag', 'nation', 'country', 'banner', 'liberia'],
  sheet: [2, 45],
  shortName: 'flag-lr'
}, {
  name: 'Lesotho Flag',
  unified: '1F1F1-1F1F8',
  keywords: ['flag_lesotho', 'ls', 'flag', 'nation', 'country', 'banner', 'lesotho'],
  sheet: [2, 46],
  shortName: 'flag-ls'
}, {
  name: 'Lithuania Flag',
  unified: '1F1F1-1F1F9',
  keywords: ['flag_lithuania', 'lt', 'flag', 'nation', 'country', 'banner', 'lithuania'],
  sheet: [2, 47],
  shortName: 'flag-lt'
}, {
  name: 'Luxembourg Flag',
  unified: '1F1F1-1F1FA',
  keywords: ['flag_luxembourg', 'lu', 'flag', 'nation', 'country', 'banner', 'luxembourg'],
  sheet: [2, 48],
  shortName: 'flag-lu'
}, {
  name: 'Latvia Flag',
  unified: '1F1F1-1F1FB',
  keywords: ['flag_latvia', 'lv', 'flag', 'nation', 'country', 'banner', 'latvia'],
  sheet: [2, 49],
  shortName: 'flag-lv'
}, {
  name: 'Libya Flag',
  unified: '1F1F1-1F1FE',
  keywords: ['flag_libya', 'ly', 'flag', 'nation', 'country', 'banner', 'libya'],
  sheet: [2, 50],
  shortName: 'flag-ly'
}, {
  name: 'Morocco Flag',
  unified: '1F1F2-1F1E6',
  keywords: ['flag_morocco', 'ma', 'flag', 'nation', 'country', 'banner', 'morocco'],
  sheet: [2, 51],
  shortName: 'flag-ma'
}, {
  name: 'Monaco Flag',
  unified: '1F1F2-1F1E8',
  keywords: ['flag_monaco', 'mc', 'flag', 'nation', 'country', 'banner', 'monaco'],
  sheet: [2, 52],
  shortName: 'flag-mc'
}, {
  name: 'Moldova Flag',
  unified: '1F1F2-1F1E9',
  keywords: ['flag_moldova', 'moldova', 'republic', 'flag', 'nation', 'country', 'banner', 'moldova'],
  sheet: [2, 53],
  shortName: 'flag-md'
}, {
  name: 'Montenegro Flag',
  unified: '1F1F2-1F1EA',
  keywords: ['flag_montenegro', 'me', 'flag', 'nation', 'country', 'banner', 'montenegro'],
  sheet: [2, 54],
  shortName: 'flag-me'
}, {
  name: 'St. Martin Flag',
  unified: '1F1F2-1F1EB',
  keywords: ['flag_st_martin'],
  sheet: [2, 55],
  shortName: 'flag-mf'
}, {
  name: 'Madagascar Flag',
  unified: '1F1F2-1F1EC',
  keywords: ['flag_madagascar', 'mg', 'flag', 'nation', 'country', 'banner', 'madagascar'],
  sheet: [2, 56],
  shortName: 'flag-mg'
}, {
  name: 'Marshall Islands Flag',
  unified: '1F1F2-1F1ED',
  keywords: ['flag_marshall_islands', 'marshall', 'islands', 'flag', 'nation', 'country', 'banner', 'marshall_islands'],
  sheet: [2, 57],
  shortName: 'flag-mh'
}, {
  name: 'North Macedonia Flag',
  unified: '1F1F2-1F1F0',
  keywords: ['flag_north_macedonia', 'macedonia', 'flag', 'nation', 'country', 'banner', 'north_macedonia'],
  sheet: [2, 58],
  shortName: 'flag-mk'
}, {
  name: 'Mali Flag',
  unified: '1F1F2-1F1F1',
  keywords: ['flag_mali', 'ml', 'flag', 'nation', 'country', 'banner', 'mali'],
  sheet: [2, 59],
  shortName: 'flag-ml'
}, {
  name: 'Myanmar (burma) Flag',
  unified: '1F1F2-1F1F2',
  keywords: ['flag_myanmar', 'mm', 'flag', 'nation', 'country', 'banner', 'myanmar'],
  sheet: [2, 60],
  shortName: 'flag-mm'
}, {
  name: 'Mongolia Flag',
  unified: '1F1F2-1F1F3',
  keywords: ['flag_mongolia', 'mn', 'flag', 'nation', 'country', 'banner', 'mongolia'],
  sheet: [3, 0],
  shortName: 'flag-mn'
}, {
  name: 'Macao Sar China Flag',
  unified: '1F1F2-1F1F4',
  keywords: ['flag_macao_sar_china', 'macao', 'flag', 'nation', 'country', 'banner', 'macao_sar_china'],
  sheet: [3, 1],
  shortName: 'flag-mo'
}, {
  name: 'Northern Mariana Islands Flag',
  unified: '1F1F2-1F1F5',
  keywords: ['flag_northern_mariana_islands', 'northern', 'mariana', 'islands', 'flag', 'nation', 'country', 'banner', 'northern_mariana_islands'],
  sheet: [3, 2],
  shortName: 'flag-mp'
}, {
  name: 'Martinique Flag',
  unified: '1F1F2-1F1F6',
  keywords: ['flag_martinique', 'mq', 'flag', 'nation', 'country', 'banner', 'martinique'],
  sheet: [3, 3],
  shortName: 'flag-mq'
}, {
  name: 'Mauritania Flag',
  unified: '1F1F2-1F1F7',
  keywords: ['flag_mauritania', 'mr', 'flag', 'nation', 'country', 'banner', 'mauritania'],
  sheet: [3, 4],
  shortName: 'flag-mr'
}, {
  name: 'Montserrat Flag',
  unified: '1F1F2-1F1F8',
  keywords: ['flag_montserrat', 'ms', 'flag', 'nation', 'country', 'banner', 'montserrat'],
  sheet: [3, 5],
  shortName: 'flag-ms'
}, {
  name: 'Malta Flag',
  unified: '1F1F2-1F1F9',
  keywords: ['flag_malta', 'mt', 'flag', 'nation', 'country', 'banner', 'malta'],
  sheet: [3, 6],
  shortName: 'flag-mt'
}, {
  name: 'Mauritius Flag',
  unified: '1F1F2-1F1FA',
  keywords: ['flag_mauritius', 'mu', 'flag', 'nation', 'country', 'banner', 'mauritius'],
  sheet: [3, 7],
  shortName: 'flag-mu'
}, {
  name: 'Maldives Flag',
  unified: '1F1F2-1F1FB',
  keywords: ['flag_maldives', 'mv', 'flag', 'nation', 'country', 'banner', 'maldives'],
  sheet: [3, 8],
  shortName: 'flag-mv'
}, {
  name: 'Malawi Flag',
  unified: '1F1F2-1F1FC',
  keywords: ['flag_malawi', 'mw', 'flag', 'nation', 'country', 'banner', 'malawi'],
  sheet: [3, 9],
  shortName: 'flag-mw'
}, {
  name: 'Mexico Flag',
  unified: '1F1F2-1F1FD',
  keywords: ['flag_mexico', 'mx', 'flag', 'nation', 'country', 'banner', 'mexico'],
  sheet: [3, 10],
  shortName: 'flag-mx'
}, {
  name: 'Malaysia Flag',
  unified: '1F1F2-1F1FE',
  keywords: ['flag_malaysia', 'my', 'flag', 'nation', 'country', 'banner', 'malaysia'],
  sheet: [3, 11],
  shortName: 'flag-my'
}, {
  name: 'Mozambique Flag',
  unified: '1F1F2-1F1FF',
  keywords: ['flag_mozambique', 'mz', 'flag', 'nation', 'country', 'banner', 'mozambique'],
  sheet: [3, 12],
  shortName: 'flag-mz'
}, {
  name: 'Namibia Flag',
  unified: '1F1F3-1F1E6',
  keywords: ['flag_namibia', 'na', 'flag', 'nation', 'country', 'banner', 'namibia'],
  sheet: [3, 13],
  shortName: 'flag-na'
}, {
  name: 'New Caledonia Flag',
  unified: '1F1F3-1F1E8',
  keywords: ['flag_new_caledonia', 'new', 'caledonia', 'flag', 'nation', 'country', 'banner', 'new_caledonia'],
  sheet: [3, 14],
  shortName: 'flag-nc'
}, {
  name: 'Niger Flag',
  unified: '1F1F3-1F1EA',
  keywords: ['flag_niger', 'ne', 'flag', 'nation', 'country', 'banner', 'niger'],
  sheet: [3, 15],
  shortName: 'flag-ne'
}, {
  name: 'Norfolk Island Flag',
  unified: '1F1F3-1F1EB',
  keywords: ['flag_norfolk_island', 'norfolk', 'island', 'flag', 'nation', 'country', 'banner', 'norfolk_island'],
  sheet: [3, 16],
  shortName: 'flag-nf'
}, {
  name: 'Nigeria Flag',
  unified: '1F1F3-1F1EC',
  keywords: ['flag_nigeria', 'flag', 'nation', 'country', 'banner', 'nigeria'],
  sheet: [3, 17],
  shortName: 'flag-ng'
}, {
  name: 'Nicaragua Flag',
  unified: '1F1F3-1F1EE',
  keywords: ['flag_nicaragua', 'ni', 'flag', 'nation', 'country', 'banner', 'nicaragua'],
  sheet: [3, 18],
  shortName: 'flag-ni'
}, {
  name: 'Netherlands Flag',
  unified: '1F1F3-1F1F1',
  keywords: ['flag_netherlands', 'nl', 'flag', 'nation', 'country', 'banner', 'netherlands'],
  sheet: [3, 19],
  shortName: 'flag-nl'
}, {
  name: 'Norway Flag',
  unified: '1F1F3-1F1F4',
  keywords: ['flag_norway', 'no', 'flag', 'nation', 'country', 'banner', 'norway'],
  sheet: [3, 20],
  shortName: 'flag-no'
}, {
  name: 'Nepal Flag',
  unified: '1F1F3-1F1F5',
  keywords: ['flag_nepal', 'np', 'flag', 'nation', 'country', 'banner', 'nepal'],
  sheet: [3, 21],
  shortName: 'flag-np'
}, {
  name: 'Nauru Flag',
  unified: '1F1F3-1F1F7',
  keywords: ['flag_nauru', 'nr', 'flag', 'nation', 'country', 'banner', 'nauru'],
  sheet: [3, 22],
  shortName: 'flag-nr'
}, {
  name: 'Niue Flag',
  unified: '1F1F3-1F1FA',
  keywords: ['flag_niue', 'nu', 'flag', 'nation', 'country', 'banner', 'niue'],
  sheet: [3, 23],
  shortName: 'flag-nu'
}, {
  name: 'New Zealand Flag',
  unified: '1F1F3-1F1FF',
  keywords: ['flag_new_zealand', 'new', 'zealand', 'flag', 'nation', 'country', 'banner', 'new_zealand'],
  sheet: [3, 24],
  shortName: 'flag-nz'
}, {
  name: 'Oman Flag',
  unified: '1F1F4-1F1F2',
  keywords: ['flag_oman', 'om_symbol', 'flag', 'nation', 'country', 'banner', 'oman'],
  sheet: [3, 25],
  shortName: 'flag-om'
}, {
  name: 'Panama Flag',
  unified: '1F1F5-1F1E6',
  keywords: ['flag_panama', 'pa', 'flag', 'nation', 'country', 'banner', 'panama'],
  sheet: [3, 26],
  shortName: 'flag-pa'
}, {
  name: 'Peru Flag',
  unified: '1F1F5-1F1EA',
  keywords: ['flag_peru', 'pe', 'flag', 'nation', 'country', 'banner', 'peru'],
  sheet: [3, 27],
  shortName: 'flag-pe'
}, {
  name: 'French Polynesia Flag',
  unified: '1F1F5-1F1EB',
  keywords: ['flag_french_polynesia', 'french', 'polynesia', 'flag', 'nation', 'country', 'banner', 'french_polynesia'],
  sheet: [3, 28],
  shortName: 'flag-pf'
}, {
  name: 'Papua New Guinea Flag',
  unified: '1F1F5-1F1EC',
  keywords: ['flag_papua_new_guinea', 'papua', 'new', 'guinea', 'flag', 'nation', 'country', 'banner', 'papua_new_guinea'],
  sheet: [3, 29],
  shortName: 'flag-pg'
}, {
  name: 'Philippines Flag',
  unified: '1F1F5-1F1ED',
  keywords: ['flag_philippines', 'ph', 'flag', 'nation', 'country', 'banner', 'philippines'],
  sheet: [3, 30],
  shortName: 'flag-ph'
}, {
  name: 'Pakistan Flag',
  unified: '1F1F5-1F1F0',
  keywords: ['flag_pakistan', 'pk', 'flag', 'nation', 'country', 'banner', 'pakistan'],
  sheet: [3, 31],
  shortName: 'flag-pk'
}, {
  name: 'Poland Flag',
  unified: '1F1F5-1F1F1',
  keywords: ['flag_poland', 'pl', 'flag', 'nation', 'country', 'banner', 'poland'],
  sheet: [3, 32],
  shortName: 'flag-pl'
}, {
  name: 'St. Pierre & Miquelon Flag',
  unified: '1F1F5-1F1F2',
  keywords: ['flag_st_pierre_miquelon', 'saint', 'pierre', 'miquelon', 'flag', 'nation', 'country', 'banner', 'st_pierre_miquelon'],
  sheet: [3, 33],
  shortName: 'flag-pm'
}, {
  name: 'Pitcairn Islands Flag',
  unified: '1F1F5-1F1F3',
  keywords: ['flag_pitcairn_islands', 'pitcairn', 'flag', 'nation', 'country', 'banner', 'pitcairn_islands'],
  sheet: [3, 34],
  shortName: 'flag-pn'
}, {
  name: 'Puerto Rico Flag',
  unified: '1F1F5-1F1F7',
  keywords: ['flag_puerto_rico', 'puerto', 'rico', 'flag', 'nation', 'country', 'banner', 'puerto_rico'],
  sheet: [3, 35],
  shortName: 'flag-pr'
}, {
  name: 'Palestinian Territories Flag',
  unified: '1F1F5-1F1F8',
  keywords: ['flag_palestinian_territories', 'palestine', 'palestinian', 'territories', 'flag', 'nation', 'country', 'banner', 'palestinian_territories'],
  sheet: [3, 36],
  shortName: 'flag-ps'
}, {
  name: 'Portugal Flag',
  unified: '1F1F5-1F1F9',
  keywords: ['flag_portugal', 'pt', 'flag', 'nation', 'country', 'banner', 'portugal'],
  sheet: [3, 37],
  shortName: 'flag-pt'
}, {
  name: 'Palau Flag',
  unified: '1F1F5-1F1FC',
  keywords: ['flag_palau', 'pw', 'flag', 'nation', 'country', 'banner', 'palau'],
  sheet: [3, 38],
  shortName: 'flag-pw'
}, {
  name: 'Paraguay Flag',
  unified: '1F1F5-1F1FE',
  keywords: ['flag_paraguay', 'py', 'flag', 'nation', 'country', 'banner', 'paraguay'],
  sheet: [3, 39],
  shortName: 'flag-py'
}, {
  name: 'Qatar Flag',
  unified: '1F1F6-1F1E6',
  keywords: ['flag_qatar', 'qa', 'flag', 'nation', 'country', 'banner', 'qatar'],
  sheet: [3, 40],
  shortName: 'flag-qa'
}, {
  name: 'Réunion Flag',
  unified: '1F1F7-1F1EA',
  keywords: ['flag_reunion', 'réunion', 'flag', 'nation', 'country', 'banner', 'reunion'],
  sheet: [3, 41],
  shortName: 'flag-re'
}, {
  name: 'Romania Flag',
  unified: '1F1F7-1F1F4',
  keywords: ['flag_romania', 'ro', 'flag', 'nation', 'country', 'banner', 'romania'],
  sheet: [3, 42],
  shortName: 'flag-ro'
}, {
  name: 'Serbia Flag',
  unified: '1F1F7-1F1F8',
  keywords: ['flag_serbia', 'rs', 'flag', 'nation', 'country', 'banner', 'serbia'],
  sheet: [3, 43],
  shortName: 'flag-rs'
}, {
  name: 'Russia Flag',
  unified: '1F1F7-1F1FA',
  keywords: ['flag_russia', 'russian', 'federation', 'flag', 'nation', 'country', 'banner', 'russia'],
  sheet: [3, 44],
  shortNames: ['flag-ru'],
  shortName: 'ru'
}, {
  name: 'Rwanda Flag',
  unified: '1F1F7-1F1FC',
  keywords: ['flag_rwanda', 'rw', 'flag', 'nation', 'country', 'banner', 'rwanda'],
  sheet: [3, 45],
  shortName: 'flag-rw'
}, {
  name: 'Saudi Arabia Flag',
  unified: '1F1F8-1F1E6',
  keywords: ['flag_saudi_arabia', 'flag', 'nation', 'country', 'banner', 'saudi_arabia'],
  sheet: [3, 46],
  shortName: 'flag-sa'
}, {
  name: 'Solomon Islands Flag',
  unified: '1F1F8-1F1E7',
  keywords: ['flag_solomon_islands', 'solomon', 'islands', 'flag', 'nation', 'country', 'banner', 'solomon_islands'],
  sheet: [3, 47],
  shortName: 'flag-sb'
}, {
  name: 'Seychelles Flag',
  unified: '1F1F8-1F1E8',
  keywords: ['flag_seychelles', 'sc', 'flag', 'nation', 'country', 'banner', 'seychelles'],
  sheet: [3, 48],
  shortName: 'flag-sc'
}, {
  name: 'Sudan Flag',
  unified: '1F1F8-1F1E9',
  keywords: ['flag_sudan', 'sd', 'flag', 'nation', 'country', 'banner', 'sudan'],
  sheet: [3, 49],
  shortName: 'flag-sd'
}, {
  name: 'Sweden Flag',
  unified: '1F1F8-1F1EA',
  keywords: ['flag_sweden', 'se', 'flag', 'nation', 'country', 'banner', 'sweden'],
  sheet: [3, 50],
  shortName: 'flag-se'
}, {
  name: 'Singapore Flag',
  unified: '1F1F8-1F1EC',
  keywords: ['flag_singapore', 'sg', 'flag', 'nation', 'country', 'banner', 'singapore'],
  sheet: [3, 51],
  shortName: 'flag-sg'
}, {
  name: 'St. Helena Flag',
  unified: '1F1F8-1F1ED',
  keywords: ['flag_st_helena', 'saint', 'helena', 'ascension', 'tristan', 'cunha', 'flag', 'nation', 'country', 'banner', 'st_helena'],
  sheet: [3, 52],
  shortName: 'flag-sh'
}, {
  name: 'Slovenia Flag',
  unified: '1F1F8-1F1EE',
  keywords: ['flag_slovenia', 'si', 'flag', 'nation', 'country', 'banner', 'slovenia'],
  sheet: [3, 53],
  shortName: 'flag-si'
}, {
  name: 'Svalbard & Jan Mayen Flag',
  unified: '1F1F8-1F1EF',
  keywords: ['flag_svalbard_jan_mayen'],
  sheet: [3, 54],
  shortName: 'flag-sj'
}, {
  name: 'Slovakia Flag',
  unified: '1F1F8-1F1F0',
  keywords: ['flag_slovakia', 'sk', 'flag', 'nation', 'country', 'banner', 'slovakia'],
  sheet: [3, 55],
  shortName: 'flag-sk'
}, {
  name: 'Sierra Leone Flag',
  unified: '1F1F8-1F1F1',
  keywords: ['flag_sierra_leone', 'sierra', 'leone', 'flag', 'nation', 'country', 'banner', 'sierra_leone'],
  sheet: [3, 56],
  shortName: 'flag-sl'
}, {
  name: 'San Marino Flag',
  unified: '1F1F8-1F1F2',
  keywords: ['flag_san_marino', 'san', 'marino', 'flag', 'nation', 'country', 'banner', 'san_marino'],
  sheet: [3, 57],
  shortName: 'flag-sm'
}, {
  name: 'Senegal Flag',
  unified: '1F1F8-1F1F3',
  keywords: ['flag_senegal', 'sn', 'flag', 'nation', 'country', 'banner', 'senegal'],
  sheet: [3, 58],
  shortName: 'flag-sn'
}, {
  name: 'Somalia Flag',
  unified: '1F1F8-1F1F4',
  keywords: ['flag_somalia', 'so', 'flag', 'nation', 'country', 'banner', 'somalia'],
  sheet: [3, 59],
  shortName: 'flag-so'
}, {
  name: 'Suriname Flag',
  unified: '1F1F8-1F1F7',
  keywords: ['flag_suriname', 'sr', 'flag', 'nation', 'country', 'banner', 'suriname'],
  sheet: [3, 60],
  shortName: 'flag-sr'
}, {
  name: 'South Sudan Flag',
  unified: '1F1F8-1F1F8',
  keywords: ['flag_south_sudan', 'south', 'sd', 'flag', 'nation', 'country', 'banner', 'south_sudan'],
  sheet: [4, 0],
  shortName: 'flag-ss'
}, {
  name: 'São Tomé & Príncipe Flag',
  unified: '1F1F8-1F1F9',
  keywords: ['flag_sao_tome_principe', 'sao', 'tome', 'principe', 'flag', 'nation', 'country', 'banner', 'sao_tome_principe'],
  sheet: [4, 1],
  shortName: 'flag-st'
}, {
  name: 'El Salvador Flag',
  unified: '1F1F8-1F1FB',
  keywords: ['flag_el_salvador', 'el', 'salvador', 'flag', 'nation', 'country', 'banner', 'el_salvador'],
  sheet: [4, 2],
  shortName: 'flag-sv'
}, {
  name: 'Sint Maarten Flag',
  unified: '1F1F8-1F1FD',
  keywords: ['flag_sint_maarten', 'sint', 'maarten', 'dutch', 'flag', 'nation', 'country', 'banner', 'sint_maarten'],
  sheet: [4, 3],
  shortName: 'flag-sx'
}, {
  name: 'Syria Flag',
  unified: '1F1F8-1F1FE',
  keywords: ['flag_syria', 'syrian', 'arab', 'republic', 'flag', 'nation', 'country', 'banner', 'syria'],
  sheet: [4, 4],
  shortName: 'flag-sy'
}, {
  name: 'Eswatini Flag',
  unified: '1F1F8-1F1FF',
  keywords: ['flag_eswatini', 'sz', 'flag', 'nation', 'country', 'banner', 'eswatini'],
  sheet: [4, 5],
  shortName: 'flag-sz'
}, {
  name: 'Tristan Da Cunha Flag',
  unified: '1F1F9-1F1E6',
  keywords: ['flag_tristan_da_cunha'],
  sheet: [4, 6],
  shortName: 'flag-ta'
}, {
  name: 'Turks & Caicos Islands Flag',
  unified: '1F1F9-1F1E8',
  keywords: ['flag_turks_caicos_islands', 'turks', 'caicos', 'islands', 'flag', 'nation', 'country', 'banner', 'turks_caicos_islands'],
  sheet: [4, 7],
  shortName: 'flag-tc'
}, {
  name: 'Chad Flag',
  unified: '1F1F9-1F1E9',
  keywords: ['flag_chad', 'td', 'flag', 'nation', 'country', 'banner', 'chad'],
  sheet: [4, 8],
  shortName: 'flag-td'
}, {
  name: 'French Southern Territories Flag',
  unified: '1F1F9-1F1EB',
  keywords: ['flag_french_southern_territories', 'french', 'southern', 'territories', 'flag', 'nation', 'country', 'banner', 'french_southern_territories'],
  sheet: [4, 9],
  shortName: 'flag-tf'
}, {
  name: 'Togo Flag',
  unified: '1F1F9-1F1EC',
  keywords: ['flag_togo', 'tg', 'flag', 'nation', 'country', 'banner', 'togo'],
  sheet: [4, 10],
  shortName: 'flag-tg'
}, {
  name: 'Thailand Flag',
  unified: '1F1F9-1F1ED',
  keywords: ['flag_thailand', 'th', 'flag', 'nation', 'country', 'banner', 'thailand'],
  sheet: [4, 11],
  shortName: 'flag-th'
}, {
  name: 'Tajikistan Flag',
  unified: '1F1F9-1F1EF',
  keywords: ['flag_tajikistan', 'tj', 'flag', 'nation', 'country', 'banner', 'tajikistan'],
  sheet: [4, 12],
  shortName: 'flag-tj'
}, {
  name: 'Tokelau Flag',
  unified: '1F1F9-1F1F0',
  keywords: ['flag_tokelau', 'tk', 'flag', 'nation', 'country', 'banner', 'tokelau'],
  sheet: [4, 13],
  shortName: 'flag-tk'
}, {
  name: 'Timor-Leste Flag',
  unified: '1F1F9-1F1F1',
  keywords: ['flag_timor_leste', 'timor', 'leste', 'flag', 'nation', 'country', 'banner', 'timor_leste'],
  sheet: [4, 14],
  shortName: 'flag-tl'
}, {
  name: 'Turkmenistan Flag',
  unified: '1F1F9-1F1F2',
  keywords: ['flag_turkmenistan', 'flag', 'nation', 'country', 'banner', 'turkmenistan'],
  sheet: [4, 15],
  shortName: 'flag-tm'
}, {
  name: 'Tunisia Flag',
  unified: '1F1F9-1F1F3',
  keywords: ['flag_tunisia', 'tn', 'flag', 'nation', 'country', 'banner', 'tunisia'],
  sheet: [4, 16],
  shortName: 'flag-tn'
}, {
  name: 'Tonga Flag',
  unified: '1F1F9-1F1F4',
  keywords: ['flag_tonga', 'to', 'flag', 'nation', 'country', 'banner', 'tonga'],
  sheet: [4, 17],
  shortName: 'flag-to'
}, {
  name: 'Turkey Flag',
  unified: '1F1F9-1F1F7',
  keywords: ['flag_turkey', 'turkey', 'flag', 'nation', 'country', 'banner', 'turkey'],
  sheet: [4, 18],
  shortName: 'flag-tr'
}, {
  name: 'Trinidad & Tobago Flag',
  unified: '1F1F9-1F1F9',
  keywords: ['flag_trinidad_tobago', 'trinidad', 'tobago', 'flag', 'nation', 'country', 'banner', 'trinidad_tobago'],
  sheet: [4, 19],
  shortName: 'flag-tt'
}, {
  name: 'Tuvalu Flag',
  unified: '1F1F9-1F1FB',
  keywords: ['flag_tuvalu', 'flag', 'nation', 'country', 'banner', 'tuvalu'],
  sheet: [4, 20],
  shortName: 'flag-tv'
}, {
  name: 'Taiwan Flag',
  unified: '1F1F9-1F1FC',
  keywords: ['flag_taiwan', 'tw', 'flag', 'nation', 'country', 'banner', 'taiwan'],
  sheet: [4, 21],
  shortName: 'flag-tw'
}, {
  name: 'Tanzania Flag',
  unified: '1F1F9-1F1FF',
  keywords: ['flag_tanzania', 'tanzania', 'united', 'republic', 'flag', 'nation', 'country', 'banner', 'tanzania'],
  sheet: [4, 22],
  shortName: 'flag-tz'
}, {
  name: 'Ukraine Flag',
  unified: '1F1FA-1F1E6',
  keywords: ['flag_ukraine', 'ua', 'flag', 'nation', 'country', 'banner', 'ukraine'],
  sheet: [4, 23],
  shortName: 'flag-ua'
}, {
  name: 'Uganda Flag',
  unified: '1F1FA-1F1EC',
  keywords: ['flag_uganda', 'ug', 'flag', 'nation', 'country', 'banner', 'uganda'],
  sheet: [4, 24],
  shortName: 'flag-ug'
}, {
  name: 'U.s. Outlying Islands Flag',
  unified: '1F1FA-1F1F2',
  keywords: ['flag_u_s_outlying_islands'],
  sheet: [4, 25],
  shortName: 'flag-um'
}, {
  name: 'United Nations Flag',
  unified: '1F1FA-1F1F3',
  keywords: ['flag_united_nations', 'un', 'flag', 'banner'],
  sheet: [4, 26],
  shortName: 'flag-un'
}, {
  name: 'United States Flag',
  unified: '1F1FA-1F1F8',
  keywords: ['flag_united_states', 'united', 'states', 'america', 'flag', 'nation', 'country', 'banner', 'united_states'],
  sheet: [4, 27],
  shortNames: ['flag-us'],
  shortName: 'us'
}, {
  name: 'Uruguay Flag',
  unified: '1F1FA-1F1FE',
  keywords: ['flag_uruguay', 'uy', 'flag', 'nation', 'country', 'banner', 'uruguay'],
  sheet: [4, 28],
  shortName: 'flag-uy'
}, {
  name: 'Uzbekistan Flag',
  unified: '1F1FA-1F1FF',
  keywords: ['flag_uzbekistan', 'uz', 'flag', 'nation', 'country', 'banner', 'uzbekistan'],
  sheet: [4, 29],
  shortName: 'flag-uz'
}, {
  name: 'Vatican City Flag',
  unified: '1F1FB-1F1E6',
  keywords: ['flag_vatican_city', 'vatican', 'city', 'flag', 'nation', 'country', 'banner', 'vatican_city'],
  sheet: [4, 30],
  shortName: 'flag-va'
}, {
  name: 'St. Vincent & Grenadines Flag',
  unified: '1F1FB-1F1E8',
  keywords: ['flag_st_vincent_grenadines', 'saint', 'vincent', 'grenadines', 'flag', 'nation', 'country', 'banner', 'st_vincent_grenadines'],
  sheet: [4, 31],
  shortName: 'flag-vc'
}, {
  name: 'Venezuela Flag',
  unified: '1F1FB-1F1EA',
  keywords: ['flag_venezuela', 've', 'bolivarian', 'republic', 'flag', 'nation', 'country', 'banner', 'venezuela'],
  sheet: [4, 32],
  shortName: 'flag-ve'
}, {
  name: 'British Virgin Islands Flag',
  unified: '1F1FB-1F1EC',
  keywords: ['flag_british_virgin_islands', 'british', 'virgin', 'islands', 'bvi', 'flag', 'nation', 'country', 'banner', 'british_virgin_islands'],
  sheet: [4, 33],
  shortName: 'flag-vg'
}, {
  name: 'U.s. Virgin Islands Flag',
  unified: '1F1FB-1F1EE',
  keywords: ['flag_u_s_virgin_islands', 'virgin', 'islands', 'us', 'flag', 'nation', 'country', 'banner', 'u_s_virgin_islands'],
  sheet: [4, 34],
  shortName: 'flag-vi'
}, {
  name: 'Vietnam Flag',
  unified: '1F1FB-1F1F3',
  keywords: ['flag_vietnam', 'viet', 'nam', 'flag', 'nation', 'country', 'banner', 'vietnam'],
  sheet: [4, 35],
  shortName: 'flag-vn'
}, {
  name: 'Vanuatu Flag',
  unified: '1F1FB-1F1FA',
  keywords: ['flag_vanuatu', 'vu', 'flag', 'nation', 'country', 'banner', 'vanuatu'],
  sheet: [4, 36],
  shortName: 'flag-vu'
}, {
  name: 'Wallis & Futuna Flag',
  unified: '1F1FC-1F1EB',
  keywords: ['flag_wallis_futuna', 'wallis', 'futuna', 'flag', 'nation', 'country', 'banner', 'wallis_futuna'],
  sheet: [4, 37],
  shortName: 'flag-wf'
}, {
  name: 'Samoa Flag',
  unified: '1F1FC-1F1F8',
  keywords: ['flag_samoa', 'ws', 'flag', 'nation', 'country', 'banner', 'samoa'],
  sheet: [4, 38],
  shortName: 'flag-ws'
}, {
  name: 'Kosovo Flag',
  unified: '1F1FD-1F1F0',
  keywords: ['flag_kosovo', 'xk', 'flag', 'nation', 'country', 'banner', 'kosovo'],
  sheet: [4, 39],
  shortName: 'flag-xk'
}, {
  name: 'Yemen Flag',
  unified: '1F1FE-1F1EA',
  keywords: ['flag_yemen', 'ye', 'flag', 'nation', 'country', 'banner', 'yemen'],
  sheet: [4, 40],
  shortName: 'flag-ye'
}, {
  name: 'Mayotte Flag',
  unified: '1F1FE-1F1F9',
  keywords: ['flag_mayotte', 'yt', 'flag', 'nation', 'country', 'banner', 'mayotte'],
  sheet: [4, 41],
  shortName: 'flag-yt'
}, {
  name: 'South Africa Flag',
  unified: '1F1FF-1F1E6',
  keywords: ['flag_south_africa', 'south', 'africa', 'flag', 'nation', 'country', 'banner', 'south_africa'],
  sheet: [4, 42],
  shortName: 'flag-za'
}, {
  name: 'Zambia Flag',
  unified: '1F1FF-1F1F2',
  keywords: ['flag_zambia', 'zm', 'flag', 'nation', 'country', 'banner', 'zambia'],
  sheet: [4, 43],
  shortName: 'flag-zm'
}, {
  name: 'Zimbabwe Flag',
  unified: '1F1FF-1F1FC',
  keywords: ['flag_zimbabwe', 'zw', 'flag', 'nation', 'country', 'banner', 'zimbabwe'],
  sheet: [4, 44],
  shortName: 'flag-zw'
}, {
  name: 'England Flag',
  unified: '1F3F4-E0067-E0062-E0065-E006E-E0067-E007F',
  keywords: ['flag_england', 'flag', 'english'],
  sheet: [10, 32],
  shortName: 'flag-england'
}, {
  name: 'Scotland Flag',
  unified: '1F3F4-E0067-E0062-E0073-E0063-E0074-E007F',
  keywords: ['flag_scotland', 'flag', 'scottish'],
  sheet: [10, 33],
  shortName: 'flag-scotland'
}, {
  name: 'Wales Flag',
  unified: '1F3F4-E0067-E0062-E0077-E006C-E0073-E007F',
  keywords: ['flag_wales', 'flag', 'welsh'],
  sheet: [10, 34],
  shortName: 'flag-wales'
}];
const skins = [{
  name: 'Emoji Modifier Fitzpatrick Type-1-2',
  unified: '1F3FB',
  sheet: [10, 41],
  shortName: 'skin-tone-2'
}, {
  name: 'Emoji Modifier Fitzpatrick Type-3',
  unified: '1F3FC',
  sheet: [10, 42],
  shortName: 'skin-tone-3'
}, {
  name: 'Emoji Modifier Fitzpatrick Type-4',
  unified: '1F3FD',
  sheet: [10, 43],
  shortName: 'skin-tone-4'
}, {
  name: 'Emoji Modifier Fitzpatrick Type-5',
  unified: '1F3FE',
  sheet: [10, 44],
  shortName: 'skin-tone-5'
}, {
  name: 'Emoji Modifier Fitzpatrick Type-6',
  unified: '1F3FF',
  sheet: [10, 45],
  shortName: 'skin-tone-6'
}];
const COLONS_REGEX = /^(?:\:([^\:]+)\:)(?:\:skin-tone-(\d)\:)?$/;
const SKINS = ['1F3FA', '1F3FB', '1F3FC', '1F3FD', '1F3FE', '1F3FF'];
const DEFAULT_BACKGROUNDFN = (set, sheetSize) => `https://cdn.jsdelivr.net/npm/emoji-datasource-${set}@14.0.0/img/${set}/sheets-256/${sheetSize}.png`;
class EmojiService {
  uncompressed = false;
  names = {};
  emojis = [];
  constructor() {
    if (!this.uncompressed) {
      this.uncompress(emojis);
      this.uncompressed = true;
    }
  }
  uncompress(list) {
    this.emojis = list.map(emoji => {
      const data = {
        ...emoji
      };
      if (!data.shortNames) {
        data.shortNames = [];
      }
      data.shortNames.unshift(data.shortName);
      data.id = data.shortName;
      data.native = this.unifiedToNative(data.unified);
      if (!data.skinVariations) {
        data.skinVariations = [];
      }
      if (!data.keywords) {
        data.keywords = [];
      }
      if (!data.emoticons) {
        data.emoticons = [];
      }
      if (!data.hidden) {
        data.hidden = [];
      }
      if (!data.text) {
        data.text = '';
      }
      if (data.obsoletes) {
        // get keywords from emoji that it obsoletes since that is shared
        const f = list.find(x => x.unified === data.obsoletes);
        if (f) {
          if (f.keywords) {
            data.keywords = [...data.keywords, ...f.keywords, f.shortName];
          } else {
            data.keywords = [...data.keywords, f.shortName];
          }
        }
      }
      this.names[data.unified] = data;
      for (const n of data.shortNames) {
        this.names[n] = data;
      }
      return data;
    });
  }
  getData(emoji, skin, set) {
    let emojiData;
    if (typeof emoji === 'string') {
      const matches = emoji.match(COLONS_REGEX);
      if (matches) {
        emoji = matches[1];
        if (matches[2]) {
          skin = parseInt(matches[2], 10);
        }
      }
      if (this.names.hasOwnProperty(emoji)) {
        emojiData = this.names[emoji];
      } else {
        return null;
      }
    } else if (emoji.id) {
      emojiData = this.names[emoji.id];
    } else if (emoji.unified) {
      emojiData = this.names[emoji.unified.toUpperCase()];
    }
    if (!emojiData) {
      emojiData = emoji;
      emojiData.custom = true;
    }
    const hasSkinVariations = emojiData.skinVariations && emojiData.skinVariations.length;
    if (hasSkinVariations && skin && skin > 1 && set) {
      emojiData = {
        ...emojiData
      };
      const skinKey = SKINS[skin - 1];
      const variationData = emojiData.skinVariations.find(n => n.unified.includes(skinKey));
      if (!variationData.hidden || !variationData.hidden.includes(set)) {
        emojiData.skinTone = skin;
        emojiData = {
          ...emojiData,
          ...variationData
        };
      }
      emojiData.native = this.unifiedToNative(emojiData.unified);
    }
    emojiData.set = set || '';
    return emojiData;
  }
  unifiedToNative(unified) {
    const codePoints = unified.split('-').map(u => parseInt(`0x${u}`, 16));
    return String.fromCodePoint(...codePoints);
  }
  emojiSpriteStyles(sheet, set = 'apple', size = 24, sheetSize = 64, sheetRows = 60, backgroundImageFn = DEFAULT_BACKGROUNDFN, sheetColumns = 61, url) {
    const hasImageUrl = !!url;
    url = url || backgroundImageFn(set, sheetSize);
    return {
      width: `${size}px`,
      height: `${size}px`,
      display: 'inline-block',
      'background-image': `url(${url})`,
      'background-size': hasImageUrl ? '100% 100%' : `${100 * sheetColumns}% ${100 * sheetRows}%`,
      'background-position': hasImageUrl ? undefined : this.getSpritePosition(sheet, sheetColumns)
    };
  }
  getSpritePosition(sheet, sheetColumns) {
    const [sheetX, sheetY] = sheet;
    const multiply = 100 / (sheetColumns - 1);
    return `${multiply * sheetX}% ${multiply * sheetY}%`;
  }
  sanitize(emoji) {
    if (emoji === null) {
      return null;
    }
    const id = emoji.id || emoji.shortNames[0];
    let colons = `:${id}:`;
    if (emoji.skinTone) {
      colons += `:skin-tone-${emoji.skinTone}:`;
    }
    emoji.colons = colons;
    return {
      ...emoji
    };
  }
  getSanitizedData(emoji, skin, set) {
    return this.sanitize(this.getData(emoji, skin, set));
  }
  static ɵfac = function EmojiService_Factory(t) {
    return new (t || EmojiService)();
  };
  static ɵprov = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({
    token: EmojiService,
    factory: EmojiService.ɵfac,
    providedIn: 'root'
  });
}
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](EmojiService, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Injectable,
    args: [{
      providedIn: 'root'
    }]
  }], function () {
    return [];
  }, null);
})();
class EmojiComponent {
  skin = 1;
  set = 'apple';
  sheetSize = 64;
  /** Renders the native unicode emoji */
  isNative = false;
  forceSize = false;
  tooltip = false;
  size = 24;
  emoji = '';
  fallback;
  hideObsolete = false;
  sheetRows;
  sheetColumns;
  useButton;
  /**
   * Note: `emojiOver` and `emojiOverOutsideAngular` are dispatched on the same event (`mouseenter`), but
   *       for different purposes. The `emojiOverOutsideAngular` event is listened only in `emoji-category`
   *       component and the category component doesn't care about zone context the callback is being called in.
   *       The `emojiOver` is for backwards compatibility if anyone is listening to this event explicitly in their code.
   */
  emojiOver = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
  emojiOverOutsideAngular = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
  /** See comments above, this serves the same purpose. */
  emojiLeave = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
  emojiLeaveOutsideAngular = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
  emojiClick = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
  emojiClickOutsideAngular = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
  style;
  title = undefined;
  label = '';
  unified;
  custom = false;
  isVisible = true;
  // TODO: replace 4.0.3 w/ dynamic get verison from emoji-datasource in package.json
  backgroundImageFn = DEFAULT_BACKGROUNDFN;
  imageUrlFn;
  set button(button) {
    // Note: `runOutsideAngular` is used to trigger `addEventListener` outside of the Angular zone
    //       too. See `setupMouseEnterListener`. The `switchMap` will subscribe to `fromEvent` considering
    //       the context where the factory is called in.
    this.ngZone.runOutsideAngular(() => this.button$.next(button?.nativeElement));
  }
  /**
   * The subject used to emit whenever view queries are run and `button` or `span` is set/removed.
   * We use subject to keep the reactive behavior so we don't have to add and remove event listeners manually.
   */
  button$ = new rxjs__WEBPACK_IMPORTED_MODULE_1__.Subject();
  destroy$ = new rxjs__WEBPACK_IMPORTED_MODULE_1__.Subject();
  ngZone = (0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.inject)(_angular_core__WEBPACK_IMPORTED_MODULE_0__.NgZone);
  emojiService = (0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.inject)(EmojiService);
  constructor() {
    this.setupMouseListeners();
  }
  ngOnChanges() {
    if (!this.emoji) {
      return this.isVisible = false;
    }
    const data = this.getData();
    if (!data) {
      return this.isVisible = false;
    }
    // const children = this.children;
    this.unified = data.native || null;
    if (data.custom) {
      this.custom = data.custom;
    }
    if (!data.unified && !data.custom) {
      return this.isVisible = false;
    }
    if (this.tooltip) {
      this.title = data.shortNames[0];
    }
    if (data.obsoletedBy && this.hideObsolete) {
      return this.isVisible = false;
    }
    this.label = [data.native].concat(data.shortNames).filter(Boolean).join(', ');
    if (this.isNative && data.unified && data.native) {
      // hide older emoji before the split into gendered emoji
      this.style = {
        fontSize: `${this.size}px`
      };
      if (this.forceSize) {
        this.style.display = 'inline-block';
        this.style.width = `${this.size}px`;
        this.style.height = `${this.size}px`;
        this.style['word-break'] = 'keep-all';
      }
    } else if (data.custom) {
      this.style = {
        width: `${this.size}px`,
        height: `${this.size}px`,
        display: 'inline-block'
      };
      if (data.spriteUrl && this.sheetRows && this.sheetColumns) {
        this.style = {
          ...this.style,
          backgroundImage: `url(${data.spriteUrl})`,
          backgroundSize: `${100 * this.sheetColumns}% ${100 * this.sheetRows}%`,
          backgroundPosition: this.emojiService.getSpritePosition(data.sheet, this.sheetColumns)
        };
      } else {
        this.style = {
          ...this.style,
          backgroundImage: `url(${data.imageUrl})`,
          backgroundSize: 'contain'
        };
      }
    } else {
      if (data.hidden.length && data.hidden.includes(this.set)) {
        if (this.fallback) {
          this.style = {
            fontSize: `${this.size}px`
          };
          this.unified = this.fallback(data, this);
        } else {
          return this.isVisible = false;
        }
      } else {
        this.style = this.emojiService.emojiSpriteStyles(data.sheet, this.set, this.size, this.sheetSize, this.sheetRows, this.backgroundImageFn, this.sheetColumns, this.imageUrlFn?.(this.getData()));
      }
    }
    return this.isVisible = true;
  }
  ngOnDestroy() {
    this.destroy$.next();
  }
  getData() {
    return this.emojiService.getData(this.emoji, this.skin, this.set);
  }
  getSanitizedData() {
    return this.emojiService.getSanitizedData(this.emoji, this.skin, this.set);
  }
  setupMouseListeners() {
    const eventListener$ = eventName => this.button$.pipe(
    // Note: `EMPTY` is used to remove event listener once the DOM node is removed.
    (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.switchMap)(button => button ? (0,rxjs__WEBPACK_IMPORTED_MODULE_3__.fromEvent)(button, eventName) : rxjs__WEBPACK_IMPORTED_MODULE_4__.EMPTY), (0,rxjs__WEBPACK_IMPORTED_MODULE_5__.takeUntil)(this.destroy$));
    eventListener$('click').subscribe($event => {
      const emoji = this.getSanitizedData();
      this.emojiClickOutsideAngular.emit({
        emoji,
        $event
      });
      // Note: this is done for backwards compatibility. We run change detection if developers
      //       are listening to `emojiClick` in their code. For instance:
      //       `<ngx-emoji (emojiClick)="..."></ngx-emoji>`.
      if (this.emojiClick.observed) {
        this.ngZone.run(() => this.emojiClick.emit({
          emoji,
          $event
        }));
      }
    });
    eventListener$('mouseenter').subscribe($event => {
      const emoji = this.getSanitizedData();
      this.emojiOverOutsideAngular.emit({
        emoji,
        $event
      });
      // Note: this is done for backwards compatibility. We run change detection if developers
      //       are listening to `emojiOver` in their code. For instance:
      //       `<ngx-emoji (emojiOver)="..."></ngx-emoji>`.
      if (this.emojiOver.observed) {
        this.ngZone.run(() => this.emojiOver.emit({
          emoji,
          $event
        }));
      }
    });
    eventListener$('mouseleave').subscribe($event => {
      const emoji = this.getSanitizedData();
      this.emojiLeaveOutsideAngular.emit({
        emoji,
        $event
      });
      // Note: this is done for backwards compatibility. We run change detection if developers
      //       are listening to `emojiLeave` in their code. For instance:
      //       `<ngx-emoji (emojiLeave)="..."></ngx-emoji>`.
      if (this.emojiLeave.observed) {
        this.ngZone.run(() => this.emojiLeave.emit({
          emoji,
          $event
        }));
      }
    });
  }
  static ɵfac = function EmojiComponent_Factory(t) {
    return new (t || EmojiComponent)();
  };
  static ɵcmp = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
    type: EmojiComponent,
    selectors: [["ngx-emoji"]],
    viewQuery: function EmojiComponent_Query(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](_c0, 5);
      }
      if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.button = _t.first);
      }
    },
    inputs: {
      skin: "skin",
      set: "set",
      sheetSize: "sheetSize",
      isNative: "isNative",
      forceSize: "forceSize",
      tooltip: "tooltip",
      size: "size",
      emoji: "emoji",
      fallback: "fallback",
      hideObsolete: "hideObsolete",
      sheetRows: "sheetRows",
      sheetColumns: "sheetColumns",
      useButton: "useButton",
      backgroundImageFn: "backgroundImageFn",
      imageUrlFn: "imageUrlFn"
    },
    outputs: {
      emojiOver: "emojiOver",
      emojiOverOutsideAngular: "emojiOverOutsideAngular",
      emojiLeave: "emojiLeave",
      emojiLeaveOutsideAngular: "emojiLeaveOutsideAngular",
      emojiClick: "emojiClick",
      emojiClickOutsideAngular: "emojiClickOutsideAngular"
    },
    standalone: true,
    features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵNgOnChangesFeature"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵStandaloneFeature"]],
    ngContentSelectors: _c1,
    decls: 3,
    vars: 1,
    consts: [[3, "ngIf"], ["spanTpl", ""], ["type", "button", "class", "emoji-mart-emoji", 3, "emoji-mart-emoji-native", "emoji-mart-emoji-custom", 4, "ngIf", "ngIfElse"], ["type", "button", 1, "emoji-mart-emoji"], ["button", ""], [3, "ngStyle"], [1, "emoji-mart-emoji"]],
    template: function EmojiComponent_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵprojectionDef"](_c1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](0, EmojiComponent_ng_template_0_Template, 1, 2, "ng-template", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, EmojiComponent_ng_template_1_Template, 5, 8, "ng-template", null, 1, _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplateRefExtractor"]);
      }
      if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.isVisible);
      }
    },
    dependencies: [_angular_common__WEBPACK_IMPORTED_MODULE_6__.CommonModule, _angular_common__WEBPACK_IMPORTED_MODULE_6__.NgIf, _angular_common__WEBPACK_IMPORTED_MODULE_6__.NgStyle],
    encapsulation: 2,
    changeDetection: 0
  });
}
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](EmojiComponent, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Component,
    args: [{
      selector: 'ngx-emoji',
      template: `
    <ng-template [ngIf]="isVisible">
      <button
        *ngIf="useButton; else spanTpl"
        #button
        type="button"
        [attr.title]="title"
        [attr.aria-label]="label"
        class="emoji-mart-emoji"
        [class.emoji-mart-emoji-native]="isNative"
        [class.emoji-mart-emoji-custom]="custom"
      >
        <span [ngStyle]="style">
          <ng-template [ngIf]="isNative">{{ unified }}</ng-template>
          <ng-content></ng-content>
        </span>
      </button>
    </ng-template>

    <ng-template #spanTpl>
      <span
        #button
        [attr.title]="title"
        [attr.aria-label]="label"
        class="emoji-mart-emoji"
        [class.emoji-mart-emoji-native]="isNative"
        [class.emoji-mart-emoji-custom]="custom"
      >
        <span [ngStyle]="style">
          <ng-template [ngIf]="isNative">{{ unified }}</ng-template>
          <ng-content></ng-content>
        </span>
      </span>
    </ng-template>
  `,
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ChangeDetectionStrategy.OnPush,
      preserveWhitespaces: false,
      standalone: true,
      imports: [_angular_common__WEBPACK_IMPORTED_MODULE_6__.CommonModule]
    }]
  }], function () {
    return [];
  }, {
    skin: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    set: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    sheetSize: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    isNative: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    forceSize: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    tooltip: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    size: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    emoji: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    fallback: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    hideObsolete: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    sheetRows: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    sheetColumns: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    useButton: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    emojiOver: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
    }],
    emojiOverOutsideAngular: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
    }],
    emojiLeave: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
    }],
    emojiLeaveOutsideAngular: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
    }],
    emojiClick: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
    }],
    emojiClickOutsideAngular: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
    }],
    backgroundImageFn: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    imageUrlFn: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    button: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ViewChild,
      args: ['button', {
        static: false
      }]
    }]
  });
})();
class EmojiModule {
  static ɵfac = function EmojiModule_Factory(t) {
    return new (t || EmojiModule)();
  };
  static ɵmod = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineNgModule"]({
    type: EmojiModule
  });
  static ɵinj = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjector"]({
    imports: [EmojiComponent]
  });
}
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](EmojiModule, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.NgModule,
    args: [{
      imports: [EmojiComponent],
      exports: [EmojiComponent]
    }]
  }], null, null);
})();

/**
 * Generated bundle index. Do not edit.
 */



/***/ }),

/***/ 2605:
/*!****************************************************************************!*\
  !*** ./node_modules/@ctrl/ngx-emoji-mart/fesm2022/ctrl-ngx-emoji-mart.mjs ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AnchorsComponent: () => (/* binding */ AnchorsComponent),
/* harmony export */   CategoryComponent: () => (/* binding */ CategoryComponent),
/* harmony export */   EmojiFrequentlyService: () => (/* binding */ EmojiFrequentlyService),
/* harmony export */   EmojiSearch: () => (/* binding */ EmojiSearch),
/* harmony export */   PickerComponent: () => (/* binding */ PickerComponent),
/* harmony export */   PickerModule: () => (/* binding */ PickerModule),
/* harmony export */   PreviewComponent: () => (/* binding */ PreviewComponent),
/* harmony export */   SearchComponent: () => (/* binding */ SearchComponent),
/* harmony export */   SkinComponent: () => (/* binding */ SkinComponent)
/* harmony export */ });
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common */ 6575);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ 1699);
/* harmony import */ var _ctrl_ngx_emoji_mart_ngx_emoji__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ctrl/ngx-emoji-mart/ngx-emoji */ 8526);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ 2513);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs */ 9016);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! rxjs */ 274);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/forms */ 8849);









function AnchorsComponent_ng_template_1_span_0_Template(rf, ctx) {
  if (rf & 1) {
    const _r6 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function AnchorsComponent_ng_template_1_span_0_Template_span_click_0_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r6);
      const idx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]().index;
      const ctx_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
      return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵresetView"](ctx_r4.handleClick($event, idx_r2));
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnamespaceSVG"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "svg", 4);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](3, "path");
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]()();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnamespaceHTML"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](4, "span", 5);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const category_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]().$implicit;
    const ctx_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵstyleProp"]("color", category_r1.name === ctx_r3.selected ? ctx_r3.color : null);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵclassProp"]("emoji-mart-anchor-selected", category_r1.name === ctx_r3.selected);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵattribute"]("title", ctx_r3.i18n.categories[category_r1.id]);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵattribute"]("d", ctx_r3.icons[category_r1.id]);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵstyleProp"]("background-color", ctx_r3.color);
  }
}
function AnchorsComponent_ng_template_1_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](0, AnchorsComponent_ng_template_1_span_0_Template, 5, 8, "span", 2);
  }
  if (rf & 2) {
    const category_r1 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", category_r1.anchor !== false);
  }
}
const _c0 = ["container"];
const _c1 = ["label"];
function CategoryComponent_div_6_div_1_ngx_emoji_1_Template(rf, ctx) {
  if (rf & 1) {
    const _r11 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "ngx-emoji", 9);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("emojiOverOutsideAngular", function CategoryComponent_div_6_div_1_ngx_emoji_1_Template_ngx_emoji_emojiOverOutsideAngular_0_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r11);
      const ctx_r10 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](3);
      return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵresetView"](ctx_r10.emojiOverOutsideAngular.emit($event));
    })("emojiLeaveOutsideAngular", function CategoryComponent_div_6_div_1_ngx_emoji_1_Template_ngx_emoji_emojiLeaveOutsideAngular_0_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r11);
      const ctx_r12 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](3);
      return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵresetView"](ctx_r12.emojiLeaveOutsideAngular.emit($event));
    })("emojiClickOutsideAngular", function CategoryComponent_div_6_div_1_ngx_emoji_1_Template_ngx_emoji_emojiClickOutsideAngular_0_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r11);
      const ctx_r13 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](3);
      return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵresetView"](ctx_r13.emojiClickOutsideAngular.emit($event));
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const emoji_r9 = ctx.$implicit;
    const ctx_r8 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("emoji", emoji_r9)("size", ctx_r8.emojiSize)("skin", ctx_r8.emojiSkin)("isNative", ctx_r8.emojiIsNative)("set", ctx_r8.emojiSet)("sheetSize", ctx_r8.emojiSheetSize)("forceSize", ctx_r8.emojiForceSize)("tooltip", ctx_r8.emojiTooltip)("backgroundImageFn", ctx_r8.emojiBackgroundImageFn)("imageUrlFn", ctx_r8.emojiImageUrlFn)("hideObsolete", ctx_r8.hideObsolete)("useButton", ctx_r8.emojiUseButton);
  }
}
function CategoryComponent_div_6_div_1_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, CategoryComponent_div_6_div_1_ngx_emoji_1_Template, 1, 12, "ngx-emoji", 8);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const filteredEmojis_r7 = ctx.ngIf;
    const ctx_r6 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngForOf", filteredEmojis_r7)("ngForTrackBy", ctx_r6.trackById);
  }
}
function CategoryComponent_div_6_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, CategoryComponent_div_6_div_1_Template, 2, 2, "div", 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipe"](2, "async");
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpipeBind1"](2, 1, ctx_r2.filteredEmojis$));
  }
}
function CategoryComponent_div_7_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div")(1, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](2, "ngx-emoji", 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "div", 11);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]()();
  }
  if (rf & 2) {
    const ctx_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("emoji", ctx_r3.notFoundEmoji)("size", 38)("skin", ctx_r3.emojiSkin)("isNative", ctx_r3.emojiIsNative)("set", ctx_r3.emojiSet)("sheetSize", ctx_r3.emojiSheetSize)("forceSize", ctx_r3.emojiForceSize)("tooltip", ctx_r3.emojiTooltip)("backgroundImageFn", ctx_r3.emojiBackgroundImageFn)("useButton", ctx_r3.emojiUseButton);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", ctx_r3.i18n.notfound, " ");
  }
}
function CategoryComponent_ng_template_8_ngx_emoji_0_Template(rf, ctx) {
  if (rf & 1) {
    const _r17 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "ngx-emoji", 9);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("emojiOverOutsideAngular", function CategoryComponent_ng_template_8_ngx_emoji_0_Template_ngx_emoji_emojiOverOutsideAngular_0_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r17);
      const ctx_r16 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);
      return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵresetView"](ctx_r16.emojiOverOutsideAngular.emit($event));
    })("emojiLeaveOutsideAngular", function CategoryComponent_ng_template_8_ngx_emoji_0_Template_ngx_emoji_emojiLeaveOutsideAngular_0_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r17);
      const ctx_r18 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);
      return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵresetView"](ctx_r18.emojiLeaveOutsideAngular.emit($event));
    })("emojiClickOutsideAngular", function CategoryComponent_ng_template_8_ngx_emoji_0_Template_ngx_emoji_emojiClickOutsideAngular_0_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r17);
      const ctx_r19 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);
      return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵresetView"](ctx_r19.emojiClickOutsideAngular.emit($event));
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const emoji_r15 = ctx.$implicit;
    const ctx_r14 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("emoji", emoji_r15)("size", ctx_r14.emojiSize)("skin", ctx_r14.emojiSkin)("isNative", ctx_r14.emojiIsNative)("set", ctx_r14.emojiSet)("sheetSize", ctx_r14.emojiSheetSize)("forceSize", ctx_r14.emojiForceSize)("tooltip", ctx_r14.emojiTooltip)("backgroundImageFn", ctx_r14.emojiBackgroundImageFn)("imageUrlFn", ctx_r14.emojiImageUrlFn)("hideObsolete", ctx_r14.hideObsolete)("useButton", ctx_r14.emojiUseButton);
  }
}
function CategoryComponent_ng_template_8_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](0, CategoryComponent_ng_template_8_ngx_emoji_0_Template, 1, 12, "ngx-emoji", 8);
  }
  if (rf & 2) {
    const ctx_r5 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngForOf", ctx_r5.emojisToDisplay)("ngForTrackBy", ctx_r5.trackById);
  }
}
function SkinComponent_span_1_Template(rf, ctx) {
  if (rf & 1) {
    const _r3 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span", 2)(1, "span", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function SkinComponent_span_1_Template_span_click_1_listener() {
      const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r3);
      const skinTone_r1 = restoredCtx.$implicit;
      const ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
      return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵresetView"](ctx_r2.handleClick(skinTone_r1));
    })("keyup.enter", function SkinComponent_span_1_Template_span_keyup_enter_1_listener() {
      const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r3);
      const skinTone_r1 = restoredCtx.$implicit;
      const ctx_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
      return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵresetView"](ctx_r4.handleClick(skinTone_r1));
    })("keyup.space", function SkinComponent_span_1_Template_span_keyup_space_1_listener() {
      const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r3);
      const skinTone_r1 = restoredCtx.$implicit;
      const ctx_r5 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
      return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵresetView"](ctx_r5.handleClick(skinTone_r1));
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]()();
  }
  if (rf & 2) {
    const skinTone_r1 = ctx.$implicit;
    const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵclassProp"]("selected", skinTone_r1 === ctx_r0.skin);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵclassMapInterpolate1"]("emoji-mart-skin emoji-mart-skin-tone-", skinTone_r1, "");
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("tabIndex", ctx_r0.tabIndex(skinTone_r1));
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵattribute"]("aria-hidden", !ctx_r0.isVisible(skinTone_r1))("aria-pressed", ctx_r0.pressed(skinTone_r1))("aria-haspopup", !!ctx_r0.isSelected(skinTone_r1))("aria-expanded", ctx_r0.expanded(skinTone_r1))("aria-label", ctx_r0.i18n.skintones[skinTone_r1])("title", ctx_r0.i18n.skintones[skinTone_r1]);
  }
}
function PreviewComponent_div_0_span_7_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span", 11);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const short_name_r4 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" :", short_name_r4, ": ");
  }
}
function PreviewComponent_div_0_span_9_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span", 15);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const emoticon_r5 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", emoticon_r5, " ");
  }
}
function PreviewComponent_div_0_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 8)(1, "div", 2);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](2, "ngx-emoji", 9);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "div", 4)(4, "div", 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](5);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](6, "div", 11);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](7, PreviewComponent_div_0_span_7_Template, 2, 1, "span", 12);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](8, "div", 13);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](9, PreviewComponent_div_0_span_9_Template, 2, 1, "span", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]()()();
  }
  if (rf & 2) {
    const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("emoji", ctx_r0.emoji)("size", 38)("isNative", ctx_r0.emojiIsNative)("skin", ctx_r0.emojiSkin)("size", ctx_r0.emojiSize)("set", ctx_r0.emojiSet)("sheetSize", ctx_r0.emojiSheetSize)("backgroundImageFn", ctx_r0.emojiBackgroundImageFn)("imageUrlFn", ctx_r0.emojiImageUrlFn);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](ctx_r0.emojiData.name);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngForOf", ctx_r0.emojiData.shortNames);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngForOf", ctx_r0.listedEmoticons);
  }
}
function PreviewComponent_ngx_emoji_3_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](0, "ngx-emoji", 16);
  }
  if (rf & 2) {
    const ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("isNative", ctx_r1.emojiIsNative)("skin", ctx_r1.emojiSkin)("set", ctx_r1.emojiSet)("emoji", ctx_r1.idleEmoji)("backgroundImageFn", ctx_r1.emojiBackgroundImageFn)("size", 38)("imageUrlFn", ctx_r1.emojiImageUrlFn);
  }
}
const _c2 = ["inputRef"];
const _c3 = ["scrollRef"];
function PickerComponent_emoji_search_3_Template(rf, ctx) {
  if (rf & 1) {
    const _r5 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "emoji-search", 8);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("searchResults", function PickerComponent_emoji_search_3_Template_emoji_search_searchResults_0_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r5);
      const ctx_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
      return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵresetView"](ctx_r4.handleSearch($event));
    })("enterKeyOutsideAngular", function PickerComponent_emoji_search_3_Template_emoji_search_enterKeyOutsideAngular_0_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r5);
      const ctx_r6 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
      return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵresetView"](ctx_r6.handleEnterKey($event));
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("i18n", ctx_r0.i18n)("include", ctx_r0.include)("exclude", ctx_r0.exclude)("custom", ctx_r0.custom)("autoFocus", ctx_r0.autoFocus)("icons", ctx_r0.searchIcons)("emojisToShowFilter", ctx_r0.emojisToShowFilter);
  }
}
function PickerComponent_emoji_category_6_Template(rf, ctx) {
  if (rf & 1) {
    const _r10 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "emoji-category", 9);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("emojiOverOutsideAngular", function PickerComponent_emoji_category_6_Template_emoji_category_emojiOverOutsideAngular_0_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r10);
      const ctx_r9 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
      return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵresetView"](ctx_r9.handleEmojiOver($event));
    })("emojiLeaveOutsideAngular", function PickerComponent_emoji_category_6_Template_emoji_category_emojiLeaveOutsideAngular_0_listener() {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r10);
      const ctx_r11 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
      return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵresetView"](ctx_r11.handleEmojiLeave());
    })("emojiClickOutsideAngular", function PickerComponent_emoji_category_6_Template_emoji_category_emojiClickOutsideAngular_0_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r10);
      const ctx_r12 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
      return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵresetView"](ctx_r12.handleEmojiClick($event));
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const category_r7 = ctx.$implicit;
    const ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("id", category_r7.id)("name", category_r7.name)("emojis", category_r7.emojis)("perLine", ctx_r2.perLine)("totalFrequentLines", ctx_r2.totalFrequentLines)("hasStickyPosition", ctx_r2.isNative)("i18n", ctx_r2.i18n)("hideObsolete", ctx_r2.hideObsolete)("notFoundEmoji", ctx_r2.notFoundEmoji)("custom", category_r7.id === ctx_r2.RECENT_CATEGORY.id ? ctx_r2.CUSTOM_CATEGORY.emojis : undefined)("recent", category_r7.id === ctx_r2.RECENT_CATEGORY.id ? ctx_r2.recent : undefined)("virtualize", ctx_r2.virtualize)("virtualizeOffset", ctx_r2.virtualizeOffset)("emojiIsNative", ctx_r2.isNative)("emojiSkin", ctx_r2.skin)("emojiSize", ctx_r2.emojiSize)("emojiSet", ctx_r2.set)("emojiSheetSize", ctx_r2.sheetSize)("emojiForceSize", ctx_r2.isNative)("emojiTooltip", ctx_r2.emojiTooltip)("emojiBackgroundImageFn", ctx_r2.backgroundImageFn)("emojiImageUrlFn", ctx_r2.imageUrlFn)("emojiUseButton", ctx_r2.useButton);
  }
}
function PickerComponent_div_7_Template(rf, ctx) {
  if (rf & 1) {
    const _r14 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 1)(1, "emoji-preview", 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("skinChange", function PickerComponent_div_7_Template_emoji_preview_skinChange_1_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r14);
      const ctx_r13 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
      return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵresetView"](ctx_r13.handleSkinChange($event));
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]()();
  }
  if (rf & 2) {
    const ctx_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("emoji", ctx_r3.previewEmoji)("idleEmoji", ctx_r3.emoji)("emojiIsNative", ctx_r3.isNative)("emojiSize", 38)("emojiSkin", ctx_r3.skin)("emojiSet", ctx_r3.set)("i18n", ctx_r3.i18n)("emojiSheetSize", ctx_r3.sheetSize)("emojiBackgroundImageFn", ctx_r3.backgroundImageFn)("emojiImageUrlFn", ctx_r3.imageUrlFn);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵattribute"]("title", ctx_r3.title);
  }
}
class AnchorsComponent {
  categories = [];
  color;
  selected;
  i18n;
  icons = {};
  anchorClick = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
  trackByFn(idx, cat) {
    return cat.id;
  }
  handleClick($event, index) {
    this.anchorClick.emit({
      category: this.categories[index],
      index
    });
  }
  static ɵfac = function AnchorsComponent_Factory(t) {
    return new (t || AnchorsComponent)();
  };
  static ɵcmp = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
    type: AnchorsComponent,
    selectors: [["emoji-mart-anchors"]],
    inputs: {
      categories: "categories",
      color: "color",
      selected: "selected",
      i18n: "i18n",
      icons: "icons"
    },
    outputs: {
      anchorClick: "anchorClick"
    },
    standalone: true,
    features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵStandaloneFeature"]],
    decls: 2,
    vars: 2,
    consts: [[1, "emoji-mart-anchors"], ["ngFor", "", 3, "ngForOf", "ngForTrackBy"], ["class", "emoji-mart-anchor", 3, "emoji-mart-anchor-selected", "color", "click", 4, "ngIf"], [1, "emoji-mart-anchor", 3, "click"], ["xmlns", "http://www.w3.org/2000/svg", "viewBox", "0 0 24 24", "width", "24", "height", "24"], [1, "emoji-mart-anchor-bar"]],
    template: function AnchorsComponent_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, AnchorsComponent_ng_template_1_Template, 1, 1, "ng-template", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
      if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngForOf", ctx.categories)("ngForTrackBy", ctx.trackByFn);
      }
    },
    dependencies: [_angular_common__WEBPACK_IMPORTED_MODULE_1__.CommonModule, _angular_common__WEBPACK_IMPORTED_MODULE_1__.NgForOf, _angular_common__WEBPACK_IMPORTED_MODULE_1__.NgIf],
    encapsulation: 2,
    changeDetection: 0
  });
}
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](AnchorsComponent, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Component,
    args: [{
      selector: 'emoji-mart-anchors',
      template: `
    <div class="emoji-mart-anchors">
      <ng-template
        ngFor
        let-category
        [ngForOf]="categories"
        let-idx="index"
        [ngForTrackBy]="trackByFn"
      >
        <span
          *ngIf="category.anchor !== false"
          [attr.title]="i18n.categories[category.id]"
          (click)="this.handleClick($event, idx)"
          class="emoji-mart-anchor"
          [class.emoji-mart-anchor-selected]="category.name === selected"
          [style.color]="category.name === selected ? color : null"
        >
          <div>
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24">
              <path [attr.d]="icons[category.id]" />
            </svg>
          </div>
          <span class="emoji-mart-anchor-bar" [style.background-color]="color"></span>
        </span>
      </ng-template>
    </div>
  `,
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ChangeDetectionStrategy.OnPush,
      preserveWhitespaces: false,
      standalone: true,
      imports: [_angular_common__WEBPACK_IMPORTED_MODULE_1__.CommonModule]
    }]
  }], null, {
    categories: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    color: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    selected: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    i18n: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    icons: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    anchorClick: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
    }]
  });
})();
class EmojiFrequentlyService {
  platformId;
  NAMESPACE = 'emoji-mart';
  frequently = null;
  defaults = {};
  initialized = false;
  DEFAULTS = ['+1', 'grinning', 'kissing_heart', 'heart_eyes', 'laughing', 'stuck_out_tongue_winking_eye', 'sweat_smile', 'joy', 'scream', 'disappointed', 'unamused', 'weary', 'sob', 'sunglasses', 'heart', 'poop'];
  constructor(platformId) {
    this.platformId = platformId;
  }
  init() {
    this.frequently = JSON.parse((0,_angular_common__WEBPACK_IMPORTED_MODULE_1__.isPlatformBrowser)(this.platformId) && localStorage.getItem(`${this.NAMESPACE}.frequently`) || 'null');
    this.initialized = true;
  }
  add(emoji) {
    if (!this.initialized) {
      this.init();
    }
    if (!this.frequently) {
      this.frequently = this.defaults;
    }
    if (!this.frequently[emoji.id]) {
      this.frequently[emoji.id] = 0;
    }
    this.frequently[emoji.id] += 1;
    if ((0,_angular_common__WEBPACK_IMPORTED_MODULE_1__.isPlatformBrowser)(this.platformId)) {
      localStorage.setItem(`${this.NAMESPACE}.last`, emoji.id);
      localStorage.setItem(`${this.NAMESPACE}.frequently`, JSON.stringify(this.frequently));
    }
  }
  get(perLine, totalLines) {
    if (!this.initialized) {
      this.init();
    }
    if (this.frequently === null) {
      this.defaults = {};
      const result = [];
      for (let i = 0; i < perLine; i++) {
        this.defaults[this.DEFAULTS[i]] = perLine - i;
        result.push(this.DEFAULTS[i]);
      }
      return result;
    }
    const quantity = perLine * totalLines;
    const frequentlyKeys = Object.keys(this.frequently);
    const sorted = frequentlyKeys.sort((a, b) => this.frequently[a] - this.frequently[b]).reverse();
    const sliced = sorted.slice(0, quantity);
    const last = (0,_angular_common__WEBPACK_IMPORTED_MODULE_1__.isPlatformBrowser)(this.platformId) && localStorage.getItem(`${this.NAMESPACE}.last`);
    if (last && !sliced.includes(last)) {
      sliced.pop();
      sliced.push(last);
    }
    return sliced;
  }
  static ɵfac = function EmojiFrequentlyService_Factory(t) {
    return new (t || EmojiFrequentlyService)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.PLATFORM_ID));
  };
  static ɵprov = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({
    token: EmojiFrequentlyService,
    factory: EmojiFrequentlyService.ɵfac,
    providedIn: 'root'
  });
}
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](EmojiFrequentlyService, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Injectable,
    args: [{
      providedIn: 'root'
    }]
  }], function () {
    return [{
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Inject,
        args: [_angular_core__WEBPACK_IMPORTED_MODULE_0__.PLATFORM_ID]
      }]
    }];
  }, null);
})();
class CategoryComponent {
  ref;
  emojiService;
  frequently;
  emojis = null;
  hasStickyPosition = true;
  name = '';
  perLine = 9;
  totalFrequentLines = 4;
  recent = [];
  custom = [];
  i18n;
  id;
  hideObsolete = true;
  notFoundEmoji;
  virtualize = false;
  virtualizeOffset = 0;
  emojiIsNative;
  emojiSkin;
  emojiSize;
  emojiSet;
  emojiSheetSize;
  emojiForceSize;
  emojiTooltip;
  emojiBackgroundImageFn;
  emojiImageUrlFn;
  emojiUseButton;
  /**
   * Note: the suffix is added explicitly so we know the event is dispatched outside of the Angular zone.
   */
  emojiOverOutsideAngular = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
  emojiLeaveOutsideAngular = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
  emojiClickOutsideAngular = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
  container;
  label;
  containerStyles = {};
  emojisToDisplay = [];
  filteredEmojisSubject = new rxjs__WEBPACK_IMPORTED_MODULE_2__.Subject();
  filteredEmojis$ = this.filteredEmojisSubject.asObservable();
  labelStyles = {};
  labelSpanStyles = {};
  margin = 0;
  minMargin = 0;
  maxMargin = 0;
  top = 0;
  rows = 0;
  constructor(ref, emojiService, frequently) {
    this.ref = ref;
    this.emojiService = emojiService;
    this.frequently = frequently;
  }
  ngOnInit() {
    this.updateRecentEmojis();
    this.emojisToDisplay = this.filterEmojis();
    if (this.noEmojiToDisplay) {
      this.containerStyles = {
        display: 'none'
      };
    }
    if (!this.hasStickyPosition) {
      this.labelStyles = {
        height: 28
      };
      // this.labelSpanStyles = { position: 'absolute' };
    }
  }

  ngOnChanges(changes) {
    if (changes.emojis?.currentValue?.length !== changes.emojis?.previousValue?.length) {
      this.emojisToDisplay = this.filterEmojis();
      this.ngAfterViewInit();
    }
  }
  ngAfterViewInit() {
    if (!this.virtualize) {
      return;
    }
    const {
      width
    } = this.container.nativeElement.getBoundingClientRect();
    const perRow = Math.floor(width / (this.emojiSize + 12));
    this.rows = Math.ceil(this.emojisToDisplay.length / perRow);
    this.containerStyles = {
      ...this.containerStyles,
      minHeight: `${this.rows * (this.emojiSize + 12) + 28}px`
    };
    this.ref.detectChanges();
    this.handleScroll(this.container.nativeElement.parentNode.parentNode.scrollTop);
  }
  get noEmojiToDisplay() {
    return this.emojisToDisplay.length === 0;
  }
  memoizeSize() {
    const parent = this.container.nativeElement.parentNode.parentNode;
    const {
      top,
      height
    } = this.container.nativeElement.getBoundingClientRect();
    const parentTop = parent.getBoundingClientRect().top;
    const labelHeight = this.label.nativeElement.getBoundingClientRect().height;
    this.top = top - parentTop + parent.scrollTop;
    if (height === 0) {
      this.maxMargin = 0;
    } else {
      this.maxMargin = height - labelHeight;
    }
  }
  handleScroll(scrollTop) {
    let margin = scrollTop - this.top;
    margin = margin < this.minMargin ? this.minMargin : margin;
    margin = margin > this.maxMargin ? this.maxMargin : margin;
    if (this.virtualize) {
      const {
        top,
        height
      } = this.container.nativeElement.getBoundingClientRect();
      const parentHeight = this.container.nativeElement.parentNode.parentNode.clientHeight;
      if (parentHeight + (parentHeight + this.virtualizeOffset) >= top && -height - (parentHeight + this.virtualizeOffset) <= top) {
        this.filteredEmojisSubject.next(this.emojisToDisplay);
      } else {
        this.filteredEmojisSubject.next([]);
      }
    }
    if (margin === this.margin) {
      this.ref.detectChanges();
      return false;
    }
    if (!this.hasStickyPosition) {
      this.label.nativeElement.style.top = `${margin}px`;
    }
    this.margin = margin;
    this.ref.detectChanges();
    return true;
  }
  updateRecentEmojis() {
    if (this.name !== 'Recent') {
      return;
    }
    let frequentlyUsed = this.recent || this.frequently.get(this.perLine, this.totalFrequentLines);
    if (!frequentlyUsed || !frequentlyUsed.length) {
      frequentlyUsed = this.frequently.get(this.perLine, this.totalFrequentLines);
    }
    if (!frequentlyUsed.length) {
      return;
    }
    this.emojis = frequentlyUsed.map(id => {
      const emoji = this.custom.filter(e => e.id === id)[0];
      if (emoji) {
        return emoji;
      }
      return id;
    }).filter(id => !!this.emojiService.getData(id));
  }
  updateDisplay(display) {
    this.containerStyles.display = display;
    this.updateRecentEmojis();
    this.ref.detectChanges();
  }
  trackById(index, item) {
    return item;
  }
  filterEmojis() {
    const newEmojis = [];
    for (const emoji of this.emojis || []) {
      if (!emoji) {
        continue;
      }
      const data = this.emojiService.getData(emoji);
      if (!data || data.obsoletedBy && this.hideObsolete || !data.unified && !data.custom) {
        continue;
      }
      newEmojis.push(emoji);
    }
    return newEmojis;
  }
  static ɵfac = function CategoryComponent_Factory(t) {
    return new (t || CategoryComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.ChangeDetectorRef), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_ctrl_ngx_emoji_mart_ngx_emoji__WEBPACK_IMPORTED_MODULE_3__.EmojiService), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](EmojiFrequentlyService));
  };
  static ɵcmp = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
    type: CategoryComponent,
    selectors: [["emoji-category"]],
    viewQuery: function CategoryComponent_Query(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](_c0, 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](_c1, 7);
      }
      if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.container = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.label = _t.first);
      }
    },
    inputs: {
      emojis: "emojis",
      hasStickyPosition: "hasStickyPosition",
      name: "name",
      perLine: "perLine",
      totalFrequentLines: "totalFrequentLines",
      recent: "recent",
      custom: "custom",
      i18n: "i18n",
      id: "id",
      hideObsolete: "hideObsolete",
      notFoundEmoji: "notFoundEmoji",
      virtualize: "virtualize",
      virtualizeOffset: "virtualizeOffset",
      emojiIsNative: "emojiIsNative",
      emojiSkin: "emojiSkin",
      emojiSize: "emojiSize",
      emojiSet: "emojiSet",
      emojiSheetSize: "emojiSheetSize",
      emojiForceSize: "emojiForceSize",
      emojiTooltip: "emojiTooltip",
      emojiBackgroundImageFn: "emojiBackgroundImageFn",
      emojiImageUrlFn: "emojiImageUrlFn",
      emojiUseButton: "emojiUseButton"
    },
    outputs: {
      emojiOverOutsideAngular: "emojiOverOutsideAngular",
      emojiLeaveOutsideAngular: "emojiLeaveOutsideAngular",
      emojiClickOutsideAngular: "emojiClickOutsideAngular"
    },
    standalone: true,
    features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵNgOnChangesFeature"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵStandaloneFeature"]],
    decls: 10,
    vars: 11,
    consts: [[1, "emoji-mart-category", 3, "ngStyle"], ["container", ""], [1, "emoji-mart-category-label", 3, "ngStyle"], ["aria-hidden", "true", 3, "ngStyle"], ["label", ""], [4, "ngIf", "ngIfElse"], [4, "ngIf"], ["normalRenderTemplate", ""], [3, "emoji", "size", "skin", "isNative", "set", "sheetSize", "forceSize", "tooltip", "backgroundImageFn", "imageUrlFn", "hideObsolete", "useButton", "emojiOverOutsideAngular", "emojiLeaveOutsideAngular", "emojiClickOutsideAngular", 4, "ngFor", "ngForOf", "ngForTrackBy"], [3, "emoji", "size", "skin", "isNative", "set", "sheetSize", "forceSize", "tooltip", "backgroundImageFn", "imageUrlFn", "hideObsolete", "useButton", "emojiOverOutsideAngular", "emojiLeaveOutsideAngular", "emojiClickOutsideAngular"], [3, "emoji", "size", "skin", "isNative", "set", "sheetSize", "forceSize", "tooltip", "backgroundImageFn", "useButton"], [1, "emoji-mart-no-results-label"]],
    template: function CategoryComponent_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "section", 0, 1)(2, "div", 2)(3, "span", 3, 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]()();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](6, CategoryComponent_div_6_Template, 3, 3, "div", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](7, CategoryComponent_div_7_Template, 5, 11, "div", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](8, CategoryComponent_ng_template_8_Template, 1, 2, "ng-template", null, 7, _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplateRefExtractor"]);
      }
      if (rf & 2) {
        const _r4 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](9);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵclassProp"]("emoji-mart-no-results", ctx.noEmojiToDisplay);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngStyle", ctx.containerStyles);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵattribute"]("aria-label", ctx.i18n.categories[ctx.id]);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngStyle", ctx.labelStyles);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵattribute"]("data-name", ctx.name);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngStyle", ctx.labelSpanStyles);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", ctx.i18n.categories[ctx.id], " ");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.virtualize)("ngIfElse", _r4);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.noEmojiToDisplay);
      }
    },
    dependencies: [_angular_common__WEBPACK_IMPORTED_MODULE_1__.CommonModule, _angular_common__WEBPACK_IMPORTED_MODULE_1__.NgForOf, _angular_common__WEBPACK_IMPORTED_MODULE_1__.NgIf, _angular_common__WEBPACK_IMPORTED_MODULE_1__.NgStyle, _angular_common__WEBPACK_IMPORTED_MODULE_1__.AsyncPipe, _ctrl_ngx_emoji_mart_ngx_emoji__WEBPACK_IMPORTED_MODULE_3__.EmojiComponent],
    encapsulation: 2,
    changeDetection: 0
  });
}
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](CategoryComponent, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Component,
    args: [{
      selector: 'emoji-category',
      template: `
    <section
      #container
      class="emoji-mart-category"
      [attr.aria-label]="i18n.categories[id]"
      [class.emoji-mart-no-results]="noEmojiToDisplay"
      [ngStyle]="containerStyles"
    >
      <div class="emoji-mart-category-label" [ngStyle]="labelStyles" [attr.data-name]="name">
        <!-- already labeled by the section aria-label -->
        <span #label [ngStyle]="labelSpanStyles" aria-hidden="true">
          {{ i18n.categories[id] }}
        </span>
      </div>

      <div *ngIf="virtualize; else normalRenderTemplate">
        <div *ngIf="filteredEmojis$ | async as filteredEmojis">
          <ngx-emoji
            *ngFor="let emoji of filteredEmojis; trackBy: trackById"
            [emoji]="emoji"
            [size]="emojiSize"
            [skin]="emojiSkin"
            [isNative]="emojiIsNative"
            [set]="emojiSet"
            [sheetSize]="emojiSheetSize"
            [forceSize]="emojiForceSize"
            [tooltip]="emojiTooltip"
            [backgroundImageFn]="emojiBackgroundImageFn"
            [imageUrlFn]="emojiImageUrlFn"
            [hideObsolete]="hideObsolete"
            [useButton]="emojiUseButton"
            (emojiOverOutsideAngular)="emojiOverOutsideAngular.emit($event)"
            (emojiLeaveOutsideAngular)="emojiLeaveOutsideAngular.emit($event)"
            (emojiClickOutsideAngular)="emojiClickOutsideAngular.emit($event)"
          ></ngx-emoji>
        </div>
      </div>

      <div *ngIf="noEmojiToDisplay">
        <div>
          <ngx-emoji
            [emoji]="notFoundEmoji"
            [size]="38"
            [skin]="emojiSkin"
            [isNative]="emojiIsNative"
            [set]="emojiSet"
            [sheetSize]="emojiSheetSize"
            [forceSize]="emojiForceSize"
            [tooltip]="emojiTooltip"
            [backgroundImageFn]="emojiBackgroundImageFn"
            [useButton]="emojiUseButton"
          ></ngx-emoji>
        </div>

        <div class="emoji-mart-no-results-label">
          {{ i18n.notfound }}
        </div>
      </div>
    </section>

    <ng-template #normalRenderTemplate>
      <ngx-emoji
        *ngFor="let emoji of emojisToDisplay; trackBy: trackById"
        [emoji]="emoji"
        [size]="emojiSize"
        [skin]="emojiSkin"
        [isNative]="emojiIsNative"
        [set]="emojiSet"
        [sheetSize]="emojiSheetSize"
        [forceSize]="emojiForceSize"
        [tooltip]="emojiTooltip"
        [backgroundImageFn]="emojiBackgroundImageFn"
        [imageUrlFn]="emojiImageUrlFn"
        [hideObsolete]="hideObsolete"
        [useButton]="emojiUseButton"
        (emojiOverOutsideAngular)="emojiOverOutsideAngular.emit($event)"
        (emojiLeaveOutsideAngular)="emojiLeaveOutsideAngular.emit($event)"
        (emojiClickOutsideAngular)="emojiClickOutsideAngular.emit($event)"
      ></ngx-emoji>
    </ng-template>
  `,
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ChangeDetectionStrategy.OnPush,
      preserveWhitespaces: false,
      standalone: true,
      imports: [_angular_common__WEBPACK_IMPORTED_MODULE_1__.CommonModule, _ctrl_ngx_emoji_mart_ngx_emoji__WEBPACK_IMPORTED_MODULE_3__.EmojiComponent]
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ChangeDetectorRef
    }, {
      type: _ctrl_ngx_emoji_mart_ngx_emoji__WEBPACK_IMPORTED_MODULE_3__.EmojiService
    }, {
      type: EmojiFrequentlyService
    }];
  }, {
    emojis: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    hasStickyPosition: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    name: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    perLine: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    totalFrequentLines: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    recent: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    custom: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    i18n: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    id: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    hideObsolete: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    notFoundEmoji: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    virtualize: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    virtualizeOffset: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    emojiIsNative: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    emojiSkin: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    emojiSize: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    emojiSet: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    emojiSheetSize: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    emojiForceSize: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    emojiTooltip: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    emojiBackgroundImageFn: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    emojiImageUrlFn: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    emojiUseButton: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    emojiOverOutsideAngular: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
    }],
    emojiLeaveOutsideAngular: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
    }],
    emojiClickOutsideAngular: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
    }],
    container: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ViewChild,
      args: ['container', {
        static: true
      }]
    }],
    label: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ViewChild,
      args: ['label', {
        static: true
      }]
    }]
  });
})();
function uniq(arr) {
  return arr.reduce((acc, item) => {
    if (!acc.includes(item)) {
      acc.push(item);
    }
    return acc;
  }, []);
}
function intersect(a, b) {
  const uniqA = uniq(a);
  const uniqB = uniq(b);
  return uniqA.filter(item => uniqB.indexOf(item) >= 0);
}
// https://github.com/sonicdoe/measure-scrollbar
function measureScrollbar() {
  if (typeof document === 'undefined') {
    return 0;
  }
  const div = document.createElement('div');
  div.style.width = '100px';
  div.style.height = '100px';
  div.style.overflow = 'scroll';
  div.style.position = 'absolute';
  div.style.top = '-9999px';
  document.body.appendChild(div);
  const scrollbarWidth = div.offsetWidth - div.clientWidth;
  document.body.removeChild(div);
  return scrollbarWidth;
}
class EmojiSearch {
  emojiService;
  originalPool = {};
  index = {};
  emojisList = {};
  emoticonsList = {};
  emojiSearch = {};
  constructor(emojiService) {
    this.emojiService = emojiService;
    for (const emojiData of this.emojiService.emojis) {
      const {
        shortNames,
        emoticons
      } = emojiData;
      const id = shortNames[0];
      for (const emoticon of emoticons) {
        if (this.emoticonsList[emoticon]) {
          continue;
        }
        this.emoticonsList[emoticon] = id;
      }
      this.emojisList[id] = this.emojiService.getSanitizedData(id);
      this.originalPool[id] = emojiData;
    }
  }
  addCustomToPool(custom, pool) {
    for (const emoji of custom) {
      const emojiId = emoji.id || emoji.shortNames[0];
      if (emojiId && !pool[emojiId]) {
        pool[emojiId] = this.emojiService.getData(emoji);
        this.emojisList[emojiId] = this.emojiService.getSanitizedData(emoji);
      }
    }
  }
  search(value, emojisToShowFilter, maxResults = 75, include = [], exclude = [], custom = []) {
    this.addCustomToPool(custom, this.originalPool);
    let results;
    let pool = this.originalPool;
    if (value.length) {
      if (value === '-' || value === '-1') {
        return [this.emojisList['-1']];
      }
      if (value === '+' || value === '+1') {
        return [this.emojisList['+1']];
      }
      let values = value.toLowerCase().split(/[\s|,|\-|_]+/);
      let allResults = [];
      if (values.length > 2) {
        values = [values[0], values[1]];
      }
      if (include.length || exclude.length) {
        pool = {};
        for (const category of _ctrl_ngx_emoji_mart_ngx_emoji__WEBPACK_IMPORTED_MODULE_3__.categories || []) {
          const isIncluded = include && include.length ? include.indexOf(category.id) > -1 : true;
          const isExcluded = exclude && exclude.length ? exclude.indexOf(category.id) > -1 : false;
          if (!isIncluded || isExcluded) {
            continue;
          }
          for (const emojiId of category.emojis || []) {
            // Need to make sure that pool gets keyed
            // with the correct id, which is why we call emojiService.getData below
            const emoji = this.emojiService.getData(emojiId);
            pool[emoji?.id ?? ''] = emoji;
          }
        }
        if (custom.length) {
          const customIsIncluded = include && include.length ? include.indexOf('custom') > -1 : true;
          const customIsExcluded = exclude && exclude.length ? exclude.indexOf('custom') > -1 : false;
          if (customIsIncluded && !customIsExcluded) {
            this.addCustomToPool(custom, pool);
          }
        }
      }
      allResults = values.map(v => {
        let aPool = pool;
        let aIndex = this.index;
        let length = 0;
        for (let charIndex = 0; charIndex < v.length; charIndex++) {
          const char = v[charIndex];
          length++;
          if (!aIndex[char]) {
            aIndex[char] = {};
          }
          aIndex = aIndex[char];
          if (!aIndex.results) {
            const scores = {};
            aIndex.results = [];
            aIndex.pool = {};
            for (const id of Object.keys(aPool)) {
              const emoji = aPool[id];
              if (!this.emojiSearch[id]) {
                this.emojiSearch[id] = this.buildSearch(emoji.short_names, emoji.name, emoji.id, emoji.keywords, emoji.emoticons);
              }
              const query = this.emojiSearch[id];
              const sub = v.substr(0, length);
              const subIndex = query.indexOf(sub);
              if (subIndex !== -1) {
                let score = subIndex + 1;
                if (sub === id) {
                  score = 0;
                }
                aIndex.results.push(this.emojisList[id]);
                aIndex.pool[id] = emoji;
                scores[id] = score;
              }
            }
            aIndex.results.sort((a, b) => {
              const aScore = scores[a.id];
              const bScore = scores[b.id];
              return aScore - bScore;
            });
          }
          aPool = aIndex.pool;
        }
        return aIndex.results;
      }).filter(a => a);
      if (allResults.length > 1) {
        results = intersect.apply(null, allResults);
      } else if (allResults.length) {
        results = allResults[0];
      } else {
        results = [];
      }
    }
    if (results) {
      if (emojisToShowFilter) {
        results = results.filter(result => {
          if (result && result.id) {
            return emojisToShowFilter(this.emojiService.names[result.id]);
          }
          return false;
        });
      }
      if (results && results.length > maxResults) {
        results = results.slice(0, maxResults);
      }
    }
    return results || null;
  }
  buildSearch(shortNames, name, id, keywords, emoticons) {
    const search = [];
    const addToSearch = (strings, split) => {
      if (!strings) {
        return;
      }
      const arr = Array.isArray(strings) ? strings : [strings];
      for (const str of arr) {
        const substrings = split ? str.split(/[-|_|\s]+/) : [str];
        for (let s of substrings) {
          s = s.toLowerCase();
          if (!search.includes(s)) {
            search.push(s);
          }
        }
      }
    };
    addToSearch(shortNames, true);
    addToSearch(name, true);
    addToSearch(id, true);
    addToSearch(keywords, true);
    addToSearch(emoticons, false);
    return search.join(',');
  }
  static ɵfac = function EmojiSearch_Factory(t) {
    return new (t || EmojiSearch)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_ctrl_ngx_emoji_mart_ngx_emoji__WEBPACK_IMPORTED_MODULE_3__.EmojiService));
  };
  static ɵprov = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({
    token: EmojiSearch,
    factory: EmojiSearch.ɵfac,
    providedIn: 'root'
  });
}
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](EmojiSearch, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Injectable,
    args: [{
      providedIn: 'root'
    }]
  }], function () {
    return [{
      type: _ctrl_ngx_emoji_mart_ngx_emoji__WEBPACK_IMPORTED_MODULE_3__.EmojiService
    }];
  }, null);
})();
class SkinComponent {
  /** currently selected skin */
  skin;
  i18n;
  changeSkin = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
  opened = false;
  skinTones = [1, 2, 3, 4, 5, 6];
  toggleOpen() {
    this.opened = !this.opened;
  }
  isSelected(skinTone) {
    return skinTone === this.skin;
  }
  isVisible(skinTone) {
    return this.opened || this.isSelected(skinTone);
  }
  pressed(skinTone) {
    return this.opened ? !!this.isSelected(skinTone) : '';
  }
  tabIndex(skinTone) {
    return this.isVisible(skinTone) ? '0' : '';
  }
  expanded(skinTone) {
    return this.isSelected(skinTone) ? this.opened : '';
  }
  handleClick(skin) {
    if (!this.opened) {
      this.opened = true;
      return;
    }
    this.opened = false;
    if (skin !== this.skin) {
      this.changeSkin.emit(skin);
    }
  }
  static ɵfac = function SkinComponent_Factory(t) {
    return new (t || SkinComponent)();
  };
  static ɵcmp = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
    type: SkinComponent,
    selectors: [["emoji-skins"]],
    inputs: {
      skin: "skin",
      i18n: "i18n"
    },
    outputs: {
      changeSkin: "changeSkin"
    },
    standalone: true,
    features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵStandaloneFeature"]],
    decls: 2,
    vars: 3,
    consts: [[1, "emoji-mart-skin-swatches"], ["class", "emoji-mart-skin-swatch", 3, "selected", 4, "ngFor", "ngForOf"], [1, "emoji-mart-skin-swatch"], ["role", "button", 3, "tabIndex", "click", "keyup.enter", "keyup.space"]],
    template: function SkinComponent_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "section", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, SkinComponent_span_1_Template, 2, 12, "span", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
      if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵclassProp"]("opened", ctx.opened);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngForOf", ctx.skinTones);
      }
    },
    dependencies: [_angular_common__WEBPACK_IMPORTED_MODULE_1__.CommonModule, _angular_common__WEBPACK_IMPORTED_MODULE_1__.NgForOf],
    encapsulation: 2,
    changeDetection: 0
  });
}
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](SkinComponent, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Component,
    args: [{
      selector: 'emoji-skins',
      template: `
    <section class="emoji-mart-skin-swatches" [class.opened]="opened">
      <span
        *ngFor="let skinTone of skinTones"
        class="emoji-mart-skin-swatch"
        [class.selected]="skinTone === skin"
      >
        <span
          (click)="handleClick(skinTone)"
          (keyup.enter)="handleClick(skinTone)"
          (keyup.space)="handleClick(skinTone)"
          class="emoji-mart-skin emoji-mart-skin-tone-{{ skinTone }}"
          role="button"
          [tabIndex]="tabIndex(skinTone)"
          [attr.aria-hidden]="!isVisible(skinTone)"
          [attr.aria-pressed]="pressed(skinTone)"
          [attr.aria-haspopup]="!!isSelected(skinTone)"
          [attr.aria-expanded]="expanded(skinTone)"
          [attr.aria-label]="i18n.skintones[skinTone]"
          [attr.title]="i18n.skintones[skinTone]"
        ></span>
      </span>
    </section>
  `,
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ChangeDetectionStrategy.OnPush,
      preserveWhitespaces: false,
      standalone: true,
      imports: [_angular_common__WEBPACK_IMPORTED_MODULE_1__.CommonModule]
    }]
  }], null, {
    skin: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    i18n: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    changeSkin: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
    }]
  });
})();
class PreviewComponent {
  ref;
  emojiService;
  title;
  emoji;
  idleEmoji;
  i18n;
  emojiIsNative;
  emojiSkin;
  emojiSize;
  emojiSet;
  emojiSheetSize;
  emojiBackgroundImageFn;
  emojiImageUrlFn;
  skinChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
  emojiData = {};
  listedEmoticons;
  constructor(ref, emojiService) {
    this.ref = ref;
    this.emojiService = emojiService;
  }
  ngOnChanges() {
    if (!this.emoji) {
      return;
    }
    this.emojiData = this.emojiService.getData(this.emoji, this.emojiSkin, this.emojiSet);
    const knownEmoticons = [];
    const listedEmoticons = [];
    const emoitcons = this.emojiData.emoticons || [];
    emoitcons.forEach(emoticon => {
      if (knownEmoticons.indexOf(emoticon.toLowerCase()) >= 0) {
        return;
      }
      knownEmoticons.push(emoticon.toLowerCase());
      listedEmoticons.push(emoticon);
    });
    this.listedEmoticons = listedEmoticons;
    this.ref?.detectChanges();
  }
  static ɵfac = function PreviewComponent_Factory(t) {
    return new (t || PreviewComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.ChangeDetectorRef), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_ctrl_ngx_emoji_mart_ngx_emoji__WEBPACK_IMPORTED_MODULE_3__.EmojiService));
  };
  static ɵcmp = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
    type: PreviewComponent,
    selectors: [["emoji-preview"]],
    inputs: {
      title: "title",
      emoji: "emoji",
      idleEmoji: "idleEmoji",
      i18n: "i18n",
      emojiIsNative: "emojiIsNative",
      emojiSkin: "emojiSkin",
      emojiSize: "emojiSize",
      emojiSet: "emojiSet",
      emojiSheetSize: "emojiSheetSize",
      emojiBackgroundImageFn: "emojiBackgroundImageFn",
      emojiImageUrlFn: "emojiImageUrlFn"
    },
    outputs: {
      skinChange: "skinChange"
    },
    standalone: true,
    features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵNgOnChangesFeature"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵStandaloneFeature"]],
    decls: 9,
    vars: 6,
    consts: [["class", "emoji-mart-preview", 4, "ngIf"], [1, "emoji-mart-preview", 3, "hidden"], [1, "emoji-mart-preview-emoji"], [3, "isNative", "skin", "set", "emoji", "backgroundImageFn", "size", "imageUrlFn", 4, "ngIf"], [1, "emoji-mart-preview-data"], [1, "emoji-mart-title-label"], [1, "emoji-mart-preview-skins"], [3, "skin", "i18n", "changeSkin"], [1, "emoji-mart-preview"], [3, "emoji", "size", "isNative", "skin", "set", "sheetSize", "backgroundImageFn", "imageUrlFn"], [1, "emoji-mart-preview-name"], [1, "emoji-mart-preview-shortname"], ["class", "emoji-mart-preview-shortname", 4, "ngFor", "ngForOf"], [1, "emoji-mart-preview-emoticons"], ["class", "emoji-mart-preview-emoticon", 4, "ngFor", "ngForOf"], [1, "emoji-mart-preview-emoticon"], [3, "isNative", "skin", "set", "emoji", "backgroundImageFn", "size", "imageUrlFn"]],
    template: function PreviewComponent_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](0, PreviewComponent_div_0_Template, 10, 12, "div", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "div", 1)(2, "div", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](3, PreviewComponent_ngx_emoji_3_Template, 1, 7, "ngx-emoji", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](4, "div", 4)(5, "span", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](6);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]()();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](7, "div", 6)(8, "emoji-skins", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("changeSkin", function PreviewComponent_Template_emoji_skins_changeSkin_8_listener($event) {
          return ctx.skinChange.emit($event);
        });
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]()()();
      }
      if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.emoji && ctx.emojiData);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("hidden", ctx.emoji);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.idleEmoji && ctx.idleEmoji.length);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](ctx.title);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("skin", ctx.emojiSkin)("i18n", ctx.i18n);
      }
    },
    dependencies: [_angular_common__WEBPACK_IMPORTED_MODULE_1__.CommonModule, _angular_common__WEBPACK_IMPORTED_MODULE_1__.NgForOf, _angular_common__WEBPACK_IMPORTED_MODULE_1__.NgIf, _ctrl_ngx_emoji_mart_ngx_emoji__WEBPACK_IMPORTED_MODULE_3__.EmojiComponent, SkinComponent],
    encapsulation: 2,
    changeDetection: 0
  });
}
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](PreviewComponent, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Component,
    args: [{
      selector: 'emoji-preview',
      template: `
    <div class="emoji-mart-preview" *ngIf="emoji && emojiData">
      <div class="emoji-mart-preview-emoji">
        <ngx-emoji
          [emoji]="emoji"
          [size]="38"
          [isNative]="emojiIsNative"
          [skin]="emojiSkin"
          [size]="emojiSize"
          [set]="emojiSet"
          [sheetSize]="emojiSheetSize"
          [backgroundImageFn]="emojiBackgroundImageFn"
          [imageUrlFn]="emojiImageUrlFn"
        ></ngx-emoji>
      </div>

      <div class="emoji-mart-preview-data">
        <div class="emoji-mart-preview-name">{{ emojiData.name }}</div>
        <div class="emoji-mart-preview-shortname">
          <span
            class="emoji-mart-preview-shortname"
            *ngFor="let short_name of emojiData.shortNames"
          >
            :{{ short_name }}:
          </span>
        </div>
        <div class="emoji-mart-preview-emoticons">
          <span class="emoji-mart-preview-emoticon" *ngFor="let emoticon of listedEmoticons">
            {{ emoticon }}
          </span>
        </div>
      </div>
    </div>

    <div class="emoji-mart-preview" [hidden]="emoji">
      <div class="emoji-mart-preview-emoji">
        <ngx-emoji
          *ngIf="idleEmoji && idleEmoji.length"
          [isNative]="emojiIsNative"
          [skin]="emojiSkin"
          [set]="emojiSet"
          [emoji]="idleEmoji"
          [backgroundImageFn]="emojiBackgroundImageFn"
          [size]="38"
          [imageUrlFn]="emojiImageUrlFn"
        ></ngx-emoji>
      </div>

      <div class="emoji-mart-preview-data">
        <span class="emoji-mart-title-label">{{ title }}</span>
      </div>

      <div class="emoji-mart-preview-skins">
        <emoji-skins
          [skin]="emojiSkin"
          (changeSkin)="skinChange.emit($event)"
          [i18n]="i18n"
        ></emoji-skins>
      </div>
    </div>
  `,
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ChangeDetectionStrategy.OnPush,
      preserveWhitespaces: false,
      standalone: true,
      imports: [_angular_common__WEBPACK_IMPORTED_MODULE_1__.CommonModule, _ctrl_ngx_emoji_mart_ngx_emoji__WEBPACK_IMPORTED_MODULE_3__.EmojiComponent, SkinComponent]
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ChangeDetectorRef
    }, {
      type: _ctrl_ngx_emoji_mart_ngx_emoji__WEBPACK_IMPORTED_MODULE_3__.EmojiService
    }];
  }, {
    title: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    emoji: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    idleEmoji: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    i18n: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    emojiIsNative: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    emojiSkin: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    emojiSize: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    emojiSet: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    emojiSheetSize: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    emojiBackgroundImageFn: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    emojiImageUrlFn: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    skinChange: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
    }]
  });
})();
let id = 0;
class SearchComponent {
  ngZone;
  emojiSearch;
  maxResults = 75;
  autoFocus = false;
  i18n;
  include = [];
  exclude = [];
  custom = [];
  icons;
  emojisToShowFilter;
  searchResults = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
  enterKeyOutsideAngular = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
  inputRef;
  isSearching = false;
  icon;
  query = '';
  inputId = `emoji-mart-search-${++id}`;
  destroy$ = new rxjs__WEBPACK_IMPORTED_MODULE_2__.Subject();
  constructor(ngZone, emojiSearch) {
    this.ngZone = ngZone;
    this.emojiSearch = emojiSearch;
  }
  ngOnInit() {
    this.icon = this.icons.search;
    this.setupKeyupListener();
  }
  ngAfterViewInit() {
    if (this.autoFocus) {
      this.inputRef.nativeElement.focus();
    }
  }
  ngOnDestroy() {
    this.destroy$.next();
  }
  clear() {
    this.query = '';
    this.handleSearch('');
    this.inputRef.nativeElement.focus();
  }
  handleSearch(value) {
    if (value === '') {
      this.icon = this.icons.search;
      this.isSearching = false;
    } else {
      this.icon = this.icons.delete;
      this.isSearching = true;
    }
    const emojis = this.emojiSearch.search(this.query, this.emojisToShowFilter, this.maxResults, this.include, this.exclude, this.custom);
    this.searchResults.emit(emojis);
  }
  handleChange() {
    this.handleSearch(this.query);
  }
  setupKeyupListener() {
    this.ngZone.runOutsideAngular(() => (0,rxjs__WEBPACK_IMPORTED_MODULE_4__.fromEvent)(this.inputRef.nativeElement, 'keyup').pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_5__.takeUntil)(this.destroy$)).subscribe($event => {
      if (!this.query || $event.key !== 'Enter') {
        return;
      }
      this.enterKeyOutsideAngular.emit($event);
      $event.preventDefault();
    }));
  }
  static ɵfac = function SearchComponent_Factory(t) {
    return new (t || SearchComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.NgZone), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](EmojiSearch));
  };
  static ɵcmp = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
    type: SearchComponent,
    selectors: [["emoji-search"]],
    viewQuery: function SearchComponent_Query(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](_c2, 7);
      }
      if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.inputRef = _t.first);
      }
    },
    inputs: {
      maxResults: "maxResults",
      autoFocus: "autoFocus",
      i18n: "i18n",
      include: "include",
      exclude: "exclude",
      custom: "custom",
      icons: "icons",
      emojisToShowFilter: "emojisToShowFilter"
    },
    outputs: {
      searchResults: "searchResults",
      enterKeyOutsideAngular: "enterKeyOutsideAngular"
    },
    standalone: true,
    features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵStandaloneFeature"]],
    decls: 8,
    vars: 9,
    consts: [[1, "emoji-mart-search"], ["type", "search", 3, "id", "placeholder", "autofocus", "ngModel", "ngModelChange"], ["inputRef", ""], [1, "emoji-mart-sr-only", 3, "htmlFor"], ["type", "button", 1, "emoji-mart-search-icon", 3, "disabled", "click", "keyup.enter"], ["xmlns", "http://www.w3.org/2000/svg", "viewBox", "0 0 20 20", "width", "13", "height", "13", "opacity", "0.5"]],
    template: function SearchComponent_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 0)(1, "input", 1, 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("ngModelChange", function SearchComponent_Template_input_ngModelChange_1_listener($event) {
          return ctx.query = $event;
        })("ngModelChange", function SearchComponent_Template_input_ngModelChange_1_listener() {
          return ctx.handleChange();
        });
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "label", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](5, "button", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function SearchComponent_Template_button_click_5_listener() {
          return ctx.clear();
        })("keyup.enter", function SearchComponent_Template_button_keyup_enter_5_listener() {
          return ctx.clear();
        });
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnamespaceSVG"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](6, "svg", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](7, "path");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]()()();
      }
      if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("id", ctx.inputId)("placeholder", ctx.i18n.search)("autofocus", ctx.autoFocus)("ngModel", ctx.query);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("htmlFor", ctx.inputId);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"](" ", ctx.i18n.search, " ");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("disabled", !ctx.isSearching);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵattribute"]("aria-label", ctx.i18n.clear);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵattribute"]("d", ctx.icon);
      }
    },
    dependencies: [_angular_forms__WEBPACK_IMPORTED_MODULE_6__.FormsModule, _angular_forms__WEBPACK_IMPORTED_MODULE_6__.DefaultValueAccessor, _angular_forms__WEBPACK_IMPORTED_MODULE_6__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_6__.NgModel],
    encapsulation: 2
  });
}
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](SearchComponent, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Component,
    args: [{
      selector: 'emoji-search',
      template: `
    <div class="emoji-mart-search">
      <input
        [id]="inputId"
        #inputRef
        type="search"
        [placeholder]="i18n.search"
        [autofocus]="autoFocus"
        [(ngModel)]="query"
        (ngModelChange)="handleChange()"
      />
      <!--
      Use a <label> in addition to the placeholder for accessibility, but place it off-screen
      http://www.maxability.co.in/2016/01/placeholder-attribute-and-why-it-is-not-accessible/
      -->
      <label class="emoji-mart-sr-only" [htmlFor]="inputId">
        {{ i18n.search }}
      </label>
      <button
        type="button"
        class="emoji-mart-search-icon"
        (click)="clear()"
        (keyup.enter)="clear()"
        [disabled]="!isSearching"
        [attr.aria-label]="i18n.clear"
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          viewBox="0 0 20 20"
          width="13"
          height="13"
          opacity="0.5"
        >
          <path [attr.d]="icon" />
        </svg>
      </button>
    </div>
  `,
      preserveWhitespaces: false,
      standalone: true,
      imports: [_angular_forms__WEBPACK_IMPORTED_MODULE_6__.FormsModule]
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.NgZone
    }, {
      type: EmojiSearch
    }];
  }, {
    maxResults: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    autoFocus: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    i18n: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    include: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    exclude: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    custom: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    icons: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    emojisToShowFilter: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    searchResults: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
    }],
    enterKeyOutsideAngular: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
    }],
    inputRef: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ViewChild,
      args: ['inputRef', {
        static: true
      }]
    }]
  });
})();

/* eslint-disable  max-len */
const categories = {
  activity: `M12 0a12 12 0 1 0 0 24 12 12 0 0 0 0-24m10 11h-5c.3-2.5 1.3-4.8 2-6.1a10 10 0 0 1 3 6.1m-9 0V2a10 10 0 0 1 4.4 1.6A18 18 0 0 0 15 11h-2zm-2 0H9a18 18 0 0 0-2.4-7.4A10 10 0 0 1 11 2.1V11zm0 2v9a10 10 0 0 1-4.4-1.6A18 18 0 0 0 9 13h2zm4 0a18 18 0 0 0 2.4 7.4 10 10 0 0 1-4.4 1.5V13h2zM5 4.9c.7 1.3 1.7 3.6 2 6.1H2a10 10 0 0 1 3-6.1M2 13h5c-.3 2.5-1.3 4.8-2 6.1A10 10 0 0 1 2 13m17 6.1c-.7-1.3-1.7-3.6-2-6.1h5a10 10 0 0 1-3 6.1`,
  custom: `M10 1h3v21h-3zm10.186 4l1.5 2.598L3.5 18.098 2 15.5zM2 7.598L3.5 5l18.186 10.5-1.5 2.598z`,
  flags: `M0 0l6 24h2L2 0zm21 5h-4l-1-4H4l3 12h3l1 4h13L21 5zM6.6 3h7.8l2 8H8.6l-2-8zm8.8 10l-2.9 1.9-.4-1.9h3.3zm3.6 0l-1.5-6h2l2 8H16l3-2z`,
  foods: `M17 5c-1.8 0-2.9.4-3.7 1 .5-1.3 1.8-3 4.7-3a1 1 0 0 0 0-2c-3 0-4.6 1.3-5.5 2.5l-.2.2c-.6-1.9-1.5-3.7-3-3.7C8.5 0 7.7.3 7 1c-2 1.5-1.7 2.9-.5 4C3.6 5.2 0 7.4 0 13c0 4.6 5 11 9 11 2 0 2.4-.5 3-1 .6.5 1 1 3 1 4 0 9-6.4 9-11 0-6-4-8-7-8M8.2 2.5c.7-.5 1-.5 1-.5.4.2 1 1.4 1.4 3-1.6-.6-2.8-1.3-3-1.8l.6-.7M15 22c-1 0-1.2-.1-1.6-.4l-.1-.2a2 2 0 0 0-2.6 0l-.1.2c-.4.3-.5.4-1.6.4-2.8 0-7-5.4-7-9 0-6 4.5-6 5-6 2 0 2.5.4 3.4 1.2l.3.3a2 2 0 0 0 2.6 0l.3-.3c1-.8 1.5-1.2 3.4-1.2.5 0 5 .1 5 6 0 3.6-4.2 9-7 9`,
  nature: `M15.5 8a1.5 1.5 0 1 0 0 3 1.5 1.5 0 0 0 0-3m-7 0a1.5 1.5 0 1 0 0 3 1.5 1.5 0 0 0 0-3m10.43-8h-.02c-.97 0-2.14.79-3.02 1.5A13.88 13.88 0 0 0 12 .99c-1.28 0-2.62.13-3.87.51C7.24.8 6.07 0 5.09 0h-.02C3.35 0 .07 2.67 0 7.03c-.04 2.47.28 4.23 1.04 5 .26.27.88.69 1.3.9.19 3.17.92 5.23 2.53 6.37.9.64 2.19.95 3.2 1.1-.03.2-.07.4-.07.6 0 1.77 2.35 3 4 3s4-1.23 4-3c0-.2-.04-.4-.07-.59 2.57-.38 5.43-1.87 5.92-7.58.4-.22.89-.57 1.1-.8.77-.76 1.09-2.52 1.05-5C23.93 2.67 20.65 0 18.93 0M3.23 9.13c-.24.29-.84 1.16-.9 1.24A9.67 9.67 0 0 1 2 7.08c.05-3.28 2.48-4.97 3.1-5.03.25.02.72.27 1.26.65A7.95 7.95 0 0 0 4 7.82c-.14.55-.4.86-.79 1.31M12 22c-.9 0-1.95-.7-2-1 0-.65.47-1.24 1-1.6v.6a1 1 0 1 0 2 0v-.6c.52.36 1 .95 1 1.6-.05.3-1.1 1-2 1m3-3.48v.02a4.75 4.75 0 0 0-1.26-1.02c1.09-.52 2.24-1.33 2.24-2.22 0-1.84-1.78-2.2-3.98-2.2s-3.98.36-3.98 2.2c0 .89 1.15 1.7 2.24 2.22A4.8 4.8 0 0 0 9 18.54v-.03a6.1 6.1 0 0 1-2.97-.84c-1.3-.92-1.84-3.04-1.86-6.48l.03-.04c.5-.82 1.49-1.45 1.8-3.1C6 6 7.36 4.42 8.36 3.53c1.01-.35 2.2-.53 3.59-.53 1.45 0 2.68.2 3.73.57 1 .9 2.32 2.46 2.32 4.48.31 1.65 1.3 2.27 1.8 3.1l.1.18c-.06 5.97-1.95 7.01-4.9 7.19m6.63-8.2l-.11-.2a7.59 7.59 0 0 0-.74-.98 3.02 3.02 0 0 1-.79-1.32 7.93 7.93 0 0 0-2.35-5.12c.53-.38 1-.63 1.26-.65.64.07 3.05 1.77 3.1 5.03.02 1.81-.35 3.22-.37 3.24`,
  objects: `M12 0a9 9 0 0 0-5 16.5V21s2 3 5 3 5-3 5-3v-4.5A9 9 0 0 0 12 0zm0 2a7 7 0 1 1 0 14 7 7 0 0 1 0-14zM9 17.5a9 9 0 0 0 6 0v.8a7 7 0 0 1-3 .7 7 7 0 0 1-3-.7v-.8zm.2 3a8.9 8.9 0 0 0 2.8.5c1 0 1.9-.2 2.8-.5-.6.7-1.6 1.5-2.8 1.5-1.1 0-2.1-.8-2.8-1.5zm5.5-8.1c-.8 0-1.1-.8-1.5-1.8-.5-1-.7-1.5-1.2-1.5s-.8.5-1.3 1.5c-.4 1-.8 1.8-1.6 1.8h-.3c-.5-.2-.8-.7-1.3-1.8l-.2-1A3 3 0 0 0 7 9a1 1 0 0 1 0-2c1.7 0 2 1.4 2.2 2.1.5-1 1.3-2 2.8-2 1.5 0 2.3 1.1 2.7 2.1.2-.8.6-2.2 2.3-2.2a1 1 0 1 1 0 2c-.2 0-.3.5-.3.7a6.5 6.5 0 0 1-.3 1c-.5 1-.8 1.7-1.7 1.7`,
  people: `M12 0a12 12 0 1 0 0 24 12 12 0 0 0 0-24m0 22a10 10 0 1 1 0-20 10 10 0 0 1 0 20M8 7a2 2 0 1 0 0 4 2 2 0 0 0 0-4m8 0a2 2 0 1 0 0 4 2 2 0 0 0 0-4m-.8 8c-.7 1.2-1.8 2-3.3 2-1.5 0-2.7-.8-3.4-2H15m3-2H6a6 6 0 1 0 12 0`,
  places: `M6.5 12a2.5 2.5 0 1 0 0 5 2.5 2.5 0 0 0 0-5m0 3c-.3 0-.5-.2-.5-.5s.2-.5.5-.5.5.2.5.5-.2.5-.5.5m11-3a2.5 2.5 0 1 0 0 5 2.5 2.5 0 0 0 0-5m0 3c-.3 0-.5-.2-.5-.5s.2-.5.5-.5.5.2.5.5-.2.5-.5.5m5-5.5l-1-.4-.1-.1h.6c.6 0 1-.4 1-1 0-1-.9-2-2-2h-.6l-.8-1.7A3 3 0 0 0 16.8 2H7.2a3 3 0 0 0-2.8 2.3L3.6 6H3a2 2 0 0 0-2 2c0 .6.4 1 1 1h.6v.1l-1 .4a2 2 0 0 0-1.4 2l.7 7.6a1 1 0 0 0 1 .9H3v1c0 1.1.9 2 2 2h2a2 2 0 0 0 2-2v-1h6v1c0 1.1.9 2 2 2h2a2 2 0 0 0 2-2v-1h1.1a1 1 0 0 0 1-.9l.7-7.5a2 2 0 0 0-1.3-2.1M6.3 4.9c.1-.5.5-.9 1-.9h9.5c.4 0 .8.4 1 .9L19.2 9H4.7l1.6-4.1zM7 21H5v-1h2v1zm12 0h-2v-1h2v1zm2.2-3H2.8l-.7-6.6.9-.4h18l.9.4-.7 6.6z`,
  recent: `M13 4h-2v7H9v2h2v2h2v-2h4v-2h-4zm-1-4a12 12 0 1 0 0 24 12 12 0 0 0 0-24m0 22a10 10 0 1 1 0-20 10 10 0 0 1 0 20`,
  symbols: `M0 0h11v2H0zm4 11h3V6h4V4H0v2h4zm11.5 6a2.5 2.5 0 1 0 0-5 2.5 2.5 0 0 0 0 5m0-2.99a.5.5 0 0 1 0 .99c-.28 0-.5-.22-.5-.5s.22-.49.5-.49m6 5a2.5 2.5 0 1 0 0 5 2.5 2.5 0 0 0 0-5m0 2.99a.5.5 0 0 1-.5-.5.5.5 0 0 1 1 .01.5.5 0 0 1-.5.49m.5-9l-9 9 1.51 1.5 9-9zm-5-2c2.2 0 4-1.12 4-2.5V2s.98-.16 1.5.95C23 4.05 23 6 23 6s1-1.12 1-3.13C24-.02 21 0 21 0h-2v6.35A5.85 5.85 0 0 0 17 6c-2.2 0-4 1.12-4 2.5s1.8 2.5 4 2.5m-6.7 9.48L8.82 18.9a47.54 47.54 0 0 1-1.44 1.13c-.3-.3-.99-1.02-2.04-2.19.9-.83 1.47-1.46 1.72-1.89s.38-.87.38-1.33c0-.6-.27-1.18-.82-1.76-.54-.58-1.33-.87-2.35-.87-1 0-1.79.29-2.34.87-.56.6-.83 1.18-.83 1.79 0 .81.42 1.75 1.25 2.8a6.57 6.57 0 0 0-1.8 1.79 3.46 3.46 0 0 0-.51 1.83c0 .86.3 1.56.92 2.1a3.5 3.5 0 0 0 2.42.83c1.17 0 2.44-.38 3.81-1.14L8.23 24h2.82l-2.09-2.38 1.34-1.14zM3.56 14.1a1.02 1.02 0 0 1 .73-.28c.31 0 .56.08.75.25a.85.85 0 0 1 .28.66c0 .52-.42 1.11-1.26 1.78-.53-.65-.8-1.23-.8-1.74a.9.9 0 0 1 .3-.67m.18 7.9c-.43 0-.78-.12-1.06-.35-.28-.23-.41-.49-.41-.76 0-.6.5-1.3 1.52-2.09a31.23 31.23 0 0 0 2.25 2.44c-.92.5-1.69.76-2.3.76`
};
const search = {
  search: `M12.9 14.32a8 8 0 1 1 1.41-1.41l5.35 5.33-1.42 1.42-5.33-5.34zM8 14A6 6 0 1 0 8 2a6 6 0 0 0 0 12z`,
  delete: `M10 8.586L2.929 1.515 1.515 2.929 8.586 10l-7.071 7.071 1.414 1.414L10 11.414l7.071 7.071 1.414-1.414L11.414 10l7.071-7.071-1.414-1.414L10 8.586z`
};
const I18N = {
  search: 'Search',
  emojilist: 'List of emoji',
  notfound: 'No Emoji Found',
  clear: 'Clear',
  categories: {
    search: 'Search Results',
    recent: 'Frequently Used',
    people: 'Smileys & People',
    nature: 'Animals & Nature',
    foods: 'Food & Drink',
    activity: 'Activity',
    places: 'Travel & Places',
    objects: 'Objects',
    symbols: 'Symbols',
    flags: 'Flags',
    custom: 'Custom'
  },
  skintones: {
    1: 'Default Skin Tone',
    2: 'Light Skin Tone',
    3: 'Medium-Light Skin Tone',
    4: 'Medium Skin Tone',
    5: 'Medium-Dark Skin Tone',
    6: 'Dark Skin Tone'
  }
};
class PickerComponent {
  ngZone;
  renderer;
  ref;
  frequently;
  platformId;
  perLine = 9;
  totalFrequentLines = 4;
  i18n = {};
  style = {};
  title = 'Emoji Mart™';
  emoji = 'department_store';
  darkMode = !!(typeof matchMedia === 'function' && matchMedia('(prefers-color-scheme: dark)').matches);
  color = '#ae65c5';
  hideObsolete = true;
  /** all categories shown */
  categories = [];
  /** used to temporarily draw categories */
  activeCategories = [];
  set = 'apple';
  skin = 1;
  /** Renders the native unicode emoji */
  isNative = false;
  emojiSize = 24;
  sheetSize = 64;
  emojisToShowFilter;
  showPreview = true;
  emojiTooltip = false;
  autoFocus = false;
  custom = [];
  hideRecent = true;
  imageUrlFn;
  include;
  exclude;
  notFoundEmoji = 'sleuth_or_spy';
  categoriesIcons = categories;
  searchIcons = search;
  useButton = false;
  enableFrequentEmojiSort = false;
  enableSearch = true;
  showSingleCategory = false;
  virtualize = false;
  virtualizeOffset = 0;
  recent;
  emojiClick = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
  emojiSelect = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
  skinChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
  scrollRef;
  previewRef;
  searchRef;
  categoryRefs;
  scrollHeight = 0;
  clientHeight = 0;
  clientWidth = 0;
  selected;
  nextScroll;
  scrollTop;
  firstRender = true;
  previewEmoji = null;
  animationFrameRequestId = null;
  NAMESPACE = 'emoji-mart';
  measureScrollbar = 0;
  RECENT_CATEGORY = {
    id: 'recent',
    name: 'Recent',
    emojis: null
  };
  SEARCH_CATEGORY = {
    id: 'search',
    name: 'Search',
    emojis: null,
    anchor: false
  };
  CUSTOM_CATEGORY = {
    id: 'custom',
    name: 'Custom',
    emojis: []
  };
  scrollListener;
  backgroundImageFn = (set, sheetSize) => `https://cdn.jsdelivr.net/npm/emoji-datasource-${set}@14.0.0/img/${set}/sheets-256/${sheetSize}.png`;
  constructor(ngZone, renderer, ref, frequently, platformId) {
    this.ngZone = ngZone;
    this.renderer = renderer;
    this.ref = ref;
    this.frequently = frequently;
    this.platformId = platformId;
  }
  ngOnInit() {
    // measure scroll
    this.measureScrollbar = measureScrollbar();
    this.i18n = {
      ...I18N,
      ...this.i18n
    };
    this.i18n.categories = {
      ...I18N.categories,
      ...this.i18n.categories
    };
    this.skin = JSON.parse((0,_angular_common__WEBPACK_IMPORTED_MODULE_1__.isPlatformBrowser)(this.platformId) && localStorage.getItem(`${this.NAMESPACE}.skin`) || 'null') || this.skin;
    const allCategories = [..._ctrl_ngx_emoji_mart_ngx_emoji__WEBPACK_IMPORTED_MODULE_3__.categories];
    if (this.custom.length > 0) {
      this.CUSTOM_CATEGORY.emojis = this.custom.map(emoji => {
        return {
          ...emoji,
          // `<Category />` expects emoji to have an `id`.
          id: emoji.shortNames[0],
          custom: true
        };
      });
      allCategories.push(this.CUSTOM_CATEGORY);
    }
    if (this.include !== undefined) {
      allCategories.sort((a, b) => {
        if (this.include.indexOf(a.id) > this.include.indexOf(b.id)) {
          return 1;
        }
        return -1;
      });
    }
    for (const category of allCategories) {
      const isIncluded = this.include && this.include.length ? this.include.indexOf(category.id) > -1 : true;
      const isExcluded = this.exclude && this.exclude.length ? this.exclude.indexOf(category.id) > -1 : false;
      if (!isIncluded || isExcluded) {
        continue;
      }
      if (this.emojisToShowFilter) {
        const newEmojis = [];
        const {
          emojis
        } = category;
        for (let emojiIndex = 0; emojiIndex < emojis.length; emojiIndex++) {
          const emoji = emojis[emojiIndex];
          if (this.emojisToShowFilter(emoji)) {
            newEmojis.push(emoji);
          }
        }
        if (newEmojis.length) {
          const newCategory = {
            emojis: newEmojis,
            name: category.name,
            id: category.id
          };
          this.categories.push(newCategory);
        }
      } else {
        this.categories.push(category);
      }
      this.categoriesIcons = {
        ...categories,
        ...this.categoriesIcons
      };
      this.searchIcons = {
        ...search,
        ...this.searchIcons
      };
    }
    const includeRecent = this.include && this.include.length ? this.include.indexOf(this.RECENT_CATEGORY.id) > -1 : true;
    const excludeRecent = this.exclude && this.exclude.length ? this.exclude.indexOf(this.RECENT_CATEGORY.id) > -1 : false;
    if (includeRecent && !excludeRecent) {
      this.hideRecent = false;
      this.categories.unshift(this.RECENT_CATEGORY);
    }
    if (this.categories[0]) {
      this.categories[0].first = true;
    }
    this.categories.unshift(this.SEARCH_CATEGORY);
    this.selected = this.categories.filter(category => category.first)[0].name;
    // Need to be careful if small number of categories
    const categoriesToLoadFirst = Math.min(this.categories.length, 3);
    this.setActiveCategories(this.activeCategories = this.categories.slice(0, categoriesToLoadFirst));
    // Trim last active category
    const lastActiveCategoryEmojis = this.categories[categoriesToLoadFirst - 1].emojis.slice();
    this.categories[categoriesToLoadFirst - 1].emojis = lastActiveCategoryEmojis.slice(0, 60);
    setTimeout(() => {
      // Restore last category
      this.categories[categoriesToLoadFirst - 1].emojis = lastActiveCategoryEmojis;
      this.setActiveCategories(this.categories);
      // The `setTimeout` will trigger the change detection, but since we're inside
      // the OnPush component we can run change detection locally starting from this
      // component and going down to the children.
      this.ref.detectChanges();
      (0,_angular_common__WEBPACK_IMPORTED_MODULE_1__.isPlatformBrowser)(this.platformId) && this.ngZone.runOutsideAngular(() => {
        // The `updateCategoriesSize` doesn't change properties that are used
        // in templates, thus this is run in the context of the root zone to avoid
        // running change detection.
        requestAnimationFrame(() => {
          this.updateCategoriesSize();
        });
      });
    });
    this.ngZone.runOutsideAngular(() => {
      // DOM events that are listened by Angular inside the template trigger change detection
      // and also wrapped into additional functions that call `markForCheck()`. We listen `scroll`
      // in the context of the root zone since it will not trigger change detection each time
      // the `scroll` event is dispatched.
      this.scrollListener = this.renderer.listen(this.scrollRef.nativeElement, 'scroll', () => {
        this.handleScroll();
      });
    });
  }
  ngOnDestroy() {
    this.scrollListener?.();
    // This is called here because the component might be destroyed
    // but there will still be a `requestAnimationFrame` callback in the queue
    // that calls `detectChanges()` on the `ViewRef`. This will lead to a runtime
    // exception if the `detectChanges()` is called after the `ViewRef` is destroyed.
    this.cancelAnimationFrame();
  }
  setActiveCategories(categoriesToMakeActive) {
    if (this.showSingleCategory) {
      this.activeCategories = categoriesToMakeActive.filter(x => x.name === this.selected || x === this.SEARCH_CATEGORY);
    } else {
      this.activeCategories = categoriesToMakeActive;
    }
  }
  updateCategoriesSize() {
    this.categoryRefs.forEach(component => component.memoizeSize());
    if (this.scrollRef) {
      const target = this.scrollRef.nativeElement;
      this.scrollHeight = target.scrollHeight;
      this.clientHeight = target.clientHeight;
      this.clientWidth = target.clientWidth;
    }
  }
  handleAnchorClick($event) {
    this.updateCategoriesSize();
    this.selected = $event.category.name;
    this.setActiveCategories(this.categories);
    if (this.SEARCH_CATEGORY.emojis) {
      this.handleSearch(null);
      this.searchRef?.clear();
      this.handleAnchorClick($event);
      return;
    }
    const component = this.categoryRefs.find(n => n.id === $event.category.id);
    if (component) {
      let {
        top
      } = component;
      if ($event.category.first) {
        top = 0;
      } else {
        top += 1;
      }
      this.scrollRef.nativeElement.scrollTop = top;
    }
    this.nextScroll = $event.category.name;
    // handle component scrolling to load emojis
    for (const category of this.categories) {
      const componentToScroll = this.categoryRefs.find(({
        id
      }) => id === category.id);
      componentToScroll?.handleScroll(this.scrollRef.nativeElement.scrollTop);
    }
  }
  categoryTrack(index, item) {
    return item.id;
  }
  handleScroll(noSelectionChange = false) {
    if (this.nextScroll) {
      this.selected = this.nextScroll;
      this.nextScroll = undefined;
      this.ref.detectChanges();
      return;
    }
    if (!this.scrollRef) {
      return;
    }
    if (this.showSingleCategory) {
      return;
    }
    let activeCategory;
    if (this.SEARCH_CATEGORY.emojis) {
      activeCategory = this.SEARCH_CATEGORY;
    } else {
      const target = this.scrollRef.nativeElement;
      // check scroll is not at bottom
      if (target.scrollTop === 0) {
        // hit the TOP
        activeCategory = this.categories.find(n => n.first === true);
      } else if (target.scrollHeight - target.scrollTop === this.clientHeight) {
        // scrolled to bottom activate last category
        activeCategory = this.categories[this.categories.length - 1];
      } else {
        // scrolling
        for (const category of this.categories) {
          const component = this.categoryRefs.find(({
            id
          }) => id === category.id);
          const active = component?.handleScroll(target.scrollTop);
          if (active) {
            activeCategory = category;
          }
        }
      }
      this.scrollTop = target.scrollTop;
    }
    // This will allow us to run the change detection only when the category changes.
    if (!noSelectionChange && activeCategory && activeCategory.name !== this.selected) {
      this.selected = activeCategory.name;
      this.ref.detectChanges();
    } else if (noSelectionChange) {
      this.ref.detectChanges();
    }
  }
  handleSearch($emojis) {
    this.SEARCH_CATEGORY.emojis = $emojis;
    for (const component of this.categoryRefs.toArray()) {
      if (component.name === 'Search') {
        component.emojis = $emojis;
        component.updateDisplay($emojis ? 'block' : 'none');
      } else {
        component.updateDisplay($emojis ? 'none' : 'block');
      }
    }
    this.scrollRef.nativeElement.scrollTop = 0;
    this.handleScroll();
  }
  handleEnterKey($event, emoji) {
    // Note: the `handleEnterKey` is invoked when the search component dispatches the
    //       `enterKeyOutsideAngular` event or when any emoji is clicked thus `emojiClickOutsideAngular`
    //       event is dispatched. Both events are dispatched outside of the Angular zone to prevent
    //       no-op ticks, basically when users outside of the picker component are not listening
    //       to any of these events.
    if (!emoji) {
      if (this.SEARCH_CATEGORY.emojis !== null && this.SEARCH_CATEGORY.emojis.length) {
        emoji = this.SEARCH_CATEGORY.emojis[0];
        if (emoji) {
          dispatchInAngularContextIfObserved(this.emojiSelect, this.ngZone, {
            $event,
            emoji
          });
        } else {
          return;
        }
      }
    }
    if (!this.hideRecent && !this.recent && emoji) {
      this.frequently.add(emoji);
    }
    const component = this.categoryRefs.toArray()[1];
    if (component && this.enableFrequentEmojiSort) {
      this.ngZone.run(() => {
        component.updateRecentEmojis();
        component.ref.markForCheck();
      });
    }
  }
  handleEmojiOver($event) {
    if (!this.showPreview || !this.previewRef) {
      return;
    }
    const emojiData = this.CUSTOM_CATEGORY.emojis.find(customEmoji => customEmoji.id === $event.emoji.id);
    if (emojiData) {
      $event.emoji = {
        ...emojiData
      };
    }
    this.previewEmoji = $event.emoji;
    this.cancelAnimationFrame();
    this.ref.detectChanges();
  }
  handleEmojiLeave() {
    if (!this.showPreview || !this.previewRef) {
      return;
    }
    // Note: `handleEmojiLeave` will be invoked outside of the Angular zone because of the `mouseleave`
    //       event set up outside of the Angular zone in `ngx-emoji`. See `setupMouseLeaveListener`.
    //       This is done explicitly because we don't have to run redundant change detection since we
    //       would still want to leave the Angular zone here when scheduling animation frame.
    this.animationFrameRequestId = requestAnimationFrame(() => {
      this.previewEmoji = null;
      this.ref.detectChanges();
    });
  }
  handleEmojiClick($event) {
    // Note: we're getting back into the Angular zone because click events on emojis are handled
    //       outside of the Angular zone.
    dispatchInAngularContextIfObserved(this.emojiClick, this.ngZone, $event);
    dispatchInAngularContextIfObserved(this.emojiSelect, this.ngZone, $event);
    this.handleEnterKey($event.$event, $event.emoji);
  }
  handleSkinChange(skin) {
    this.skin = skin;
    localStorage.setItem(`${this.NAMESPACE}.skin`, String(skin));
    this.skinChange.emit(skin);
  }
  getWidth() {
    if (this.style && this.style.width) {
      return this.style.width;
    }
    return this.perLine * (this.emojiSize + 12) + 12 + 2 + this.measureScrollbar + 'px';
  }
  cancelAnimationFrame() {
    if (this.animationFrameRequestId !== null) {
      cancelAnimationFrame(this.animationFrameRequestId);
      this.animationFrameRequestId = null;
    }
  }
  static ɵfac = function PickerComponent_Factory(t) {
    return new (t || PickerComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.NgZone), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.Renderer2), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.ChangeDetectorRef), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](EmojiFrequentlyService), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.PLATFORM_ID));
  };
  static ɵcmp = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
    type: PickerComponent,
    selectors: [["emoji-mart"]],
    viewQuery: function PickerComponent_Query(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](_c3, 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](PreviewComponent, 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](SearchComponent, 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](CategoryComponent, 5);
      }
      if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.scrollRef = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.previewRef = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.searchRef = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.categoryRefs = _t);
      }
    },
    inputs: {
      perLine: "perLine",
      totalFrequentLines: "totalFrequentLines",
      i18n: "i18n",
      style: "style",
      title: "title",
      emoji: "emoji",
      darkMode: "darkMode",
      color: "color",
      hideObsolete: "hideObsolete",
      categories: "categories",
      activeCategories: "activeCategories",
      set: "set",
      skin: "skin",
      isNative: "isNative",
      emojiSize: "emojiSize",
      sheetSize: "sheetSize",
      emojisToShowFilter: "emojisToShowFilter",
      showPreview: "showPreview",
      emojiTooltip: "emojiTooltip",
      autoFocus: "autoFocus",
      custom: "custom",
      hideRecent: "hideRecent",
      imageUrlFn: "imageUrlFn",
      include: "include",
      exclude: "exclude",
      notFoundEmoji: "notFoundEmoji",
      categoriesIcons: "categoriesIcons",
      searchIcons: "searchIcons",
      useButton: "useButton",
      enableFrequentEmojiSort: "enableFrequentEmojiSort",
      enableSearch: "enableSearch",
      showSingleCategory: "showSingleCategory",
      virtualize: "virtualize",
      virtualizeOffset: "virtualizeOffset",
      recent: "recent",
      backgroundImageFn: "backgroundImageFn"
    },
    outputs: {
      emojiClick: "emojiClick",
      emojiSelect: "emojiSelect",
      skinChange: "skinChange"
    },
    standalone: true,
    features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵStandaloneFeature"]],
    decls: 8,
    vars: 16,
    consts: [[3, "ngStyle"], [1, "emoji-mart-bar"], [3, "categories", "color", "selected", "i18n", "icons", "anchorClick"], [3, "i18n", "include", "exclude", "custom", "autoFocus", "icons", "emojisToShowFilter", "searchResults", "enterKeyOutsideAngular", 4, "ngIf"], [1, "emoji-mart-scroll"], ["scrollRef", ""], [3, "id", "name", "emojis", "perLine", "totalFrequentLines", "hasStickyPosition", "i18n", "hideObsolete", "notFoundEmoji", "custom", "recent", "virtualize", "virtualizeOffset", "emojiIsNative", "emojiSkin", "emojiSize", "emojiSet", "emojiSheetSize", "emojiForceSize", "emojiTooltip", "emojiBackgroundImageFn", "emojiImageUrlFn", "emojiUseButton", "emojiOverOutsideAngular", "emojiLeaveOutsideAngular", "emojiClickOutsideAngular", 4, "ngFor", "ngForOf", "ngForTrackBy"], ["class", "emoji-mart-bar", 4, "ngIf"], [3, "i18n", "include", "exclude", "custom", "autoFocus", "icons", "emojisToShowFilter", "searchResults", "enterKeyOutsideAngular"], [3, "id", "name", "emojis", "perLine", "totalFrequentLines", "hasStickyPosition", "i18n", "hideObsolete", "notFoundEmoji", "custom", "recent", "virtualize", "virtualizeOffset", "emojiIsNative", "emojiSkin", "emojiSize", "emojiSet", "emojiSheetSize", "emojiForceSize", "emojiTooltip", "emojiBackgroundImageFn", "emojiImageUrlFn", "emojiUseButton", "emojiOverOutsideAngular", "emojiLeaveOutsideAngular", "emojiClickOutsideAngular"], [3, "emoji", "idleEmoji", "emojiIsNative", "emojiSize", "emojiSkin", "emojiSet", "i18n", "emojiSheetSize", "emojiBackgroundImageFn", "emojiImageUrlFn", "skinChange"]],
    template: function PickerComponent_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "section", 0)(1, "div", 1)(2, "emoji-mart-anchors", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("anchorClick", function PickerComponent_Template_emoji_mart_anchors_anchorClick_2_listener($event) {
          return ctx.handleAnchorClick($event);
        });
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]()();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](3, PickerComponent_emoji_search_3_Template, 1, 7, "emoji-search", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](4, "section", 4, 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](6, PickerComponent_emoji_category_6_Template, 1, 23, "emoji-category", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](7, PickerComponent_div_7_Template, 2, 11, "div", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      }
      if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵclassMapInterpolate1"]("emoji-mart ", ctx.darkMode ? "emoji-mart-dark" : "", "");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵstyleProp"]("width", ctx.getWidth());
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngStyle", ctx.style);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("categories", ctx.categories)("color", ctx.color)("selected", ctx.selected)("i18n", ctx.i18n)("icons", ctx.categoriesIcons);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.enableSearch);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵattribute"]("aria-label", ctx.i18n.emojilist);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngForOf", ctx.activeCategories)("ngForTrackBy", ctx.categoryTrack);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.showPreview);
      }
    },
    dependencies: [_angular_common__WEBPACK_IMPORTED_MODULE_1__.CommonModule, _angular_common__WEBPACK_IMPORTED_MODULE_1__.NgForOf, _angular_common__WEBPACK_IMPORTED_MODULE_1__.NgIf, _angular_common__WEBPACK_IMPORTED_MODULE_1__.NgStyle, AnchorsComponent, SearchComponent, PreviewComponent, CategoryComponent],
    encapsulation: 2,
    changeDetection: 0
  });
}
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](PickerComponent, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Component,
    args: [{
      selector: 'emoji-mart',
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ChangeDetectionStrategy.OnPush,
      preserveWhitespaces: false,
      standalone: true,
      imports: [_angular_common__WEBPACK_IMPORTED_MODULE_1__.CommonModule, AnchorsComponent, SearchComponent, PreviewComponent, CategoryComponent],
      template: "<section\n  class=\"emoji-mart {{ darkMode ? 'emoji-mart-dark' : '' }}\"\n  [style.width]=\"getWidth()\"\n  [ngStyle]=\"style\"\n>\n  <div class=\"emoji-mart-bar\">\n    <emoji-mart-anchors\n      [categories]=\"categories\"\n      (anchorClick)=\"handleAnchorClick($event)\"\n      [color]=\"color\"\n      [selected]=\"selected\"\n      [i18n]=\"i18n\"\n      [icons]=\"categoriesIcons\"\n    ></emoji-mart-anchors>\n  </div>\n  <emoji-search\n    *ngIf=\"enableSearch\"\n    [i18n]=\"i18n\"\n    (searchResults)=\"handleSearch($event)\"\n    (enterKeyOutsideAngular)=\"handleEnterKey($event)\"\n    [include]=\"include\"\n    [exclude]=\"exclude\"\n    [custom]=\"custom\"\n    [autoFocus]=\"autoFocus\"\n    [icons]=\"searchIcons\"\n    [emojisToShowFilter]=\"emojisToShowFilter\"\n  ></emoji-search>\n  <section #scrollRef class=\"emoji-mart-scroll\" [attr.aria-label]=\"i18n.emojilist\">\n    <emoji-category\n      *ngFor=\"let category of activeCategories; let idx = index; trackBy: categoryTrack\"\n      [id]=\"category.id\"\n      [name]=\"category.name\"\n      [emojis]=\"category.emojis\"\n      [perLine]=\"perLine\"\n      [totalFrequentLines]=\"totalFrequentLines\"\n      [hasStickyPosition]=\"isNative\"\n      [i18n]=\"i18n\"\n      [hideObsolete]=\"hideObsolete\"\n      [notFoundEmoji]=\"notFoundEmoji\"\n      [custom]=\"category.id === RECENT_CATEGORY.id ? CUSTOM_CATEGORY.emojis : undefined\"\n      [recent]=\"category.id === RECENT_CATEGORY.id ? recent : undefined\"\n      [virtualize]=\"virtualize\"\n      [virtualizeOffset]=\"virtualizeOffset\"\n      [emojiIsNative]=\"isNative\"\n      [emojiSkin]=\"skin\"\n      [emojiSize]=\"emojiSize\"\n      [emojiSet]=\"set\"\n      [emojiSheetSize]=\"sheetSize\"\n      [emojiForceSize]=\"isNative\"\n      [emojiTooltip]=\"emojiTooltip\"\n      [emojiBackgroundImageFn]=\"backgroundImageFn\"\n      [emojiImageUrlFn]=\"imageUrlFn\"\n      [emojiUseButton]=\"useButton\"\n      (emojiOverOutsideAngular)=\"handleEmojiOver($event)\"\n      (emojiLeaveOutsideAngular)=\"handleEmojiLeave()\"\n      (emojiClickOutsideAngular)=\"handleEmojiClick($event)\"\n    ></emoji-category>\n  </section>\n  <div class=\"emoji-mart-bar\" *ngIf=\"showPreview\">\n    <emoji-preview\n      [attr.title]=\"title\"\n      [emoji]=\"previewEmoji\"\n      [idleEmoji]=\"emoji\"\n      [emojiIsNative]=\"isNative\"\n      [emojiSize]=\"38\"\n      [emojiSkin]=\"skin\"\n      [emojiSet]=\"set\"\n      [i18n]=\"i18n\"\n      [emojiSheetSize]=\"sheetSize\"\n      [emojiBackgroundImageFn]=\"backgroundImageFn\"\n      [emojiImageUrlFn]=\"imageUrlFn\"\n      (skinChange)=\"handleSkinChange($event)\"\n    ></emoji-preview>\n  </div>\n</section>\n"
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.NgZone
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Renderer2
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ChangeDetectorRef
    }, {
      type: EmojiFrequentlyService
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Inject,
        args: [_angular_core__WEBPACK_IMPORTED_MODULE_0__.PLATFORM_ID]
      }]
    }];
  }, {
    perLine: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    totalFrequentLines: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    i18n: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    style: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    title: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    emoji: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    darkMode: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    color: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    hideObsolete: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    categories: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    activeCategories: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    set: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    skin: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    isNative: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    emojiSize: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    sheetSize: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    emojisToShowFilter: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    showPreview: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    emojiTooltip: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    autoFocus: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    custom: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    hideRecent: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    imageUrlFn: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    include: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    exclude: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    notFoundEmoji: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    categoriesIcons: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    searchIcons: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    useButton: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    enableFrequentEmojiSort: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    enableSearch: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    showSingleCategory: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    virtualize: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    virtualizeOffset: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    recent: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    emojiClick: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
    }],
    emojiSelect: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
    }],
    skinChange: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
    }],
    scrollRef: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ViewChild,
      args: ['scrollRef', {
        static: true
      }]
    }],
    previewRef: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ViewChild,
      args: [PreviewComponent, {
        static: false
      }]
    }],
    searchRef: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ViewChild,
      args: [SearchComponent, {
        static: false
      }]
    }],
    categoryRefs: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ViewChildren,
      args: [CategoryComponent]
    }],
    backgroundImageFn: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }]
  });
})();
/**
 * This is only a helper function because the same code is being re-used many times.
 */
function dispatchInAngularContextIfObserved(emitter, ngZone, value) {
  if (emitter.observed) {
    ngZone.run(() => emitter.emit(value));
  }
}
const components = [PickerComponent, AnchorsComponent, CategoryComponent, SearchComponent, PreviewComponent, SkinComponent];
class PickerModule {
  static ɵfac = function PickerModule_Factory(t) {
    return new (t || PickerModule)();
  };
  static ɵmod = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineNgModule"]({
    type: PickerModule
  });
  static ɵinj = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjector"]({
    imports: [components]
  });
}
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](PickerModule, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.NgModule,
    args: [{
      imports: components,
      exports: components
    }]
  }], null, null);
})();

/**
 * Generated bundle index. Do not edit.
 */



/***/ }),

/***/ 6514:
/*!******************************************************************************!*\
  !*** ./node_modules/@fullcalendar/angular/fesm2020/fullcalendar-angular.mjs ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   FullCalendarComponent: () => (/* binding */ FullCalendarComponent),
/* harmony export */   FullCalendarModule: () => (/* binding */ FullCalendarModule)
/* harmony export */ });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ 1699);
/* harmony import */ var _fullcalendar_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @fullcalendar/core */ 7962);
/* harmony import */ var _fullcalendar_core_internal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @fullcalendar/core/internal */ 939);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common */ 6575);






const _c0 = ["*"];
const _c1 = ["rootEl"];
const _c2 = function (a0) {
  return {
    $implicit: a0
  };
};
function TransportContainerComponent_ng_template_0_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 1, 2);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainer"](2, 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngClass", ctx_r0.elClasses || "")("ngStyle", ctx_r0.elStyle || null);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngTemplateOutlet", ctx_r0.template)("ngTemplateOutletContext", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpureFunction1"](4, _c2, ctx_r0.renderProps));
  }
}
function TransportContainerComponent_ng_template_1_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span", 1, 2);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainer"](2, 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngClass", ctx_r1.elClasses || "")("ngStyle", ctx_r1.elStyle || null);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngTemplateOutlet", ctx_r1.template)("ngTemplateOutletContext", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpureFunction1"](4, _c2, ctx_r1.renderProps));
  }
}
function TransportContainerComponent_ng_template_2_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "a", 1, 2);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainer"](2, 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngClass", ctx_r2.elClasses || "")("ngStyle", ctx_r2.elStyle || null);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngTemplateOutlet", ctx_r2.template)("ngTemplateOutletContext", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpureFunction1"](4, _c2, ctx_r2.renderProps));
  }
}
function TransportContainerComponent_ng_template_3_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "tr", 1, 2);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainer"](2, 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const ctx_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngClass", ctx_r3.elClasses || "")("ngStyle", ctx_r3.elStyle || null);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngTemplateOutlet", ctx_r3.template)("ngTemplateOutletContext", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpureFunction1"](4, _c2, ctx_r3.renderProps));
  }
}
function TransportContainerComponent_ng_template_4_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "th", 1, 2);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainer"](2, 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const ctx_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngClass", ctx_r4.elClasses || "")("ngStyle", ctx_r4.elStyle || null);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngTemplateOutlet", ctx_r4.template)("ngTemplateOutletContext", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpureFunction1"](4, _c2, ctx_r4.renderProps));
  }
}
function TransportContainerComponent_ng_template_5_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "td", 1, 2);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainer"](2, 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const ctx_r5 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngClass", ctx_r5.elClasses || "")("ngStyle", ctx_r5.elStyle || null);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngTemplateOutlet", ctx_r5.template)("ngTemplateOutletContext", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpureFunction1"](4, _c2, ctx_r5.renderProps));
  }
}
const _c3 = ["dayHeaderContent"];
const _c4 = ["dayCellContent"];
const _c5 = ["weekNumberContent"];
const _c6 = ["nowIndicatorContent"];
const _c7 = ["eventContent"];
const _c8 = ["slotLaneContent"];
const _c9 = ["slotLabelContent"];
const _c10 = ["allDayContent"];
const _c11 = ["moreLinkContent"];
const _c12 = ["noEventsContent"];
const _c13 = ["resourceAreaHeaderContent"];
const _c14 = ["resourceGroupLabelContent"];
const _c15 = ["resourceLabelContent"];
const _c16 = ["resourceLaneContent"];
const _c17 = ["resourceGroupLaneContent"];
function FullCalendarComponent_transport_container_1_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](0, "transport-container", 1);
  }
  if (rf & 2) {
    const customRendering_r1 = ctx.$implicit;
    const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("inPlaceOf", customRendering_r1.containerEl)("reportEl", customRendering_r1.reportNewContainerEl)("elTag", customRendering_r1.elTag)("elClasses", customRendering_r1.elClasses)("elStyle", customRendering_r1.elStyle)("elAttrs", customRendering_r1.elAttrs)("template", ctx_r0.templateMap[customRendering_r1.generatorName])("renderProps", customRendering_r1.renderProps);
  }
}
const OPTION_IS_DEEP = {
  headerToolbar: true,
  footerToolbar: true,
  events: true,
  eventSources: true,
  resources: true
};
/*
NOTE: keep synced with component
*/
const OPTION_INPUT_NAMES = ['events', 'eventSources', 'resources'];
const hasOwnProperty = Object.prototype.hasOwnProperty;
/*
Really simple clone utility. Only copies plain arrays, objects, and Dates. Transfers everything else as-is.
Wanted to use a third-party lib, but none did exactly this.
*/
function deepCopy(input) {
  if (Array.isArray(input)) {
    return input.map(deepCopy);
  } else if (input instanceof Date) {
    return new Date(input.valueOf());
  } else if (typeof input === 'object' && input) {
    // non-null object
    return mapHash(input, deepCopy);
  } else {
    // everything else (null, function, etc)
    return input;
  }
}
function mapHash(input, func) {
  const output = {};
  for (const key in input) {
    if (hasOwnProperty.call(input, key)) {
      output[key] = func(input[key], key);
    }
  }
  return output;
}

/*
Forked from https://github.com/epoberezkin/fast-deep-equal (also has MIT license)
Needed ESM support or else Angular complains about treeshaking
(https://github.com/fullcalendar/fullcalendar-angular/issues/421)
*/
function deepEqual(a, b) {
  if (a === b) return true;
  if (a && b && typeof a == 'object' && typeof b == 'object') {
    if (a.constructor !== b.constructor) return false;
    var length, i, keys;
    if (Array.isArray(a)) {
      length = a.length;
      if (length != b.length) return false;
      for (i = length; i-- !== 0;) if (!deepEqual(a[i], b[i])) return false;
      return true;
    }
    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;
    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();
    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();
    keys = Object.keys(a);
    length = keys.length;
    if (length !== Object.keys(b).length) return false;
    for (i = length; i-- !== 0;) if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;
    for (i = length; i-- !== 0;) {
      var key = keys[i];
      if (!deepEqual(a[key], b[key])) return false;
    }
    return true;
  }
  // true if both NaN, false otherwise
  return a !== a && b !== b;
}
const dummyContainer$1 = document.createDocumentFragment();
class OffscreenFragmentComponent {
  constructor(element) {
    this.element = element;
  }
  ngAfterViewInit() {
    dummyContainer$1.appendChild(this.element.nativeElement);
  }
  // invoked BEFORE component removed from DOM
  ngOnDestroy() {
    dummyContainer$1.removeChild(this.element.nativeElement);
  }
}
OffscreenFragmentComponent.ɵfac = function OffscreenFragmentComponent_Factory(t) {
  return new (t || OffscreenFragmentComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef));
};
OffscreenFragmentComponent.ɵcmp = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
  type: OffscreenFragmentComponent,
  selectors: [["offscreen-fragment"]],
  ngContentSelectors: _c0,
  decls: 1,
  vars: 0,
  template: function OffscreenFragmentComponent_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵprojectionDef"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵprojection"](0);
    }
  },
  encapsulation: 2
});
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](OffscreenFragmentComponent, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Component,
    args: [{
      selector: 'offscreen-fragment',
      template: '<ng-content></ng-content>',
      encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ViewEncapsulation.None
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef
    }];
  }, null);
})();
const dummyContainer = document.createDocumentFragment();
class TransportContainerComponent {
  ngAfterViewInit() {
    const rootEl = this.rootElRef?.nativeElement; // assumed defined
    replaceEl(rootEl, this.inPlaceOf);
    applyElAttrs(rootEl, undefined, this.elAttrs);
    // insurance for if Preact recreates and reroots inPlaceOf element
    this.inPlaceOf.style.display = 'none';
    this.reportEl(rootEl);
  }
  ngOnChanges(changes) {
    const rootEl = this.rootElRef?.nativeElement;
    // ngOnChanges is called before ngAfterViewInit (and before DOM initializes)
    // so make sure rootEl is defined before doing anything
    if (rootEl) {
      // If the ContentContainer's tagName changed, it will create a new DOM element in its
      // original place. Detect this and re-replace.
      if (this.inPlaceOf.parentNode !== dummyContainer) {
        replaceEl(rootEl, this.inPlaceOf);
        applyElAttrs(rootEl, undefined, this.elAttrs);
        this.reportEl(rootEl);
      } else {
        const elAttrsChange = changes['elAttrs'];
        if (elAttrsChange) {
          applyElAttrs(rootEl, elAttrsChange.previousValue, elAttrsChange.currentValue);
        }
      }
    }
  }
  // invoked BEFORE component removed from DOM
  ngOnDestroy() {
    // protect against Preact recreating and rerooting inPlaceOf element
    if (this.inPlaceOf.parentNode === dummyContainer) {
      dummyContainer.removeChild(this.inPlaceOf);
    }
    this.reportEl(null);
  }
}
TransportContainerComponent.ɵfac = function TransportContainerComponent_Factory(t) {
  return new (t || TransportContainerComponent)();
};
TransportContainerComponent.ɵcmp = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
  type: TransportContainerComponent,
  selectors: [["transport-container"]],
  viewQuery: function TransportContainerComponent_Query(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](_c1, 5);
    }
    if (rf & 2) {
      let _t;
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.rootElRef = _t.first);
    }
  },
  inputs: {
    inPlaceOf: "inPlaceOf",
    reportEl: "reportEl",
    elTag: "elTag",
    elClasses: "elClasses",
    elStyle: "elStyle",
    elAttrs: "elAttrs",
    template: "template",
    renderProps: "renderProps"
  },
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵNgOnChangesFeature"]],
  decls: 6,
  vars: 6,
  consts: [[3, "ngIf"], [3, "ngClass", "ngStyle"], ["rootEl", ""], [3, "ngTemplateOutlet", "ngTemplateOutletContext"]],
  template: function TransportContainerComponent_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](0, TransportContainerComponent_ng_template_0_Template, 3, 6, "ng-template", 0);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, TransportContainerComponent_ng_template_1_Template, 3, 6, "ng-template", 0);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](2, TransportContainerComponent_ng_template_2_Template, 3, 6, "ng-template", 0);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](3, TransportContainerComponent_ng_template_3_Template, 3, 6, "ng-template", 0);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](4, TransportContainerComponent_ng_template_4_Template, 3, 6, "ng-template", 0);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](5, TransportContainerComponent_ng_template_5_Template, 3, 6, "ng-template", 0);
    }
    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.elTag == "div");
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.elTag == "span");
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.elTag == "a");
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.elTag == "tr");
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.elTag == "th");
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.elTag == "td");
    }
  },
  dependencies: [_angular_common__WEBPACK_IMPORTED_MODULE_1__.NgIf, _angular_common__WEBPACK_IMPORTED_MODULE_1__.NgClass, _angular_common__WEBPACK_IMPORTED_MODULE_1__.NgStyle, _angular_common__WEBPACK_IMPORTED_MODULE_1__.NgTemplateOutlet],
  encapsulation: 2
});
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](TransportContainerComponent, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Component,
    args: [{
      selector: 'transport-container',
      encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ViewEncapsulation.None,
      template: "<ng-template [ngIf]=\"elTag == 'div'\">\n  <div #rootEl [ngClass]=\"elClasses || ''\" [ngStyle]=\"elStyle || null\">\n    <ng-container\n      [ngTemplateOutlet]=\"template\"\n      [ngTemplateOutletContext]=\"{ $implicit: renderProps }\"\n    ></ng-container>\n  </div>\n</ng-template>\n<ng-template [ngIf]=\"elTag == 'span'\">\n  <span #rootEl [ngClass]=\"elClasses || ''\" [ngStyle]=\"elStyle || null\">\n    <ng-container\n      [ngTemplateOutlet]=\"template\"\n      [ngTemplateOutletContext]=\"{ $implicit: renderProps }\"\n    ></ng-container>\n  </span>\n</ng-template>\n<ng-template [ngIf]=\"elTag == 'a'\">\n  <a #rootEl [ngClass]=\"elClasses || ''\" [ngStyle]=\"elStyle || null\">\n    <ng-container\n      [ngTemplateOutlet]=\"template\"\n      [ngTemplateOutletContext]=\"{ $implicit: renderProps }\"\n    ></ng-container>\n  </a>\n</ng-template>\n<ng-template [ngIf]=\"elTag == 'tr'\">\n  <tr #rootEl [ngClass]=\"elClasses || ''\" [ngStyle]=\"elStyle || null\">\n    <ng-container\n      [ngTemplateOutlet]=\"template\"\n      [ngTemplateOutletContext]=\"{ $implicit: renderProps }\"\n    ></ng-container>\n  </tr>\n</ng-template>\n<ng-template [ngIf]=\"elTag == 'th'\">\n  <th #rootEl [ngClass]=\"elClasses || ''\" [ngStyle]=\"elStyle || null\">\n    <ng-container\n      [ngTemplateOutlet]=\"template\"\n      [ngTemplateOutletContext]=\"{ $implicit: renderProps }\"\n    ></ng-container>\n  </th>\n</ng-template>\n<ng-template [ngIf]=\"elTag == 'td'\">\n  <td #rootEl [ngClass]=\"elClasses || ''\" [ngStyle]=\"elStyle || null\">\n    <ng-container\n      [ngTemplateOutlet]=\"template\"\n      [ngTemplateOutletContext]=\"{ $implicit: renderProps }\"\n    ></ng-container>\n  </td>\n</ng-template>\n"
    }]
  }], null, {
    inPlaceOf: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    reportEl: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    elTag: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    elClasses: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    elStyle: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    elAttrs: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    template: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    renderProps: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    rootElRef: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ViewChild,
      args: ['rootEl']
    }]
  });
})();
function replaceEl(subject, inPlaceOf) {
  inPlaceOf.parentNode?.insertBefore(subject, inPlaceOf.nextSibling);
  dummyContainer.appendChild(inPlaceOf);
}
function applyElAttrs(el, previousAttrs = {}, currentAttrs = {}) {
  // these are called "attributes" but they manipulate DOM node *properties*
  for (const attrName in previousAttrs) {
    if (!(attrName in currentAttrs)) {
      el[attrName] = null;
    }
  }
  for (const attrName in currentAttrs) {
    el[attrName] = currentAttrs[attrName];
  }
}
class FullCalendarComponent {
  constructor(element, changeDetector) {
    this.element = element;
    this.calendar = null;
    this.optionSnapshot = {}; // for diffing
    this.customRenderingMap = new Map();
    this.templateMap = {};
    const customRenderingStore = new _fullcalendar_core_internal__WEBPACK_IMPORTED_MODULE_2__.cy();
    customRenderingStore.subscribe(customRenderingMap => {
      this.customRenderingMap = customRenderingMap;
      this.customRenderingArray = undefined; // clear cache
      changeDetector.detectChanges();
    });
    this.handleCustomRendering = customRenderingStore.handle.bind(customRenderingStore);
    this.templateMap = this; // alias to this
  }

  ngAfterViewInit() {
    const {
      deepChangeDetection
    } = this;
    const options = {
      ...this.options,
      ...this.buildInputOptions()
    };
    // initialize snapshot
    this.optionSnapshot = mapHash(options, (optionVal, optionName) => deepChangeDetection && OPTION_IS_DEEP[optionName] ? deepCopy(optionVal) : optionVal);
    const calendarEl = this.element.nativeElement;
    const calendar = this.calendar = new _fullcalendar_core__WEBPACK_IMPORTED_MODULE_3__.Calendar(calendarEl, {
      ...options,
      ...this.buildExtraOptions()
    });
    // Ionic dimensions hack
    // https://github.com/fullcalendar/fullcalendar/issues/4976
    const ionContent = calendarEl.closest('ion-content');
    if (ionContent && ionContent.componentOnReady) {
      ionContent.componentOnReady().then(() => {
        window.requestAnimationFrame(() => {
          calendar.render();
        });
      });
    } else {
      calendar.render();
    }
  }
  /*
  allows us to manually detect complex input changes, internal mutations to certain options.
  called before ngOnChanges. called much more often than ngOnChanges.
  */
  ngDoCheck() {
    if (this.calendar) {
      // not the initial render
      const {
        deepChangeDetection,
        optionSnapshot
      } = this;
      const newOptions = {
        ...this.options,
        ...this.buildInputOptions()
      };
      const newProcessedOptions = {};
      const changedOptionNames = [];
      // detect adds and updates (and update snapshot)
      for (const optionName in newOptions) {
        if (newOptions.hasOwnProperty(optionName)) {
          let optionVal = newOptions[optionName];
          if (deepChangeDetection && OPTION_IS_DEEP[optionName]) {
            if (!deepEqual(optionSnapshot[optionName], optionVal)) {
              optionSnapshot[optionName] = deepCopy(optionVal);
              changedOptionNames.push(optionName);
            }
          } else {
            if (optionSnapshot[optionName] !== optionVal) {
              optionSnapshot[optionName] = optionVal;
              changedOptionNames.push(optionName);
            }
          }
          newProcessedOptions[optionName] = optionVal;
        }
      }
      const oldOptionNames = Object.keys(optionSnapshot);
      // detect removals (and update snapshot)
      for (const optionName of oldOptionNames) {
        if (!(optionName in newOptions)) {
          // doesn't exist in new options?
          delete optionSnapshot[optionName];
          changedOptionNames.push(optionName);
        }
      }
      if (changedOptionNames.length) {
        this.calendar.pauseRendering();
        this.calendar.resetOptions({
          ...newProcessedOptions,
          ...this.buildExtraOptions()
        }, changedOptionNames);
      }
    }
  }
  ngAfterContentChecked() {
    if (this.calendar) {
      // too defensive?
      this.calendar.resumeRendering();
    }
  }
  ngOnDestroy() {
    if (this.calendar) {
      // too defensive?
      this.calendar.destroy();
      this.calendar = null;
    }
  }
  get customRenderings() {
    return this.customRenderingArray || (this.customRenderingArray = [...this.customRenderingMap.values()]);
  }
  getApi() {
    return this.calendar;
  }
  buildInputOptions() {
    const options = {};
    for (const inputName of OPTION_INPUT_NAMES) {
      const inputValue = this[inputName];
      if (inputValue != null) {
        // exclude both null and undefined
        options[inputName] = inputValue;
      }
    }
    return options;
  }
  buildExtraOptions() {
    return {
      handleCustomRendering: this.handleCustomRendering,
      customRenderingMetaMap: this.templateMap,
      customRenderingReplacesEl: true
    };
  }
  // for `trackBy` in loop
  trackCustomRendering(index, customRendering) {
    return customRendering.id;
  }
}
FullCalendarComponent.ɵfac = function FullCalendarComponent_Factory(t) {
  return new (t || FullCalendarComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.ChangeDetectorRef));
};
FullCalendarComponent.ɵcmp = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
  type: FullCalendarComponent,
  selectors: [["full-calendar"]],
  contentQueries: function FullCalendarComponent_ContentQueries(rf, ctx, dirIndex) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵcontentQuery"](dirIndex, _c3, 7);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵcontentQuery"](dirIndex, _c4, 7);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵcontentQuery"](dirIndex, _c5, 7);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵcontentQuery"](dirIndex, _c6, 7);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵcontentQuery"](dirIndex, _c7, 7);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵcontentQuery"](dirIndex, _c8, 7);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵcontentQuery"](dirIndex, _c9, 7);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵcontentQuery"](dirIndex, _c10, 7);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵcontentQuery"](dirIndex, _c11, 7);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵcontentQuery"](dirIndex, _c12, 7);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵcontentQuery"](dirIndex, _c13, 7);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵcontentQuery"](dirIndex, _c14, 7);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵcontentQuery"](dirIndex, _c15, 7);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵcontentQuery"](dirIndex, _c16, 7);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵcontentQuery"](dirIndex, _c17, 7);
    }
    if (rf & 2) {
      let _t;
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.dayHeaderContent = _t.first);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.dayCellContent = _t.first);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.weekNumberContent = _t.first);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.nowIndicatorContent = _t.first);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.eventContent = _t.first);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.slotLaneContent = _t.first);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.slotLabelContent = _t.first);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.allDayContent = _t.first);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.moreLinkContent = _t.first);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.noEventsContent = _t.first);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.resourceAreaHeaderContent = _t.first);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.resourceGroupLabelContent = _t.first);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.resourceLabelContent = _t.first);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.resourceLaneContent = _t.first);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.resourceGroupLaneContent = _t.first);
    }
  },
  inputs: {
    options: "options",
    deepChangeDetection: "deepChangeDetection",
    events: "events",
    eventSources: "eventSources",
    resources: "resources"
  },
  decls: 2,
  vars: 2,
  consts: [[3, "inPlaceOf", "reportEl", "elTag", "elClasses", "elStyle", "elAttrs", "template", "renderProps", 4, "ngFor", "ngForOf", "ngForTrackBy"], [3, "inPlaceOf", "reportEl", "elTag", "elClasses", "elStyle", "elAttrs", "template", "renderProps"]],
  template: function FullCalendarComponent_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "offscreen-fragment");
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, FullCalendarComponent_transport_container_1_Template, 1, 8, "transport-container", 0);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
    }
    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngForOf", ctx.customRenderings)("ngForTrackBy", ctx.trackCustomRendering);
    }
  },
  dependencies: [OffscreenFragmentComponent, TransportContainerComponent, _angular_common__WEBPACK_IMPORTED_MODULE_1__.NgForOf],
  encapsulation: 2
});
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](FullCalendarComponent, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Component,
    args: [{
      selector: 'full-calendar',
      encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ViewEncapsulation.None // the styles are root-level, not scoped within the component
      ,
      template: "<offscreen-fragment>\n  <transport-container *ngFor=\"let customRendering of customRenderings; trackBy:trackCustomRendering\"\n    [inPlaceOf]=\"customRendering.containerEl\"\n    [reportEl]=\"customRendering.reportNewContainerEl\"\n    [elTag]=\"customRendering.elTag\"\n    [elClasses]=\"customRendering.elClasses\"\n    [elStyle]=\"customRendering.elStyle\"\n    [elAttrs]=\"customRendering.elAttrs\"\n    [template]=\"templateMap[customRendering.generatorName]!\"\n    [renderProps]=\"customRendering.renderProps\"\n  ></transport-container>\n</offscreen-fragment>\n"
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ChangeDetectorRef
    }];
  }, {
    options: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    deepChangeDetection: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    events: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    eventSources: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    resources: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    dayHeaderContent: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ContentChild,
      args: ['dayHeaderContent', {
        static: true
      }]
    }],
    dayCellContent: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ContentChild,
      args: ['dayCellContent', {
        static: true
      }]
    }],
    weekNumberContent: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ContentChild,
      args: ['weekNumberContent', {
        static: true
      }]
    }],
    nowIndicatorContent: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ContentChild,
      args: ['nowIndicatorContent', {
        static: true
      }]
    }],
    eventContent: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ContentChild,
      args: ['eventContent', {
        static: true
      }]
    }],
    slotLaneContent: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ContentChild,
      args: ['slotLaneContent', {
        static: true
      }]
    }],
    slotLabelContent: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ContentChild,
      args: ['slotLabelContent', {
        static: true
      }]
    }],
    allDayContent: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ContentChild,
      args: ['allDayContent', {
        static: true
      }]
    }],
    moreLinkContent: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ContentChild,
      args: ['moreLinkContent', {
        static: true
      }]
    }],
    noEventsContent: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ContentChild,
      args: ['noEventsContent', {
        static: true
      }]
    }],
    resourceAreaHeaderContent: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ContentChild,
      args: ['resourceAreaHeaderContent', {
        static: true
      }]
    }],
    resourceGroupLabelContent: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ContentChild,
      args: ['resourceGroupLabelContent', {
        static: true
      }]
    }],
    resourceLabelContent: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ContentChild,
      args: ['resourceLabelContent', {
        static: true
      }]
    }],
    resourceLaneContent: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ContentChild,
      args: ['resourceLaneContent', {
        static: true
      }]
    }],
    resourceGroupLaneContent: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ContentChild,
      args: ['resourceGroupLaneContent', {
        static: true
      }]
    }]
  });
})();
class FullCalendarModule {}
FullCalendarModule.ɵfac = function FullCalendarModule_Factory(t) {
  return new (t || FullCalendarModule)();
};
FullCalendarModule.ɵmod = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineNgModule"]({
  type: FullCalendarModule
});
FullCalendarModule.ɵinj = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjector"]({
  imports: [[_angular_common__WEBPACK_IMPORTED_MODULE_1__.CommonModule]]
});
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](FullCalendarModule, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.NgModule,
    args: [{
      declarations: [FullCalendarComponent, OffscreenFragmentComponent, TransportContainerComponent],
      imports: [_angular_common__WEBPACK_IMPORTED_MODULE_1__.CommonModule],
      exports: [FullCalendarComponent]
    }]
  }], null, null);
})();

/*
 * Public API Surface of lib
 */

/**
 * Generated bundle index. Do not edit.
 */



/***/ }),

/***/ 7962:
/*!**************************************************!*\
  !*** ./node_modules/@fullcalendar/core/index.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Calendar: () => (/* binding */ Calendar),
/* harmony export */   JsonRequestError: () => (/* reexport safe */ _internal_common_js__WEBPACK_IMPORTED_MODULE_0__.ag),
/* harmony export */   createPlugin: () => (/* binding */ createPlugin),
/* harmony export */   formatDate: () => (/* binding */ formatDate),
/* harmony export */   formatRange: () => (/* binding */ formatRange),
/* harmony export */   globalLocales: () => (/* binding */ globalLocales),
/* harmony export */   globalPlugins: () => (/* binding */ globalPlugins),
/* harmony export */   sliceEvents: () => (/* binding */ sliceEvents),
/* harmony export */   version: () => (/* binding */ version)
/* harmony export */ });
/* harmony import */ var _internal_common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./internal-common.js */ 939);
/* harmony import */ var preact__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! preact */ 3586);
/* harmony import */ var preact_compat__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! preact/compat */ 5662);




const globalLocales = [];
const MINIMAL_RAW_EN_LOCALE = {
  code: 'en',
  week: {
    dow: 0,
    doy: 4 // 4 days need to be within the year to be considered the first week
  },

  direction: 'ltr',
  buttonText: {
    prev: 'prev',
    next: 'next',
    prevYear: 'prev year',
    nextYear: 'next year',
    year: 'year',
    today: 'today',
    month: 'month',
    week: 'week',
    day: 'day',
    list: 'list'
  },
  weekText: 'W',
  weekTextLong: 'Week',
  closeHint: 'Close',
  timeHint: 'Time',
  eventHint: 'Event',
  allDayText: 'all-day',
  moreLinkText: 'more',
  noEventsText: 'No events to display'
};
const RAW_EN_LOCALE = Object.assign(Object.assign({}, MINIMAL_RAW_EN_LOCALE), {
  // Includes things we don't want other locales to inherit,
  // things that derive from other translatable strings.
  buttonHints: {
    prev: 'Previous $0',
    next: 'Next $0',
    today(buttonText, unit) {
      return unit === 'day' ? 'Today' : `This ${buttonText}`;
    }
  },
  viewHint: '$0 view',
  navLinkHint: 'Go to $0',
  moreLinkHint(eventCnt) {
    return `Show ${eventCnt} more event${eventCnt === 1 ? '' : 's'}`;
  }
});
function organizeRawLocales(explicitRawLocales) {
  let defaultCode = explicitRawLocales.length > 0 ? explicitRawLocales[0].code : 'en';
  let allRawLocales = globalLocales.concat(explicitRawLocales);
  let rawLocaleMap = {
    en: RAW_EN_LOCALE
  };
  for (let rawLocale of allRawLocales) {
    rawLocaleMap[rawLocale.code] = rawLocale;
  }
  return {
    map: rawLocaleMap,
    defaultCode
  };
}
function buildLocale(inputSingular, available) {
  if (typeof inputSingular === 'object' && !Array.isArray(inputSingular)) {
    return parseLocale(inputSingular.code, [inputSingular.code], inputSingular);
  }
  return queryLocale(inputSingular, available);
}
function queryLocale(codeArg, available) {
  let codes = [].concat(codeArg || []); // will convert to array
  let raw = queryRawLocale(codes, available) || RAW_EN_LOCALE;
  return parseLocale(codeArg, codes, raw);
}
function queryRawLocale(codes, available) {
  for (let i = 0; i < codes.length; i += 1) {
    let parts = codes[i].toLocaleLowerCase().split('-');
    for (let j = parts.length; j > 0; j -= 1) {
      let simpleId = parts.slice(0, j).join('-');
      if (available[simpleId]) {
        return available[simpleId];
      }
    }
  }
  return null;
}
function parseLocale(codeArg, codes, raw) {
  let merged = (0,_internal_common_js__WEBPACK_IMPORTED_MODULE_0__.m)([MINIMAL_RAW_EN_LOCALE, raw], ['buttonText']);
  delete merged.code; // don't want this part of the options
  let {
    week
  } = merged;
  delete merged.week;
  return {
    codeArg,
    codes,
    week,
    simpleNumberFormat: new Intl.NumberFormat(codeArg),
    options: merged
  };
}

// TODO: easier way to add new hooks? need to update a million things
function createPlugin(input) {
  return {
    id: (0,_internal_common_js__WEBPACK_IMPORTED_MODULE_0__.g)(),
    name: input.name,
    premiumReleaseDate: input.premiumReleaseDate ? new Date(input.premiumReleaseDate) : undefined,
    deps: input.deps || [],
    reducers: input.reducers || [],
    isLoadingFuncs: input.isLoadingFuncs || [],
    contextInit: [].concat(input.contextInit || []),
    eventRefiners: input.eventRefiners || {},
    eventDefMemberAdders: input.eventDefMemberAdders || [],
    eventSourceRefiners: input.eventSourceRefiners || {},
    isDraggableTransformers: input.isDraggableTransformers || [],
    eventDragMutationMassagers: input.eventDragMutationMassagers || [],
    eventDefMutationAppliers: input.eventDefMutationAppliers || [],
    dateSelectionTransformers: input.dateSelectionTransformers || [],
    datePointTransforms: input.datePointTransforms || [],
    dateSpanTransforms: input.dateSpanTransforms || [],
    views: input.views || {},
    viewPropsTransformers: input.viewPropsTransformers || [],
    isPropsValid: input.isPropsValid || null,
    externalDefTransforms: input.externalDefTransforms || [],
    viewContainerAppends: input.viewContainerAppends || [],
    eventDropTransformers: input.eventDropTransformers || [],
    componentInteractions: input.componentInteractions || [],
    calendarInteractions: input.calendarInteractions || [],
    themeClasses: input.themeClasses || {},
    eventSourceDefs: input.eventSourceDefs || [],
    cmdFormatter: input.cmdFormatter,
    recurringTypes: input.recurringTypes || [],
    namedTimeZonedImpl: input.namedTimeZonedImpl,
    initialView: input.initialView || '',
    elementDraggingImpl: input.elementDraggingImpl,
    optionChangeHandlers: input.optionChangeHandlers || {},
    scrollGridImpl: input.scrollGridImpl || null,
    listenerRefiners: input.listenerRefiners || {},
    optionRefiners: input.optionRefiners || {},
    propSetHandlers: input.propSetHandlers || {}
  };
}
function buildPluginHooks(pluginDefs, globalDefs) {
  let currentPluginIds = {};
  let hooks = {
    premiumReleaseDate: undefined,
    reducers: [],
    isLoadingFuncs: [],
    contextInit: [],
    eventRefiners: {},
    eventDefMemberAdders: [],
    eventSourceRefiners: {},
    isDraggableTransformers: [],
    eventDragMutationMassagers: [],
    eventDefMutationAppliers: [],
    dateSelectionTransformers: [],
    datePointTransforms: [],
    dateSpanTransforms: [],
    views: {},
    viewPropsTransformers: [],
    isPropsValid: null,
    externalDefTransforms: [],
    viewContainerAppends: [],
    eventDropTransformers: [],
    componentInteractions: [],
    calendarInteractions: [],
    themeClasses: {},
    eventSourceDefs: [],
    cmdFormatter: null,
    recurringTypes: [],
    namedTimeZonedImpl: null,
    initialView: '',
    elementDraggingImpl: null,
    optionChangeHandlers: {},
    scrollGridImpl: null,
    listenerRefiners: {},
    optionRefiners: {},
    propSetHandlers: {}
  };
  function addDefs(defs) {
    for (let def of defs) {
      const pluginName = def.name;
      const currentId = currentPluginIds[pluginName];
      if (currentId === undefined) {
        currentPluginIds[pluginName] = def.id;
        addDefs(def.deps);
        hooks = combineHooks(hooks, def);
      } else if (currentId !== def.id) {
        // different ID than the one already added
        console.warn(`Duplicate plugin '${pluginName}'`);
      }
    }
  }
  if (pluginDefs) {
    addDefs(pluginDefs);
  }
  addDefs(globalDefs);
  return hooks;
}
function buildBuildPluginHooks() {
  let currentOverrideDefs = [];
  let currentGlobalDefs = [];
  let currentHooks;
  return (overrideDefs, globalDefs) => {
    if (!currentHooks || !(0,_internal_common_js__WEBPACK_IMPORTED_MODULE_0__.i)(overrideDefs, currentOverrideDefs) || !(0,_internal_common_js__WEBPACK_IMPORTED_MODULE_0__.i)(globalDefs, currentGlobalDefs)) {
      currentHooks = buildPluginHooks(overrideDefs, globalDefs);
    }
    currentOverrideDefs = overrideDefs;
    currentGlobalDefs = globalDefs;
    return currentHooks;
  };
}
function combineHooks(hooks0, hooks1) {
  return {
    premiumReleaseDate: compareOptionalDates(hooks0.premiumReleaseDate, hooks1.premiumReleaseDate),
    reducers: hooks0.reducers.concat(hooks1.reducers),
    isLoadingFuncs: hooks0.isLoadingFuncs.concat(hooks1.isLoadingFuncs),
    contextInit: hooks0.contextInit.concat(hooks1.contextInit),
    eventRefiners: Object.assign(Object.assign({}, hooks0.eventRefiners), hooks1.eventRefiners),
    eventDefMemberAdders: hooks0.eventDefMemberAdders.concat(hooks1.eventDefMemberAdders),
    eventSourceRefiners: Object.assign(Object.assign({}, hooks0.eventSourceRefiners), hooks1.eventSourceRefiners),
    isDraggableTransformers: hooks0.isDraggableTransformers.concat(hooks1.isDraggableTransformers),
    eventDragMutationMassagers: hooks0.eventDragMutationMassagers.concat(hooks1.eventDragMutationMassagers),
    eventDefMutationAppliers: hooks0.eventDefMutationAppliers.concat(hooks1.eventDefMutationAppliers),
    dateSelectionTransformers: hooks0.dateSelectionTransformers.concat(hooks1.dateSelectionTransformers),
    datePointTransforms: hooks0.datePointTransforms.concat(hooks1.datePointTransforms),
    dateSpanTransforms: hooks0.dateSpanTransforms.concat(hooks1.dateSpanTransforms),
    views: Object.assign(Object.assign({}, hooks0.views), hooks1.views),
    viewPropsTransformers: hooks0.viewPropsTransformers.concat(hooks1.viewPropsTransformers),
    isPropsValid: hooks1.isPropsValid || hooks0.isPropsValid,
    externalDefTransforms: hooks0.externalDefTransforms.concat(hooks1.externalDefTransforms),
    viewContainerAppends: hooks0.viewContainerAppends.concat(hooks1.viewContainerAppends),
    eventDropTransformers: hooks0.eventDropTransformers.concat(hooks1.eventDropTransformers),
    calendarInteractions: hooks0.calendarInteractions.concat(hooks1.calendarInteractions),
    componentInteractions: hooks0.componentInteractions.concat(hooks1.componentInteractions),
    themeClasses: Object.assign(Object.assign({}, hooks0.themeClasses), hooks1.themeClasses),
    eventSourceDefs: hooks0.eventSourceDefs.concat(hooks1.eventSourceDefs),
    cmdFormatter: hooks1.cmdFormatter || hooks0.cmdFormatter,
    recurringTypes: hooks0.recurringTypes.concat(hooks1.recurringTypes),
    namedTimeZonedImpl: hooks1.namedTimeZonedImpl || hooks0.namedTimeZonedImpl,
    initialView: hooks0.initialView || hooks1.initialView,
    elementDraggingImpl: hooks0.elementDraggingImpl || hooks1.elementDraggingImpl,
    optionChangeHandlers: Object.assign(Object.assign({}, hooks0.optionChangeHandlers), hooks1.optionChangeHandlers),
    scrollGridImpl: hooks1.scrollGridImpl || hooks0.scrollGridImpl,
    listenerRefiners: Object.assign(Object.assign({}, hooks0.listenerRefiners), hooks1.listenerRefiners),
    optionRefiners: Object.assign(Object.assign({}, hooks0.optionRefiners), hooks1.optionRefiners),
    propSetHandlers: Object.assign(Object.assign({}, hooks0.propSetHandlers), hooks1.propSetHandlers)
  };
}
function compareOptionalDates(date0, date1) {
  if (date0 === undefined) {
    return date1;
  }
  if (date1 === undefined) {
    return date0;
  }
  return new Date(Math.max(date0.valueOf(), date1.valueOf()));
}
class StandardTheme extends _internal_common_js__WEBPACK_IMPORTED_MODULE_0__.T {}
StandardTheme.prototype.classes = {
  root: 'fc-theme-standard',
  tableCellShaded: 'fc-cell-shaded',
  buttonGroup: 'fc-button-group',
  button: 'fc-button fc-button-primary',
  buttonActive: 'fc-button-active'
};
StandardTheme.prototype.baseIconClass = 'fc-icon';
StandardTheme.prototype.iconClasses = {
  close: 'fc-icon-x',
  prev: 'fc-icon-chevron-left',
  next: 'fc-icon-chevron-right',
  prevYear: 'fc-icon-chevrons-left',
  nextYear: 'fc-icon-chevrons-right'
};
StandardTheme.prototype.rtlIconClasses = {
  prev: 'fc-icon-chevron-right',
  next: 'fc-icon-chevron-left',
  prevYear: 'fc-icon-chevrons-right',
  nextYear: 'fc-icon-chevrons-left'
};
StandardTheme.prototype.iconOverrideOption = 'buttonIcons'; // TODO: make TS-friendly
StandardTheme.prototype.iconOverrideCustomButtonOption = 'icon';
StandardTheme.prototype.iconOverridePrefix = 'fc-icon-';
function compileViewDefs(defaultConfigs, overrideConfigs) {
  let hash = {};
  let viewType;
  for (viewType in defaultConfigs) {
    ensureViewDef(viewType, hash, defaultConfigs, overrideConfigs);
  }
  for (viewType in overrideConfigs) {
    ensureViewDef(viewType, hash, defaultConfigs, overrideConfigs);
  }
  return hash;
}
function ensureViewDef(viewType, hash, defaultConfigs, overrideConfigs) {
  if (hash[viewType]) {
    return hash[viewType];
  }
  let viewDef = buildViewDef(viewType, hash, defaultConfigs, overrideConfigs);
  if (viewDef) {
    hash[viewType] = viewDef;
  }
  return viewDef;
}
function buildViewDef(viewType, hash, defaultConfigs, overrideConfigs) {
  let defaultConfig = defaultConfigs[viewType];
  let overrideConfig = overrideConfigs[viewType];
  let queryProp = name => defaultConfig && defaultConfig[name] !== null ? defaultConfig[name] : overrideConfig && overrideConfig[name] !== null ? overrideConfig[name] : null;
  let theComponent = queryProp('component');
  let superType = queryProp('superType');
  let superDef = null;
  if (superType) {
    if (superType === viewType) {
      throw new Error('Can\'t have a custom view type that references itself');
    }
    superDef = ensureViewDef(superType, hash, defaultConfigs, overrideConfigs);
  }
  if (!theComponent && superDef) {
    theComponent = superDef.component;
  }
  if (!theComponent) {
    return null; // don't throw a warning, might be settings for a single-unit view
  }

  return {
    type: viewType,
    component: theComponent,
    defaults: Object.assign(Object.assign({}, superDef ? superDef.defaults : {}), defaultConfig ? defaultConfig.rawOptions : {}),
    overrides: Object.assign(Object.assign({}, superDef ? superDef.overrides : {}), overrideConfig ? overrideConfig.rawOptions : {})
  };
}
function parseViewConfigs(inputs) {
  return (0,_internal_common_js__WEBPACK_IMPORTED_MODULE_0__.a)(inputs, parseViewConfig);
}
function parseViewConfig(input) {
  let rawOptions = typeof input === 'function' ? {
    component: input
  } : input;
  let {
    component
  } = rawOptions;
  if (rawOptions.content) {
    // TODO: remove content/classNames/didMount/etc from options?
    component = createViewHookComponent(rawOptions);
  } else if (component && !(component.prototype instanceof _internal_common_js__WEBPACK_IMPORTED_MODULE_0__.B)) {
    // WHY?: people were using `component` property for `content`
    // TODO: converge on one setting name
    component = createViewHookComponent(Object.assign(Object.assign({}, rawOptions), {
      content: component
    }));
  }
  return {
    superType: rawOptions.type,
    component: component,
    rawOptions // includes type and component too :(
  };
}

function createViewHookComponent(options) {
  return viewProps => (0,preact__WEBPACK_IMPORTED_MODULE_1__.createElement)(_internal_common_js__WEBPACK_IMPORTED_MODULE_0__.V.Consumer, null, context => (0,preact__WEBPACK_IMPORTED_MODULE_1__.createElement)(_internal_common_js__WEBPACK_IMPORTED_MODULE_0__.C, {
    elTag: "div",
    elClasses: (0,_internal_common_js__WEBPACK_IMPORTED_MODULE_0__.b)(context.viewSpec),
    renderProps: Object.assign(Object.assign({}, viewProps), {
      nextDayThreshold: context.options.nextDayThreshold
    }),
    generatorName: undefined,
    customGenerator: options.content,
    classNameGenerator: options.classNames,
    didMount: options.didMount,
    willUnmount: options.willUnmount
  }));
}
function buildViewSpecs(defaultInputs, optionOverrides, dynamicOptionOverrides, localeDefaults) {
  let defaultConfigs = parseViewConfigs(defaultInputs);
  let overrideConfigs = parseViewConfigs(optionOverrides.views);
  let viewDefs = compileViewDefs(defaultConfigs, overrideConfigs);
  return (0,_internal_common_js__WEBPACK_IMPORTED_MODULE_0__.a)(viewDefs, viewDef => buildViewSpec(viewDef, overrideConfigs, optionOverrides, dynamicOptionOverrides, localeDefaults));
}
function buildViewSpec(viewDef, overrideConfigs, optionOverrides, dynamicOptionOverrides, localeDefaults) {
  let durationInput = viewDef.overrides.duration || viewDef.defaults.duration || dynamicOptionOverrides.duration || optionOverrides.duration;
  let duration = null;
  let durationUnit = '';
  let singleUnit = '';
  let singleUnitOverrides = {};
  if (durationInput) {
    duration = createDurationCached(durationInput);
    if (duration) {
      // valid?
      let denom = (0,_internal_common_js__WEBPACK_IMPORTED_MODULE_0__.c)(duration);
      durationUnit = denom.unit;
      if (denom.value === 1) {
        singleUnit = durationUnit;
        singleUnitOverrides = overrideConfigs[durationUnit] ? overrideConfigs[durationUnit].rawOptions : {};
      }
    }
  }
  let queryButtonText = optionsSubset => {
    let buttonTextMap = optionsSubset.buttonText || {};
    let buttonTextKey = viewDef.defaults.buttonTextKey;
    if (buttonTextKey != null && buttonTextMap[buttonTextKey] != null) {
      return buttonTextMap[buttonTextKey];
    }
    if (buttonTextMap[viewDef.type] != null) {
      return buttonTextMap[viewDef.type];
    }
    if (buttonTextMap[singleUnit] != null) {
      return buttonTextMap[singleUnit];
    }
    return null;
  };
  let queryButtonTitle = optionsSubset => {
    let buttonHints = optionsSubset.buttonHints || {};
    let buttonKey = viewDef.defaults.buttonTextKey; // use same key as text
    if (buttonKey != null && buttonHints[buttonKey] != null) {
      return buttonHints[buttonKey];
    }
    if (buttonHints[viewDef.type] != null) {
      return buttonHints[viewDef.type];
    }
    if (buttonHints[singleUnit] != null) {
      return buttonHints[singleUnit];
    }
    return null;
  };
  return {
    type: viewDef.type,
    component: viewDef.component,
    duration,
    durationUnit,
    singleUnit,
    optionDefaults: viewDef.defaults,
    optionOverrides: Object.assign(Object.assign({}, singleUnitOverrides), viewDef.overrides),
    buttonTextOverride: queryButtonText(dynamicOptionOverrides) || queryButtonText(optionOverrides) ||
    // constructor-specified buttonText lookup hash takes precedence
    viewDef.overrides.buttonText,
    buttonTextDefault: queryButtonText(localeDefaults) || viewDef.defaults.buttonText || queryButtonText(_internal_common_js__WEBPACK_IMPORTED_MODULE_0__.e) || viewDef.type,
    // not DRY
    buttonTitleOverride: queryButtonTitle(dynamicOptionOverrides) || queryButtonTitle(optionOverrides) || viewDef.overrides.buttonHint,
    buttonTitleDefault: queryButtonTitle(localeDefaults) || viewDef.defaults.buttonHint || queryButtonTitle(_internal_common_js__WEBPACK_IMPORTED_MODULE_0__.e)
    // will eventually fall back to buttonText
  };
}
// hack to get memoization working
let durationInputMap = {};
function createDurationCached(durationInput) {
  let json = JSON.stringify(durationInput);
  let res = durationInputMap[json];
  if (res === undefined) {
    res = (0,_internal_common_js__WEBPACK_IMPORTED_MODULE_0__.d)(durationInput);
    durationInputMap[json] = res;
  }
  return res;
}
function reduceViewType(viewType, action) {
  switch (action.type) {
    case 'CHANGE_VIEW_TYPE':
      viewType = action.viewType;
  }
  return viewType;
}
function reduceDynamicOptionOverrides(dynamicOptionOverrides, action) {
  switch (action.type) {
    case 'SET_OPTION':
      return Object.assign(Object.assign({}, dynamicOptionOverrides), {
        [action.optionName]: action.rawOptionValue
      });
    default:
      return dynamicOptionOverrides;
  }
}
function reduceDateProfile(currentDateProfile, action, currentDate, dateProfileGenerator) {
  let dp;
  switch (action.type) {
    case 'CHANGE_VIEW_TYPE':
      return dateProfileGenerator.build(action.dateMarker || currentDate);
    case 'CHANGE_DATE':
      return dateProfileGenerator.build(action.dateMarker);
    case 'PREV':
      dp = dateProfileGenerator.buildPrev(currentDateProfile, currentDate);
      if (dp.isValid) {
        return dp;
      }
      break;
    case 'NEXT':
      dp = dateProfileGenerator.buildNext(currentDateProfile, currentDate);
      if (dp.isValid) {
        return dp;
      }
      break;
  }
  return currentDateProfile;
}
function initEventSources(calendarOptions, dateProfile, context) {
  let activeRange = dateProfile ? dateProfile.activeRange : null;
  return addSources({}, parseInitialSources(calendarOptions, context), activeRange, context);
}
function reduceEventSources(eventSources, action, dateProfile, context) {
  let activeRange = dateProfile ? dateProfile.activeRange : null; // need this check?
  switch (action.type) {
    case 'ADD_EVENT_SOURCES':
      // already parsed
      return addSources(eventSources, action.sources, activeRange, context);
    case 'REMOVE_EVENT_SOURCE':
      return removeSource(eventSources, action.sourceId);
    case 'PREV': // TODO: how do we track all actions that affect dateProfile :(
    case 'NEXT':
    case 'CHANGE_DATE':
    case 'CHANGE_VIEW_TYPE':
      if (dateProfile) {
        return fetchDirtySources(eventSources, activeRange, context);
      }
      return eventSources;
    case 'FETCH_EVENT_SOURCES':
      return fetchSourcesByIds(eventSources, action.sourceIds ?
      // why no type?
      (0,_internal_common_js__WEBPACK_IMPORTED_MODULE_0__.f)(action.sourceIds) : excludeStaticSources(eventSources, context), activeRange, action.isRefetch || false, context);
    case 'RECEIVE_EVENTS':
    case 'RECEIVE_EVENT_ERROR':
      return receiveResponse(eventSources, action.sourceId, action.fetchId, action.fetchRange);
    case 'REMOVE_ALL_EVENT_SOURCES':
      return {};
    default:
      return eventSources;
  }
}
function reduceEventSourcesNewTimeZone(eventSources, dateProfile, context) {
  let activeRange = dateProfile ? dateProfile.activeRange : null; // need this check?
  return fetchSourcesByIds(eventSources, excludeStaticSources(eventSources, context), activeRange, true, context);
}
function computeEventSourcesLoading(eventSources) {
  for (let sourceId in eventSources) {
    if (eventSources[sourceId].isFetching) {
      return true;
    }
  }
  return false;
}
function addSources(eventSourceHash, sources, fetchRange, context) {
  let hash = {};
  for (let source of sources) {
    hash[source.sourceId] = source;
  }
  if (fetchRange) {
    hash = fetchDirtySources(hash, fetchRange, context);
  }
  return Object.assign(Object.assign({}, eventSourceHash), hash);
}
function removeSource(eventSourceHash, sourceId) {
  return (0,_internal_common_js__WEBPACK_IMPORTED_MODULE_0__.h)(eventSourceHash, eventSource => eventSource.sourceId !== sourceId);
}
function fetchDirtySources(sourceHash, fetchRange, context) {
  return fetchSourcesByIds(sourceHash, (0,_internal_common_js__WEBPACK_IMPORTED_MODULE_0__.h)(sourceHash, eventSource => isSourceDirty(eventSource, fetchRange, context)), fetchRange, false, context);
}
function isSourceDirty(eventSource, fetchRange, context) {
  if (!doesSourceNeedRange(eventSource, context)) {
    return !eventSource.latestFetchId;
  }
  return !context.options.lazyFetching || !eventSource.fetchRange || eventSource.isFetching ||
  // always cancel outdated in-progress fetches
  fetchRange.start < eventSource.fetchRange.start || fetchRange.end > eventSource.fetchRange.end;
}
function fetchSourcesByIds(prevSources, sourceIdHash, fetchRange, isRefetch, context) {
  let nextSources = {};
  for (let sourceId in prevSources) {
    let source = prevSources[sourceId];
    if (sourceIdHash[sourceId]) {
      nextSources[sourceId] = fetchSource(source, fetchRange, isRefetch, context);
    } else {
      nextSources[sourceId] = source;
    }
  }
  return nextSources;
}
function fetchSource(eventSource, fetchRange, isRefetch, context) {
  let {
    options,
    calendarApi
  } = context;
  let sourceDef = context.pluginHooks.eventSourceDefs[eventSource.sourceDefId];
  let fetchId = (0,_internal_common_js__WEBPACK_IMPORTED_MODULE_0__.g)();
  sourceDef.fetch({
    eventSource,
    range: fetchRange,
    isRefetch,
    context
  }, res => {
    let {
      rawEvents
    } = res;
    if (options.eventSourceSuccess) {
      rawEvents = options.eventSourceSuccess.call(calendarApi, rawEvents, res.response) || rawEvents;
    }
    if (eventSource.success) {
      rawEvents = eventSource.success.call(calendarApi, rawEvents, res.response) || rawEvents;
    }
    context.dispatch({
      type: 'RECEIVE_EVENTS',
      sourceId: eventSource.sourceId,
      fetchId,
      fetchRange,
      rawEvents
    });
  }, error => {
    let errorHandled = false;
    if (options.eventSourceFailure) {
      options.eventSourceFailure.call(calendarApi, error);
      errorHandled = true;
    }
    if (eventSource.failure) {
      eventSource.failure(error);
      errorHandled = true;
    }
    if (!errorHandled) {
      console.warn(error.message, error);
    }
    context.dispatch({
      type: 'RECEIVE_EVENT_ERROR',
      sourceId: eventSource.sourceId,
      fetchId,
      fetchRange,
      error
    });
  });
  return Object.assign(Object.assign({}, eventSource), {
    isFetching: true,
    latestFetchId: fetchId
  });
}
function receiveResponse(sourceHash, sourceId, fetchId, fetchRange) {
  let eventSource = sourceHash[sourceId];
  if (eventSource &&
  // not already removed
  fetchId === eventSource.latestFetchId) {
    return Object.assign(Object.assign({}, sourceHash), {
      [sourceId]: Object.assign(Object.assign({}, eventSource), {
        isFetching: false,
        fetchRange
      })
    });
  }
  return sourceHash;
}
function excludeStaticSources(eventSources, context) {
  return (0,_internal_common_js__WEBPACK_IMPORTED_MODULE_0__.h)(eventSources, eventSource => doesSourceNeedRange(eventSource, context));
}
function parseInitialSources(rawOptions, context) {
  let refiners = (0,_internal_common_js__WEBPACK_IMPORTED_MODULE_0__.j)(context);
  let rawSources = [].concat(rawOptions.eventSources || []);
  let sources = []; // parsed
  if (rawOptions.initialEvents) {
    rawSources.unshift(rawOptions.initialEvents);
  }
  if (rawOptions.events) {
    rawSources.unshift(rawOptions.events);
  }
  for (let rawSource of rawSources) {
    let source = (0,_internal_common_js__WEBPACK_IMPORTED_MODULE_0__.p)(rawSource, context, refiners);
    if (source) {
      sources.push(source);
    }
  }
  return sources;
}
function doesSourceNeedRange(eventSource, context) {
  let defs = context.pluginHooks.eventSourceDefs;
  return !defs[eventSource.sourceDefId].ignoreRange;
}
function reduceDateSelection(currentSelection, action) {
  switch (action.type) {
    case 'UNSELECT_DATES':
      return null;
    case 'SELECT_DATES':
      return action.selection;
    default:
      return currentSelection;
  }
}
function reduceSelectedEvent(currentInstanceId, action) {
  switch (action.type) {
    case 'UNSELECT_EVENT':
      return '';
    case 'SELECT_EVENT':
      return action.eventInstanceId;
    default:
      return currentInstanceId;
  }
}
function reduceEventDrag(currentDrag, action) {
  let newDrag;
  switch (action.type) {
    case 'UNSET_EVENT_DRAG':
      return null;
    case 'SET_EVENT_DRAG':
      newDrag = action.state;
      return {
        affectedEvents: newDrag.affectedEvents,
        mutatedEvents: newDrag.mutatedEvents,
        isEvent: newDrag.isEvent
      };
    default:
      return currentDrag;
  }
}
function reduceEventResize(currentResize, action) {
  let newResize;
  switch (action.type) {
    case 'UNSET_EVENT_RESIZE':
      return null;
    case 'SET_EVENT_RESIZE':
      newResize = action.state;
      return {
        affectedEvents: newResize.affectedEvents,
        mutatedEvents: newResize.mutatedEvents,
        isEvent: newResize.isEvent
      };
    default:
      return currentResize;
  }
}
function parseToolbars(calendarOptions, calendarOptionOverrides, theme, viewSpecs, calendarApi) {
  let header = calendarOptions.headerToolbar ? parseToolbar(calendarOptions.headerToolbar, calendarOptions, calendarOptionOverrides, theme, viewSpecs, calendarApi) : null;
  let footer = calendarOptions.footerToolbar ? parseToolbar(calendarOptions.footerToolbar, calendarOptions, calendarOptionOverrides, theme, viewSpecs, calendarApi) : null;
  return {
    header,
    footer
  };
}
function parseToolbar(sectionStrHash, calendarOptions, calendarOptionOverrides, theme, viewSpecs, calendarApi) {
  let sectionWidgets = {};
  let viewsWithButtons = [];
  let hasTitle = false;
  for (let sectionName in sectionStrHash) {
    let sectionStr = sectionStrHash[sectionName];
    let sectionRes = parseSection(sectionStr, calendarOptions, calendarOptionOverrides, theme, viewSpecs, calendarApi);
    sectionWidgets[sectionName] = sectionRes.widgets;
    viewsWithButtons.push(...sectionRes.viewsWithButtons);
    hasTitle = hasTitle || sectionRes.hasTitle;
  }
  return {
    sectionWidgets,
    viewsWithButtons,
    hasTitle
  };
}
/*
BAD: querying icons and text here. should be done at render time
*/
function parseSection(sectionStr, calendarOptions,
// defaults+overrides, then refined
calendarOptionOverrides,
// overrides only!, unrefined :(
theme, viewSpecs, calendarApi) {
  let isRtl = calendarOptions.direction === 'rtl';
  let calendarCustomButtons = calendarOptions.customButtons || {};
  let calendarButtonTextOverrides = calendarOptionOverrides.buttonText || {};
  let calendarButtonText = calendarOptions.buttonText || {};
  let calendarButtonHintOverrides = calendarOptionOverrides.buttonHints || {};
  let calendarButtonHints = calendarOptions.buttonHints || {};
  let sectionSubstrs = sectionStr ? sectionStr.split(' ') : [];
  let viewsWithButtons = [];
  let hasTitle = false;
  let widgets = sectionSubstrs.map(buttonGroupStr => buttonGroupStr.split(',').map(buttonName => {
    if (buttonName === 'title') {
      hasTitle = true;
      return {
        buttonName
      };
    }
    let customButtonProps;
    let viewSpec;
    let buttonClick;
    let buttonIcon; // only one of these will be set
    let buttonText; // "
    let buttonHint;
    // ^ for the title="" attribute, for accessibility
    if (customButtonProps = calendarCustomButtons[buttonName]) {
      buttonClick = ev => {
        if (customButtonProps.click) {
          customButtonProps.click.call(ev.target, ev, ev.target); // TODO: use Calendar this context?
        }
      };

      (buttonIcon = theme.getCustomButtonIconClass(customButtonProps)) || (buttonIcon = theme.getIconClass(buttonName, isRtl)) || (buttonText = customButtonProps.text);
      buttonHint = customButtonProps.hint || customButtonProps.text;
    } else if (viewSpec = viewSpecs[buttonName]) {
      viewsWithButtons.push(buttonName);
      buttonClick = () => {
        calendarApi.changeView(buttonName);
      };
      (buttonText = viewSpec.buttonTextOverride) || (buttonIcon = theme.getIconClass(buttonName, isRtl)) || (buttonText = viewSpec.buttonTextDefault);
      let textFallback = viewSpec.buttonTextOverride || viewSpec.buttonTextDefault;
      buttonHint = (0,_internal_common_js__WEBPACK_IMPORTED_MODULE_0__.k)(viewSpec.buttonTitleOverride || viewSpec.buttonTitleDefault || calendarOptions.viewHint, [textFallback, buttonName],
      // view-name = buttonName
      textFallback);
    } else if (calendarApi[buttonName]) {
      // a calendarApi method
      buttonClick = () => {
        calendarApi[buttonName]();
      };
      (buttonText = calendarButtonTextOverrides[buttonName]) || (buttonIcon = theme.getIconClass(buttonName, isRtl)) || (buttonText = calendarButtonText[buttonName]); // everything else is considered default
      if (buttonName === 'prevYear' || buttonName === 'nextYear') {
        let prevOrNext = buttonName === 'prevYear' ? 'prev' : 'next';
        buttonHint = (0,_internal_common_js__WEBPACK_IMPORTED_MODULE_0__.k)(calendarButtonHintOverrides[prevOrNext] || calendarButtonHints[prevOrNext], [calendarButtonText.year || 'year', 'year'], calendarButtonText[buttonName]);
      } else {
        buttonHint = navUnit => (0,_internal_common_js__WEBPACK_IMPORTED_MODULE_0__.k)(calendarButtonHintOverrides[buttonName] || calendarButtonHints[buttonName], [calendarButtonText[navUnit] || navUnit, navUnit], calendarButtonText[buttonName]);
      }
    }
    return {
      buttonName,
      buttonClick,
      buttonIcon,
      buttonText,
      buttonHint
    };
  }));
  return {
    widgets,
    viewsWithButtons,
    hasTitle
  };
}

// always represents the current view. otherwise, it'd need to change value every time date changes
class ViewImpl {
  constructor(type, getCurrentData, dateEnv) {
    this.type = type;
    this.getCurrentData = getCurrentData;
    this.dateEnv = dateEnv;
  }
  get calendar() {
    return this.getCurrentData().calendarApi;
  }
  get title() {
    return this.getCurrentData().viewTitle;
  }
  get activeStart() {
    return this.dateEnv.toDate(this.getCurrentData().dateProfile.activeRange.start);
  }
  get activeEnd() {
    return this.dateEnv.toDate(this.getCurrentData().dateProfile.activeRange.end);
  }
  get currentStart() {
    return this.dateEnv.toDate(this.getCurrentData().dateProfile.currentRange.start);
  }
  get currentEnd() {
    return this.dateEnv.toDate(this.getCurrentData().dateProfile.currentRange.end);
  }
  getOption(name) {
    return this.getCurrentData().options[name]; // are the view-specific options
  }
}

let eventSourceDef$2 = {
  ignoreRange: true,
  parseMeta(refined) {
    if (Array.isArray(refined.events)) {
      return refined.events;
    }
    return null;
  },
  fetch(arg, successCallback) {
    successCallback({
      rawEvents: arg.eventSource.meta
    });
  }
};
const arrayEventSourcePlugin = createPlugin({
  name: 'array-event-source',
  eventSourceDefs: [eventSourceDef$2]
});
let eventSourceDef$1 = {
  parseMeta(refined) {
    if (typeof refined.events === 'function') {
      return refined.events;
    }
    return null;
  },
  fetch(arg, successCallback, errorCallback) {
    const {
      dateEnv
    } = arg.context;
    const func = arg.eventSource.meta;
    (0,_internal_common_js__WEBPACK_IMPORTED_MODULE_0__.u)(func.bind(null, (0,_internal_common_js__WEBPACK_IMPORTED_MODULE_0__.l)(arg.range, dateEnv)), rawEvents => successCallback({
      rawEvents
    }), errorCallback);
  }
};
const funcEventSourcePlugin = createPlugin({
  name: 'func-event-source',
  eventSourceDefs: [eventSourceDef$1]
});
const JSON_FEED_EVENT_SOURCE_REFINERS = {
  method: String,
  extraParams: _internal_common_js__WEBPACK_IMPORTED_MODULE_0__.n,
  startParam: String,
  endParam: String,
  timeZoneParam: String
};
let eventSourceDef = {
  parseMeta(refined) {
    if (refined.url && (refined.format === 'json' || !refined.format)) {
      return {
        url: refined.url,
        format: 'json',
        method: (refined.method || 'GET').toUpperCase(),
        extraParams: refined.extraParams,
        startParam: refined.startParam,
        endParam: refined.endParam,
        timeZoneParam: refined.timeZoneParam
      };
    }
    return null;
  },
  fetch(arg, successCallback, errorCallback) {
    const {
      meta
    } = arg.eventSource;
    const requestParams = buildRequestParams(meta, arg.range, arg.context);
    (0,_internal_common_js__WEBPACK_IMPORTED_MODULE_0__.r)(meta.method, meta.url, requestParams).then(([rawEvents, response]) => {
      successCallback({
        rawEvents,
        response
      });
    }, errorCallback);
  }
};
const jsonFeedEventSourcePlugin = createPlugin({
  name: 'json-event-source',
  eventSourceRefiners: JSON_FEED_EVENT_SOURCE_REFINERS,
  eventSourceDefs: [eventSourceDef]
});
function buildRequestParams(meta, range, context) {
  let {
    dateEnv,
    options
  } = context;
  let startParam;
  let endParam;
  let timeZoneParam;
  let customRequestParams;
  let params = {};
  startParam = meta.startParam;
  if (startParam == null) {
    startParam = options.startParam;
  }
  endParam = meta.endParam;
  if (endParam == null) {
    endParam = options.endParam;
  }
  timeZoneParam = meta.timeZoneParam;
  if (timeZoneParam == null) {
    timeZoneParam = options.timeZoneParam;
  }
  // retrieve any outbound GET/POST data from the options
  if (typeof meta.extraParams === 'function') {
    // supplied as a function that returns a key/value object
    customRequestParams = meta.extraParams();
  } else {
    // probably supplied as a straight key/value object
    customRequestParams = meta.extraParams || {};
  }
  Object.assign(params, customRequestParams);
  params[startParam] = dateEnv.formatIso(range.start);
  params[endParam] = dateEnv.formatIso(range.end);
  if (dateEnv.timeZone !== 'local') {
    params[timeZoneParam] = dateEnv.timeZone;
  }
  return params;
}
const SIMPLE_RECURRING_REFINERS = {
  daysOfWeek: _internal_common_js__WEBPACK_IMPORTED_MODULE_0__.n,
  startTime: _internal_common_js__WEBPACK_IMPORTED_MODULE_0__.d,
  endTime: _internal_common_js__WEBPACK_IMPORTED_MODULE_0__.d,
  duration: _internal_common_js__WEBPACK_IMPORTED_MODULE_0__.d,
  startRecur: _internal_common_js__WEBPACK_IMPORTED_MODULE_0__.n,
  endRecur: _internal_common_js__WEBPACK_IMPORTED_MODULE_0__.n
};
let recurring = {
  parse(refined, dateEnv) {
    if (refined.daysOfWeek || refined.startTime || refined.endTime || refined.startRecur || refined.endRecur) {
      let recurringData = {
        daysOfWeek: refined.daysOfWeek || null,
        startTime: refined.startTime || null,
        endTime: refined.endTime || null,
        startRecur: refined.startRecur ? dateEnv.createMarker(refined.startRecur) : null,
        endRecur: refined.endRecur ? dateEnv.createMarker(refined.endRecur) : null
      };
      let duration;
      if (refined.duration) {
        duration = refined.duration;
      }
      if (!duration && refined.startTime && refined.endTime) {
        duration = (0,_internal_common_js__WEBPACK_IMPORTED_MODULE_0__.s)(refined.endTime, refined.startTime);
      }
      return {
        allDayGuess: Boolean(!refined.startTime && !refined.endTime),
        duration,
        typeData: recurringData // doesn't need endTime anymore but oh well
      };
    }

    return null;
  },
  expand(typeData, framingRange, dateEnv) {
    let clippedFramingRange = (0,_internal_common_js__WEBPACK_IMPORTED_MODULE_0__.o)(framingRange, {
      start: typeData.startRecur,
      end: typeData.endRecur
    });
    if (clippedFramingRange) {
      return expandRanges(typeData.daysOfWeek, typeData.startTime, clippedFramingRange, dateEnv);
    }
    return [];
  }
};
const simpleRecurringEventsPlugin = createPlugin({
  name: 'simple-recurring-event',
  recurringTypes: [recurring],
  eventRefiners: SIMPLE_RECURRING_REFINERS
});
function expandRanges(daysOfWeek, startTime, framingRange, dateEnv) {
  let dowHash = daysOfWeek ? (0,_internal_common_js__WEBPACK_IMPORTED_MODULE_0__.f)(daysOfWeek) : null;
  let dayMarker = (0,_internal_common_js__WEBPACK_IMPORTED_MODULE_0__.q)(framingRange.start);
  let endMarker = framingRange.end;
  let instanceStarts = [];
  while (dayMarker < endMarker) {
    let instanceStart;
    // if everyday, or this particular day-of-week
    if (!dowHash || dowHash[dayMarker.getUTCDay()]) {
      if (startTime) {
        instanceStart = dateEnv.add(dayMarker, startTime);
      } else {
        instanceStart = dayMarker;
      }
      instanceStarts.push(instanceStart);
    }
    dayMarker = (0,_internal_common_js__WEBPACK_IMPORTED_MODULE_0__.t)(dayMarker, 1);
  }
  return instanceStarts;
}
const changeHandlerPlugin = createPlugin({
  name: 'change-handler',
  optionChangeHandlers: {
    events(events, context) {
      handleEventSources([events], context);
    },
    eventSources: handleEventSources
  }
});
/*
BUG: if `event` was supplied, all previously-given `eventSources` will be wiped out
*/
function handleEventSources(inputs, context) {
  let unfoundSources = (0,_internal_common_js__WEBPACK_IMPORTED_MODULE_0__.v)(context.getCurrentData().eventSources);
  if (unfoundSources.length === 1 && inputs.length === 1 && Array.isArray(unfoundSources[0]._raw) && Array.isArray(inputs[0])) {
    context.dispatch({
      type: 'RESET_RAW_EVENTS',
      sourceId: unfoundSources[0].sourceId,
      rawEvents: inputs[0]
    });
    return;
  }
  let newInputs = [];
  for (let input of inputs) {
    let inputFound = false;
    for (let i = 0; i < unfoundSources.length; i += 1) {
      if (unfoundSources[i]._raw === input) {
        unfoundSources.splice(i, 1); // delete
        inputFound = true;
        break;
      }
    }
    if (!inputFound) {
      newInputs.push(input);
    }
  }
  for (let unfoundSource of unfoundSources) {
    context.dispatch({
      type: 'REMOVE_EVENT_SOURCE',
      sourceId: unfoundSource.sourceId
    });
  }
  for (let newInput of newInputs) {
    context.calendarApi.addEventSource(newInput);
  }
}
function handleDateProfile(dateProfile, context) {
  context.emitter.trigger('datesSet', Object.assign(Object.assign({}, (0,_internal_common_js__WEBPACK_IMPORTED_MODULE_0__.l)(dateProfile.activeRange, context.dateEnv)), {
    view: context.viewApi
  }));
}
function handleEventStore(eventStore, context) {
  let {
    emitter
  } = context;
  if (emitter.hasHandlers('eventsSet')) {
    emitter.trigger('eventsSet', (0,_internal_common_js__WEBPACK_IMPORTED_MODULE_0__.w)(eventStore, context));
  }
}

/*
this array is exposed on the root namespace so that UMD plugins can add to it.
see the rollup-bundles script.
*/
const globalPlugins = [arrayEventSourcePlugin, funcEventSourcePlugin, jsonFeedEventSourcePlugin, simpleRecurringEventsPlugin, changeHandlerPlugin, createPlugin({
  name: 'misc',
  isLoadingFuncs: [state => computeEventSourcesLoading(state.eventSources)],
  propSetHandlers: {
    dateProfile: handleDateProfile,
    eventStore: handleEventStore
  }
})];
class TaskRunner {
  constructor(runTaskOption, drainedOption) {
    this.runTaskOption = runTaskOption;
    this.drainedOption = drainedOption;
    this.queue = [];
    this.delayedRunner = new _internal_common_js__WEBPACK_IMPORTED_MODULE_0__.D(this.drain.bind(this));
  }
  request(task, delay) {
    this.queue.push(task);
    this.delayedRunner.request(delay);
  }
  pause(scope) {
    this.delayedRunner.pause(scope);
  }
  resume(scope, force) {
    this.delayedRunner.resume(scope, force);
  }
  drain() {
    let {
      queue
    } = this;
    while (queue.length) {
      let completedTasks = [];
      let task;
      while (task = queue.shift()) {
        this.runTask(task);
        completedTasks.push(task);
      }
      this.drained(completedTasks);
    } // keep going, in case new tasks were added in the drained handler
  }

  runTask(task) {
    if (this.runTaskOption) {
      this.runTaskOption(task);
    }
  }
  drained(completedTasks) {
    if (this.drainedOption) {
      this.drainedOption(completedTasks);
    }
  }
}

// Computes what the title at the top of the calendarApi should be for this view
function buildTitle(dateProfile, viewOptions, dateEnv) {
  let range;
  // for views that span a large unit of time, show the proper interval, ignoring stray days before and after
  if (/^(year|month)$/.test(dateProfile.currentRangeUnit)) {
    range = dateProfile.currentRange;
  } else {
    // for day units or smaller, use the actual day range
    range = dateProfile.activeRange;
  }
  return dateEnv.formatRange(range.start, range.end, (0,_internal_common_js__WEBPACK_IMPORTED_MODULE_0__.x)(viewOptions.titleFormat || buildTitleFormat(dateProfile)), {
    isEndExclusive: dateProfile.isRangeAllDay,
    defaultSeparator: viewOptions.titleRangeSeparator
  });
}
// Generates the format string that should be used to generate the title for the current date range.
// Attempts to compute the most appropriate format if not explicitly specified with `titleFormat`.
function buildTitleFormat(dateProfile) {
  let {
    currentRangeUnit
  } = dateProfile;
  if (currentRangeUnit === 'year') {
    return {
      year: 'numeric'
    };
  }
  if (currentRangeUnit === 'month') {
    return {
      year: 'numeric',
      month: 'long'
    }; // like "September 2014"
  }

  let days = (0,_internal_common_js__WEBPACK_IMPORTED_MODULE_0__.y)(dateProfile.currentRange.start, dateProfile.currentRange.end);
  if (days !== null && days > 1) {
    // multi-day range. shorter, like "Sep 9 - 10 2014"
    return {
      year: 'numeric',
      month: 'short',
      day: 'numeric'
    };
  }
  // one day. longer, like "September 9 2014"
  return {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  };
}

// in future refactor, do the redux-style function(state=initial) for initial-state
// also, whatever is happening in constructor, have it happen in action queue too
class CalendarDataManager {
  constructor(props) {
    this.computeCurrentViewData = (0,_internal_common_js__WEBPACK_IMPORTED_MODULE_0__.z)(this._computeCurrentViewData);
    this.organizeRawLocales = (0,_internal_common_js__WEBPACK_IMPORTED_MODULE_0__.z)(organizeRawLocales);
    this.buildLocale = (0,_internal_common_js__WEBPACK_IMPORTED_MODULE_0__.z)(buildLocale);
    this.buildPluginHooks = buildBuildPluginHooks();
    this.buildDateEnv = (0,_internal_common_js__WEBPACK_IMPORTED_MODULE_0__.z)(buildDateEnv$1);
    this.buildTheme = (0,_internal_common_js__WEBPACK_IMPORTED_MODULE_0__.z)(buildTheme);
    this.parseToolbars = (0,_internal_common_js__WEBPACK_IMPORTED_MODULE_0__.z)(parseToolbars);
    this.buildViewSpecs = (0,_internal_common_js__WEBPACK_IMPORTED_MODULE_0__.z)(buildViewSpecs);
    this.buildDateProfileGenerator = (0,_internal_common_js__WEBPACK_IMPORTED_MODULE_0__.A)(buildDateProfileGenerator);
    this.buildViewApi = (0,_internal_common_js__WEBPACK_IMPORTED_MODULE_0__.z)(buildViewApi);
    this.buildViewUiProps = (0,_internal_common_js__WEBPACK_IMPORTED_MODULE_0__.A)(buildViewUiProps);
    this.buildEventUiBySource = (0,_internal_common_js__WEBPACK_IMPORTED_MODULE_0__.z)(buildEventUiBySource, _internal_common_js__WEBPACK_IMPORTED_MODULE_0__.E);
    this.buildEventUiBases = (0,_internal_common_js__WEBPACK_IMPORTED_MODULE_0__.z)(buildEventUiBases);
    this.parseContextBusinessHours = (0,_internal_common_js__WEBPACK_IMPORTED_MODULE_0__.A)(parseContextBusinessHours);
    this.buildTitle = (0,_internal_common_js__WEBPACK_IMPORTED_MODULE_0__.z)(buildTitle);
    this.emitter = new _internal_common_js__WEBPACK_IMPORTED_MODULE_0__.F();
    this.actionRunner = new TaskRunner(this._handleAction.bind(this), this.updateData.bind(this));
    this.currentCalendarOptionsInput = {};
    this.currentCalendarOptionsRefined = {};
    this.currentViewOptionsInput = {};
    this.currentViewOptionsRefined = {};
    this.currentCalendarOptionsRefiners = {};
    this.optionsForRefining = [];
    this.optionsForHandling = [];
    this.getCurrentData = () => this.data;
    this.dispatch = action => {
      this.actionRunner.request(action); // protects against recursive calls to _handleAction
    };

    this.props = props;
    this.actionRunner.pause();
    let dynamicOptionOverrides = {};
    let optionsData = this.computeOptionsData(props.optionOverrides, dynamicOptionOverrides, props.calendarApi);
    let currentViewType = optionsData.calendarOptions.initialView || optionsData.pluginHooks.initialView;
    let currentViewData = this.computeCurrentViewData(currentViewType, optionsData, props.optionOverrides, dynamicOptionOverrides);
    // wire things up
    // TODO: not DRY
    props.calendarApi.currentDataManager = this;
    this.emitter.setThisContext(props.calendarApi);
    this.emitter.setOptions(currentViewData.options);
    let currentDate = (0,_internal_common_js__WEBPACK_IMPORTED_MODULE_0__.G)(optionsData.calendarOptions, optionsData.dateEnv);
    let dateProfile = currentViewData.dateProfileGenerator.build(currentDate);
    if (!(0,_internal_common_js__WEBPACK_IMPORTED_MODULE_0__.H)(dateProfile.activeRange, currentDate)) {
      currentDate = dateProfile.currentRange.start;
    }
    let calendarContext = {
      dateEnv: optionsData.dateEnv,
      options: optionsData.calendarOptions,
      pluginHooks: optionsData.pluginHooks,
      calendarApi: props.calendarApi,
      dispatch: this.dispatch,
      emitter: this.emitter,
      getCurrentData: this.getCurrentData
    };
    // needs to be after setThisContext
    for (let callback of optionsData.pluginHooks.contextInit) {
      callback(calendarContext);
    }
    // NOT DRY
    let eventSources = initEventSources(optionsData.calendarOptions, dateProfile, calendarContext);
    let initialState = {
      dynamicOptionOverrides,
      currentViewType,
      currentDate,
      dateProfile,
      businessHours: this.parseContextBusinessHours(calendarContext),
      eventSources,
      eventUiBases: {},
      eventStore: (0,_internal_common_js__WEBPACK_IMPORTED_MODULE_0__.I)(),
      renderableEventStore: (0,_internal_common_js__WEBPACK_IMPORTED_MODULE_0__.I)(),
      dateSelection: null,
      eventSelection: '',
      eventDrag: null,
      eventResize: null,
      selectionConfig: this.buildViewUiProps(calendarContext).selectionConfig
    };
    let contextAndState = Object.assign(Object.assign({}, calendarContext), initialState);
    for (let reducer of optionsData.pluginHooks.reducers) {
      Object.assign(initialState, reducer(null, null, contextAndState));
    }
    if (computeIsLoading(initialState, calendarContext)) {
      this.emitter.trigger('loading', true); // NOT DRY
    }

    this.state = initialState;
    this.updateData();
    this.actionRunner.resume();
  }
  resetOptions(optionOverrides, changedOptionNames) {
    let {
      props
    } = this;
    if (changedOptionNames === undefined) {
      props.optionOverrides = optionOverrides;
    } else {
      props.optionOverrides = Object.assign(Object.assign({}, props.optionOverrides || {}), optionOverrides);
      this.optionsForRefining.push(...changedOptionNames);
    }
    if (changedOptionNames === undefined || changedOptionNames.length) {
      this.actionRunner.request({
        type: 'NOTHING'
      });
    }
  }
  _handleAction(action) {
    let {
      props,
      state,
      emitter
    } = this;
    let dynamicOptionOverrides = reduceDynamicOptionOverrides(state.dynamicOptionOverrides, action);
    let optionsData = this.computeOptionsData(props.optionOverrides, dynamicOptionOverrides, props.calendarApi);
    let currentViewType = reduceViewType(state.currentViewType, action);
    let currentViewData = this.computeCurrentViewData(currentViewType, optionsData, props.optionOverrides, dynamicOptionOverrides);
    // wire things up
    // TODO: not DRY
    props.calendarApi.currentDataManager = this;
    emitter.setThisContext(props.calendarApi);
    emitter.setOptions(currentViewData.options);
    let calendarContext = {
      dateEnv: optionsData.dateEnv,
      options: optionsData.calendarOptions,
      pluginHooks: optionsData.pluginHooks,
      calendarApi: props.calendarApi,
      dispatch: this.dispatch,
      emitter,
      getCurrentData: this.getCurrentData
    };
    let {
      currentDate,
      dateProfile
    } = state;
    if (this.data && this.data.dateProfileGenerator !== currentViewData.dateProfileGenerator) {
      // hack
      dateProfile = currentViewData.dateProfileGenerator.build(currentDate);
    }
    currentDate = (0,_internal_common_js__WEBPACK_IMPORTED_MODULE_0__.J)(currentDate, action);
    dateProfile = reduceDateProfile(dateProfile, action, currentDate, currentViewData.dateProfileGenerator);
    if (action.type === 'PREV' ||
    // TODO: move this logic into DateProfileGenerator
    action.type === 'NEXT' ||
    // "
    !(0,_internal_common_js__WEBPACK_IMPORTED_MODULE_0__.H)(dateProfile.currentRange, currentDate)) {
      currentDate = dateProfile.currentRange.start;
    }
    let eventSources = reduceEventSources(state.eventSources, action, dateProfile, calendarContext);
    let eventStore = (0,_internal_common_js__WEBPACK_IMPORTED_MODULE_0__.K)(state.eventStore, action, eventSources, dateProfile, calendarContext);
    let isEventsLoading = computeEventSourcesLoading(eventSources); // BAD. also called in this func in computeIsLoading
    let renderableEventStore = isEventsLoading && !currentViewData.options.progressiveEventRendering ? state.renderableEventStore || eventStore :
    // try from previous state
    eventStore;
    let {
      eventUiSingleBase,
      selectionConfig
    } = this.buildViewUiProps(calendarContext); // will memoize obj
    let eventUiBySource = this.buildEventUiBySource(eventSources);
    let eventUiBases = this.buildEventUiBases(renderableEventStore.defs, eventUiSingleBase, eventUiBySource);
    let newState = {
      dynamicOptionOverrides,
      currentViewType,
      currentDate,
      dateProfile,
      eventSources,
      eventStore,
      renderableEventStore,
      selectionConfig,
      eventUiBases,
      businessHours: this.parseContextBusinessHours(calendarContext),
      dateSelection: reduceDateSelection(state.dateSelection, action),
      eventSelection: reduceSelectedEvent(state.eventSelection, action),
      eventDrag: reduceEventDrag(state.eventDrag, action),
      eventResize: reduceEventResize(state.eventResize, action)
    };
    let contextAndState = Object.assign(Object.assign({}, calendarContext), newState);
    for (let reducer of optionsData.pluginHooks.reducers) {
      Object.assign(newState, reducer(state, action, contextAndState)); // give the OLD state, for old value
    }

    let wasLoading = computeIsLoading(state, calendarContext);
    let isLoading = computeIsLoading(newState, calendarContext);
    // TODO: use propSetHandlers in plugin system
    if (!wasLoading && isLoading) {
      emitter.trigger('loading', true);
    } else if (wasLoading && !isLoading) {
      emitter.trigger('loading', false);
    }
    this.state = newState;
    if (props.onAction) {
      props.onAction(action);
    }
  }
  updateData() {
    let {
      props,
      state
    } = this;
    let oldData = this.data;
    let optionsData = this.computeOptionsData(props.optionOverrides, state.dynamicOptionOverrides, props.calendarApi);
    let currentViewData = this.computeCurrentViewData(state.currentViewType, optionsData, props.optionOverrides, state.dynamicOptionOverrides);
    let data = this.data = Object.assign(Object.assign(Object.assign({
      viewTitle: this.buildTitle(state.dateProfile, currentViewData.options, optionsData.dateEnv),
      calendarApi: props.calendarApi,
      dispatch: this.dispatch,
      emitter: this.emitter,
      getCurrentData: this.getCurrentData
    }, optionsData), currentViewData), state);
    let changeHandlers = optionsData.pluginHooks.optionChangeHandlers;
    let oldCalendarOptions = oldData && oldData.calendarOptions;
    let newCalendarOptions = optionsData.calendarOptions;
    if (oldCalendarOptions && oldCalendarOptions !== newCalendarOptions) {
      if (oldCalendarOptions.timeZone !== newCalendarOptions.timeZone) {
        // hack
        state.eventSources = data.eventSources = reduceEventSourcesNewTimeZone(data.eventSources, state.dateProfile, data);
        state.eventStore = data.eventStore = (0,_internal_common_js__WEBPACK_IMPORTED_MODULE_0__.L)(data.eventStore, oldData.dateEnv, data.dateEnv);
        state.renderableEventStore = data.renderableEventStore = (0,_internal_common_js__WEBPACK_IMPORTED_MODULE_0__.L)(data.renderableEventStore, oldData.dateEnv, data.dateEnv);
      }
      for (let optionName in changeHandlers) {
        if (this.optionsForHandling.indexOf(optionName) !== -1 || oldCalendarOptions[optionName] !== newCalendarOptions[optionName]) {
          changeHandlers[optionName](newCalendarOptions[optionName], data);
        }
      }
    }
    this.optionsForHandling = [];
    if (props.onData) {
      props.onData(data);
    }
  }
  computeOptionsData(optionOverrides, dynamicOptionOverrides, calendarApi) {
    // TODO: blacklist options that are handled by optionChangeHandlers
    if (!this.optionsForRefining.length && optionOverrides === this.stableOptionOverrides && dynamicOptionOverrides === this.stableDynamicOptionOverrides) {
      return this.stableCalendarOptionsData;
    }
    let {
      refinedOptions,
      pluginHooks,
      localeDefaults,
      availableLocaleData,
      extra
    } = this.processRawCalendarOptions(optionOverrides, dynamicOptionOverrides);
    warnUnknownOptions(extra);
    let dateEnv = this.buildDateEnv(refinedOptions.timeZone, refinedOptions.locale, refinedOptions.weekNumberCalculation, refinedOptions.firstDay, refinedOptions.weekText, pluginHooks, availableLocaleData, refinedOptions.defaultRangeSeparator);
    let viewSpecs = this.buildViewSpecs(pluginHooks.views, this.stableOptionOverrides, this.stableDynamicOptionOverrides, localeDefaults);
    let theme = this.buildTheme(refinedOptions, pluginHooks);
    let toolbarConfig = this.parseToolbars(refinedOptions, this.stableOptionOverrides, theme, viewSpecs, calendarApi);
    return this.stableCalendarOptionsData = {
      calendarOptions: refinedOptions,
      pluginHooks,
      dateEnv,
      viewSpecs,
      theme,
      toolbarConfig,
      localeDefaults,
      availableRawLocales: availableLocaleData.map
    };
  }
  // always called from behind a memoizer
  processRawCalendarOptions(optionOverrides, dynamicOptionOverrides) {
    let {
      locales,
      locale
    } = (0,_internal_common_js__WEBPACK_IMPORTED_MODULE_0__.M)([_internal_common_js__WEBPACK_IMPORTED_MODULE_0__.e, optionOverrides, dynamicOptionOverrides]);
    let availableLocaleData = this.organizeRawLocales(locales);
    let availableRawLocales = availableLocaleData.map;
    let localeDefaults = this.buildLocale(locale || availableLocaleData.defaultCode, availableRawLocales).options;
    let pluginHooks = this.buildPluginHooks(optionOverrides.plugins || [], globalPlugins);
    let refiners = this.currentCalendarOptionsRefiners = Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, _internal_common_js__WEBPACK_IMPORTED_MODULE_0__.N), _internal_common_js__WEBPACK_IMPORTED_MODULE_0__.O), _internal_common_js__WEBPACK_IMPORTED_MODULE_0__.P), pluginHooks.listenerRefiners), pluginHooks.optionRefiners);
    let extra = {};
    let raw = (0,_internal_common_js__WEBPACK_IMPORTED_MODULE_0__.M)([_internal_common_js__WEBPACK_IMPORTED_MODULE_0__.e, localeDefaults, optionOverrides, dynamicOptionOverrides]);
    let refined = {};
    let currentRaw = this.currentCalendarOptionsInput;
    let currentRefined = this.currentCalendarOptionsRefined;
    let anyChanges = false;
    for (let optionName in raw) {
      if (this.optionsForRefining.indexOf(optionName) === -1 && (raw[optionName] === currentRaw[optionName] || _internal_common_js__WEBPACK_IMPORTED_MODULE_0__.Q[optionName] && optionName in currentRaw && _internal_common_js__WEBPACK_IMPORTED_MODULE_0__.Q[optionName](currentRaw[optionName], raw[optionName]))) {
        refined[optionName] = currentRefined[optionName];
      } else if (refiners[optionName]) {
        refined[optionName] = refiners[optionName](raw[optionName]);
        anyChanges = true;
      } else {
        extra[optionName] = currentRaw[optionName];
      }
    }
    if (anyChanges) {
      this.currentCalendarOptionsInput = raw;
      this.currentCalendarOptionsRefined = refined;
      this.stableOptionOverrides = optionOverrides;
      this.stableDynamicOptionOverrides = dynamicOptionOverrides;
    }
    this.optionsForHandling.push(...this.optionsForRefining);
    this.optionsForRefining = [];
    return {
      rawOptions: this.currentCalendarOptionsInput,
      refinedOptions: this.currentCalendarOptionsRefined,
      pluginHooks,
      availableLocaleData,
      localeDefaults,
      extra
    };
  }
  _computeCurrentViewData(viewType, optionsData, optionOverrides, dynamicOptionOverrides) {
    let viewSpec = optionsData.viewSpecs[viewType];
    if (!viewSpec) {
      throw new Error(`viewType "${viewType}" is not available. Please make sure you've loaded all neccessary plugins`);
    }
    let {
      refinedOptions,
      extra
    } = this.processRawViewOptions(viewSpec, optionsData.pluginHooks, optionsData.localeDefaults, optionOverrides, dynamicOptionOverrides);
    warnUnknownOptions(extra);
    let dateProfileGenerator = this.buildDateProfileGenerator({
      dateProfileGeneratorClass: viewSpec.optionDefaults.dateProfileGeneratorClass,
      duration: viewSpec.duration,
      durationUnit: viewSpec.durationUnit,
      usesMinMaxTime: viewSpec.optionDefaults.usesMinMaxTime,
      dateEnv: optionsData.dateEnv,
      calendarApi: this.props.calendarApi,
      slotMinTime: refinedOptions.slotMinTime,
      slotMaxTime: refinedOptions.slotMaxTime,
      showNonCurrentDates: refinedOptions.showNonCurrentDates,
      dayCount: refinedOptions.dayCount,
      dateAlignment: refinedOptions.dateAlignment,
      dateIncrement: refinedOptions.dateIncrement,
      hiddenDays: refinedOptions.hiddenDays,
      weekends: refinedOptions.weekends,
      nowInput: refinedOptions.now,
      validRangeInput: refinedOptions.validRange,
      visibleRangeInput: refinedOptions.visibleRange,
      fixedWeekCount: refinedOptions.fixedWeekCount
    });
    let viewApi = this.buildViewApi(viewType, this.getCurrentData, optionsData.dateEnv);
    return {
      viewSpec,
      options: refinedOptions,
      dateProfileGenerator,
      viewApi
    };
  }
  processRawViewOptions(viewSpec, pluginHooks, localeDefaults, optionOverrides, dynamicOptionOverrides) {
    let raw = (0,_internal_common_js__WEBPACK_IMPORTED_MODULE_0__.M)([_internal_common_js__WEBPACK_IMPORTED_MODULE_0__.e, viewSpec.optionDefaults, localeDefaults, optionOverrides, viewSpec.optionOverrides, dynamicOptionOverrides]);
    let refiners = Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, _internal_common_js__WEBPACK_IMPORTED_MODULE_0__.N), _internal_common_js__WEBPACK_IMPORTED_MODULE_0__.O), _internal_common_js__WEBPACK_IMPORTED_MODULE_0__.P), _internal_common_js__WEBPACK_IMPORTED_MODULE_0__.R), pluginHooks.listenerRefiners), pluginHooks.optionRefiners);
    let refined = {};
    let currentRaw = this.currentViewOptionsInput;
    let currentRefined = this.currentViewOptionsRefined;
    let anyChanges = false;
    let extra = {};
    for (let optionName in raw) {
      if (raw[optionName] === currentRaw[optionName] || _internal_common_js__WEBPACK_IMPORTED_MODULE_0__.Q[optionName] && _internal_common_js__WEBPACK_IMPORTED_MODULE_0__.Q[optionName](raw[optionName], currentRaw[optionName])) {
        refined[optionName] = currentRefined[optionName];
      } else {
        if (raw[optionName] === this.currentCalendarOptionsInput[optionName] || _internal_common_js__WEBPACK_IMPORTED_MODULE_0__.Q[optionName] && _internal_common_js__WEBPACK_IMPORTED_MODULE_0__.Q[optionName](raw[optionName], this.currentCalendarOptionsInput[optionName])) {
          if (optionName in this.currentCalendarOptionsRefined) {
            // might be an "extra" prop
            refined[optionName] = this.currentCalendarOptionsRefined[optionName];
          }
        } else if (refiners[optionName]) {
          refined[optionName] = refiners[optionName](raw[optionName]);
        } else {
          extra[optionName] = raw[optionName];
        }
        anyChanges = true;
      }
    }
    if (anyChanges) {
      this.currentViewOptionsInput = raw;
      this.currentViewOptionsRefined = refined;
    }
    return {
      rawOptions: this.currentViewOptionsInput,
      refinedOptions: this.currentViewOptionsRefined,
      extra
    };
  }
}
function buildDateEnv$1(timeZone, explicitLocale, weekNumberCalculation, firstDay, weekText, pluginHooks, availableLocaleData, defaultSeparator) {
  let locale = buildLocale(explicitLocale || availableLocaleData.defaultCode, availableLocaleData.map);
  return new _internal_common_js__WEBPACK_IMPORTED_MODULE_0__.S({
    calendarSystem: 'gregory',
    timeZone,
    namedTimeZoneImpl: pluginHooks.namedTimeZonedImpl,
    locale,
    weekNumberCalculation,
    firstDay,
    weekText,
    cmdFormatter: pluginHooks.cmdFormatter,
    defaultSeparator
  });
}
function buildTheme(options, pluginHooks) {
  let ThemeClass = pluginHooks.themeClasses[options.themeSystem] || StandardTheme;
  return new ThemeClass(options);
}
function buildDateProfileGenerator(props) {
  let DateProfileGeneratorClass = props.dateProfileGeneratorClass || _internal_common_js__WEBPACK_IMPORTED_MODULE_0__.U;
  return new DateProfileGeneratorClass(props);
}
function buildViewApi(type, getCurrentData, dateEnv) {
  return new ViewImpl(type, getCurrentData, dateEnv);
}
function buildEventUiBySource(eventSources) {
  return (0,_internal_common_js__WEBPACK_IMPORTED_MODULE_0__.a)(eventSources, eventSource => eventSource.ui);
}
function buildEventUiBases(eventDefs, eventUiSingleBase, eventUiBySource) {
  let eventUiBases = {
    '': eventUiSingleBase
  };
  for (let defId in eventDefs) {
    let def = eventDefs[defId];
    if (def.sourceId && eventUiBySource[def.sourceId]) {
      eventUiBases[defId] = eventUiBySource[def.sourceId];
    }
  }
  return eventUiBases;
}
function buildViewUiProps(calendarContext) {
  let {
    options
  } = calendarContext;
  return {
    eventUiSingleBase: (0,_internal_common_js__WEBPACK_IMPORTED_MODULE_0__.W)({
      display: options.eventDisplay,
      editable: options.editable,
      startEditable: options.eventStartEditable,
      durationEditable: options.eventDurationEditable,
      constraint: options.eventConstraint,
      overlap: typeof options.eventOverlap === 'boolean' ? options.eventOverlap : undefined,
      allow: options.eventAllow,
      backgroundColor: options.eventBackgroundColor,
      borderColor: options.eventBorderColor,
      textColor: options.eventTextColor,
      color: options.eventColor
      // classNames: options.eventClassNames // render hook will handle this
    }, calendarContext),
    selectionConfig: (0,_internal_common_js__WEBPACK_IMPORTED_MODULE_0__.W)({
      constraint: options.selectConstraint,
      overlap: typeof options.selectOverlap === 'boolean' ? options.selectOverlap : undefined,
      allow: options.selectAllow
    }, calendarContext)
  };
}
function computeIsLoading(state, context) {
  for (let isLoadingFunc of context.pluginHooks.isLoadingFuncs) {
    if (isLoadingFunc(state)) {
      return true;
    }
  }
  return false;
}
function parseContextBusinessHours(calendarContext) {
  return (0,_internal_common_js__WEBPACK_IMPORTED_MODULE_0__.X)(calendarContext.options.businessHours, calendarContext);
}
function warnUnknownOptions(options, viewName) {
  for (let optionName in options) {
    console.warn(`Unknown option '${optionName}'` + (viewName ? ` for view '${viewName}'` : ''));
  }
}
class ToolbarSection extends _internal_common_js__WEBPACK_IMPORTED_MODULE_0__.B {
  render() {
    let children = this.props.widgetGroups.map(widgetGroup => this.renderWidgetGroup(widgetGroup));
    return (0,preact__WEBPACK_IMPORTED_MODULE_1__.createElement)('div', {
      className: 'fc-toolbar-chunk'
    }, ...children);
  }
  renderWidgetGroup(widgetGroup) {
    let {
      props
    } = this;
    let {
      theme
    } = this.context;
    let children = [];
    let isOnlyButtons = true;
    for (let widget of widgetGroup) {
      let {
        buttonName,
        buttonClick,
        buttonText,
        buttonIcon,
        buttonHint
      } = widget;
      if (buttonName === 'title') {
        isOnlyButtons = false;
        children.push((0,preact__WEBPACK_IMPORTED_MODULE_1__.createElement)("h2", {
          className: "fc-toolbar-title",
          id: props.titleId
        }, props.title));
      } else {
        let isPressed = buttonName === props.activeButton;
        let isDisabled = !props.isTodayEnabled && buttonName === 'today' || !props.isPrevEnabled && buttonName === 'prev' || !props.isNextEnabled && buttonName === 'next';
        let buttonClasses = [`fc-${buttonName}-button`, theme.getClass('button')];
        if (isPressed) {
          buttonClasses.push(theme.getClass('buttonActive'));
        }
        children.push((0,preact__WEBPACK_IMPORTED_MODULE_1__.createElement)("button", {
          type: "button",
          title: typeof buttonHint === 'function' ? buttonHint(props.navUnit) : buttonHint,
          disabled: isDisabled,
          "aria-pressed": isPressed,
          className: buttonClasses.join(' '),
          onClick: buttonClick
        }, buttonText || (buttonIcon ? (0,preact__WEBPACK_IMPORTED_MODULE_1__.createElement)("span", {
          className: buttonIcon
        }) : '')));
      }
    }
    if (children.length > 1) {
      let groupClassName = isOnlyButtons && theme.getClass('buttonGroup') || '';
      return (0,preact__WEBPACK_IMPORTED_MODULE_1__.createElement)('div', {
        className: groupClassName
      }, ...children);
    }
    return children[0];
  }
}
class Toolbar extends _internal_common_js__WEBPACK_IMPORTED_MODULE_0__.B {
  render() {
    let {
      model,
      extraClassName
    } = this.props;
    let forceLtr = false;
    let startContent;
    let endContent;
    let sectionWidgets = model.sectionWidgets;
    let centerContent = sectionWidgets.center;
    if (sectionWidgets.left) {
      forceLtr = true;
      startContent = sectionWidgets.left;
    } else {
      startContent = sectionWidgets.start;
    }
    if (sectionWidgets.right) {
      forceLtr = true;
      endContent = sectionWidgets.right;
    } else {
      endContent = sectionWidgets.end;
    }
    let classNames = [extraClassName || '', 'fc-toolbar', forceLtr ? 'fc-toolbar-ltr' : ''];
    return (0,preact__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      className: classNames.join(' ')
    }, this.renderSection('start', startContent || []), this.renderSection('center', centerContent || []), this.renderSection('end', endContent || []));
  }
  renderSection(key, widgetGroups) {
    let {
      props
    } = this;
    return (0,preact__WEBPACK_IMPORTED_MODULE_1__.createElement)(ToolbarSection, {
      key: key,
      widgetGroups: widgetGroups,
      title: props.title,
      navUnit: props.navUnit,
      activeButton: props.activeButton,
      isTodayEnabled: props.isTodayEnabled,
      isPrevEnabled: props.isPrevEnabled,
      isNextEnabled: props.isNextEnabled,
      titleId: props.titleId
    });
  }
}
class ViewHarness extends _internal_common_js__WEBPACK_IMPORTED_MODULE_0__.B {
  constructor() {
    super(...arguments);
    this.state = {
      availableWidth: null
    };
    this.handleEl = el => {
      this.el = el;
      (0,_internal_common_js__WEBPACK_IMPORTED_MODULE_0__.Y)(this.props.elRef, el);
      this.updateAvailableWidth();
    };
    this.handleResize = () => {
      this.updateAvailableWidth();
    };
  }
  render() {
    let {
      props,
      state
    } = this;
    let {
      aspectRatio
    } = props;
    let classNames = ['fc-view-harness', aspectRatio || props.liquid || props.height ? 'fc-view-harness-active' // harness controls the height
    : 'fc-view-harness-passive' // let the view do the height
    ];

    let height = '';
    let paddingBottom = '';
    if (aspectRatio) {
      if (state.availableWidth !== null) {
        height = state.availableWidth / aspectRatio;
      } else {
        // while waiting to know availableWidth, we can't set height to *zero*
        // because will cause lots of unnecessary scrollbars within scrollgrid.
        // BETTER: don't start rendering ANYTHING yet until we know container width
        // NOTE: why not always use paddingBottom? Causes height oscillation (issue 5606)
        paddingBottom = `${1 / aspectRatio * 100}%`;
      }
    } else {
      height = props.height || '';
    }
    return (0,preact__WEBPACK_IMPORTED_MODULE_1__.createElement)("div", {
      "aria-labelledby": props.labeledById,
      ref: this.handleEl,
      className: classNames.join(' '),
      style: {
        height,
        paddingBottom
      }
    }, props.children);
  }
  componentDidMount() {
    this.context.addResizeHandler(this.handleResize);
  }
  componentWillUnmount() {
    this.context.removeResizeHandler(this.handleResize);
  }
  updateAvailableWidth() {
    if (this.el &&
    // needed. but why?
    this.props.aspectRatio // aspectRatio is the only height setting that needs availableWidth
    ) {
      this.setState({
        availableWidth: this.el.offsetWidth
      });
    }
  }
}

/*
Detects when the user clicks on an event within a DateComponent
*/
class EventClicking extends _internal_common_js__WEBPACK_IMPORTED_MODULE_0__.Z {
  constructor(settings) {
    super(settings);
    this.handleSegClick = (ev, segEl) => {
      let {
        component
      } = this;
      let {
        context
      } = component;
      let seg = (0,_internal_common_js__WEBPACK_IMPORTED_MODULE_0__._)(segEl);
      if (seg &&
      // might be the <div> surrounding the more link
      component.isValidSegDownEl(ev.target)) {
        // our way to simulate a link click for elements that can't be <a> tags
        // grab before trigger fired in case trigger trashes DOM thru rerendering
        let hasUrlContainer = (0,_internal_common_js__WEBPACK_IMPORTED_MODULE_0__.$)(ev.target, '.fc-event-forced-url');
        let url = hasUrlContainer ? hasUrlContainer.querySelector('a[href]').href : '';
        context.emitter.trigger('eventClick', {
          el: segEl,
          event: new _internal_common_js__WEBPACK_IMPORTED_MODULE_0__.a0(component.context, seg.eventRange.def, seg.eventRange.instance),
          jsEvent: ev,
          view: context.viewApi
        });
        if (url && !ev.defaultPrevented) {
          window.location.href = url;
        }
      }
    };
    this.destroy = (0,_internal_common_js__WEBPACK_IMPORTED_MODULE_0__.a1)(settings.el, 'click', '.fc-event',
    // on both fg and bg events
    this.handleSegClick);
  }
}

/*
Triggers events and adds/removes core classNames when the user's pointer
enters/leaves event-elements of a component.
*/
class EventHovering extends _internal_common_js__WEBPACK_IMPORTED_MODULE_0__.Z {
  constructor(settings) {
    super(settings);
    // for simulating an eventMouseLeave when the event el is destroyed while mouse is over it
    this.handleEventElRemove = el => {
      if (el === this.currentSegEl) {
        this.handleSegLeave(null, this.currentSegEl);
      }
    };
    this.handleSegEnter = (ev, segEl) => {
      if ((0,_internal_common_js__WEBPACK_IMPORTED_MODULE_0__._)(segEl)) {
        // TODO: better way to make sure not hovering over more+ link or its wrapper
        this.currentSegEl = segEl;
        this.triggerEvent('eventMouseEnter', ev, segEl);
      }
    };
    this.handleSegLeave = (ev, segEl) => {
      if (this.currentSegEl) {
        this.currentSegEl = null;
        this.triggerEvent('eventMouseLeave', ev, segEl);
      }
    };
    this.removeHoverListeners = (0,_internal_common_js__WEBPACK_IMPORTED_MODULE_0__.a2)(settings.el, '.fc-event',
    // on both fg and bg events
    this.handleSegEnter, this.handleSegLeave);
  }
  destroy() {
    this.removeHoverListeners();
  }
  triggerEvent(publicEvName, ev, segEl) {
    let {
      component
    } = this;
    let {
      context
    } = component;
    let seg = (0,_internal_common_js__WEBPACK_IMPORTED_MODULE_0__._)(segEl);
    if (!ev || component.isValidSegDownEl(ev.target)) {
      context.emitter.trigger(publicEvName, {
        el: segEl,
        event: new _internal_common_js__WEBPACK_IMPORTED_MODULE_0__.a0(context, seg.eventRange.def, seg.eventRange.instance),
        jsEvent: ev,
        view: context.viewApi
      });
    }
  }
}
class CalendarContent extends _internal_common_js__WEBPACK_IMPORTED_MODULE_0__.a3 {
  constructor() {
    super(...arguments);
    this.buildViewContext = (0,_internal_common_js__WEBPACK_IMPORTED_MODULE_0__.z)(_internal_common_js__WEBPACK_IMPORTED_MODULE_0__.a4);
    this.buildViewPropTransformers = (0,_internal_common_js__WEBPACK_IMPORTED_MODULE_0__.z)(buildViewPropTransformers);
    this.buildToolbarProps = (0,_internal_common_js__WEBPACK_IMPORTED_MODULE_0__.z)(buildToolbarProps);
    this.headerRef = (0,preact__WEBPACK_IMPORTED_MODULE_1__.createRef)();
    this.footerRef = (0,preact__WEBPACK_IMPORTED_MODULE_1__.createRef)();
    this.interactionsStore = {};
    // eslint-disable-next-line
    this.state = {
      viewLabelId: (0,_internal_common_js__WEBPACK_IMPORTED_MODULE_0__.a5)()
    };
    // Component Registration
    // -----------------------------------------------------------------------------------------------------------------
    this.registerInteractiveComponent = (component, settingsInput) => {
      let settings = (0,_internal_common_js__WEBPACK_IMPORTED_MODULE_0__.a6)(component, settingsInput);
      let DEFAULT_INTERACTIONS = [EventClicking, EventHovering];
      let interactionClasses = DEFAULT_INTERACTIONS.concat(this.props.pluginHooks.componentInteractions);
      let interactions = interactionClasses.map(TheInteractionClass => new TheInteractionClass(settings));
      this.interactionsStore[component.uid] = interactions;
      _internal_common_js__WEBPACK_IMPORTED_MODULE_0__.a7[component.uid] = settings;
    };
    this.unregisterInteractiveComponent = component => {
      let listeners = this.interactionsStore[component.uid];
      if (listeners) {
        for (let listener of listeners) {
          listener.destroy();
        }
        delete this.interactionsStore[component.uid];
      }
      delete _internal_common_js__WEBPACK_IMPORTED_MODULE_0__.a7[component.uid];
    };
    // Resizing
    // -----------------------------------------------------------------------------------------------------------------
    this.resizeRunner = new _internal_common_js__WEBPACK_IMPORTED_MODULE_0__.D(() => {
      this.props.emitter.trigger('_resize', true); // should window resizes be considered "forced" ?
      this.props.emitter.trigger('windowResize', {
        view: this.props.viewApi
      });
    });
    this.handleWindowResize = ev => {
      let {
        options
      } = this.props;
      if (options.handleWindowResize && ev.target === window // avoid jqui events
      ) {
        this.resizeRunner.request(options.windowResizeDelay);
      }
    };
  }
  /*
  renders INSIDE of an outer div
  */
  render() {
    let {
      props
    } = this;
    let {
      toolbarConfig,
      options
    } = props;
    let toolbarProps = this.buildToolbarProps(props.viewSpec, props.dateProfile, props.dateProfileGenerator, props.currentDate, (0,_internal_common_js__WEBPACK_IMPORTED_MODULE_0__.a8)(props.options.now, props.dateEnv),
    // TODO: use NowTimer????
    props.viewTitle);
    let viewVGrow = false;
    let viewHeight = '';
    let viewAspectRatio;
    if (props.isHeightAuto || props.forPrint) {
      viewHeight = '';
    } else if (options.height != null) {
      viewVGrow = true;
    } else if (options.contentHeight != null) {
      viewHeight = options.contentHeight;
    } else {
      viewAspectRatio = Math.max(options.aspectRatio, 0.5); // prevent from getting too tall
    }

    let viewContext = this.buildViewContext(props.viewSpec, props.viewApi, props.options, props.dateProfileGenerator, props.dateEnv, props.theme, props.pluginHooks, props.dispatch, props.getCurrentData, props.emitter, props.calendarApi, this.registerInteractiveComponent, this.unregisterInteractiveComponent);
    let viewLabelId = toolbarConfig.header && toolbarConfig.header.hasTitle ? this.state.viewLabelId : '';
    return (0,preact__WEBPACK_IMPORTED_MODULE_1__.createElement)(_internal_common_js__WEBPACK_IMPORTED_MODULE_0__.V.Provider, {
      value: viewContext
    }, toolbarConfig.header && (0,preact__WEBPACK_IMPORTED_MODULE_1__.createElement)(Toolbar, Object.assign({
      ref: this.headerRef,
      extraClassName: "fc-header-toolbar",
      model: toolbarConfig.header,
      titleId: viewLabelId
    }, toolbarProps)), (0,preact__WEBPACK_IMPORTED_MODULE_1__.createElement)(ViewHarness, {
      liquid: viewVGrow,
      height: viewHeight,
      aspectRatio: viewAspectRatio,
      labeledById: viewLabelId
    }, this.renderView(props), this.buildAppendContent()), toolbarConfig.footer && (0,preact__WEBPACK_IMPORTED_MODULE_1__.createElement)(Toolbar, Object.assign({
      ref: this.footerRef,
      extraClassName: "fc-footer-toolbar",
      model: toolbarConfig.footer,
      titleId: ""
    }, toolbarProps)));
  }
  componentDidMount() {
    let {
      props
    } = this;
    this.calendarInteractions = props.pluginHooks.calendarInteractions.map(CalendarInteractionClass => new CalendarInteractionClass(props));
    window.addEventListener('resize', this.handleWindowResize);
    let {
      propSetHandlers
    } = props.pluginHooks;
    for (let propName in propSetHandlers) {
      propSetHandlers[propName](props[propName], props);
    }
  }
  componentDidUpdate(prevProps) {
    let {
      props
    } = this;
    let {
      propSetHandlers
    } = props.pluginHooks;
    for (let propName in propSetHandlers) {
      if (props[propName] !== prevProps[propName]) {
        propSetHandlers[propName](props[propName], props);
      }
    }
  }
  componentWillUnmount() {
    window.removeEventListener('resize', this.handleWindowResize);
    this.resizeRunner.clear();
    for (let interaction of this.calendarInteractions) {
      interaction.destroy();
    }
    this.props.emitter.trigger('_unmount');
  }
  buildAppendContent() {
    let {
      props
    } = this;
    let children = props.pluginHooks.viewContainerAppends.map(buildAppendContent => buildAppendContent(props));
    return (0,preact__WEBPACK_IMPORTED_MODULE_1__.createElement)(preact__WEBPACK_IMPORTED_MODULE_1__.Fragment, {}, ...children);
  }
  renderView(props) {
    let {
      pluginHooks
    } = props;
    let {
      viewSpec
    } = props;
    let viewProps = {
      dateProfile: props.dateProfile,
      businessHours: props.businessHours,
      eventStore: props.renderableEventStore,
      eventUiBases: props.eventUiBases,
      dateSelection: props.dateSelection,
      eventSelection: props.eventSelection,
      eventDrag: props.eventDrag,
      eventResize: props.eventResize,
      isHeightAuto: props.isHeightAuto,
      forPrint: props.forPrint
    };
    let transformers = this.buildViewPropTransformers(pluginHooks.viewPropsTransformers);
    for (let transformer of transformers) {
      Object.assign(viewProps, transformer.transform(viewProps, props));
    }
    let ViewComponent = viewSpec.component;
    return (0,preact__WEBPACK_IMPORTED_MODULE_1__.createElement)(ViewComponent, Object.assign({}, viewProps));
  }
}
function buildToolbarProps(viewSpec, dateProfile, dateProfileGenerator, currentDate, now, title) {
  // don't force any date-profiles to valid date profiles (the `false`) so that we can tell if it's invalid
  let todayInfo = dateProfileGenerator.build(now, undefined, false); // TODO: need `undefined` or else INFINITE LOOP for some reason
  let prevInfo = dateProfileGenerator.buildPrev(dateProfile, currentDate, false);
  let nextInfo = dateProfileGenerator.buildNext(dateProfile, currentDate, false);
  return {
    title,
    activeButton: viewSpec.type,
    navUnit: viewSpec.singleUnit,
    isTodayEnabled: todayInfo.isValid && !(0,_internal_common_js__WEBPACK_IMPORTED_MODULE_0__.H)(dateProfile.currentRange, now),
    isPrevEnabled: prevInfo.isValid,
    isNextEnabled: nextInfo.isValid
  };
}
// Plugin
// -----------------------------------------------------------------------------------------------------------------
function buildViewPropTransformers(theClasses) {
  return theClasses.map(TheClass => new TheClass());
}
class Calendar extends _internal_common_js__WEBPACK_IMPORTED_MODULE_0__.a9 {
  constructor(el, optionOverrides = {}) {
    super();
    this.isRendering = false;
    this.isRendered = false;
    this.currentClassNames = [];
    this.customContentRenderId = 0;
    this.handleAction = action => {
      // actions we know we want to render immediately
      switch (action.type) {
        case 'SET_EVENT_DRAG':
        case 'SET_EVENT_RESIZE':
          this.renderRunner.tryDrain();
      }
    };
    this.handleData = data => {
      this.currentData = data;
      this.renderRunner.request(data.calendarOptions.rerenderDelay);
    };
    this.handleRenderRequest = () => {
      if (this.isRendering) {
        this.isRendered = true;
        let {
          currentData
        } = this;
        (0,_internal_common_js__WEBPACK_IMPORTED_MODULE_0__.aa)(() => {
          (0,preact__WEBPACK_IMPORTED_MODULE_1__.render)((0,preact__WEBPACK_IMPORTED_MODULE_1__.createElement)(_internal_common_js__WEBPACK_IMPORTED_MODULE_0__.ab, {
            options: currentData.calendarOptions,
            theme: currentData.theme,
            emitter: currentData.emitter
          }, (classNames, height, isHeightAuto, forPrint) => {
            this.setClassNames(classNames);
            this.setHeight(height);
            return (0,preact__WEBPACK_IMPORTED_MODULE_1__.createElement)(_internal_common_js__WEBPACK_IMPORTED_MODULE_0__.ac.Provider, {
              value: this.customContentRenderId
            }, (0,preact__WEBPACK_IMPORTED_MODULE_1__.createElement)(CalendarContent, Object.assign({
              isHeightAuto: isHeightAuto,
              forPrint: forPrint
            }, currentData)));
          }), this.el);
        });
      } else if (this.isRendered) {
        this.isRendered = false;
        (0,preact__WEBPACK_IMPORTED_MODULE_1__.render)(null, this.el);
        this.setClassNames([]);
        this.setHeight('');
      }
    };
    (0,_internal_common_js__WEBPACK_IMPORTED_MODULE_0__.ad)(el);
    this.el = el;
    this.renderRunner = new _internal_common_js__WEBPACK_IMPORTED_MODULE_0__.D(this.handleRenderRequest);
    new CalendarDataManager({
      optionOverrides,
      calendarApi: this,
      onAction: this.handleAction,
      onData: this.handleData
    });
  }
  render() {
    let wasRendering = this.isRendering;
    if (!wasRendering) {
      this.isRendering = true;
    } else {
      this.customContentRenderId += 1;
    }
    this.renderRunner.request();
    if (wasRendering) {
      this.updateSize();
    }
  }
  destroy() {
    if (this.isRendering) {
      this.isRendering = false;
      this.renderRunner.request();
    }
  }
  updateSize() {
    (0,_internal_common_js__WEBPACK_IMPORTED_MODULE_0__.aa)(() => {
      super.updateSize();
    });
  }
  batchRendering(func) {
    this.renderRunner.pause('batchRendering');
    func();
    this.renderRunner.resume('batchRendering');
  }
  pauseRendering() {
    this.renderRunner.pause('pauseRendering');
  }
  resumeRendering() {
    this.renderRunner.resume('pauseRendering', true);
  }
  resetOptions(optionOverrides, changedOptionNames) {
    this.currentDataManager.resetOptions(optionOverrides, changedOptionNames);
  }
  setClassNames(classNames) {
    if (!(0,_internal_common_js__WEBPACK_IMPORTED_MODULE_0__.i)(classNames, this.currentClassNames)) {
      let {
        classList
      } = this.el;
      for (let className of this.currentClassNames) {
        classList.remove(className);
      }
      for (let className of classNames) {
        classList.add(className);
      }
      this.currentClassNames = classNames;
    }
  }
  setHeight(height) {
    (0,_internal_common_js__WEBPACK_IMPORTED_MODULE_0__.ae)(this.el, 'height', height);
  }
}
function formatDate(dateInput, options = {}) {
  let dateEnv = buildDateEnv(options);
  let formatter = (0,_internal_common_js__WEBPACK_IMPORTED_MODULE_0__.x)(options);
  let dateMeta = dateEnv.createMarkerMeta(dateInput);
  if (!dateMeta) {
    // TODO: warning?
    return '';
  }
  return dateEnv.format(dateMeta.marker, formatter, {
    forcedTzo: dateMeta.forcedTzo
  });
}
function formatRange(startInput, endInput, options) {
  let dateEnv = buildDateEnv(typeof options === 'object' && options ? options : {}); // pass in if non-null object
  let formatter = (0,_internal_common_js__WEBPACK_IMPORTED_MODULE_0__.x)(options);
  let startMeta = dateEnv.createMarkerMeta(startInput);
  let endMeta = dateEnv.createMarkerMeta(endInput);
  if (!startMeta || !endMeta) {
    // TODO: warning?
    return '';
  }
  return dateEnv.formatRange(startMeta.marker, endMeta.marker, formatter, {
    forcedStartTzo: startMeta.forcedTzo,
    forcedEndTzo: endMeta.forcedTzo,
    isEndExclusive: options.isEndExclusive,
    defaultSeparator: _internal_common_js__WEBPACK_IMPORTED_MODULE_0__.e.defaultRangeSeparator
  });
}
// TODO: more DRY and optimized
function buildDateEnv(settings) {
  let locale = buildLocale(settings.locale || 'en', organizeRawLocales([]).map); // TODO: don't hardcode 'en' everywhere
  return new _internal_common_js__WEBPACK_IMPORTED_MODULE_0__.S(Object.assign(Object.assign({
    timeZone: _internal_common_js__WEBPACK_IMPORTED_MODULE_0__.e.timeZone,
    calendarSystem: 'gregory'
  }, settings), {
    locale
  }));
}

// HELPERS
/*
if nextDayThreshold is specified, slicing is done in an all-day fashion.
you can get nextDayThreshold from context.nextDayThreshold
*/
function sliceEvents(props, allDay) {
  return (0,_internal_common_js__WEBPACK_IMPORTED_MODULE_0__.af)(props.eventStore, props.eventUiBases, props.dateProfile.activeRange, allDay ? props.nextDayThreshold : null).fg;
}
const version = '6.1.8';


/***/ }),

/***/ 939:
/*!************************************************************!*\
  !*** ./node_modules/@fullcalendar/core/internal-common.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   $: () => (/* binding */ elementClosest),
/* harmony export */   A: () => (/* binding */ memoizeObjArg),
/* harmony export */   B: () => (/* binding */ BaseComponent),
/* harmony export */   C: () => (/* binding */ ContentContainer),
/* harmony export */   D: () => (/* binding */ DelayedRunner),
/* harmony export */   E: () => (/* binding */ isPropsEqual),
/* harmony export */   F: () => (/* binding */ Emitter),
/* harmony export */   G: () => (/* binding */ getInitialDate),
/* harmony export */   H: () => (/* binding */ rangeContainsMarker),
/* harmony export */   I: () => (/* binding */ createEmptyEventStore),
/* harmony export */   J: () => (/* binding */ reduceCurrentDate),
/* harmony export */   K: () => (/* binding */ reduceEventStore),
/* harmony export */   L: () => (/* binding */ rezoneEventStoreDates),
/* harmony export */   M: () => (/* binding */ mergeRawOptions),
/* harmony export */   N: () => (/* binding */ BASE_OPTION_REFINERS),
/* harmony export */   O: () => (/* binding */ CALENDAR_LISTENER_REFINERS),
/* harmony export */   P: () => (/* binding */ CALENDAR_OPTION_REFINERS),
/* harmony export */   Q: () => (/* binding */ COMPLEX_OPTION_COMPARATORS),
/* harmony export */   R: () => (/* binding */ VIEW_OPTION_REFINERS),
/* harmony export */   S: () => (/* binding */ DateEnv),
/* harmony export */   T: () => (/* binding */ Theme),
/* harmony export */   U: () => (/* binding */ DateProfileGenerator),
/* harmony export */   V: () => (/* binding */ ViewContextType),
/* harmony export */   W: () => (/* binding */ createEventUi),
/* harmony export */   X: () => (/* binding */ parseBusinessHours),
/* harmony export */   Y: () => (/* binding */ setRef),
/* harmony export */   Z: () => (/* binding */ Interaction),
/* harmony export */   _: () => (/* binding */ getElSeg),
/* harmony export */   a: () => (/* binding */ mapHash),
/* harmony export */   a$: () => (/* binding */ getSlotClassNames),
/* harmony export */   a0: () => (/* binding */ EventImpl),
/* harmony export */   a1: () => (/* binding */ listenBySelector),
/* harmony export */   a2: () => (/* binding */ listenToHoverBySelector),
/* harmony export */   a3: () => (/* binding */ PureComponent),
/* harmony export */   a4: () => (/* binding */ buildViewContext),
/* harmony export */   a5: () => (/* binding */ getUniqueDomId),
/* harmony export */   a6: () => (/* binding */ parseInteractionSettings),
/* harmony export */   a7: () => (/* binding */ interactionSettingsStore),
/* harmony export */   a8: () => (/* binding */ getNow),
/* harmony export */   a9: () => (/* binding */ CalendarImpl),
/* harmony export */   aA: () => (/* binding */ diffDates),
/* harmony export */   aB: () => (/* binding */ removeExact),
/* harmony export */   aC: () => (/* binding */ memoizeArraylike),
/* harmony export */   aD: () => (/* binding */ memoizeHashlike),
/* harmony export */   aE: () => (/* binding */ intersectRects),
/* harmony export */   aF: () => (/* binding */ pointInsideRect),
/* harmony export */   aG: () => (/* binding */ constrainPoint),
/* harmony export */   aH: () => (/* binding */ getRectCenter),
/* harmony export */   aI: () => (/* binding */ diffPoints),
/* harmony export */   aJ: () => (/* binding */ translateRect),
/* harmony export */   aK: () => (/* binding */ compareObjs),
/* harmony export */   aL: () => (/* binding */ collectFromHash),
/* harmony export */   aM: () => (/* binding */ findElements),
/* harmony export */   aN: () => (/* binding */ findDirectChildren),
/* harmony export */   aO: () => (/* binding */ removeElement),
/* harmony export */   aP: () => (/* binding */ applyStyle),
/* harmony export */   aQ: () => (/* binding */ elementMatches),
/* harmony export */   aR: () => (/* binding */ getEventTargetViaRoot),
/* harmony export */   aS: () => (/* binding */ parseClassNames),
/* harmony export */   aT: () => (/* binding */ getCanVGrowWithinCell),
/* harmony export */   aU: () => (/* binding */ mergeEventStores),
/* harmony export */   aV: () => (/* binding */ getRelevantEvents),
/* harmony export */   aW: () => (/* binding */ eventTupleToStore),
/* harmony export */   aX: () => (/* binding */ combineEventUis),
/* harmony export */   aY: () => (/* binding */ Splitter),
/* harmony export */   aZ: () => (/* binding */ getDayClassNames),
/* harmony export */   a_: () => (/* binding */ getDateMeta),
/* harmony export */   aa: () => (/* binding */ flushSync),
/* harmony export */   ab: () => (/* binding */ CalendarRoot),
/* harmony export */   ac: () => (/* binding */ RenderId),
/* harmony export */   ad: () => (/* binding */ ensureElHasStyles),
/* harmony export */   ae: () => (/* binding */ applyStyleProp),
/* harmony export */   af: () => (/* binding */ sliceEventStore),
/* harmony export */   ag: () => (/* binding */ JsonRequestError),
/* harmony export */   ah: () => (/* binding */ createContext),
/* harmony export */   ai: () => (/* binding */ refineProps),
/* harmony export */   aj: () => (/* binding */ createEventInstance),
/* harmony export */   ak: () => (/* binding */ parseEventDef),
/* harmony export */   al: () => (/* binding */ refineEventDef),
/* harmony export */   am: () => (/* binding */ padStart),
/* harmony export */   an: () => (/* binding */ isInt),
/* harmony export */   ao: () => (/* binding */ parseFieldSpecs),
/* harmony export */   ap: () => (/* binding */ compareByFieldSpecs),
/* harmony export */   aq: () => (/* binding */ flexibleCompare),
/* harmony export */   ar: () => (/* binding */ preventSelection),
/* harmony export */   as: () => (/* binding */ allowSelection),
/* harmony export */   at: () => (/* binding */ preventContextMenu),
/* harmony export */   au: () => (/* binding */ allowContextMenu),
/* harmony export */   av: () => (/* binding */ compareNumbers),
/* harmony export */   aw: () => (/* binding */ enableCursor),
/* harmony export */   ax: () => (/* binding */ disableCursor),
/* harmony export */   ay: () => (/* binding */ computeVisibleDayRange),
/* harmony export */   az: () => (/* binding */ isMultiDayRange),
/* harmony export */   b: () => (/* binding */ buildViewClassNames),
/* harmony export */   b$: () => (/* binding */ SimpleScrollGrid),
/* harmony export */   b0: () => (/* binding */ buildNavLinkAttrs),
/* harmony export */   b1: () => (/* binding */ preventDefault),
/* harmony export */   b2: () => (/* binding */ whenTransitionDone),
/* harmony export */   b3: () => (/* binding */ computeInnerRect),
/* harmony export */   b4: () => (/* binding */ computeEdges),
/* harmony export */   b5: () => (/* binding */ getClippingParents),
/* harmony export */   b6: () => (/* binding */ computeRect),
/* harmony export */   b7: () => (/* binding */ rangesEqual),
/* harmony export */   b8: () => (/* binding */ rangesIntersect),
/* harmony export */   b9: () => (/* binding */ rangeContainsRange),
/* harmony export */   bA: () => (/* binding */ SegHierarchy),
/* harmony export */   bB: () => (/* binding */ buildEntryKey),
/* harmony export */   bC: () => (/* binding */ getEntrySpanEnd),
/* harmony export */   bD: () => (/* binding */ binarySearch),
/* harmony export */   bE: () => (/* binding */ groupIntersectingEntries),
/* harmony export */   bF: () => (/* binding */ intersectSpans),
/* harmony export */   bG: () => (/* binding */ interactionSettingsToStore),
/* harmony export */   bH: () => (/* binding */ ElementDragging),
/* harmony export */   bI: () => (/* binding */ config),
/* harmony export */   bJ: () => (/* binding */ parseDragMeta),
/* harmony export */   bK: () => (/* binding */ DayHeader),
/* harmony export */   bL: () => (/* binding */ computeFallbackHeaderFormat),
/* harmony export */   bM: () => (/* binding */ TableDateCell),
/* harmony export */   bN: () => (/* binding */ TableDowCell),
/* harmony export */   bO: () => (/* binding */ DaySeriesModel),
/* harmony export */   bP: () => (/* binding */ hasBgRendering),
/* harmony export */   bQ: () => (/* binding */ buildSegTimeText),
/* harmony export */   bR: () => (/* binding */ sortEventSegs),
/* harmony export */   bS: () => (/* binding */ getSegMeta),
/* harmony export */   bT: () => (/* binding */ buildEventRangeKey),
/* harmony export */   bU: () => (/* binding */ getSegAnchorAttrs),
/* harmony export */   bV: () => (/* binding */ DayTableModel),
/* harmony export */   bW: () => (/* binding */ Slicer),
/* harmony export */   bX: () => (/* binding */ applyMutationToEventStore),
/* harmony export */   bY: () => (/* binding */ isPropsValid),
/* harmony export */   bZ: () => (/* binding */ isInteractionValid),
/* harmony export */   b_: () => (/* binding */ isDateSelectionValid),
/* harmony export */   ba: () => (/* binding */ PositionCache),
/* harmony export */   bb: () => (/* binding */ ScrollController),
/* harmony export */   bc: () => (/* binding */ ElementScrollController),
/* harmony export */   bd: () => (/* binding */ WindowScrollController),
/* harmony export */   be: () => (/* binding */ DateComponent),
/* harmony export */   bf: () => (/* binding */ isDateSpansEqual),
/* harmony export */   bg: () => (/* binding */ addMs),
/* harmony export */   bh: () => (/* binding */ addWeeks),
/* harmony export */   bi: () => (/* binding */ diffWeeks),
/* harmony export */   bj: () => (/* binding */ diffWholeWeeks),
/* harmony export */   bk: () => (/* binding */ diffDayAndTime),
/* harmony export */   bl: () => (/* binding */ diffDays),
/* harmony export */   bm: () => (/* binding */ isValidDate),
/* harmony export */   bn: () => (/* binding */ asCleanDays),
/* harmony export */   bo: () => (/* binding */ multiplyDuration),
/* harmony export */   bp: () => (/* binding */ addDurations),
/* harmony export */   bq: () => (/* binding */ asRoughMinutes),
/* harmony export */   br: () => (/* binding */ asRoughSeconds),
/* harmony export */   bs: () => (/* binding */ asRoughMs),
/* harmony export */   bt: () => (/* binding */ wholeDivideDurations),
/* harmony export */   bu: () => (/* binding */ formatIsoTimeString),
/* harmony export */   bv: () => (/* binding */ formatDayString),
/* harmony export */   bw: () => (/* binding */ buildIsoString),
/* harmony export */   bx: () => (/* binding */ formatIsoMonthStr),
/* harmony export */   by: () => (/* binding */ NamedTimeZoneImpl),
/* harmony export */   bz: () => (/* binding */ parse),
/* harmony export */   c: () => (/* binding */ greatestDurationDenominator),
/* harmony export */   c0: () => (/* binding */ hasShrinkWidth),
/* harmony export */   c1: () => (/* binding */ renderMicroColGroup),
/* harmony export */   c2: () => (/* binding */ getScrollGridClassNames),
/* harmony export */   c3: () => (/* binding */ getSectionClassNames),
/* harmony export */   c4: () => (/* binding */ getSectionHasLiquidHeight),
/* harmony export */   c5: () => (/* binding */ getAllowYScrolling),
/* harmony export */   c6: () => (/* binding */ renderChunkContent),
/* harmony export */   c7: () => (/* binding */ computeShrinkWidth),
/* harmony export */   c8: () => (/* binding */ sanitizeShrinkWidth),
/* harmony export */   c9: () => (/* binding */ isColPropsEqual),
/* harmony export */   ca: () => (/* binding */ renderScrollShim),
/* harmony export */   cb: () => (/* binding */ getStickyFooterScrollbar),
/* harmony export */   cc: () => (/* binding */ getStickyHeaderDates),
/* harmony export */   cd: () => (/* binding */ Scroller),
/* harmony export */   ce: () => (/* binding */ getScrollbarWidths),
/* harmony export */   cf: () => (/* binding */ RefMap),
/* harmony export */   cg: () => (/* binding */ getIsRtlScrollbarOnLeft),
/* harmony export */   ch: () => (/* binding */ NowTimer),
/* harmony export */   ci: () => (/* binding */ ScrollResponder),
/* harmony export */   cj: () => (/* binding */ StandardEvent),
/* harmony export */   ck: () => (/* binding */ NowIndicatorContainer),
/* harmony export */   cl: () => (/* binding */ DayCellContainer),
/* harmony export */   cm: () => (/* binding */ hasCustomDayCellContent),
/* harmony export */   cn: () => (/* binding */ EventContainer),
/* harmony export */   co: () => (/* binding */ renderFill),
/* harmony export */   cp: () => (/* binding */ BgEvent),
/* harmony export */   cq: () => (/* binding */ WeekNumberContainer),
/* harmony export */   cr: () => (/* binding */ MoreLinkContainer),
/* harmony export */   cs: () => (/* binding */ computeEarliestSegStart),
/* harmony export */   ct: () => (/* binding */ ViewContainer),
/* harmony export */   cu: () => (/* binding */ triggerDateSelect),
/* harmony export */   cv: () => (/* binding */ getDefaultEventEnd),
/* harmony export */   cw: () => (/* binding */ injectStyles),
/* harmony export */   cx: () => (/* binding */ buildElAttrs),
/* harmony export */   cy: () => (/* binding */ CustomRenderingStore),
/* harmony export */   d: () => (/* binding */ createDuration),
/* harmony export */   e: () => (/* binding */ BASE_OPTION_DEFAULTS),
/* harmony export */   f: () => (/* binding */ arrayToHash),
/* harmony export */   g: () => (/* binding */ guid),
/* harmony export */   h: () => (/* binding */ filterHash),
/* harmony export */   i: () => (/* binding */ isArraysEqual),
/* harmony export */   j: () => (/* binding */ buildEventSourceRefiners),
/* harmony export */   k: () => (/* binding */ formatWithOrdinals),
/* harmony export */   l: () => (/* binding */ buildRangeApiWithTimeZone),
/* harmony export */   m: () => (/* binding */ mergeProps),
/* harmony export */   n: () => (/* binding */ identity),
/* harmony export */   o: () => (/* binding */ intersectRanges),
/* harmony export */   p: () => (/* binding */ parseEventSource),
/* harmony export */   q: () => (/* binding */ startOfDay),
/* harmony export */   r: () => (/* binding */ requestJson),
/* harmony export */   s: () => (/* binding */ subtractDurations),
/* harmony export */   t: () => (/* binding */ addDays),
/* harmony export */   u: () => (/* binding */ unpromisify),
/* harmony export */   v: () => (/* binding */ hashValuesToArray),
/* harmony export */   w: () => (/* binding */ buildEventApis),
/* harmony export */   x: () => (/* binding */ createFormatter),
/* harmony export */   y: () => (/* binding */ diffWholeDays),
/* harmony export */   z: () => (/* binding */ memoize)
/* harmony export */ });
/* harmony import */ var preact__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! preact */ 3586);
/* harmony import */ var preact_compat__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! preact/compat */ 5662);



const styleTexts = [];
const styleEls = new Map();
function injectStyles(styleText) {
  styleTexts.push(styleText);
  styleEls.forEach(styleEl => {
    appendStylesTo(styleEl, styleText);
  });
}
function ensureElHasStyles(el) {
  if (el.isConnected) {
    registerStylesRoot(el.getRootNode());
  }
}
function registerStylesRoot(rootNode) {
  let styleEl = styleEls.get(rootNode);
  if (!styleEl || !styleEl.isConnected) {
    styleEl = rootNode.querySelector('style[data-fullcalendar]');
    if (!styleEl) {
      styleEl = document.createElement('style');
      styleEl.setAttribute('data-fullcalendar', '');
      const nonce = getNonceValue();
      if (nonce) {
        styleEl.nonce = nonce;
      }
      const parentEl = rootNode === document ? document.head : rootNode;
      const insertBefore = rootNode === document ? parentEl.querySelector('script,link[rel=stylesheet],link[as=style],style') : parentEl.firstChild;
      parentEl.insertBefore(styleEl, insertBefore);
    }
    styleEls.set(rootNode, styleEl);
    hydrateStylesRoot(styleEl);
  }
}
function hydrateStylesRoot(styleEl) {
  for (const styleText of styleTexts) {
    appendStylesTo(styleEl, styleText);
  }
}
function appendStylesTo(styleEl, styleText) {
  const {
    sheet
  } = styleEl;
  const ruleCnt = sheet.cssRules.length;
  styleText.split('}').forEach((styleStr, i) => {
    styleStr = styleStr.trim();
    if (styleStr) {
      sheet.insertRule(styleStr + '}', ruleCnt + i);
    }
  });
}
// nonce
// -------------------------------------------------------------------------------------------------
let queriedNonceValue;
function getNonceValue() {
  if (queriedNonceValue === undefined) {
    queriedNonceValue = queryNonceValue();
  }
  return queriedNonceValue;
}
/*
TODO: discourage meta tag and instead put nonce attribute on placeholder <style> tag
*/
function queryNonceValue() {
  const metaWithNonce = document.querySelector('meta[name="csp-nonce"]');
  if (metaWithNonce && metaWithNonce.hasAttribute('content')) {
    return metaWithNonce.getAttribute('content');
  }
  const elWithNonce = document.querySelector('script[nonce]');
  if (elWithNonce) {
    return elWithNonce.nonce || '';
  }
  return '';
}
// main
// -------------------------------------------------------------------------------------------------
if (typeof document !== 'undefined') {
  registerStylesRoot(document);
}
var css_248z = ":root{--fc-small-font-size:.85em;--fc-page-bg-color:#fff;--fc-neutral-bg-color:hsla(0,0%,82%,.3);--fc-neutral-text-color:grey;--fc-border-color:#ddd;--fc-button-text-color:#fff;--fc-button-bg-color:#2c3e50;--fc-button-border-color:#2c3e50;--fc-button-hover-bg-color:#1e2b37;--fc-button-hover-border-color:#1a252f;--fc-button-active-bg-color:#1a252f;--fc-button-active-border-color:#151e27;--fc-event-bg-color:#3788d8;--fc-event-border-color:#3788d8;--fc-event-text-color:#fff;--fc-event-selected-overlay-color:rgba(0,0,0,.25);--fc-more-link-bg-color:#d0d0d0;--fc-more-link-text-color:inherit;--fc-event-resizer-thickness:8px;--fc-event-resizer-dot-total-width:8px;--fc-event-resizer-dot-border-width:1px;--fc-non-business-color:hsla(0,0%,84%,.3);--fc-bg-event-color:#8fdf82;--fc-bg-event-opacity:0.3;--fc-highlight-color:rgba(188,232,241,.3);--fc-today-bg-color:rgba(255,220,40,.15);--fc-now-indicator-color:red}.fc-not-allowed,.fc-not-allowed .fc-event{cursor:not-allowed}.fc{display:flex;flex-direction:column;font-size:1em}.fc,.fc *,.fc :after,.fc :before{box-sizing:border-box}.fc table{border-collapse:collapse;border-spacing:0;font-size:1em}.fc th{text-align:center}.fc td,.fc th{padding:0;vertical-align:top}.fc a[data-navlink]{cursor:pointer}.fc a[data-navlink]:hover{text-decoration:underline}.fc-direction-ltr{direction:ltr;text-align:left}.fc-direction-rtl{direction:rtl;text-align:right}.fc-theme-standard td,.fc-theme-standard th{border:1px solid var(--fc-border-color)}.fc-liquid-hack td,.fc-liquid-hack th{position:relative}@font-face{font-family:fcicons;font-style:normal;font-weight:400;src:url(\"data:application/x-font-ttf;charset=utf-8;base64,AAEAAAALAIAAAwAwT1MvMg8SBfAAAAC8AAAAYGNtYXAXVtKNAAABHAAAAFRnYXNwAAAAEAAAAXAAAAAIZ2x5ZgYydxIAAAF4AAAFNGhlYWQUJ7cIAAAGrAAAADZoaGVhB20DzAAABuQAAAAkaG10eCIABhQAAAcIAAAALGxvY2ED4AU6AAAHNAAAABhtYXhwAA8AjAAAB0wAAAAgbmFtZXsr690AAAdsAAABhnBvc3QAAwAAAAAI9AAAACAAAwPAAZAABQAAApkCzAAAAI8CmQLMAAAB6wAzAQkAAAAAAAAAAAAAAAAAAAABEAAAAAAAAAAAAAAAAAAAAABAAADpBgPA/8AAQAPAAEAAAAABAAAAAAAAAAAAAAAgAAAAAAADAAAAAwAAABwAAQADAAAAHAADAAEAAAAcAAQAOAAAAAoACAACAAIAAQAg6Qb//f//AAAAAAAg6QD//f//AAH/4xcEAAMAAQAAAAAAAAAAAAAAAQAB//8ADwABAAAAAAAAAAAAAgAANzkBAAAAAAEAAAAAAAAAAAACAAA3OQEAAAAAAQAAAAAAAAAAAAIAADc5AQAAAAABAWIAjQKeAskAEwAAJSc3NjQnJiIHAQYUFwEWMjc2NCcCnuLiDQ0MJAz/AA0NAQAMJAwNDcni4gwjDQwM/wANIwz/AA0NDCMNAAAAAQFiAI0CngLJABMAACUBNjQnASYiBwYUHwEHBhQXFjI3AZ4BAA0N/wAMJAwNDeLiDQ0MJAyNAQAMIw0BAAwMDSMM4uINIwwNDQAAAAIA4gC3Ax4CngATACcAACUnNzY0JyYiDwEGFB8BFjI3NjQnISc3NjQnJiIPAQYUHwEWMjc2NCcB87e3DQ0MIw3VDQ3VDSMMDQ0BK7e3DQ0MJAzVDQ3VDCQMDQ3zuLcMJAwNDdUNIwzWDAwNIwy4twwkDA0N1Q0jDNYMDA0jDAAAAgDiALcDHgKeABMAJwAAJTc2NC8BJiIHBhQfAQcGFBcWMjchNzY0LwEmIgcGFB8BBwYUFxYyNwJJ1Q0N1Q0jDA0Nt7cNDQwjDf7V1Q0N1QwkDA0Nt7cNDQwkDLfWDCMN1Q0NDCQMt7gMIw0MDNYMIw3VDQ0MJAy3uAwjDQwMAAADAFUAAAOrA1UAMwBoAHcAABMiBgcOAQcOAQcOARURFBYXHgEXHgEXHgEzITI2Nz4BNz4BNz4BNRE0JicuAScuAScuASMFITIWFx4BFx4BFx4BFREUBgcOAQcOAQcOASMhIiYnLgEnLgEnLgE1ETQ2Nz4BNz4BNz4BMxMhMjY1NCYjISIGFRQWM9UNGAwLFQkJDgUFBQUFBQ4JCRULDBgNAlYNGAwLFQkJDgUFBQUFBQ4JCRULDBgN/aoCVgQIBAQHAwMFAQIBAQIBBQMDBwQECAT9qgQIBAQHAwMFAQIBAQIBBQMDBwQECASAAVYRGRkR/qoRGRkRA1UFBAUOCQkVDAsZDf2rDRkLDBUJCA4FBQUFBQUOCQgVDAsZDQJVDRkLDBUJCQ4FBAVVAgECBQMCBwQECAX9qwQJAwQHAwMFAQICAgIBBQMDBwQDCQQCVQUIBAQHAgMFAgEC/oAZEhEZGRESGQAAAAADAFUAAAOrA1UAMwBoAIkAABMiBgcOAQcOAQcOARURFBYXHgEXHgEXHgEzITI2Nz4BNz4BNz4BNRE0JicuAScuAScuASMFITIWFx4BFx4BFx4BFREUBgcOAQcOAQcOASMhIiYnLgEnLgEnLgE1ETQ2Nz4BNz4BNz4BMxMzFRQWMzI2PQEzMjY1NCYrATU0JiMiBh0BIyIGFRQWM9UNGAwLFQkJDgUFBQUFBQ4JCRULDBgNAlYNGAwLFQkJDgUFBQUFBQ4JCRULDBgN/aoCVgQIBAQHAwMFAQIBAQIBBQMDBwQECAT9qgQIBAQHAwMFAQIBAQIBBQMDBwQECASAgBkSEhmAERkZEYAZEhIZgBEZGREDVQUEBQ4JCRUMCxkN/asNGQsMFQkIDgUFBQUFBQ4JCBUMCxkNAlUNGQsMFQkJDgUEBVUCAQIFAwIHBAQIBf2rBAkDBAcDAwUBAgICAgEFAwMHBAMJBAJVBQgEBAcCAwUCAQL+gIASGRkSgBkSERmAEhkZEoAZERIZAAABAOIAjQMeAskAIAAAExcHBhQXFjI/ARcWMjc2NC8BNzY0JyYiDwEnJiIHBhQX4uLiDQ0MJAzi4gwkDA0N4uINDQwkDOLiDCQMDQ0CjeLiDSMMDQ3h4Q0NDCMN4uIMIw0MDOLiDAwNIwwAAAABAAAAAQAAa5n0y18PPPUACwQAAAAAANivOVsAAAAA2K85WwAAAAADqwNVAAAACAACAAAAAAAAAAEAAAPA/8AAAAQAAAAAAAOrAAEAAAAAAAAAAAAAAAAAAAALBAAAAAAAAAAAAAAAAgAAAAQAAWIEAAFiBAAA4gQAAOIEAABVBAAAVQQAAOIAAAAAAAoAFAAeAEQAagCqAOoBngJkApoAAQAAAAsAigADAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAA4ArgABAAAAAAABAAcAAAABAAAAAAACAAcAYAABAAAAAAADAAcANgABAAAAAAAEAAcAdQABAAAAAAAFAAsAFQABAAAAAAAGAAcASwABAAAAAAAKABoAigADAAEECQABAA4ABwADAAEECQACAA4AZwADAAEECQADAA4APQADAAEECQAEAA4AfAADAAEECQAFABYAIAADAAEECQAGAA4AUgADAAEECQAKADQApGZjaWNvbnMAZgBjAGkAYwBvAG4Ac1ZlcnNpb24gMS4wAFYAZQByAHMAaQBvAG4AIAAxAC4AMGZjaWNvbnMAZgBjAGkAYwBvAG4Ac2ZjaWNvbnMAZgBjAGkAYwBvAG4Ac1JlZ3VsYXIAUgBlAGcAdQBsAGEAcmZjaWNvbnMAZgBjAGkAYwBvAG4Ac0ZvbnQgZ2VuZXJhdGVkIGJ5IEljb01vb24uAEYAbwBuAHQAIABnAGUAbgBlAHIAYQB0AGUAZAAgAGIAeQAgAEkAYwBvAE0AbwBvAG4ALgAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=\") format(\"truetype\")}.fc-icon{speak:none;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;display:inline-block;font-family:fcicons!important;font-style:normal;font-variant:normal;font-weight:400;height:1em;line-height:1;text-align:center;text-transform:none;-webkit-user-select:none;-moz-user-select:none;user-select:none;width:1em}.fc-icon-chevron-left:before{content:\"\\e900\"}.fc-icon-chevron-right:before{content:\"\\e901\"}.fc-icon-chevrons-left:before{content:\"\\e902\"}.fc-icon-chevrons-right:before{content:\"\\e903\"}.fc-icon-minus-square:before{content:\"\\e904\"}.fc-icon-plus-square:before{content:\"\\e905\"}.fc-icon-x:before{content:\"\\e906\"}.fc .fc-button{border-radius:0;font-family:inherit;font-size:inherit;line-height:inherit;margin:0;overflow:visible;text-transform:none}.fc .fc-button:focus{outline:1px dotted;outline:5px auto -webkit-focus-ring-color}.fc .fc-button{-webkit-appearance:button}.fc .fc-button:not(:disabled){cursor:pointer}.fc .fc-button{background-color:transparent;border:1px solid transparent;border-radius:.25em;display:inline-block;font-size:1em;font-weight:400;line-height:1.5;padding:.4em .65em;text-align:center;-webkit-user-select:none;-moz-user-select:none;user-select:none;vertical-align:middle}.fc .fc-button:hover{text-decoration:none}.fc .fc-button:focus{box-shadow:0 0 0 .2rem rgba(44,62,80,.25);outline:0}.fc .fc-button:disabled{opacity:.65}.fc .fc-button-primary{background-color:var(--fc-button-bg-color);border-color:var(--fc-button-border-color);color:var(--fc-button-text-color)}.fc .fc-button-primary:hover{background-color:var(--fc-button-hover-bg-color);border-color:var(--fc-button-hover-border-color);color:var(--fc-button-text-color)}.fc .fc-button-primary:disabled{background-color:var(--fc-button-bg-color);border-color:var(--fc-button-border-color);color:var(--fc-button-text-color)}.fc .fc-button-primary:focus{box-shadow:0 0 0 .2rem rgba(76,91,106,.5)}.fc .fc-button-primary:not(:disabled).fc-button-active,.fc .fc-button-primary:not(:disabled):active{background-color:var(--fc-button-active-bg-color);border-color:var(--fc-button-active-border-color);color:var(--fc-button-text-color)}.fc .fc-button-primary:not(:disabled).fc-button-active:focus,.fc .fc-button-primary:not(:disabled):active:focus{box-shadow:0 0 0 .2rem rgba(76,91,106,.5)}.fc .fc-button .fc-icon{font-size:1.5em;vertical-align:middle}.fc .fc-button-group{display:inline-flex;position:relative;vertical-align:middle}.fc .fc-button-group>.fc-button{flex:1 1 auto;position:relative}.fc .fc-button-group>.fc-button.fc-button-active,.fc .fc-button-group>.fc-button:active,.fc .fc-button-group>.fc-button:focus,.fc .fc-button-group>.fc-button:hover{z-index:1}.fc-direction-ltr .fc-button-group>.fc-button:not(:first-child){border-bottom-left-radius:0;border-top-left-radius:0;margin-left:-1px}.fc-direction-ltr .fc-button-group>.fc-button:not(:last-child){border-bottom-right-radius:0;border-top-right-radius:0}.fc-direction-rtl .fc-button-group>.fc-button:not(:first-child){border-bottom-right-radius:0;border-top-right-radius:0;margin-right:-1px}.fc-direction-rtl .fc-button-group>.fc-button:not(:last-child){border-bottom-left-radius:0;border-top-left-radius:0}.fc .fc-toolbar{align-items:center;display:flex;justify-content:space-between}.fc .fc-toolbar.fc-header-toolbar{margin-bottom:1.5em}.fc .fc-toolbar.fc-footer-toolbar{margin-top:1.5em}.fc .fc-toolbar-title{font-size:1.75em;margin:0}.fc-direction-ltr .fc-toolbar>*>:not(:first-child){margin-left:.75em}.fc-direction-rtl .fc-toolbar>*>:not(:first-child){margin-right:.75em}.fc-direction-rtl .fc-toolbar-ltr{flex-direction:row-reverse}.fc .fc-scroller{-webkit-overflow-scrolling:touch;position:relative}.fc .fc-scroller-liquid{height:100%}.fc .fc-scroller-liquid-absolute{bottom:0;left:0;position:absolute;right:0;top:0}.fc .fc-scroller-harness{direction:ltr;overflow:hidden;position:relative}.fc .fc-scroller-harness-liquid{height:100%}.fc-direction-rtl .fc-scroller-harness>.fc-scroller{direction:rtl}.fc-theme-standard .fc-scrollgrid{border:1px solid var(--fc-border-color)}.fc .fc-scrollgrid,.fc .fc-scrollgrid table{table-layout:fixed;width:100%}.fc .fc-scrollgrid table{border-left-style:hidden;border-right-style:hidden;border-top-style:hidden}.fc .fc-scrollgrid{border-bottom-width:0;border-collapse:separate;border-right-width:0}.fc .fc-scrollgrid-liquid{height:100%}.fc .fc-scrollgrid-section,.fc .fc-scrollgrid-section table,.fc .fc-scrollgrid-section>td{height:1px}.fc .fc-scrollgrid-section-liquid>td{height:100%}.fc .fc-scrollgrid-section>*{border-left-width:0;border-top-width:0}.fc .fc-scrollgrid-section-footer>*,.fc .fc-scrollgrid-section-header>*{border-bottom-width:0}.fc .fc-scrollgrid-section-body table,.fc .fc-scrollgrid-section-footer table{border-bottom-style:hidden}.fc .fc-scrollgrid-section-sticky>*{background:var(--fc-page-bg-color);position:sticky;z-index:3}.fc .fc-scrollgrid-section-header.fc-scrollgrid-section-sticky>*{top:0}.fc .fc-scrollgrid-section-footer.fc-scrollgrid-section-sticky>*{bottom:0}.fc .fc-scrollgrid-sticky-shim{height:1px;margin-bottom:-1px}.fc-sticky{position:sticky}.fc .fc-view-harness{flex-grow:1;position:relative}.fc .fc-view-harness-active>.fc-view{bottom:0;left:0;position:absolute;right:0;top:0}.fc .fc-col-header-cell-cushion{display:inline-block;padding:2px 4px}.fc .fc-bg-event,.fc .fc-highlight,.fc .fc-non-business{bottom:0;left:0;position:absolute;right:0;top:0}.fc .fc-non-business{background:var(--fc-non-business-color)}.fc .fc-bg-event{background:var(--fc-bg-event-color);opacity:var(--fc-bg-event-opacity)}.fc .fc-bg-event .fc-event-title{font-size:var(--fc-small-font-size);font-style:italic;margin:.5em}.fc .fc-highlight{background:var(--fc-highlight-color)}.fc .fc-cell-shaded,.fc .fc-day-disabled{background:var(--fc-neutral-bg-color)}a.fc-event,a.fc-event:hover{text-decoration:none}.fc-event.fc-event-draggable,.fc-event[href]{cursor:pointer}.fc-event .fc-event-main{position:relative;z-index:2}.fc-event-dragging:not(.fc-event-selected){opacity:.75}.fc-event-dragging.fc-event-selected{box-shadow:0 2px 7px rgba(0,0,0,.3)}.fc-event .fc-event-resizer{display:none;position:absolute;z-index:4}.fc-event-selected .fc-event-resizer,.fc-event:hover .fc-event-resizer{display:block}.fc-event-selected .fc-event-resizer{background:var(--fc-page-bg-color);border-color:inherit;border-radius:calc(var(--fc-event-resizer-dot-total-width)/2);border-style:solid;border-width:var(--fc-event-resizer-dot-border-width);height:var(--fc-event-resizer-dot-total-width);width:var(--fc-event-resizer-dot-total-width)}.fc-event-selected .fc-event-resizer:before{bottom:-20px;content:\"\";left:-20px;position:absolute;right:-20px;top:-20px}.fc-event-selected,.fc-event:focus{box-shadow:0 2px 5px rgba(0,0,0,.2)}.fc-event-selected:before,.fc-event:focus:before{bottom:0;content:\"\";left:0;position:absolute;right:0;top:0;z-index:3}.fc-event-selected:after,.fc-event:focus:after{background:var(--fc-event-selected-overlay-color);bottom:-1px;content:\"\";left:-1px;position:absolute;right:-1px;top:-1px;z-index:1}.fc-h-event{background-color:var(--fc-event-bg-color);border:1px solid var(--fc-event-border-color);display:block}.fc-h-event .fc-event-main{color:var(--fc-event-text-color)}.fc-h-event .fc-event-main-frame{display:flex}.fc-h-event .fc-event-time{max-width:100%;overflow:hidden}.fc-h-event .fc-event-title-container{flex-grow:1;flex-shrink:1;min-width:0}.fc-h-event .fc-event-title{display:inline-block;left:0;max-width:100%;overflow:hidden;right:0;vertical-align:top}.fc-h-event.fc-event-selected:before{bottom:-10px;top:-10px}.fc-direction-ltr .fc-daygrid-block-event:not(.fc-event-start),.fc-direction-rtl .fc-daygrid-block-event:not(.fc-event-end){border-bottom-left-radius:0;border-left-width:0;border-top-left-radius:0}.fc-direction-ltr .fc-daygrid-block-event:not(.fc-event-end),.fc-direction-rtl .fc-daygrid-block-event:not(.fc-event-start){border-bottom-right-radius:0;border-right-width:0;border-top-right-radius:0}.fc-h-event:not(.fc-event-selected) .fc-event-resizer{bottom:0;top:0;width:var(--fc-event-resizer-thickness)}.fc-direction-ltr .fc-h-event:not(.fc-event-selected) .fc-event-resizer-start,.fc-direction-rtl .fc-h-event:not(.fc-event-selected) .fc-event-resizer-end{cursor:w-resize;left:calc(var(--fc-event-resizer-thickness)*-.5)}.fc-direction-ltr .fc-h-event:not(.fc-event-selected) .fc-event-resizer-end,.fc-direction-rtl .fc-h-event:not(.fc-event-selected) .fc-event-resizer-start{cursor:e-resize;right:calc(var(--fc-event-resizer-thickness)*-.5)}.fc-h-event.fc-event-selected .fc-event-resizer{margin-top:calc(var(--fc-event-resizer-dot-total-width)*-.5);top:50%}.fc-direction-ltr .fc-h-event.fc-event-selected .fc-event-resizer-start,.fc-direction-rtl .fc-h-event.fc-event-selected .fc-event-resizer-end{left:calc(var(--fc-event-resizer-dot-total-width)*-.5)}.fc-direction-ltr .fc-h-event.fc-event-selected .fc-event-resizer-end,.fc-direction-rtl .fc-h-event.fc-event-selected .fc-event-resizer-start{right:calc(var(--fc-event-resizer-dot-total-width)*-.5)}.fc .fc-popover{box-shadow:0 2px 6px rgba(0,0,0,.15);position:absolute;z-index:9999}.fc .fc-popover-header{align-items:center;display:flex;flex-direction:row;justify-content:space-between;padding:3px 4px}.fc .fc-popover-title{margin:0 2px}.fc .fc-popover-close{cursor:pointer;font-size:1.1em;opacity:.65}.fc-theme-standard .fc-popover{background:var(--fc-page-bg-color);border:1px solid var(--fc-border-color)}.fc-theme-standard .fc-popover-header{background:var(--fc-neutral-bg-color)}";
injectStyles(css_248z);
function removeElement(el) {
  if (el.parentNode) {
    el.parentNode.removeChild(el);
  }
}
// Querying
// ----------------------------------------------------------------------------------------------------------------
function elementClosest(el, selector) {
  if (el.closest) {
    return el.closest(selector);
    // really bad fallback for IE
    // from https://developer.mozilla.org/en-US/docs/Web/API/Element/closest
  }

  if (!document.documentElement.contains(el)) {
    return null;
  }
  do {
    if (elementMatches(el, selector)) {
      return el;
    }
    el = el.parentElement || el.parentNode;
  } while (el !== null && el.nodeType === 1);
  return null;
}
function elementMatches(el, selector) {
  let method = el.matches || el.matchesSelector || el.msMatchesSelector;
  return method.call(el, selector);
}
// accepts multiple subject els
// returns a real array. good for methods like forEach
// TODO: accept the document
function findElements(container, selector) {
  let containers = container instanceof HTMLElement ? [container] : container;
  let allMatches = [];
  for (let i = 0; i < containers.length; i += 1) {
    let matches = containers[i].querySelectorAll(selector);
    for (let j = 0; j < matches.length; j += 1) {
      allMatches.push(matches[j]);
    }
  }
  return allMatches;
}
// accepts multiple subject els
// only queries direct child elements // TODO: rename to findDirectChildren!
function findDirectChildren(parent, selector) {
  let parents = parent instanceof HTMLElement ? [parent] : parent;
  let allMatches = [];
  for (let i = 0; i < parents.length; i += 1) {
    let childNodes = parents[i].children; // only ever elements
    for (let j = 0; j < childNodes.length; j += 1) {
      let childNode = childNodes[j];
      if (!selector || elementMatches(childNode, selector)) {
        allMatches.push(childNode);
      }
    }
  }
  return allMatches;
}
// Style
// ----------------------------------------------------------------------------------------------------------------
const PIXEL_PROP_RE = /(top|left|right|bottom|width|height)$/i;
function applyStyle(el, props) {
  for (let propName in props) {
    applyStyleProp(el, propName, props[propName]);
  }
}
function applyStyleProp(el, name, val) {
  if (val == null) {
    el.style[name] = '';
  } else if (typeof val === 'number' && PIXEL_PROP_RE.test(name)) {
    el.style[name] = `${val}px`;
  } else {
    el.style[name] = val;
  }
}
// Event Handling
// ----------------------------------------------------------------------------------------------------------------
// if intercepting bubbled events at the document/window/body level,
// and want to see originating element (the 'target'), use this util instead
// of `ev.target` because it goes within web-component boundaries.
function getEventTargetViaRoot(ev) {
  var _a, _b;
  return (_b = (_a = ev.composedPath) === null || _a === void 0 ? void 0 : _a.call(ev)[0]) !== null && _b !== void 0 ? _b : ev.target;
}
// Unique ID for DOM attribute
let guid$1 = 0;
function getUniqueDomId() {
  guid$1 += 1;
  return 'fc-dom-' + guid$1;
}

// Stops a mouse/touch event from doing it's native browser action
function preventDefault(ev) {
  ev.preventDefault();
}
// Event Delegation
// ----------------------------------------------------------------------------------------------------------------
function buildDelegationHandler(selector, handler) {
  return ev => {
    let matchedChild = elementClosest(ev.target, selector);
    if (matchedChild) {
      handler.call(matchedChild, ev, matchedChild);
    }
  };
}
function listenBySelector(container, eventType, selector, handler) {
  let attachedHandler = buildDelegationHandler(selector, handler);
  container.addEventListener(eventType, attachedHandler);
  return () => {
    container.removeEventListener(eventType, attachedHandler);
  };
}
function listenToHoverBySelector(container, selector, onMouseEnter, onMouseLeave) {
  let currentMatchedChild;
  return listenBySelector(container, 'mouseover', selector, (mouseOverEv, matchedChild) => {
    if (matchedChild !== currentMatchedChild) {
      currentMatchedChild = matchedChild;
      onMouseEnter(mouseOverEv, matchedChild);
      let realOnMouseLeave = mouseLeaveEv => {
        currentMatchedChild = null;
        onMouseLeave(mouseLeaveEv, matchedChild);
        matchedChild.removeEventListener('mouseleave', realOnMouseLeave);
      };
      // listen to the next mouseleave, and then unattach
      matchedChild.addEventListener('mouseleave', realOnMouseLeave);
    }
  });
}
// Animation
// ----------------------------------------------------------------------------------------------------------------
const transitionEventNames = ['webkitTransitionEnd', 'otransitionend', 'oTransitionEnd', 'msTransitionEnd', 'transitionend'];
// triggered only when the next single subsequent transition finishes
function whenTransitionDone(el, callback) {
  let realCallback = ev => {
    callback(ev);
    transitionEventNames.forEach(eventName => {
      el.removeEventListener(eventName, realCallback);
    });
  };
  transitionEventNames.forEach(eventName => {
    el.addEventListener(eventName, realCallback); // cross-browser way to determine when the transition finishes
  });
}
// ARIA workarounds
// ----------------------------------------------------------------------------------------------------------------
function createAriaClickAttrs(handler) {
  return Object.assign({
    onClick: handler
  }, createAriaKeyboardAttrs(handler));
}
function createAriaKeyboardAttrs(handler) {
  return {
    tabIndex: 0,
    onKeyDown(ev) {
      if (ev.key === 'Enter' || ev.key === ' ') {
        handler(ev);
        ev.preventDefault(); // if space, don't scroll down page
      }
    }
  };
}

let guidNumber = 0;
function guid() {
  guidNumber += 1;
  return String(guidNumber);
}
/* FullCalendar-specific DOM Utilities
----------------------------------------------------------------------------------------------------------------------*/
// Make the mouse cursor express that an event is not allowed in the current area
function disableCursor() {
  document.body.classList.add('fc-not-allowed');
}
// Returns the mouse cursor to its original look
function enableCursor() {
  document.body.classList.remove('fc-not-allowed');
}
/* Selection
----------------------------------------------------------------------------------------------------------------------*/
function preventSelection(el) {
  el.style.userSelect = 'none';
  el.addEventListener('selectstart', preventDefault);
}
function allowSelection(el) {
  el.style.userSelect = '';
  el.removeEventListener('selectstart', preventDefault);
}
/* Context Menu
----------------------------------------------------------------------------------------------------------------------*/
function preventContextMenu(el) {
  el.addEventListener('contextmenu', preventDefault);
}
function allowContextMenu(el) {
  el.removeEventListener('contextmenu', preventDefault);
}
function parseFieldSpecs(input) {
  let specs = [];
  let tokens = [];
  let i;
  let token;
  if (typeof input === 'string') {
    tokens = input.split(/\s*,\s*/);
  } else if (typeof input === 'function') {
    tokens = [input];
  } else if (Array.isArray(input)) {
    tokens = input;
  }
  for (i = 0; i < tokens.length; i += 1) {
    token = tokens[i];
    if (typeof token === 'string') {
      specs.push(token.charAt(0) === '-' ? {
        field: token.substring(1),
        order: -1
      } : {
        field: token,
        order: 1
      });
    } else if (typeof token === 'function') {
      specs.push({
        func: token
      });
    }
  }
  return specs;
}
function compareByFieldSpecs(obj0, obj1, fieldSpecs) {
  let i;
  let cmp;
  for (i = 0; i < fieldSpecs.length; i += 1) {
    cmp = compareByFieldSpec(obj0, obj1, fieldSpecs[i]);
    if (cmp) {
      return cmp;
    }
  }
  return 0;
}
function compareByFieldSpec(obj0, obj1, fieldSpec) {
  if (fieldSpec.func) {
    return fieldSpec.func(obj0, obj1);
  }
  return flexibleCompare(obj0[fieldSpec.field], obj1[fieldSpec.field]) * (fieldSpec.order || 1);
}
function flexibleCompare(a, b) {
  if (!a && !b) {
    return 0;
  }
  if (b == null) {
    return -1;
  }
  if (a == null) {
    return 1;
  }
  if (typeof a === 'string' || typeof b === 'string') {
    return String(a).localeCompare(String(b));
  }
  return a - b;
}
/* String Utilities
----------------------------------------------------------------------------------------------------------------------*/
function padStart(val, len) {
  let s = String(val);
  return '000'.substr(0, len - s.length) + s;
}
function formatWithOrdinals(formatter, args, fallbackText) {
  if (typeof formatter === 'function') {
    return formatter(...args);
  }
  if (typeof formatter === 'string') {
    // non-blank string
    return args.reduce((str, arg, index) => str.replace('$' + index, arg || ''), formatter);
  }
  return fallbackText;
}
/* Number Utilities
----------------------------------------------------------------------------------------------------------------------*/
function compareNumbers(a, b) {
  return a - b;
}
function isInt(n) {
  return n % 1 === 0;
}
/* FC-specific DOM dimension stuff
----------------------------------------------------------------------------------------------------------------------*/
function computeSmallestCellWidth(cellEl) {
  let allWidthEl = cellEl.querySelector('.fc-scrollgrid-shrink-frame');
  let contentWidthEl = cellEl.querySelector('.fc-scrollgrid-shrink-cushion');
  if (!allWidthEl) {
    throw new Error('needs fc-scrollgrid-shrink-frame className'); // TODO: use const
  }

  if (!contentWidthEl) {
    throw new Error('needs fc-scrollgrid-shrink-cushion className');
  }
  return cellEl.getBoundingClientRect().width - allWidthEl.getBoundingClientRect().width +
  // the cell padding+border
  contentWidthEl.getBoundingClientRect().width;
}
const INTERNAL_UNITS = ['years', 'months', 'days', 'milliseconds'];
const PARSE_RE = /^(-?)(?:(\d+)\.)?(\d+):(\d\d)(?::(\d\d)(?:\.(\d\d\d))?)?/;
// Parsing and Creation
function createDuration(input, unit) {
  if (typeof input === 'string') {
    return parseString(input);
  }
  if (typeof input === 'object' && input) {
    // non-null object
    return parseObject(input);
  }
  if (typeof input === 'number') {
    return parseObject({
      [unit || 'milliseconds']: input
    });
  }
  return null;
}
function parseString(s) {
  let m = PARSE_RE.exec(s);
  if (m) {
    let sign = m[1] ? -1 : 1;
    return {
      years: 0,
      months: 0,
      days: sign * (m[2] ? parseInt(m[2], 10) : 0),
      milliseconds: sign * ((m[3] ? parseInt(m[3], 10) : 0) * 60 * 60 * 1000 +
      // hours
      (m[4] ? parseInt(m[4], 10) : 0) * 60 * 1000 +
      // minutes
      (m[5] ? parseInt(m[5], 10) : 0) * 1000 + (
      // seconds
      m[6] ? parseInt(m[6], 10) : 0) // ms
      )
    };
  }

  return null;
}
function parseObject(obj) {
  let duration = {
    years: obj.years || obj.year || 0,
    months: obj.months || obj.month || 0,
    days: obj.days || obj.day || 0,
    milliseconds: (obj.hours || obj.hour || 0) * 60 * 60 * 1000 +
    // hours
    (obj.minutes || obj.minute || 0) * 60 * 1000 +
    // minutes
    (obj.seconds || obj.second || 0) * 1000 + (
    // seconds
    obj.milliseconds || obj.millisecond || obj.ms || 0) // ms
  };

  let weeks = obj.weeks || obj.week;
  if (weeks) {
    duration.days += weeks * 7;
    duration.specifiedWeeks = true;
  }
  return duration;
}
// Equality
function durationsEqual(d0, d1) {
  return d0.years === d1.years && d0.months === d1.months && d0.days === d1.days && d0.milliseconds === d1.milliseconds;
}
function asCleanDays(dur) {
  if (!dur.years && !dur.months && !dur.milliseconds) {
    return dur.days;
  }
  return 0;
}
// Simple Math
function addDurations(d0, d1) {
  return {
    years: d0.years + d1.years,
    months: d0.months + d1.months,
    days: d0.days + d1.days,
    milliseconds: d0.milliseconds + d1.milliseconds
  };
}
function subtractDurations(d1, d0) {
  return {
    years: d1.years - d0.years,
    months: d1.months - d0.months,
    days: d1.days - d0.days,
    milliseconds: d1.milliseconds - d0.milliseconds
  };
}
function multiplyDuration(d, n) {
  return {
    years: d.years * n,
    months: d.months * n,
    days: d.days * n,
    milliseconds: d.milliseconds * n
  };
}
// Conversions
// "Rough" because they are based on average-case Gregorian months/years
function asRoughYears(dur) {
  return asRoughDays(dur) / 365;
}
function asRoughMonths(dur) {
  return asRoughDays(dur) / 30;
}
function asRoughDays(dur) {
  return asRoughMs(dur) / 864e5;
}
function asRoughMinutes(dur) {
  return asRoughMs(dur) / (1000 * 60);
}
function asRoughSeconds(dur) {
  return asRoughMs(dur) / 1000;
}
function asRoughMs(dur) {
  return dur.years * (365 * 864e5) + dur.months * (30 * 864e5) + dur.days * 864e5 + dur.milliseconds;
}
// Advanced Math
function wholeDivideDurations(numerator, denominator) {
  let res = null;
  for (let i = 0; i < INTERNAL_UNITS.length; i += 1) {
    let unit = INTERNAL_UNITS[i];
    if (denominator[unit]) {
      let localRes = numerator[unit] / denominator[unit];
      if (!isInt(localRes) || res !== null && res !== localRes) {
        return null;
      }
      res = localRes;
    } else if (numerator[unit]) {
      // needs to divide by something but can't!
      return null;
    }
  }
  return res;
}
function greatestDurationDenominator(dur) {
  let ms = dur.milliseconds;
  if (ms) {
    if (ms % 1000 !== 0) {
      return {
        unit: 'millisecond',
        value: ms
      };
    }
    if (ms % (1000 * 60) !== 0) {
      return {
        unit: 'second',
        value: ms / 1000
      };
    }
    if (ms % (1000 * 60 * 60) !== 0) {
      return {
        unit: 'minute',
        value: ms / (1000 * 60)
      };
    }
    if (ms) {
      return {
        unit: 'hour',
        value: ms / (1000 * 60 * 60)
      };
    }
  }
  if (dur.days) {
    if (dur.specifiedWeeks && dur.days % 7 === 0) {
      return {
        unit: 'week',
        value: dur.days / 7
      };
    }
    return {
      unit: 'day',
      value: dur.days
    };
  }
  if (dur.months) {
    return {
      unit: 'month',
      value: dur.months
    };
  }
  if (dur.years) {
    return {
      unit: 'year',
      value: dur.years
    };
  }
  return {
    unit: 'millisecond',
    value: 0
  };
}
const {
  hasOwnProperty
} = Object.prototype;
// Merges an array of objects into a single object.
// The second argument allows for an array of property names who's object values will be merged together.
function mergeProps(propObjs, complexPropsMap) {
  let dest = {};
  if (complexPropsMap) {
    for (let name in complexPropsMap) {
      if (complexPropsMap[name] === isMaybeObjectsEqual) {
        // implies that it's object-mergeable
        let complexObjs = [];
        // collect the trailing object values, stopping when a non-object is discovered
        for (let i = propObjs.length - 1; i >= 0; i -= 1) {
          let val = propObjs[i][name];
          if (typeof val === 'object' && val) {
            // non-null object
            complexObjs.unshift(val);
          } else if (val !== undefined) {
            dest[name] = val; // if there were no objects, this value will be used
            break;
          }
        }
        // if the trailing values were objects, use the merged value
        if (complexObjs.length) {
          dest[name] = mergeProps(complexObjs);
        }
      }
    }
  }
  // copy values into the destination, going from last to first
  for (let i = propObjs.length - 1; i >= 0; i -= 1) {
    let props = propObjs[i];
    for (let name in props) {
      if (!(name in dest)) {
        // if already assigned by previous props or complex props, don't reassign
        dest[name] = props[name];
      }
    }
  }
  return dest;
}
function filterHash(hash, func) {
  let filtered = {};
  for (let key in hash) {
    if (func(hash[key], key)) {
      filtered[key] = hash[key];
    }
  }
  return filtered;
}
function mapHash(hash, func) {
  let newHash = {};
  for (let key in hash) {
    newHash[key] = func(hash[key], key);
  }
  return newHash;
}
function arrayToHash(a) {
  let hash = {};
  for (let item of a) {
    hash[item] = true;
  }
  return hash;
}
// TODO: reassess browser support
// https://caniuse.com/?search=object.values
function hashValuesToArray(obj) {
  let a = [];
  for (let key in obj) {
    a.push(obj[key]);
  }
  return a;
}
function isPropsEqual(obj0, obj1) {
  if (obj0 === obj1) {
    return true;
  }
  for (let key in obj0) {
    if (hasOwnProperty.call(obj0, key)) {
      if (!(key in obj1)) {
        return false;
      }
    }
  }
  for (let key in obj1) {
    if (hasOwnProperty.call(obj1, key)) {
      if (obj0[key] !== obj1[key]) {
        return false;
      }
    }
  }
  return true;
}
const HANDLER_RE = /^on[A-Z]/;
function isNonHandlerPropsEqual(obj0, obj1) {
  const keys = getUnequalProps(obj0, obj1);
  for (let key of keys) {
    if (!HANDLER_RE.test(key)) {
      return false;
    }
  }
  return true;
}
function getUnequalProps(obj0, obj1) {
  let keys = [];
  for (let key in obj0) {
    if (hasOwnProperty.call(obj0, key)) {
      if (!(key in obj1)) {
        keys.push(key);
      }
    }
  }
  for (let key in obj1) {
    if (hasOwnProperty.call(obj1, key)) {
      if (obj0[key] !== obj1[key]) {
        keys.push(key);
      }
    }
  }
  return keys;
}
function compareObjs(oldProps, newProps, equalityFuncs = {}) {
  if (oldProps === newProps) {
    return true;
  }
  for (let key in newProps) {
    if (key in oldProps && isObjValsEqual(oldProps[key], newProps[key], equalityFuncs[key])) ;else {
      return false;
    }
  }
  // check for props that were omitted in the new
  for (let key in oldProps) {
    if (!(key in newProps)) {
      return false;
    }
  }
  return true;
}
/*
assumed "true" equality for handler names like "onReceiveSomething"
*/
function isObjValsEqual(val0, val1, comparator) {
  if (val0 === val1 || comparator === true) {
    return true;
  }
  if (comparator) {
    return comparator(val0, val1);
  }
  return false;
}
function collectFromHash(hash, startIndex = 0, endIndex, step = 1) {
  let res = [];
  if (endIndex == null) {
    endIndex = Object.keys(hash).length;
  }
  for (let i = startIndex; i < endIndex; i += step) {
    let val = hash[i];
    if (val !== undefined) {
      // will disregard undefined for sparse arrays
      res.push(val);
    }
  }
  return res;
}

// TODO: new util arrayify?
function removeExact(array, exactVal) {
  let removeCnt = 0;
  let i = 0;
  while (i < array.length) {
    if (array[i] === exactVal) {
      array.splice(i, 1);
      removeCnt += 1;
    } else {
      i += 1;
    }
  }
  return removeCnt;
}
function isArraysEqual(a0, a1, equalityFunc) {
  if (a0 === a1) {
    return true;
  }
  let len = a0.length;
  let i;
  if (len !== a1.length) {
    // not array? or not same length?
    return false;
  }
  for (i = 0; i < len; i += 1) {
    if (!(equalityFunc ? equalityFunc(a0[i], a1[i]) : a0[i] === a1[i])) {
      return false;
    }
  }
  return true;
}
const DAY_IDS = ['sun', 'mon', 'tue', 'wed', 'thu', 'fri', 'sat'];
// Adding
function addWeeks(m, n) {
  let a = dateToUtcArray(m);
  a[2] += n * 7;
  return arrayToUtcDate(a);
}
function addDays(m, n) {
  let a = dateToUtcArray(m);
  a[2] += n;
  return arrayToUtcDate(a);
}
function addMs(m, n) {
  let a = dateToUtcArray(m);
  a[6] += n;
  return arrayToUtcDate(a);
}
// Diffing (all return floats)
// TODO: why not use ranges?
function diffWeeks(m0, m1) {
  return diffDays(m0, m1) / 7;
}
function diffDays(m0, m1) {
  return (m1.valueOf() - m0.valueOf()) / (1000 * 60 * 60 * 24);
}
function diffHours(m0, m1) {
  return (m1.valueOf() - m0.valueOf()) / (1000 * 60 * 60);
}
function diffMinutes(m0, m1) {
  return (m1.valueOf() - m0.valueOf()) / (1000 * 60);
}
function diffSeconds(m0, m1) {
  return (m1.valueOf() - m0.valueOf()) / 1000;
}
function diffDayAndTime(m0, m1) {
  let m0day = startOfDay(m0);
  let m1day = startOfDay(m1);
  return {
    years: 0,
    months: 0,
    days: Math.round(diffDays(m0day, m1day)),
    milliseconds: m1.valueOf() - m1day.valueOf() - (m0.valueOf() - m0day.valueOf())
  };
}
// Diffing Whole Units
function diffWholeWeeks(m0, m1) {
  let d = diffWholeDays(m0, m1);
  if (d !== null && d % 7 === 0) {
    return d / 7;
  }
  return null;
}
function diffWholeDays(m0, m1) {
  if (timeAsMs(m0) === timeAsMs(m1)) {
    return Math.round(diffDays(m0, m1));
  }
  return null;
}
// Start-Of
function startOfDay(m) {
  return arrayToUtcDate([m.getUTCFullYear(), m.getUTCMonth(), m.getUTCDate()]);
}
function startOfHour(m) {
  return arrayToUtcDate([m.getUTCFullYear(), m.getUTCMonth(), m.getUTCDate(), m.getUTCHours()]);
}
function startOfMinute(m) {
  return arrayToUtcDate([m.getUTCFullYear(), m.getUTCMonth(), m.getUTCDate(), m.getUTCHours(), m.getUTCMinutes()]);
}
function startOfSecond(m) {
  return arrayToUtcDate([m.getUTCFullYear(), m.getUTCMonth(), m.getUTCDate(), m.getUTCHours(), m.getUTCMinutes(), m.getUTCSeconds()]);
}
// Week Computation
function weekOfYear(marker, dow, doy) {
  let y = marker.getUTCFullYear();
  let w = weekOfGivenYear(marker, y, dow, doy);
  if (w < 1) {
    return weekOfGivenYear(marker, y - 1, dow, doy);
  }
  let nextW = weekOfGivenYear(marker, y + 1, dow, doy);
  if (nextW >= 1) {
    return Math.min(w, nextW);
  }
  return w;
}
function weekOfGivenYear(marker, year, dow, doy) {
  let firstWeekStart = arrayToUtcDate([year, 0, 1 + firstWeekOffset(year, dow, doy)]);
  let dayStart = startOfDay(marker);
  let days = Math.round(diffDays(firstWeekStart, dayStart));
  return Math.floor(days / 7) + 1; // zero-indexed
}
// start-of-first-week - start-of-year
function firstWeekOffset(year, dow, doy) {
  // first-week day -- which january is always in the first week (4 for iso, 1 for other)
  let fwd = 7 + dow - doy;
  // first-week day local weekday -- which local weekday is fwd
  let fwdlw = (7 + arrayToUtcDate([year, 0, fwd]).getUTCDay() - dow) % 7;
  return -fwdlw + fwd - 1;
}
// Array Conversion
function dateToLocalArray(date) {
  return [date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()];
}
function arrayToLocalDate(a) {
  return new Date(a[0], a[1] || 0, a[2] == null ? 1 : a[2],
  // day of month
  a[3] || 0, a[4] || 0, a[5] || 0);
}
function dateToUtcArray(date) {
  return [date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate(), date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds(), date.getUTCMilliseconds()];
}
function arrayToUtcDate(a) {
  // according to web standards (and Safari), a month index is required.
  // massage if only given a year.
  if (a.length === 1) {
    a = a.concat([0]);
  }
  return new Date(Date.UTC(...a));
}
// Other Utils
function isValidDate(m) {
  return !isNaN(m.valueOf());
}
function timeAsMs(m) {
  return m.getUTCHours() * 1000 * 60 * 60 + m.getUTCMinutes() * 1000 * 60 + m.getUTCSeconds() * 1000 + m.getUTCMilliseconds();
}

// timeZoneOffset is in minutes
function buildIsoString(marker, timeZoneOffset, stripZeroTime = false) {
  let s = marker.toISOString();
  s = s.replace('.000', '');
  if (stripZeroTime) {
    s = s.replace('T00:00:00Z', '');
  }
  if (s.length > 10) {
    // time part wasn't stripped, can add timezone info
    if (timeZoneOffset == null) {
      s = s.replace('Z', '');
    } else if (timeZoneOffset !== 0) {
      s = s.replace('Z', formatTimeZoneOffset(timeZoneOffset, true));
    }
    // otherwise, its UTC-0 and we want to keep the Z
  }

  return s;
}
// formats the date, but with no time part
// TODO: somehow merge with buildIsoString and stripZeroTime
// TODO: rename. omit "string"
function formatDayString(marker) {
  return marker.toISOString().replace(/T.*$/, '');
}
function formatIsoMonthStr(marker) {
  return marker.toISOString().match(/^\d{4}-\d{2}/)[0];
}
// TODO: use Date::toISOString and use everything after the T?
function formatIsoTimeString(marker) {
  return padStart(marker.getUTCHours(), 2) + ':' + padStart(marker.getUTCMinutes(), 2) + ':' + padStart(marker.getUTCSeconds(), 2);
}
function formatTimeZoneOffset(minutes, doIso = false) {
  let sign = minutes < 0 ? '-' : '+';
  let abs = Math.abs(minutes);
  let hours = Math.floor(abs / 60);
  let mins = Math.round(abs % 60);
  if (doIso) {
    return `${sign + padStart(hours, 2)}:${padStart(mins, 2)}`;
  }
  return `GMT${sign}${hours}${mins ? `:${padStart(mins, 2)}` : ''}`;
}
function memoize(workerFunc, resEquality, teardownFunc) {
  let currentArgs;
  let currentRes;
  return function (...newArgs) {
    if (!currentArgs) {
      currentRes = workerFunc.apply(this, newArgs);
    } else if (!isArraysEqual(currentArgs, newArgs)) {
      if (teardownFunc) {
        teardownFunc(currentRes);
      }
      let res = workerFunc.apply(this, newArgs);
      if (!resEquality || !resEquality(res, currentRes)) {
        currentRes = res;
      }
    }
    currentArgs = newArgs;
    return currentRes;
  };
}
function memoizeObjArg(workerFunc, resEquality, teardownFunc) {
  let currentArg;
  let currentRes;
  return newArg => {
    if (!currentArg) {
      currentRes = workerFunc.call(this, newArg);
    } else if (!isPropsEqual(currentArg, newArg)) {
      if (teardownFunc) {
        teardownFunc(currentRes);
      }
      let res = workerFunc.call(this, newArg);
      if (!resEquality || !resEquality(res, currentRes)) {
        currentRes = res;
      }
    }
    currentArg = newArg;
    return currentRes;
  };
}
function memoizeArraylike(
// used at all?
workerFunc, resEquality, teardownFunc) {
  let currentArgSets = [];
  let currentResults = [];
  return newArgSets => {
    let currentLen = currentArgSets.length;
    let newLen = newArgSets.length;
    let i = 0;
    for (; i < currentLen; i += 1) {
      if (!newArgSets[i]) {
        // one of the old sets no longer exists
        if (teardownFunc) {
          teardownFunc(currentResults[i]);
        }
      } else if (!isArraysEqual(currentArgSets[i], newArgSets[i])) {
        if (teardownFunc) {
          teardownFunc(currentResults[i]);
        }
        let res = workerFunc.apply(this, newArgSets[i]);
        if (!resEquality || !resEquality(res, currentResults[i])) {
          currentResults[i] = res;
        }
      }
    }
    for (; i < newLen; i += 1) {
      currentResults[i] = workerFunc.apply(this, newArgSets[i]);
    }
    currentArgSets = newArgSets;
    currentResults.splice(newLen); // remove excess
    return currentResults;
  };
}
function memoizeHashlike(workerFunc, resEquality, teardownFunc) {
  let currentArgHash = {};
  let currentResHash = {};
  return newArgHash => {
    let newResHash = {};
    for (let key in newArgHash) {
      if (!currentResHash[key]) {
        newResHash[key] = workerFunc.apply(this, newArgHash[key]);
      } else if (!isArraysEqual(currentArgHash[key], newArgHash[key])) {
        if (teardownFunc) {
          teardownFunc(currentResHash[key]);
        }
        let res = workerFunc.apply(this, newArgHash[key]);
        newResHash[key] = resEquality && resEquality(res, currentResHash[key]) ? currentResHash[key] : res;
      } else {
        newResHash[key] = currentResHash[key];
      }
    }
    currentArgHash = newArgHash;
    currentResHash = newResHash;
    return newResHash;
  };
}
const EXTENDED_SETTINGS_AND_SEVERITIES = {
  week: 3,
  separator: 0,
  omitZeroMinute: 0,
  meridiem: 0,
  omitCommas: 0
};
const STANDARD_DATE_PROP_SEVERITIES = {
  timeZoneName: 7,
  era: 6,
  year: 5,
  month: 4,
  day: 2,
  weekday: 2,
  hour: 1,
  minute: 1,
  second: 1
};
const MERIDIEM_RE = /\s*([ap])\.?m\.?/i; // eats up leading spaces too
const COMMA_RE = /,/g; // we need re for globalness
const MULTI_SPACE_RE = /\s+/g;
const LTR_RE = /\u200e/g; // control character
const UTC_RE = /UTC|GMT/;
class NativeFormatter {
  constructor(formatSettings) {
    let standardDateProps = {};
    let extendedSettings = {};
    let severity = 0;
    for (let name in formatSettings) {
      if (name in EXTENDED_SETTINGS_AND_SEVERITIES) {
        extendedSettings[name] = formatSettings[name];
        severity = Math.max(EXTENDED_SETTINGS_AND_SEVERITIES[name], severity);
      } else {
        standardDateProps[name] = formatSettings[name];
        if (name in STANDARD_DATE_PROP_SEVERITIES) {
          // TODO: what about hour12? no severity
          severity = Math.max(STANDARD_DATE_PROP_SEVERITIES[name], severity);
        }
      }
    }
    this.standardDateProps = standardDateProps;
    this.extendedSettings = extendedSettings;
    this.severity = severity;
    this.buildFormattingFunc = memoize(buildFormattingFunc);
  }
  format(date, context) {
    return this.buildFormattingFunc(this.standardDateProps, this.extendedSettings, context)(date);
  }
  formatRange(start, end, context, betterDefaultSeparator) {
    let {
      standardDateProps,
      extendedSettings
    } = this;
    let diffSeverity = computeMarkerDiffSeverity(start.marker, end.marker, context.calendarSystem);
    if (!diffSeverity) {
      return this.format(start, context);
    }
    let biggestUnitForPartial = diffSeverity;
    if (biggestUnitForPartial > 1 && (
    // the two dates are different in a way that's larger scale than time
    standardDateProps.year === 'numeric' || standardDateProps.year === '2-digit') && (standardDateProps.month === 'numeric' || standardDateProps.month === '2-digit') && (standardDateProps.day === 'numeric' || standardDateProps.day === '2-digit')) {
      biggestUnitForPartial = 1; // make it look like the dates are only different in terms of time
    }

    let full0 = this.format(start, context);
    let full1 = this.format(end, context);
    if (full0 === full1) {
      return full0;
    }
    let partialDateProps = computePartialFormattingOptions(standardDateProps, biggestUnitForPartial);
    let partialFormattingFunc = buildFormattingFunc(partialDateProps, extendedSettings, context);
    let partial0 = partialFormattingFunc(start);
    let partial1 = partialFormattingFunc(end);
    let insertion = findCommonInsertion(full0, partial0, full1, partial1);
    let separator = extendedSettings.separator || betterDefaultSeparator || context.defaultSeparator || '';
    if (insertion) {
      return insertion.before + partial0 + separator + partial1 + insertion.after;
    }
    return full0 + separator + full1;
  }
  getLargestUnit() {
    switch (this.severity) {
      case 7:
      case 6:
      case 5:
        return 'year';
      case 4:
        return 'month';
      case 3:
        return 'week';
      case 2:
        return 'day';
      default:
        return 'time';
      // really?
    }
  }
}

function buildFormattingFunc(standardDateProps, extendedSettings, context) {
  let standardDatePropCnt = Object.keys(standardDateProps).length;
  if (standardDatePropCnt === 1 && standardDateProps.timeZoneName === 'short') {
    return date => formatTimeZoneOffset(date.timeZoneOffset);
  }
  if (standardDatePropCnt === 0 && extendedSettings.week) {
    return date => formatWeekNumber(context.computeWeekNumber(date.marker), context.weekText, context.weekTextLong, context.locale, extendedSettings.week);
  }
  return buildNativeFormattingFunc(standardDateProps, extendedSettings, context);
}
function buildNativeFormattingFunc(standardDateProps, extendedSettings, context) {
  standardDateProps = Object.assign({}, standardDateProps); // copy
  extendedSettings = Object.assign({}, extendedSettings); // copy
  sanitizeSettings(standardDateProps, extendedSettings);
  standardDateProps.timeZone = 'UTC'; // we leverage the only guaranteed timeZone for our UTC markers
  let normalFormat = new Intl.DateTimeFormat(context.locale.codes, standardDateProps);
  let zeroFormat; // needed?
  if (extendedSettings.omitZeroMinute) {
    let zeroProps = Object.assign({}, standardDateProps);
    delete zeroProps.minute; // seconds and ms were already considered in sanitizeSettings
    zeroFormat = new Intl.DateTimeFormat(context.locale.codes, zeroProps);
  }
  return date => {
    let {
      marker
    } = date;
    let format;
    if (zeroFormat && !marker.getUTCMinutes()) {
      format = zeroFormat;
    } else {
      format = normalFormat;
    }
    let s = format.format(marker);
    return postProcess(s, date, standardDateProps, extendedSettings, context);
  };
}
function sanitizeSettings(standardDateProps, extendedSettings) {
  // deal with a browser inconsistency where formatting the timezone
  // requires that the hour/minute be present.
  if (standardDateProps.timeZoneName) {
    if (!standardDateProps.hour) {
      standardDateProps.hour = '2-digit';
    }
    if (!standardDateProps.minute) {
      standardDateProps.minute = '2-digit';
    }
  }
  // only support short timezone names
  if (standardDateProps.timeZoneName === 'long') {
    standardDateProps.timeZoneName = 'short';
  }
  // if requesting to display seconds, MUST display minutes
  if (extendedSettings.omitZeroMinute && (standardDateProps.second || standardDateProps.millisecond)) {
    delete extendedSettings.omitZeroMinute;
  }
}
function postProcess(s, date, standardDateProps, extendedSettings, context) {
  s = s.replace(LTR_RE, ''); // remove left-to-right control chars. do first. good for other regexes
  if (standardDateProps.timeZoneName === 'short') {
    s = injectTzoStr(s, context.timeZone === 'UTC' || date.timeZoneOffset == null ? 'UTC' :
    // important to normalize for IE, which does "GMT"
    formatTimeZoneOffset(date.timeZoneOffset));
  }
  if (extendedSettings.omitCommas) {
    s = s.replace(COMMA_RE, '').trim();
  }
  if (extendedSettings.omitZeroMinute) {
    s = s.replace(':00', ''); // zeroFormat doesn't always achieve this
  }
  // ^ do anything that might create adjacent spaces before this point,
  // because MERIDIEM_RE likes to eat up loading spaces
  if (extendedSettings.meridiem === false) {
    s = s.replace(MERIDIEM_RE, '').trim();
  } else if (extendedSettings.meridiem === 'narrow') {
    // a/p
    s = s.replace(MERIDIEM_RE, (m0, m1) => m1.toLocaleLowerCase());
  } else if (extendedSettings.meridiem === 'short') {
    // am/pm
    s = s.replace(MERIDIEM_RE, (m0, m1) => `${m1.toLocaleLowerCase()}m`);
  } else if (extendedSettings.meridiem === 'lowercase') {
    // other meridiem transformers already converted to lowercase
    s = s.replace(MERIDIEM_RE, m0 => m0.toLocaleLowerCase());
  }
  s = s.replace(MULTI_SPACE_RE, ' ');
  s = s.trim();
  return s;
}
function injectTzoStr(s, tzoStr) {
  let replaced = false;
  s = s.replace(UTC_RE, () => {
    replaced = true;
    return tzoStr;
  });
  // IE11 doesn't include UTC/GMT in the original string, so append to end
  if (!replaced) {
    s += ` ${tzoStr}`;
  }
  return s;
}
function formatWeekNumber(num, weekText, weekTextLong, locale, display) {
  let parts = [];
  if (display === 'long') {
    parts.push(weekTextLong);
  } else if (display === 'short' || display === 'narrow') {
    parts.push(weekText);
  }
  if (display === 'long' || display === 'short') {
    parts.push(' ');
  }
  parts.push(locale.simpleNumberFormat.format(num));
  if (locale.options.direction === 'rtl') {
    // TODO: use control characters instead?
    parts.reverse();
  }
  return parts.join('');
}
// Range Formatting Utils
// 0 = exactly the same
// 1 = different by time
// and bigger
function computeMarkerDiffSeverity(d0, d1, ca) {
  if (ca.getMarkerYear(d0) !== ca.getMarkerYear(d1)) {
    return 5;
  }
  if (ca.getMarkerMonth(d0) !== ca.getMarkerMonth(d1)) {
    return 4;
  }
  if (ca.getMarkerDay(d0) !== ca.getMarkerDay(d1)) {
    return 2;
  }
  if (timeAsMs(d0) !== timeAsMs(d1)) {
    return 1;
  }
  return 0;
}
function computePartialFormattingOptions(options, biggestUnit) {
  let partialOptions = {};
  for (let name in options) {
    if (!(name in STANDARD_DATE_PROP_SEVERITIES) ||
    // not a date part prop (like timeZone)
    STANDARD_DATE_PROP_SEVERITIES[name] <= biggestUnit) {
      partialOptions[name] = options[name];
    }
  }
  return partialOptions;
}
function findCommonInsertion(full0, partial0, full1, partial1) {
  let i0 = 0;
  while (i0 < full0.length) {
    let found0 = full0.indexOf(partial0, i0);
    if (found0 === -1) {
      break;
    }
    let before0 = full0.substr(0, found0);
    i0 = found0 + partial0.length;
    let after0 = full0.substr(i0);
    let i1 = 0;
    while (i1 < full1.length) {
      let found1 = full1.indexOf(partial1, i1);
      if (found1 === -1) {
        break;
      }
      let before1 = full1.substr(0, found1);
      i1 = found1 + partial1.length;
      let after1 = full1.substr(i1);
      if (before0 === before1 && after0 === after1) {
        return {
          before: before0,
          after: after0
        };
      }
    }
  }
  return null;
}
function expandZonedMarker(dateInfo, calendarSystem) {
  let a = calendarSystem.markerToArray(dateInfo.marker);
  return {
    marker: dateInfo.marker,
    timeZoneOffset: dateInfo.timeZoneOffset,
    array: a,
    year: a[0],
    month: a[1],
    day: a[2],
    hour: a[3],
    minute: a[4],
    second: a[5],
    millisecond: a[6]
  };
}
function createVerboseFormattingArg(start, end, context, betterDefaultSeparator) {
  let startInfo = expandZonedMarker(start, context.calendarSystem);
  let endInfo = end ? expandZonedMarker(end, context.calendarSystem) : null;
  return {
    date: startInfo,
    start: startInfo,
    end: endInfo,
    timeZone: context.timeZone,
    localeCodes: context.locale.codes,
    defaultSeparator: betterDefaultSeparator || context.defaultSeparator
  };
}

/*
TODO: fix the terminology of "formatter" vs "formatting func"
*/
/*
At the time of instantiation, this object does not know which cmd-formatting system it will use.
It receives this at the time of formatting, as a setting.
*/
class CmdFormatter {
  constructor(cmdStr) {
    this.cmdStr = cmdStr;
  }
  format(date, context, betterDefaultSeparator) {
    return context.cmdFormatter(this.cmdStr, createVerboseFormattingArg(date, null, context, betterDefaultSeparator));
  }
  formatRange(start, end, context, betterDefaultSeparator) {
    return context.cmdFormatter(this.cmdStr, createVerboseFormattingArg(start, end, context, betterDefaultSeparator));
  }
}
class FuncFormatter {
  constructor(func) {
    this.func = func;
  }
  format(date, context, betterDefaultSeparator) {
    return this.func(createVerboseFormattingArg(date, null, context, betterDefaultSeparator));
  }
  formatRange(start, end, context, betterDefaultSeparator) {
    return this.func(createVerboseFormattingArg(start, end, context, betterDefaultSeparator));
  }
}
function createFormatter(input) {
  if (typeof input === 'object' && input) {
    // non-null object
    return new NativeFormatter(input);
  }
  if (typeof input === 'string') {
    return new CmdFormatter(input);
  }
  if (typeof input === 'function') {
    return new FuncFormatter(input);
  }
  return null;
}

// base options
// ------------
const BASE_OPTION_REFINERS = {
  navLinkDayClick: identity,
  navLinkWeekClick: identity,
  duration: createDuration,
  bootstrapFontAwesome: identity,
  buttonIcons: identity,
  customButtons: identity,
  defaultAllDayEventDuration: createDuration,
  defaultTimedEventDuration: createDuration,
  nextDayThreshold: createDuration,
  scrollTime: createDuration,
  scrollTimeReset: Boolean,
  slotMinTime: createDuration,
  slotMaxTime: createDuration,
  dayPopoverFormat: createFormatter,
  slotDuration: createDuration,
  snapDuration: createDuration,
  headerToolbar: identity,
  footerToolbar: identity,
  defaultRangeSeparator: String,
  titleRangeSeparator: String,
  forceEventDuration: Boolean,
  dayHeaders: Boolean,
  dayHeaderFormat: createFormatter,
  dayHeaderClassNames: identity,
  dayHeaderContent: identity,
  dayHeaderDidMount: identity,
  dayHeaderWillUnmount: identity,
  dayCellClassNames: identity,
  dayCellContent: identity,
  dayCellDidMount: identity,
  dayCellWillUnmount: identity,
  initialView: String,
  aspectRatio: Number,
  weekends: Boolean,
  weekNumberCalculation: identity,
  weekNumbers: Boolean,
  weekNumberClassNames: identity,
  weekNumberContent: identity,
  weekNumberDidMount: identity,
  weekNumberWillUnmount: identity,
  editable: Boolean,
  viewClassNames: identity,
  viewDidMount: identity,
  viewWillUnmount: identity,
  nowIndicator: Boolean,
  nowIndicatorClassNames: identity,
  nowIndicatorContent: identity,
  nowIndicatorDidMount: identity,
  nowIndicatorWillUnmount: identity,
  showNonCurrentDates: Boolean,
  lazyFetching: Boolean,
  startParam: String,
  endParam: String,
  timeZoneParam: String,
  timeZone: String,
  locales: identity,
  locale: identity,
  themeSystem: String,
  dragRevertDuration: Number,
  dragScroll: Boolean,
  allDayMaintainDuration: Boolean,
  unselectAuto: Boolean,
  dropAccept: identity,
  eventOrder: parseFieldSpecs,
  eventOrderStrict: Boolean,
  handleWindowResize: Boolean,
  windowResizeDelay: Number,
  longPressDelay: Number,
  eventDragMinDistance: Number,
  expandRows: Boolean,
  height: identity,
  contentHeight: identity,
  direction: String,
  weekNumberFormat: createFormatter,
  eventResizableFromStart: Boolean,
  displayEventTime: Boolean,
  displayEventEnd: Boolean,
  weekText: String,
  weekTextLong: String,
  progressiveEventRendering: Boolean,
  businessHours: identity,
  initialDate: identity,
  now: identity,
  eventDataTransform: identity,
  stickyHeaderDates: identity,
  stickyFooterScrollbar: identity,
  viewHeight: identity,
  defaultAllDay: Boolean,
  eventSourceFailure: identity,
  eventSourceSuccess: identity,
  eventDisplay: String,
  eventStartEditable: Boolean,
  eventDurationEditable: Boolean,
  eventOverlap: identity,
  eventConstraint: identity,
  eventAllow: identity,
  eventBackgroundColor: String,
  eventBorderColor: String,
  eventTextColor: String,
  eventColor: String,
  eventClassNames: identity,
  eventContent: identity,
  eventDidMount: identity,
  eventWillUnmount: identity,
  selectConstraint: identity,
  selectOverlap: identity,
  selectAllow: identity,
  droppable: Boolean,
  unselectCancel: String,
  slotLabelFormat: identity,
  slotLaneClassNames: identity,
  slotLaneContent: identity,
  slotLaneDidMount: identity,
  slotLaneWillUnmount: identity,
  slotLabelClassNames: identity,
  slotLabelContent: identity,
  slotLabelDidMount: identity,
  slotLabelWillUnmount: identity,
  dayMaxEvents: identity,
  dayMaxEventRows: identity,
  dayMinWidth: Number,
  slotLabelInterval: createDuration,
  allDayText: String,
  allDayClassNames: identity,
  allDayContent: identity,
  allDayDidMount: identity,
  allDayWillUnmount: identity,
  slotMinWidth: Number,
  navLinks: Boolean,
  eventTimeFormat: createFormatter,
  rerenderDelay: Number,
  moreLinkText: identity,
  moreLinkHint: identity,
  selectMinDistance: Number,
  selectable: Boolean,
  selectLongPressDelay: Number,
  eventLongPressDelay: Number,
  selectMirror: Boolean,
  eventMaxStack: Number,
  eventMinHeight: Number,
  eventMinWidth: Number,
  eventShortHeight: Number,
  slotEventOverlap: Boolean,
  plugins: identity,
  firstDay: Number,
  dayCount: Number,
  dateAlignment: String,
  dateIncrement: createDuration,
  hiddenDays: identity,
  fixedWeekCount: Boolean,
  validRange: identity,
  visibleRange: identity,
  titleFormat: identity,
  eventInteractive: Boolean,
  // only used by list-view, but languages define the value, so we need it in base options
  noEventsText: String,
  viewHint: identity,
  navLinkHint: identity,
  closeHint: String,
  timeHint: String,
  eventHint: String,
  moreLinkClick: identity,
  moreLinkClassNames: identity,
  moreLinkContent: identity,
  moreLinkDidMount: identity,
  moreLinkWillUnmount: identity,
  monthStartFormat: createFormatter,
  // for connectors
  // (can't be part of plugin system b/c must be provided at runtime)
  handleCustomRendering: identity,
  customRenderingMetaMap: identity,
  customRenderingReplacesEl: Boolean
};
// do NOT give a type here. need `typeof BASE_OPTION_DEFAULTS` to give real results.
// raw values.
const BASE_OPTION_DEFAULTS = {
  eventDisplay: 'auto',
  defaultRangeSeparator: ' - ',
  titleRangeSeparator: ' \u2013 ',
  defaultTimedEventDuration: '01:00:00',
  defaultAllDayEventDuration: {
    day: 1
  },
  forceEventDuration: false,
  nextDayThreshold: '00:00:00',
  dayHeaders: true,
  initialView: '',
  aspectRatio: 1.35,
  headerToolbar: {
    start: 'title',
    center: '',
    end: 'today prev,next'
  },
  weekends: true,
  weekNumbers: false,
  weekNumberCalculation: 'local',
  editable: false,
  nowIndicator: false,
  scrollTime: '06:00:00',
  scrollTimeReset: true,
  slotMinTime: '00:00:00',
  slotMaxTime: '24:00:00',
  showNonCurrentDates: true,
  lazyFetching: true,
  startParam: 'start',
  endParam: 'end',
  timeZoneParam: 'timeZone',
  timeZone: 'local',
  locales: [],
  locale: '',
  themeSystem: 'standard',
  dragRevertDuration: 500,
  dragScroll: true,
  allDayMaintainDuration: false,
  unselectAuto: true,
  dropAccept: '*',
  eventOrder: 'start,-duration,allDay,title',
  dayPopoverFormat: {
    month: 'long',
    day: 'numeric',
    year: 'numeric'
  },
  handleWindowResize: true,
  windowResizeDelay: 100,
  longPressDelay: 1000,
  eventDragMinDistance: 5,
  expandRows: false,
  navLinks: false,
  selectable: false,
  eventMinHeight: 15,
  eventMinWidth: 30,
  eventShortHeight: 30,
  monthStartFormat: {
    month: 'long',
    day: 'numeric'
  }
};
// calendar listeners
// ------------------
const CALENDAR_LISTENER_REFINERS = {
  datesSet: identity,
  eventsSet: identity,
  eventAdd: identity,
  eventChange: identity,
  eventRemove: identity,
  windowResize: identity,
  eventClick: identity,
  eventMouseEnter: identity,
  eventMouseLeave: identity,
  select: identity,
  unselect: identity,
  loading: identity,
  // internal
  _unmount: identity,
  _beforeprint: identity,
  _afterprint: identity,
  _noEventDrop: identity,
  _noEventResize: identity,
  _resize: identity,
  _scrollRequest: identity
};
// calendar-specific options
// -------------------------
const CALENDAR_OPTION_REFINERS = {
  buttonText: identity,
  buttonHints: identity,
  views: identity,
  plugins: identity,
  initialEvents: identity,
  events: identity,
  eventSources: identity
};
const COMPLEX_OPTION_COMPARATORS = {
  headerToolbar: isMaybeObjectsEqual,
  footerToolbar: isMaybeObjectsEqual,
  buttonText: isMaybeObjectsEqual,
  buttonHints: isMaybeObjectsEqual,
  buttonIcons: isMaybeObjectsEqual,
  dateIncrement: isMaybeObjectsEqual,
  plugins: isMaybeArraysEqual,
  events: isMaybeArraysEqual,
  eventSources: isMaybeArraysEqual,
  ['resources']: isMaybeArraysEqual
};
function isMaybeObjectsEqual(a, b) {
  if (typeof a === 'object' && typeof b === 'object' && a && b) {
    // both non-null objects
    return isPropsEqual(a, b);
  }
  return a === b;
}
function isMaybeArraysEqual(a, b) {
  if (Array.isArray(a) && Array.isArray(b)) {
    return isArraysEqual(a, b);
  }
  return a === b;
}
// view-specific options
// ---------------------
const VIEW_OPTION_REFINERS = {
  type: String,
  component: identity,
  buttonText: String,
  buttonTextKey: String,
  dateProfileGeneratorClass: identity,
  usesMinMaxTime: Boolean,
  classNames: identity,
  content: identity,
  didMount: identity,
  willUnmount: identity
};
// util funcs
// ----------------------------------------------------------------------------------------------------
function mergeRawOptions(optionSets) {
  return mergeProps(optionSets, COMPLEX_OPTION_COMPARATORS);
}
function refineProps(input, refiners) {
  let refined = {};
  let extra = {};
  for (let propName in refiners) {
    if (propName in input) {
      refined[propName] = refiners[propName](input[propName]);
    }
  }
  for (let propName in input) {
    if (!(propName in refiners)) {
      extra[propName] = input[propName];
    }
  }
  return {
    refined,
    extra
  };
}
function identity(raw) {
  return raw;
}
function createEventInstance(defId, range, forcedStartTzo, forcedEndTzo) {
  return {
    instanceId: guid(),
    defId,
    range,
    forcedStartTzo: forcedStartTzo == null ? null : forcedStartTzo,
    forcedEndTzo: forcedEndTzo == null ? null : forcedEndTzo
  };
}
function parseRecurring(refined, defaultAllDay, dateEnv, recurringTypes) {
  for (let i = 0; i < recurringTypes.length; i += 1) {
    let parsed = recurringTypes[i].parse(refined, dateEnv);
    if (parsed) {
      let {
        allDay
      } = refined;
      if (allDay == null) {
        allDay = defaultAllDay;
        if (allDay == null) {
          allDay = parsed.allDayGuess;
          if (allDay == null) {
            allDay = false;
          }
        }
      }
      return {
        allDay,
        duration: parsed.duration,
        typeData: parsed.typeData,
        typeId: i
      };
    }
  }
  return null;
}
function expandRecurring(eventStore, framingRange, context) {
  let {
    dateEnv,
    pluginHooks,
    options
  } = context;
  let {
    defs,
    instances
  } = eventStore;
  // remove existing recurring instances
  // TODO: bad. always expand events as a second step
  instances = filterHash(instances, instance => !defs[instance.defId].recurringDef);
  for (let defId in defs) {
    let def = defs[defId];
    if (def.recurringDef) {
      let {
        duration
      } = def.recurringDef;
      if (!duration) {
        duration = def.allDay ? options.defaultAllDayEventDuration : options.defaultTimedEventDuration;
      }
      let starts = expandRecurringRanges(def, duration, framingRange, dateEnv, pluginHooks.recurringTypes);
      for (let start of starts) {
        let instance = createEventInstance(defId, {
          start,
          end: dateEnv.add(start, duration)
        });
        instances[instance.instanceId] = instance;
      }
    }
  }
  return {
    defs,
    instances
  };
}
/*
Event MUST have a recurringDef
*/
function expandRecurringRanges(eventDef, duration, framingRange, dateEnv, recurringTypes) {
  let typeDef = recurringTypes[eventDef.recurringDef.typeId];
  let markers = typeDef.expand(eventDef.recurringDef.typeData, {
    start: dateEnv.subtract(framingRange.start, duration),
    end: framingRange.end
  }, dateEnv);
  // the recurrence plugins don't guarantee that all-day events are start-of-day, so we have to
  if (eventDef.allDay) {
    markers = markers.map(startOfDay);
  }
  return markers;
}
function parseEvents(rawEvents, eventSource, context, allowOpenRange, defIdMap, instanceIdMap) {
  let eventStore = createEmptyEventStore();
  let eventRefiners = buildEventRefiners(context);
  for (let rawEvent of rawEvents) {
    let tuple = parseEvent(rawEvent, eventSource, context, allowOpenRange, eventRefiners, defIdMap, instanceIdMap);
    if (tuple) {
      eventTupleToStore(tuple, eventStore);
    }
  }
  return eventStore;
}
function eventTupleToStore(tuple, eventStore = createEmptyEventStore()) {
  eventStore.defs[tuple.def.defId] = tuple.def;
  if (tuple.instance) {
    eventStore.instances[tuple.instance.instanceId] = tuple.instance;
  }
  return eventStore;
}
// retrieves events that have the same groupId as the instance specified by `instanceId`
// or they are the same as the instance.
// why might instanceId not be in the store? an event from another calendar?
function getRelevantEvents(eventStore, instanceId) {
  let instance = eventStore.instances[instanceId];
  if (instance) {
    let def = eventStore.defs[instance.defId];
    // get events/instances with same group
    let newStore = filterEventStoreDefs(eventStore, lookDef => isEventDefsGrouped(def, lookDef));
    // add the original
    // TODO: wish we could use eventTupleToStore or something like it
    newStore.defs[def.defId] = def;
    newStore.instances[instance.instanceId] = instance;
    return newStore;
  }
  return createEmptyEventStore();
}
function isEventDefsGrouped(def0, def1) {
  return Boolean(def0.groupId && def0.groupId === def1.groupId);
}
function createEmptyEventStore() {
  return {
    defs: {},
    instances: {}
  };
}
function mergeEventStores(store0, store1) {
  return {
    defs: Object.assign(Object.assign({}, store0.defs), store1.defs),
    instances: Object.assign(Object.assign({}, store0.instances), store1.instances)
  };
}
function filterEventStoreDefs(eventStore, filterFunc) {
  let defs = filterHash(eventStore.defs, filterFunc);
  let instances = filterHash(eventStore.instances, instance => defs[instance.defId] // still exists?
  );

  return {
    defs,
    instances
  };
}
function excludeSubEventStore(master, sub) {
  let {
    defs,
    instances
  } = master;
  let filteredDefs = {};
  let filteredInstances = {};
  for (let defId in defs) {
    if (!sub.defs[defId]) {
      // not explicitly excluded
      filteredDefs[defId] = defs[defId];
    }
  }
  for (let instanceId in instances) {
    if (!sub.instances[instanceId] &&
    // not explicitly excluded
    filteredDefs[instances[instanceId].defId] // def wasn't filtered away
    ) {
      filteredInstances[instanceId] = instances[instanceId];
    }
  }
  return {
    defs: filteredDefs,
    instances: filteredInstances
  };
}
function normalizeConstraint(input, context) {
  if (Array.isArray(input)) {
    return parseEvents(input, null, context, true); // allowOpenRange=true
  }

  if (typeof input === 'object' && input) {
    // non-null object
    return parseEvents([input], null, context, true); // allowOpenRange=true
  }

  if (input != null) {
    return String(input);
  }
  return null;
}
function parseClassNames(raw) {
  if (Array.isArray(raw)) {
    return raw;
  }
  if (typeof raw === 'string') {
    return raw.split(/\s+/);
  }
  return [];
}

// TODO: better called "EventSettings" or "EventConfig"
// TODO: move this file into structs
// TODO: separate constraint/overlap/allow, because selection uses only that, not other props
const EVENT_UI_REFINERS = {
  display: String,
  editable: Boolean,
  startEditable: Boolean,
  durationEditable: Boolean,
  constraint: identity,
  overlap: identity,
  allow: identity,
  className: parseClassNames,
  classNames: parseClassNames,
  color: String,
  backgroundColor: String,
  borderColor: String,
  textColor: String
};
const EMPTY_EVENT_UI = {
  display: null,
  startEditable: null,
  durationEditable: null,
  constraints: [],
  overlap: null,
  allows: [],
  backgroundColor: '',
  borderColor: '',
  textColor: '',
  classNames: []
};
function createEventUi(refined, context) {
  let constraint = normalizeConstraint(refined.constraint, context);
  return {
    display: refined.display || null,
    startEditable: refined.startEditable != null ? refined.startEditable : refined.editable,
    durationEditable: refined.durationEditable != null ? refined.durationEditable : refined.editable,
    constraints: constraint != null ? [constraint] : [],
    overlap: refined.overlap != null ? refined.overlap : null,
    allows: refined.allow != null ? [refined.allow] : [],
    backgroundColor: refined.backgroundColor || refined.color || '',
    borderColor: refined.borderColor || refined.color || '',
    textColor: refined.textColor || '',
    classNames: (refined.className || []).concat(refined.classNames || []) // join singular and plural
  };
}
// TODO: prevent against problems with <2 args!
function combineEventUis(uis) {
  return uis.reduce(combineTwoEventUis, EMPTY_EVENT_UI);
}
function combineTwoEventUis(item0, item1) {
  return {
    display: item1.display != null ? item1.display : item0.display,
    startEditable: item1.startEditable != null ? item1.startEditable : item0.startEditable,
    durationEditable: item1.durationEditable != null ? item1.durationEditable : item0.durationEditable,
    constraints: item0.constraints.concat(item1.constraints),
    overlap: typeof item1.overlap === 'boolean' ? item1.overlap : item0.overlap,
    allows: item0.allows.concat(item1.allows),
    backgroundColor: item1.backgroundColor || item0.backgroundColor,
    borderColor: item1.borderColor || item0.borderColor,
    textColor: item1.textColor || item0.textColor,
    classNames: item0.classNames.concat(item1.classNames)
  };
}
const EVENT_NON_DATE_REFINERS = {
  id: String,
  groupId: String,
  title: String,
  url: String,
  interactive: Boolean
};
const EVENT_DATE_REFINERS = {
  start: identity,
  end: identity,
  date: identity,
  allDay: Boolean
};
const EVENT_REFINERS = Object.assign(Object.assign(Object.assign({}, EVENT_NON_DATE_REFINERS), EVENT_DATE_REFINERS), {
  extendedProps: identity
});
function parseEvent(raw, eventSource, context, allowOpenRange, refiners = buildEventRefiners(context), defIdMap, instanceIdMap) {
  let {
    refined,
    extra
  } = refineEventDef(raw, context, refiners);
  let defaultAllDay = computeIsDefaultAllDay(eventSource, context);
  let recurringRes = parseRecurring(refined, defaultAllDay, context.dateEnv, context.pluginHooks.recurringTypes);
  if (recurringRes) {
    let def = parseEventDef(refined, extra, eventSource ? eventSource.sourceId : '', recurringRes.allDay, Boolean(recurringRes.duration), context, defIdMap);
    def.recurringDef = {
      typeId: recurringRes.typeId,
      typeData: recurringRes.typeData,
      duration: recurringRes.duration
    };
    return {
      def,
      instance: null
    };
  }
  let singleRes = parseSingle(refined, defaultAllDay, context, allowOpenRange);
  if (singleRes) {
    let def = parseEventDef(refined, extra, eventSource ? eventSource.sourceId : '', singleRes.allDay, singleRes.hasEnd, context, defIdMap);
    let instance = createEventInstance(def.defId, singleRes.range, singleRes.forcedStartTzo, singleRes.forcedEndTzo);
    if (instanceIdMap && def.publicId && instanceIdMap[def.publicId]) {
      instance.instanceId = instanceIdMap[def.publicId];
    }
    return {
      def,
      instance
    };
  }
  return null;
}
function refineEventDef(raw, context, refiners = buildEventRefiners(context)) {
  return refineProps(raw, refiners);
}
function buildEventRefiners(context) {
  return Object.assign(Object.assign(Object.assign({}, EVENT_UI_REFINERS), EVENT_REFINERS), context.pluginHooks.eventRefiners);
}
/*
Will NOT populate extendedProps with the leftover properties.
Will NOT populate date-related props.
*/
function parseEventDef(refined, extra, sourceId, allDay, hasEnd, context, defIdMap) {
  let def = {
    title: refined.title || '',
    groupId: refined.groupId || '',
    publicId: refined.id || '',
    url: refined.url || '',
    recurringDef: null,
    defId: (defIdMap && refined.id ? defIdMap[refined.id] : '') || guid(),
    sourceId,
    allDay,
    hasEnd,
    interactive: refined.interactive,
    ui: createEventUi(refined, context),
    extendedProps: Object.assign(Object.assign({}, refined.extendedProps || {}), extra)
  };
  for (let memberAdder of context.pluginHooks.eventDefMemberAdders) {
    Object.assign(def, memberAdder(refined));
  }
  // help out EventImpl from having user modify props
  Object.freeze(def.ui.classNames);
  Object.freeze(def.extendedProps);
  return def;
}
function parseSingle(refined, defaultAllDay, context, allowOpenRange) {
  let {
    allDay
  } = refined;
  let startMeta;
  let startMarker = null;
  let hasEnd = false;
  let endMeta;
  let endMarker = null;
  let startInput = refined.start != null ? refined.start : refined.date;
  startMeta = context.dateEnv.createMarkerMeta(startInput);
  if (startMeta) {
    startMarker = startMeta.marker;
  } else if (!allowOpenRange) {
    return null;
  }
  if (refined.end != null) {
    endMeta = context.dateEnv.createMarkerMeta(refined.end);
  }
  if (allDay == null) {
    if (defaultAllDay != null) {
      allDay = defaultAllDay;
    } else {
      // fall back to the date props LAST
      allDay = (!startMeta || startMeta.isTimeUnspecified) && (!endMeta || endMeta.isTimeUnspecified);
    }
  }
  if (allDay && startMarker) {
    startMarker = startOfDay(startMarker);
  }
  if (endMeta) {
    endMarker = endMeta.marker;
    if (allDay) {
      endMarker = startOfDay(endMarker);
    }
    if (startMarker && endMarker <= startMarker) {
      endMarker = null;
    }
  }
  if (endMarker) {
    hasEnd = true;
  } else if (!allowOpenRange) {
    hasEnd = context.options.forceEventDuration || false;
    endMarker = context.dateEnv.add(startMarker, allDay ? context.options.defaultAllDayEventDuration : context.options.defaultTimedEventDuration);
  }
  return {
    allDay,
    hasEnd,
    range: {
      start: startMarker,
      end: endMarker
    },
    forcedStartTzo: startMeta ? startMeta.forcedTzo : null,
    forcedEndTzo: endMeta ? endMeta.forcedTzo : null
  };
}
function computeIsDefaultAllDay(eventSource, context) {
  let res = null;
  if (eventSource) {
    res = eventSource.defaultAllDay;
  }
  if (res == null) {
    res = context.options.defaultAllDay;
  }
  return res;
}
const DEF_DEFAULTS = {
  startTime: '09:00',
  endTime: '17:00',
  daysOfWeek: [1, 2, 3, 4, 5],
  display: 'inverse-background',
  classNames: 'fc-non-business',
  groupId: '_businessHours' // so multiple defs get grouped
};
/*
TODO: pass around as EventDefHash!!!
*/
function parseBusinessHours(input, context) {
  return parseEvents(refineInputs(input), null, context);
}
function refineInputs(input) {
  let rawDefs;
  if (input === true) {
    rawDefs = [{}]; // will get DEF_DEFAULTS verbatim
  } else if (Array.isArray(input)) {
    // if specifying an array, every sub-definition NEEDS a day-of-week
    rawDefs = input.filter(rawDef => rawDef.daysOfWeek);
  } else if (typeof input === 'object' && input) {
    // non-null object
    rawDefs = [input];
  } else {
    // is probably false
    rawDefs = [];
  }
  rawDefs = rawDefs.map(rawDef => Object.assign(Object.assign({}, DEF_DEFAULTS), rawDef));
  return rawDefs;
}

/* Date stuff that doesn't belong in datelib core
----------------------------------------------------------------------------------------------------------------------*/
// given a timed range, computes an all-day range that has the same exact duration,
// but whose start time is aligned with the start of the day.
function computeAlignedDayRange(timedRange) {
  let dayCnt = Math.floor(diffDays(timedRange.start, timedRange.end)) || 1;
  let start = startOfDay(timedRange.start);
  let end = addDays(start, dayCnt);
  return {
    start,
    end
  };
}
// given a timed range, computes an all-day range based on how for the end date bleeds into the next day
// TODO: give nextDayThreshold a default arg
function computeVisibleDayRange(timedRange, nextDayThreshold = createDuration(0)) {
  let startDay = null;
  let endDay = null;
  if (timedRange.end) {
    endDay = startOfDay(timedRange.end);
    let endTimeMS = timedRange.end.valueOf() - endDay.valueOf(); // # of milliseconds into `endDay`
    // If the end time is actually inclusively part of the next day and is equal to or
    // beyond the next day threshold, adjust the end to be the exclusive end of `endDay`.
    // Otherwise, leaving it as inclusive will cause it to exclude `endDay`.
    if (endTimeMS && endTimeMS >= asRoughMs(nextDayThreshold)) {
      endDay = addDays(endDay, 1);
    }
  }
  if (timedRange.start) {
    startDay = startOfDay(timedRange.start); // the beginning of the day the range starts
    // If end is within `startDay` but not past nextDayThreshold, assign the default duration of one day.
    if (endDay && endDay <= startDay) {
      endDay = addDays(startDay, 1);
    }
  }
  return {
    start: startDay,
    end: endDay
  };
}
// spans from one day into another?
function isMultiDayRange(range) {
  let visibleRange = computeVisibleDayRange(range);
  return diffDays(visibleRange.start, visibleRange.end) > 1;
}
function diffDates(date0, date1, dateEnv, largeUnit) {
  if (largeUnit === 'year') {
    return createDuration(dateEnv.diffWholeYears(date0, date1), 'year');
  }
  if (largeUnit === 'month') {
    return createDuration(dateEnv.diffWholeMonths(date0, date1), 'month');
  }
  return diffDayAndTime(date0, date1); // returns a duration
}

function pointInsideRect(point, rect) {
  return point.left >= rect.left && point.left < rect.right && point.top >= rect.top && point.top < rect.bottom;
}
// Returns a new rectangle that is the intersection of the two rectangles. If they don't intersect, returns false
function intersectRects(rect1, rect2) {
  let res = {
    left: Math.max(rect1.left, rect2.left),
    right: Math.min(rect1.right, rect2.right),
    top: Math.max(rect1.top, rect2.top),
    bottom: Math.min(rect1.bottom, rect2.bottom)
  };
  if (res.left < res.right && res.top < res.bottom) {
    return res;
  }
  return false;
}
function translateRect(rect, deltaX, deltaY) {
  return {
    left: rect.left + deltaX,
    right: rect.right + deltaX,
    top: rect.top + deltaY,
    bottom: rect.bottom + deltaY
  };
}
// Returns a new point that will have been moved to reside within the given rectangle
function constrainPoint(point, rect) {
  return {
    left: Math.min(Math.max(point.left, rect.left), rect.right),
    top: Math.min(Math.max(point.top, rect.top), rect.bottom)
  };
}
// Returns a point that is the center of the given rectangle
function getRectCenter(rect) {
  return {
    left: (rect.left + rect.right) / 2,
    top: (rect.top + rect.bottom) / 2
  };
}
// Subtracts point2's coordinates from point1's coordinates, returning a delta
function diffPoints(point1, point2) {
  return {
    left: point1.left - point2.left,
    top: point1.top - point2.top
  };
}
let canVGrowWithinCell;
function getCanVGrowWithinCell() {
  if (canVGrowWithinCell == null) {
    canVGrowWithinCell = computeCanVGrowWithinCell();
  }
  return canVGrowWithinCell;
}
function computeCanVGrowWithinCell() {
  // for SSR, because this function is call immediately at top-level
  // TODO: just make this logic execute top-level, immediately, instead of doing lazily
  if (typeof document === 'undefined') {
    return true;
  }
  let el = document.createElement('div');
  el.style.position = 'absolute';
  el.style.top = '0px';
  el.style.left = '0px';
  el.innerHTML = '<table><tr><td><div></div></td></tr></table>';
  el.querySelector('table').style.height = '100px';
  el.querySelector('div').style.height = '100%';
  document.body.appendChild(el);
  let div = el.querySelector('div');
  let possible = div.offsetHeight > 0;
  document.body.removeChild(el);
  return possible;
}
const EMPTY_EVENT_STORE = createEmptyEventStore(); // for purecomponents. TODO: keep elsewhere
class Splitter {
  constructor() {
    this.getKeysForEventDefs = memoize(this._getKeysForEventDefs);
    this.splitDateSelection = memoize(this._splitDateSpan);
    this.splitEventStore = memoize(this._splitEventStore);
    this.splitIndividualUi = memoize(this._splitIndividualUi);
    this.splitEventDrag = memoize(this._splitInteraction);
    this.splitEventResize = memoize(this._splitInteraction);
    this.eventUiBuilders = {}; // TODO: typescript protection
  }

  splitProps(props) {
    let keyInfos = this.getKeyInfo(props);
    let defKeys = this.getKeysForEventDefs(props.eventStore);
    let dateSelections = this.splitDateSelection(props.dateSelection);
    let individualUi = this.splitIndividualUi(props.eventUiBases, defKeys); // the individual *bases*
    let eventStores = this.splitEventStore(props.eventStore, defKeys);
    let eventDrags = this.splitEventDrag(props.eventDrag);
    let eventResizes = this.splitEventResize(props.eventResize);
    let splitProps = {};
    this.eventUiBuilders = mapHash(keyInfos, (info, key) => this.eventUiBuilders[key] || memoize(buildEventUiForKey));
    for (let key in keyInfos) {
      let keyInfo = keyInfos[key];
      let eventStore = eventStores[key] || EMPTY_EVENT_STORE;
      let buildEventUi = this.eventUiBuilders[key];
      splitProps[key] = {
        businessHours: keyInfo.businessHours || props.businessHours,
        dateSelection: dateSelections[key] || null,
        eventStore,
        eventUiBases: buildEventUi(props.eventUiBases[''], keyInfo.ui, individualUi[key]),
        eventSelection: eventStore.instances[props.eventSelection] ? props.eventSelection : '',
        eventDrag: eventDrags[key] || null,
        eventResize: eventResizes[key] || null
      };
    }
    return splitProps;
  }
  _splitDateSpan(dateSpan) {
    let dateSpans = {};
    if (dateSpan) {
      let keys = this.getKeysForDateSpan(dateSpan);
      for (let key of keys) {
        dateSpans[key] = dateSpan;
      }
    }
    return dateSpans;
  }
  _getKeysForEventDefs(eventStore) {
    return mapHash(eventStore.defs, eventDef => this.getKeysForEventDef(eventDef));
  }
  _splitEventStore(eventStore, defKeys) {
    let {
      defs,
      instances
    } = eventStore;
    let splitStores = {};
    for (let defId in defs) {
      for (let key of defKeys[defId]) {
        if (!splitStores[key]) {
          splitStores[key] = createEmptyEventStore();
        }
        splitStores[key].defs[defId] = defs[defId];
      }
    }
    for (let instanceId in instances) {
      let instance = instances[instanceId];
      for (let key of defKeys[instance.defId]) {
        if (splitStores[key]) {
          // must have already been created
          splitStores[key].instances[instanceId] = instance;
        }
      }
    }
    return splitStores;
  }
  _splitIndividualUi(eventUiBases, defKeys) {
    let splitHashes = {};
    for (let defId in eventUiBases) {
      if (defId) {
        // not the '' key
        for (let key of defKeys[defId]) {
          if (!splitHashes[key]) {
            splitHashes[key] = {};
          }
          splitHashes[key][defId] = eventUiBases[defId];
        }
      }
    }
    return splitHashes;
  }
  _splitInteraction(interaction) {
    let splitStates = {};
    if (interaction) {
      let affectedStores = this._splitEventStore(interaction.affectedEvents, this._getKeysForEventDefs(interaction.affectedEvents));
      // can't rely on defKeys because event data is mutated
      let mutatedKeysByDefId = this._getKeysForEventDefs(interaction.mutatedEvents);
      let mutatedStores = this._splitEventStore(interaction.mutatedEvents, mutatedKeysByDefId);
      let populate = key => {
        if (!splitStates[key]) {
          splitStates[key] = {
            affectedEvents: affectedStores[key] || EMPTY_EVENT_STORE,
            mutatedEvents: mutatedStores[key] || EMPTY_EVENT_STORE,
            isEvent: interaction.isEvent
          };
        }
      };
      for (let key in affectedStores) {
        populate(key);
      }
      for (let key in mutatedStores) {
        populate(key);
      }
    }
    return splitStates;
  }
}
function buildEventUiForKey(allUi, eventUiForKey, individualUi) {
  let baseParts = [];
  if (allUi) {
    baseParts.push(allUi);
  }
  if (eventUiForKey) {
    baseParts.push(eventUiForKey);
  }
  let stuff = {
    '': combineEventUis(baseParts)
  };
  if (individualUi) {
    Object.assign(stuff, individualUi);
  }
  return stuff;
}
function parseRange(input, dateEnv) {
  let start = null;
  let end = null;
  if (input.start) {
    start = dateEnv.createMarker(input.start);
  }
  if (input.end) {
    end = dateEnv.createMarker(input.end);
  }
  if (!start && !end) {
    return null;
  }
  if (start && end && end < start) {
    return null;
  }
  return {
    start,
    end
  };
}
// SIDE-EFFECT: will mutate ranges.
// Will return a new array result.
function invertRanges(ranges, constraintRange) {
  let invertedRanges = [];
  let {
    start
  } = constraintRange; // the end of the previous range. the start of the new range
  let i;
  let dateRange;
  // ranges need to be in order. required for our date-walking algorithm
  ranges.sort(compareRanges);
  for (i = 0; i < ranges.length; i += 1) {
    dateRange = ranges[i];
    // add the span of time before the event (if there is any)
    if (dateRange.start > start) {
      // compare millisecond time (skip any ambig logic)
      invertedRanges.push({
        start,
        end: dateRange.start
      });
    }
    if (dateRange.end > start) {
      start = dateRange.end;
    }
  }
  // add the span of time after the last event (if there is any)
  if (start < constraintRange.end) {
    // compare millisecond time (skip any ambig logic)
    invertedRanges.push({
      start,
      end: constraintRange.end
    });
  }
  return invertedRanges;
}
function compareRanges(range0, range1) {
  return range0.start.valueOf() - range1.start.valueOf(); // earlier ranges go first
}

function intersectRanges(range0, range1) {
  let {
    start,
    end
  } = range0;
  let newRange = null;
  if (range1.start !== null) {
    if (start === null) {
      start = range1.start;
    } else {
      start = new Date(Math.max(start.valueOf(), range1.start.valueOf()));
    }
  }
  if (range1.end != null) {
    if (end === null) {
      end = range1.end;
    } else {
      end = new Date(Math.min(end.valueOf(), range1.end.valueOf()));
    }
  }
  if (start === null || end === null || start < end) {
    newRange = {
      start,
      end
    };
  }
  return newRange;
}
function rangesEqual(range0, range1) {
  return (range0.start === null ? null : range0.start.valueOf()) === (range1.start === null ? null : range1.start.valueOf()) && (range0.end === null ? null : range0.end.valueOf()) === (range1.end === null ? null : range1.end.valueOf());
}
function rangesIntersect(range0, range1) {
  return (range0.end === null || range1.start === null || range0.end > range1.start) && (range0.start === null || range1.end === null || range0.start < range1.end);
}
function rangeContainsRange(outerRange, innerRange) {
  return (outerRange.start === null || innerRange.start !== null && innerRange.start >= outerRange.start) && (outerRange.end === null || innerRange.end !== null && innerRange.end <= outerRange.end);
}
function rangeContainsMarker(range, date) {
  return (range.start === null || date >= range.start) && (range.end === null || date < range.end);
}
// If the given date is not within the given range, move it inside.
// (If it's past the end, make it one millisecond before the end).
function constrainMarkerToRange(date, range) {
  if (range.start != null && date < range.start) {
    return range.start;
  }
  if (range.end != null && date >= range.end) {
    return new Date(range.end.valueOf() - 1);
  }
  return date;
}
function getDateMeta(date, todayRange, nowDate, dateProfile) {
  return {
    dow: date.getUTCDay(),
    isDisabled: Boolean(dateProfile && !rangeContainsMarker(dateProfile.activeRange, date)),
    isOther: Boolean(dateProfile && !rangeContainsMarker(dateProfile.currentRange, date)),
    isToday: Boolean(todayRange && rangeContainsMarker(todayRange, date)),
    isPast: Boolean(nowDate ? date < nowDate : todayRange ? date < todayRange.start : false),
    isFuture: Boolean(nowDate ? date > nowDate : todayRange ? date >= todayRange.end : false)
  };
}
function getDayClassNames(meta, theme) {
  let classNames = ['fc-day', `fc-day-${DAY_IDS[meta.dow]}`];
  if (meta.isDisabled) {
    classNames.push('fc-day-disabled');
  } else {
    if (meta.isToday) {
      classNames.push('fc-day-today');
      classNames.push(theme.getClass('today'));
    }
    if (meta.isPast) {
      classNames.push('fc-day-past');
    }
    if (meta.isFuture) {
      classNames.push('fc-day-future');
    }
    if (meta.isOther) {
      classNames.push('fc-day-other');
    }
  }
  return classNames;
}
function getSlotClassNames(meta, theme) {
  let classNames = ['fc-slot', `fc-slot-${DAY_IDS[meta.dow]}`];
  if (meta.isDisabled) {
    classNames.push('fc-slot-disabled');
  } else {
    if (meta.isToday) {
      classNames.push('fc-slot-today');
      classNames.push(theme.getClass('today'));
    }
    if (meta.isPast) {
      classNames.push('fc-slot-past');
    }
    if (meta.isFuture) {
      classNames.push('fc-slot-future');
    }
  }
  return classNames;
}
const DAY_FORMAT = createFormatter({
  year: 'numeric',
  month: 'long',
  day: 'numeric'
});
const WEEK_FORMAT = createFormatter({
  week: 'long'
});
function buildNavLinkAttrs(context, dateMarker, viewType = 'day', isTabbable = true) {
  const {
    dateEnv,
    options,
    calendarApi
  } = context;
  let dateStr = dateEnv.format(dateMarker, viewType === 'week' ? WEEK_FORMAT : DAY_FORMAT);
  if (options.navLinks) {
    let zonedDate = dateEnv.toDate(dateMarker);
    const handleInteraction = ev => {
      let customAction = viewType === 'day' ? options.navLinkDayClick : viewType === 'week' ? options.navLinkWeekClick : null;
      if (typeof customAction === 'function') {
        customAction.call(calendarApi, dateEnv.toDate(dateMarker), ev);
      } else {
        if (typeof customAction === 'string') {
          viewType = customAction;
        }
        calendarApi.zoomTo(dateMarker, viewType);
      }
    };
    return Object.assign({
      title: formatWithOrdinals(options.navLinkHint, [dateStr, zonedDate], dateStr),
      'data-navlink': ''
    }, isTabbable ? createAriaClickAttrs(handleInteraction) : {
      onClick: handleInteraction
    });
  }
  return {
    'aria-label': dateStr
  };
}
let _isRtlScrollbarOnLeft = null;
function getIsRtlScrollbarOnLeft() {
  if (_isRtlScrollbarOnLeft === null) {
    _isRtlScrollbarOnLeft = computeIsRtlScrollbarOnLeft();
  }
  return _isRtlScrollbarOnLeft;
}
function computeIsRtlScrollbarOnLeft() {
  let outerEl = document.createElement('div');
  applyStyle(outerEl, {
    position: 'absolute',
    top: -1000,
    left: 0,
    border: 0,
    padding: 0,
    overflow: 'scroll',
    direction: 'rtl'
  });
  outerEl.innerHTML = '<div></div>';
  document.body.appendChild(outerEl);
  let innerEl = outerEl.firstChild;
  let res = innerEl.getBoundingClientRect().left > outerEl.getBoundingClientRect().left;
  removeElement(outerEl);
  return res;
}
let _scrollbarWidths;
function getScrollbarWidths() {
  if (!_scrollbarWidths) {
    _scrollbarWidths = computeScrollbarWidths();
  }
  return _scrollbarWidths;
}
function computeScrollbarWidths() {
  let el = document.createElement('div');
  el.style.overflow = 'scroll';
  el.style.position = 'absolute';
  el.style.top = '-9999px';
  el.style.left = '-9999px';
  document.body.appendChild(el);
  let res = computeScrollbarWidthsForEl(el);
  document.body.removeChild(el);
  return res;
}
// WARNING: will include border
function computeScrollbarWidthsForEl(el) {
  return {
    x: el.offsetHeight - el.clientHeight,
    y: el.offsetWidth - el.clientWidth
  };
}
function computeEdges(el, getPadding = false) {
  let computedStyle = window.getComputedStyle(el);
  let borderLeft = parseInt(computedStyle.borderLeftWidth, 10) || 0;
  let borderRight = parseInt(computedStyle.borderRightWidth, 10) || 0;
  let borderTop = parseInt(computedStyle.borderTopWidth, 10) || 0;
  let borderBottom = parseInt(computedStyle.borderBottomWidth, 10) || 0;
  let badScrollbarWidths = computeScrollbarWidthsForEl(el); // includes border!
  let scrollbarLeftRight = badScrollbarWidths.y - borderLeft - borderRight;
  let scrollbarBottom = badScrollbarWidths.x - borderTop - borderBottom;
  let res = {
    borderLeft,
    borderRight,
    borderTop,
    borderBottom,
    scrollbarBottom,
    scrollbarLeft: 0,
    scrollbarRight: 0
  };
  if (getIsRtlScrollbarOnLeft() && computedStyle.direction === 'rtl') {
    // is the scrollbar on the left side?
    res.scrollbarLeft = scrollbarLeftRight;
  } else {
    res.scrollbarRight = scrollbarLeftRight;
  }
  if (getPadding) {
    res.paddingLeft = parseInt(computedStyle.paddingLeft, 10) || 0;
    res.paddingRight = parseInt(computedStyle.paddingRight, 10) || 0;
    res.paddingTop = parseInt(computedStyle.paddingTop, 10) || 0;
    res.paddingBottom = parseInt(computedStyle.paddingBottom, 10) || 0;
  }
  return res;
}
function computeInnerRect(el, goWithinPadding = false, doFromWindowViewport) {
  let outerRect = doFromWindowViewport ? el.getBoundingClientRect() : computeRect(el);
  let edges = computeEdges(el, goWithinPadding);
  let res = {
    left: outerRect.left + edges.borderLeft + edges.scrollbarLeft,
    right: outerRect.right - edges.borderRight - edges.scrollbarRight,
    top: outerRect.top + edges.borderTop,
    bottom: outerRect.bottom - edges.borderBottom - edges.scrollbarBottom
  };
  if (goWithinPadding) {
    res.left += edges.paddingLeft;
    res.right -= edges.paddingRight;
    res.top += edges.paddingTop;
    res.bottom -= edges.paddingBottom;
  }
  return res;
}
function computeRect(el) {
  let rect = el.getBoundingClientRect();
  return {
    left: rect.left + window.pageXOffset,
    top: rect.top + window.pageYOffset,
    right: rect.right + window.pageXOffset,
    bottom: rect.bottom + window.pageYOffset
  };
}
function computeClippedClientRect(el) {
  let clippingParents = getClippingParents(el);
  let rect = el.getBoundingClientRect();
  for (let clippingParent of clippingParents) {
    let intersection = intersectRects(rect, clippingParent.getBoundingClientRect());
    if (intersection) {
      rect = intersection;
    } else {
      return null;
    }
  }
  return rect;
}
// does not return window
function getClippingParents(el) {
  let parents = [];
  while (el instanceof HTMLElement) {
    // will stop when gets to document or null
    let computedStyle = window.getComputedStyle(el);
    if (computedStyle.position === 'fixed') {
      break;
    }
    if (/(auto|scroll)/.test(computedStyle.overflow + computedStyle.overflowY + computedStyle.overflowX)) {
      parents.push(el);
    }
    el = el.parentNode;
  }
  return parents;
}

/*
given a function that resolves a result asynchronously.
the function can either call passed-in success and failure callbacks,
or it can return a promise.
if you need to pass additional params to func, bind them first.
*/
function unpromisify(func, normalizedSuccessCallback, normalizedFailureCallback) {
  // guard against success/failure callbacks being called more than once
  // and guard against a promise AND callback being used together.
  let isResolved = false;
  let wrappedSuccess = function (res) {
    if (!isResolved) {
      isResolved = true;
      normalizedSuccessCallback(res);
    }
  };
  let wrappedFailure = function (error) {
    if (!isResolved) {
      isResolved = true;
      normalizedFailureCallback(error);
    }
  };
  let res = func(wrappedSuccess, wrappedFailure);
  if (res && typeof res.then === 'function') {
    res.then(wrappedSuccess, wrappedFailure);
  }
}
class Emitter {
  constructor() {
    this.handlers = {};
    this.thisContext = null;
  }
  setThisContext(thisContext) {
    this.thisContext = thisContext;
  }
  setOptions(options) {
    this.options = options;
  }
  on(type, handler) {
    addToHash(this.handlers, type, handler);
  }
  off(type, handler) {
    removeFromHash(this.handlers, type, handler);
  }
  trigger(type, ...args) {
    let attachedHandlers = this.handlers[type] || [];
    let optionHandler = this.options && this.options[type];
    let handlers = [].concat(optionHandler || [], attachedHandlers);
    for (let handler of handlers) {
      handler.apply(this.thisContext, args);
    }
  }
  hasHandlers(type) {
    return Boolean(this.handlers[type] && this.handlers[type].length || this.options && this.options[type]);
  }
}
function addToHash(hash, type, handler) {
  (hash[type] || (hash[type] = [])).push(handler);
}
function removeFromHash(hash, type, handler) {
  if (handler) {
    if (hash[type]) {
      hash[type] = hash[type].filter(func => func !== handler);
    }
  } else {
    delete hash[type]; // remove all handler funcs for this type
  }
}

/*
Records offset information for a set of elements, relative to an origin element.
Can record the left/right OR the top/bottom OR both.
Provides methods for querying the cache by position.
*/
class PositionCache {
  constructor(originEl, els, isHorizontal, isVertical) {
    this.els = els;
    let originClientRect = this.originClientRect = originEl.getBoundingClientRect(); // relative to viewport top-left
    if (isHorizontal) {
      this.buildElHorizontals(originClientRect.left);
    }
    if (isVertical) {
      this.buildElVerticals(originClientRect.top);
    }
  }
  // Populates the left/right internal coordinate arrays
  buildElHorizontals(originClientLeft) {
    let lefts = [];
    let rights = [];
    for (let el of this.els) {
      let rect = el.getBoundingClientRect();
      lefts.push(rect.left - originClientLeft);
      rights.push(rect.right - originClientLeft);
    }
    this.lefts = lefts;
    this.rights = rights;
  }
  // Populates the top/bottom internal coordinate arrays
  buildElVerticals(originClientTop) {
    let tops = [];
    let bottoms = [];
    for (let el of this.els) {
      let rect = el.getBoundingClientRect();
      tops.push(rect.top - originClientTop);
      bottoms.push(rect.bottom - originClientTop);
    }
    this.tops = tops;
    this.bottoms = bottoms;
  }
  // Given a left offset (from document left), returns the index of the el that it horizontally intersects.
  // If no intersection is made, returns undefined.
  leftToIndex(leftPosition) {
    let {
      lefts,
      rights
    } = this;
    let len = lefts.length;
    let i;
    for (i = 0; i < len; i += 1) {
      if (leftPosition >= lefts[i] && leftPosition < rights[i]) {
        return i;
      }
    }
    return undefined; // TODO: better
  }
  // Given a top offset (from document top), returns the index of the el that it vertically intersects.
  // If no intersection is made, returns undefined.
  topToIndex(topPosition) {
    let {
      tops,
      bottoms
    } = this;
    let len = tops.length;
    let i;
    for (i = 0; i < len; i += 1) {
      if (topPosition >= tops[i] && topPosition < bottoms[i]) {
        return i;
      }
    }
    return undefined; // TODO: better
  }
  // Gets the width of the element at the given index
  getWidth(leftIndex) {
    return this.rights[leftIndex] - this.lefts[leftIndex];
  }
  // Gets the height of the element at the given index
  getHeight(topIndex) {
    return this.bottoms[topIndex] - this.tops[topIndex];
  }
  similarTo(otherCache) {
    return similarNumArrays(this.tops || [], otherCache.tops || []) && similarNumArrays(this.bottoms || [], otherCache.bottoms || []) && similarNumArrays(this.lefts || [], otherCache.lefts || []) && similarNumArrays(this.rights || [], otherCache.rights || []);
  }
}
function similarNumArrays(a, b) {
  const len = a.length;
  if (len !== b.length) {
    return false;
  }
  for (let i = 0; i < len; i++) {
    if (Math.round(a[i]) !== Math.round(b[i])) {
      return false;
    }
  }
  return true;
}

/* eslint max-classes-per-file: "off" */
/*
An object for getting/setting scroll-related information for an element.
Internally, this is done very differently for window versus DOM element,
so this object serves as a common interface.
*/
class ScrollController {
  getMaxScrollTop() {
    return this.getScrollHeight() - this.getClientHeight();
  }
  getMaxScrollLeft() {
    return this.getScrollWidth() - this.getClientWidth();
  }
  canScrollVertically() {
    return this.getMaxScrollTop() > 0;
  }
  canScrollHorizontally() {
    return this.getMaxScrollLeft() > 0;
  }
  canScrollUp() {
    return this.getScrollTop() > 0;
  }
  canScrollDown() {
    return this.getScrollTop() < this.getMaxScrollTop();
  }
  canScrollLeft() {
    return this.getScrollLeft() > 0;
  }
  canScrollRight() {
    return this.getScrollLeft() < this.getMaxScrollLeft();
  }
}
class ElementScrollController extends ScrollController {
  constructor(el) {
    super();
    this.el = el;
  }
  getScrollTop() {
    return this.el.scrollTop;
  }
  getScrollLeft() {
    return this.el.scrollLeft;
  }
  setScrollTop(top) {
    this.el.scrollTop = top;
  }
  setScrollLeft(left) {
    this.el.scrollLeft = left;
  }
  getScrollWidth() {
    return this.el.scrollWidth;
  }
  getScrollHeight() {
    return this.el.scrollHeight;
  }
  getClientHeight() {
    return this.el.clientHeight;
  }
  getClientWidth() {
    return this.el.clientWidth;
  }
}
class WindowScrollController extends ScrollController {
  getScrollTop() {
    return window.pageYOffset;
  }
  getScrollLeft() {
    return window.pageXOffset;
  }
  setScrollTop(n) {
    window.scroll(window.pageXOffset, n);
  }
  setScrollLeft(n) {
    window.scroll(n, window.pageYOffset);
  }
  getScrollWidth() {
    return document.documentElement.scrollWidth;
  }
  getScrollHeight() {
    return document.documentElement.scrollHeight;
  }
  getClientHeight() {
    return document.documentElement.clientHeight;
  }
  getClientWidth() {
    return document.documentElement.clientWidth;
  }
}
class Theme {
  constructor(calendarOptions) {
    if (this.iconOverrideOption) {
      this.setIconOverride(calendarOptions[this.iconOverrideOption]);
    }
  }
  setIconOverride(iconOverrideHash) {
    let iconClassesCopy;
    let buttonName;
    if (typeof iconOverrideHash === 'object' && iconOverrideHash) {
      // non-null object
      iconClassesCopy = Object.assign({}, this.iconClasses);
      for (buttonName in iconOverrideHash) {
        iconClassesCopy[buttonName] = this.applyIconOverridePrefix(iconOverrideHash[buttonName]);
      }
      this.iconClasses = iconClassesCopy;
    } else if (iconOverrideHash === false) {
      this.iconClasses = {};
    }
  }
  applyIconOverridePrefix(className) {
    let prefix = this.iconOverridePrefix;
    if (prefix && className.indexOf(prefix) !== 0) {
      // if not already present
      className = prefix + className;
    }
    return className;
  }
  getClass(key) {
    return this.classes[key] || '';
  }
  getIconClass(buttonName, isRtl) {
    let className;
    if (isRtl && this.rtlIconClasses) {
      className = this.rtlIconClasses[buttonName] || this.iconClasses[buttonName];
    } else {
      className = this.iconClasses[buttonName];
    }
    if (className) {
      return `${this.baseIconClass} ${className}`;
    }
    return '';
  }
  getCustomButtonIconClass(customButtonProps) {
    let className;
    if (this.iconOverrideCustomButtonOption) {
      className = customButtonProps[this.iconOverrideCustomButtonOption];
      if (className) {
        return `${this.baseIconClass} ${this.applyIconOverridePrefix(className)}`;
      }
    }
    return '';
  }
}
Theme.prototype.classes = {};
Theme.prototype.iconClasses = {};
Theme.prototype.baseIconClass = '';
Theme.prototype.iconOverridePrefix = '';

/*
NOTE: this can be a public API, especially createElement for hooks.
See examples/typescript-scheduler/src/index.ts
*/
function flushSync(runBeforeFlush) {
  runBeforeFlush();
  let oldDebounceRendering = preact__WEBPACK_IMPORTED_MODULE_0__.options.debounceRendering; // orig
  let callbackQ = [];
  function execCallbackSync(callback) {
    callbackQ.push(callback);
  }
  preact__WEBPACK_IMPORTED_MODULE_0__.options.debounceRendering = execCallbackSync;
  preact__WEBPACK_IMPORTED_MODULE_0__.render(preact__WEBPACK_IMPORTED_MODULE_0__.createElement(FakeComponent, {}), document.createElement('div'));
  while (callbackQ.length) {
    callbackQ.shift()();
  }
  preact__WEBPACK_IMPORTED_MODULE_0__.options.debounceRendering = oldDebounceRendering;
}
class FakeComponent extends preact__WEBPACK_IMPORTED_MODULE_0__.Component {
  render() {
    return preact__WEBPACK_IMPORTED_MODULE_0__.createElement('div', {});
  }
  componentDidMount() {
    this.setState({});
  }
}
// TODO: use preact/compat instead?
function createContext(defaultValue) {
  let ContextType = preact__WEBPACK_IMPORTED_MODULE_0__.createContext(defaultValue);
  let origProvider = ContextType.Provider;
  ContextType.Provider = function () {
    let isNew = !this.getChildContext;
    let children = origProvider.apply(this, arguments); // eslint-disable-line prefer-rest-params
    if (isNew) {
      let subs = [];
      this.shouldComponentUpdate = _props => {
        if (this.props.value !== _props.value) {
          subs.forEach(c => {
            c.context = _props.value;
            c.forceUpdate();
          });
        }
      };
      this.sub = c => {
        subs.push(c);
        let old = c.componentWillUnmount;
        c.componentWillUnmount = () => {
          subs.splice(subs.indexOf(c), 1);
          old && old.call(c);
        };
      };
    }
    return children;
  };
  return ContextType;
}
class ScrollResponder {
  constructor(execFunc, emitter, scrollTime, scrollTimeReset) {
    this.execFunc = execFunc;
    this.emitter = emitter;
    this.scrollTime = scrollTime;
    this.scrollTimeReset = scrollTimeReset;
    this.handleScrollRequest = request => {
      this.queuedRequest = Object.assign({}, this.queuedRequest || {}, request);
      this.drain();
    };
    emitter.on('_scrollRequest', this.handleScrollRequest);
    this.fireInitialScroll();
  }
  detach() {
    this.emitter.off('_scrollRequest', this.handleScrollRequest);
  }
  update(isDatesNew) {
    if (isDatesNew && this.scrollTimeReset) {
      this.fireInitialScroll(); // will drain
    } else {
      this.drain();
    }
  }
  fireInitialScroll() {
    this.handleScrollRequest({
      time: this.scrollTime
    });
  }
  drain() {
    if (this.queuedRequest && this.execFunc(this.queuedRequest)) {
      this.queuedRequest = null;
    }
  }
}
const ViewContextType = createContext({}); // for Components
function buildViewContext(viewSpec, viewApi, viewOptions, dateProfileGenerator, dateEnv, theme, pluginHooks, dispatch, getCurrentData, emitter, calendarApi, registerInteractiveComponent, unregisterInteractiveComponent) {
  return {
    dateEnv,
    options: viewOptions,
    pluginHooks,
    emitter,
    dispatch,
    getCurrentData,
    calendarApi,
    viewSpec,
    viewApi,
    dateProfileGenerator,
    theme,
    isRtl: viewOptions.direction === 'rtl',
    addResizeHandler(handler) {
      emitter.on('_resize', handler);
    },
    removeResizeHandler(handler) {
      emitter.off('_resize', handler);
    },
    createScrollResponder(execFunc) {
      return new ScrollResponder(execFunc, emitter, createDuration(viewOptions.scrollTime), viewOptions.scrollTimeReset);
    },
    registerInteractiveComponent,
    unregisterInteractiveComponent
  };
}

/* eslint max-classes-per-file: off */
class PureComponent extends preact__WEBPACK_IMPORTED_MODULE_0__.Component {
  shouldComponentUpdate(nextProps, nextState) {
    if (this.debug) {
      // eslint-disable-next-line no-console
      console.log(getUnequalProps(nextProps, this.props), getUnequalProps(nextState, this.state));
    }
    return !compareObjs(this.props, nextProps, this.propEquality) || !compareObjs(this.state, nextState, this.stateEquality);
  }
  // HACK for freakin' React StrictMode
  safeSetState(newState) {
    if (!compareObjs(this.state, Object.assign(Object.assign({}, this.state), newState), this.stateEquality)) {
      this.setState(newState);
    }
  }
}
PureComponent.addPropsEquality = addPropsEquality;
PureComponent.addStateEquality = addStateEquality;
PureComponent.contextType = ViewContextType;
PureComponent.prototype.propEquality = {};
PureComponent.prototype.stateEquality = {};
class BaseComponent extends PureComponent {}
BaseComponent.contextType = ViewContextType;
function addPropsEquality(propEquality) {
  let hash = Object.create(this.prototype.propEquality);
  Object.assign(hash, propEquality);
  this.prototype.propEquality = hash;
}
function addStateEquality(stateEquality) {
  let hash = Object.create(this.prototype.stateEquality);
  Object.assign(hash, stateEquality);
  this.prototype.stateEquality = hash;
}
// use other one
function setRef(ref, current) {
  if (typeof ref === 'function') {
    ref(current);
  } else if (ref) {
    // see https://github.com/facebook/react/issues/13029
    ref.current = current;
  }
}

/*
an INTERACTABLE date component

PURPOSES:
- hook up to fg, fill, and mirror renderers
- interface for dragging and hits
*/
class DateComponent extends BaseComponent {
  constructor() {
    super(...arguments);
    this.uid = guid();
  }
  // Hit System
  // -----------------------------------------------------------------------------------------------------------------
  prepareHits() {}
  queryHit(positionLeft, positionTop, elWidth, elHeight) {
    return null; // this should be abstract
  }
  // Pointer Interaction Utils
  // -----------------------------------------------------------------------------------------------------------------
  isValidSegDownEl(el) {
    return !this.props.eventDrag &&
    // HACK
    !this.props.eventResize &&
    // HACK
    !elementClosest(el, '.fc-event-mirror');
  }
  isValidDateDownEl(el) {
    return !elementClosest(el, '.fc-event:not(.fc-bg-event)') && !elementClosest(el, '.fc-more-link') &&
    // a "more.." link
    !elementClosest(el, 'a[data-navlink]') &&
    // a clickable nav link
    !elementClosest(el, '.fc-popover'); // hack
  }
}

function reduceCurrentDate(currentDate, action) {
  switch (action.type) {
    case 'CHANGE_DATE':
      return action.dateMarker;
    default:
      return currentDate;
  }
}
function getInitialDate(options, dateEnv) {
  let initialDateInput = options.initialDate;
  // compute the initial ambig-timezone date
  if (initialDateInput != null) {
    return dateEnv.createMarker(initialDateInput);
  }
  return getNow(options.now, dateEnv); // getNow already returns unzoned
}

function getNow(nowInput, dateEnv) {
  if (typeof nowInput === 'function') {
    nowInput = nowInput();
  }
  if (nowInput == null) {
    return dateEnv.createNowMarker();
  }
  return dateEnv.createMarker(nowInput);
}
class DateProfileGenerator {
  constructor(props) {
    this.props = props;
    this.nowDate = getNow(props.nowInput, props.dateEnv);
    this.initHiddenDays();
  }
  /* Date Range Computation
  ------------------------------------------------------------------------------------------------------------------*/
  // Builds a structure with info about what the dates/ranges will be for the "prev" view.
  buildPrev(currentDateProfile, currentDate, forceToValid) {
    let {
      dateEnv
    } = this.props;
    let prevDate = dateEnv.subtract(dateEnv.startOf(currentDate, currentDateProfile.currentRangeUnit),
    // important for start-of-month
    currentDateProfile.dateIncrement);
    return this.build(prevDate, -1, forceToValid);
  }
  // Builds a structure with info about what the dates/ranges will be for the "next" view.
  buildNext(currentDateProfile, currentDate, forceToValid) {
    let {
      dateEnv
    } = this.props;
    let nextDate = dateEnv.add(dateEnv.startOf(currentDate, currentDateProfile.currentRangeUnit),
    // important for start-of-month
    currentDateProfile.dateIncrement);
    return this.build(nextDate, 1, forceToValid);
  }
  // Builds a structure holding dates/ranges for rendering around the given date.
  // Optional direction param indicates whether the date is being incremented/decremented
  // from its previous value. decremented = -1, incremented = 1 (default).
  build(currentDate, direction, forceToValid = true) {
    let {
      props
    } = this;
    let validRange;
    let currentInfo;
    let isRangeAllDay;
    let renderRange;
    let activeRange;
    let isValid;
    validRange = this.buildValidRange();
    validRange = this.trimHiddenDays(validRange);
    if (forceToValid) {
      currentDate = constrainMarkerToRange(currentDate, validRange);
    }
    currentInfo = this.buildCurrentRangeInfo(currentDate, direction);
    isRangeAllDay = /^(year|month|week|day)$/.test(currentInfo.unit);
    renderRange = this.buildRenderRange(this.trimHiddenDays(currentInfo.range), currentInfo.unit, isRangeAllDay);
    renderRange = this.trimHiddenDays(renderRange);
    activeRange = renderRange;
    if (!props.showNonCurrentDates) {
      activeRange = intersectRanges(activeRange, currentInfo.range);
    }
    activeRange = this.adjustActiveRange(activeRange);
    activeRange = intersectRanges(activeRange, validRange); // might return null
    // it's invalid if the originally requested date is not contained,
    // or if the range is completely outside of the valid range.
    isValid = rangesIntersect(currentInfo.range, validRange);
    // HACK: constrain to render-range so `currentDate` is more useful to view rendering
    if (!rangeContainsMarker(renderRange, currentDate)) {
      currentDate = renderRange.start;
    }
    return {
      currentDate,
      // constraint for where prev/next operations can go and where events can be dragged/resized to.
      // an object with optional start and end properties.
      validRange,
      // range the view is formally responsible for.
      // for example, a month view might have 1st-31st, excluding padded dates
      currentRange: currentInfo.range,
      // name of largest unit being displayed, like "month" or "week"
      currentRangeUnit: currentInfo.unit,
      isRangeAllDay,
      // dates that display events and accept drag-n-drop
      // will be `null` if no dates accept events
      activeRange,
      // date range with a rendered skeleton
      // includes not-active days that need some sort of DOM
      renderRange,
      // Duration object that denotes the first visible time of any given day
      slotMinTime: props.slotMinTime,
      // Duration object that denotes the exclusive visible end time of any given day
      slotMaxTime: props.slotMaxTime,
      isValid,
      // how far the current date will move for a prev/next operation
      dateIncrement: this.buildDateIncrement(currentInfo.duration)
      // pass a fallback (might be null) ^
    };
  }
  // Builds an object with optional start/end properties.
  // Indicates the minimum/maximum dates to display.
  // not responsible for trimming hidden days.
  buildValidRange() {
    let input = this.props.validRangeInput;
    let simpleInput = typeof input === 'function' ? input.call(this.props.calendarApi, this.nowDate) : input;
    return this.refineRange(simpleInput) || {
      start: null,
      end: null
    }; // completely open-ended
  }
  // Builds a structure with info about the "current" range, the range that is
  // highlighted as being the current month for example.
  // See build() for a description of `direction`.
  // Guaranteed to have `range` and `unit` properties. `duration` is optional.
  buildCurrentRangeInfo(date, direction) {
    let {
      props
    } = this;
    let duration = null;
    let unit = null;
    let range = null;
    let dayCount;
    if (props.duration) {
      duration = props.duration;
      unit = props.durationUnit;
      range = this.buildRangeFromDuration(date, direction, duration, unit);
    } else if (dayCount = this.props.dayCount) {
      unit = 'day';
      range = this.buildRangeFromDayCount(date, direction, dayCount);
    } else if (range = this.buildCustomVisibleRange(date)) {
      unit = props.dateEnv.greatestWholeUnit(range.start, range.end).unit;
    } else {
      duration = this.getFallbackDuration();
      unit = greatestDurationDenominator(duration).unit;
      range = this.buildRangeFromDuration(date, direction, duration, unit);
    }
    return {
      duration,
      unit,
      range
    };
  }
  getFallbackDuration() {
    return createDuration({
      day: 1
    });
  }
  // Returns a new activeRange to have time values (un-ambiguate)
  // slotMinTime or slotMaxTime causes the range to expand.
  adjustActiveRange(range) {
    let {
      dateEnv,
      usesMinMaxTime,
      slotMinTime,
      slotMaxTime
    } = this.props;
    let {
      start,
      end
    } = range;
    if (usesMinMaxTime) {
      // expand active range if slotMinTime is negative (why not when positive?)
      if (asRoughDays(slotMinTime) < 0) {
        start = startOfDay(start); // necessary?
        start = dateEnv.add(start, slotMinTime);
      }
      // expand active range if slotMaxTime is beyond one day (why not when negative?)
      if (asRoughDays(slotMaxTime) > 1) {
        end = startOfDay(end); // necessary?
        end = addDays(end, -1);
        end = dateEnv.add(end, slotMaxTime);
      }
    }
    return {
      start,
      end
    };
  }
  // Builds the "current" range when it is specified as an explicit duration.
  // `unit` is the already-computed greatestDurationDenominator unit of duration.
  buildRangeFromDuration(date, direction, duration, unit) {
    let {
      dateEnv,
      dateAlignment
    } = this.props;
    let start;
    let end;
    let res;
    // compute what the alignment should be
    if (!dateAlignment) {
      let {
        dateIncrement
      } = this.props;
      if (dateIncrement) {
        // use the smaller of the two units
        if (asRoughMs(dateIncrement) < asRoughMs(duration)) {
          dateAlignment = greatestDurationDenominator(dateIncrement).unit;
        } else {
          dateAlignment = unit;
        }
      } else {
        dateAlignment = unit;
      }
    }
    // if the view displays a single day or smaller
    if (asRoughDays(duration) <= 1) {
      if (this.isHiddenDay(start)) {
        start = this.skipHiddenDays(start, direction);
        start = startOfDay(start);
      }
    }
    function computeRes() {
      start = dateEnv.startOf(date, dateAlignment);
      end = dateEnv.add(start, duration);
      res = {
        start,
        end
      };
    }
    computeRes();
    // if range is completely enveloped by hidden days, go past the hidden days
    if (!this.trimHiddenDays(res)) {
      date = this.skipHiddenDays(date, direction);
      computeRes();
    }
    return res;
  }
  // Builds the "current" range when a dayCount is specified.
  buildRangeFromDayCount(date, direction, dayCount) {
    let {
      dateEnv,
      dateAlignment
    } = this.props;
    let runningCount = 0;
    let start = date;
    let end;
    if (dateAlignment) {
      start = dateEnv.startOf(start, dateAlignment);
    }
    start = startOfDay(start);
    start = this.skipHiddenDays(start, direction);
    end = start;
    do {
      end = addDays(end, 1);
      if (!this.isHiddenDay(end)) {
        runningCount += 1;
      }
    } while (runningCount < dayCount);
    return {
      start,
      end
    };
  }
  // Builds a normalized range object for the "visible" range,
  // which is a way to define the currentRange and activeRange at the same time.
  buildCustomVisibleRange(date) {
    let {
      props
    } = this;
    let input = props.visibleRangeInput;
    let simpleInput = typeof input === 'function' ? input.call(props.calendarApi, props.dateEnv.toDate(date)) : input;
    let range = this.refineRange(simpleInput);
    if (range && (range.start == null || range.end == null)) {
      return null;
    }
    return range;
  }
  // Computes the range that will represent the element/cells for *rendering*,
  // but which may have voided days/times.
  // not responsible for trimming hidden days.
  buildRenderRange(currentRange, currentRangeUnit, isRangeAllDay) {
    return currentRange;
  }
  // Compute the duration value that should be added/substracted to the current date
  // when a prev/next operation happens.
  buildDateIncrement(fallback) {
    let {
      dateIncrement
    } = this.props;
    let customAlignment;
    if (dateIncrement) {
      return dateIncrement;
    }
    if (customAlignment = this.props.dateAlignment) {
      return createDuration(1, customAlignment);
    }
    if (fallback) {
      return fallback;
    }
    return createDuration({
      days: 1
    });
  }
  refineRange(rangeInput) {
    if (rangeInput) {
      let range = parseRange(rangeInput, this.props.dateEnv);
      if (range) {
        range = computeVisibleDayRange(range);
      }
      return range;
    }
    return null;
  }
  /* Hidden Days
  ------------------------------------------------------------------------------------------------------------------*/
  // Initializes internal variables related to calculating hidden days-of-week
  initHiddenDays() {
    let hiddenDays = this.props.hiddenDays || []; // array of day-of-week indices that are hidden
    let isHiddenDayHash = []; // is the day-of-week hidden? (hash with day-of-week-index -> bool)
    let dayCnt = 0;
    let i;
    if (this.props.weekends === false) {
      hiddenDays.push(0, 6); // 0=sunday, 6=saturday
    }

    for (i = 0; i < 7; i += 1) {
      if (!(isHiddenDayHash[i] = hiddenDays.indexOf(i) !== -1)) {
        dayCnt += 1;
      }
    }
    if (!dayCnt) {
      throw new Error('invalid hiddenDays'); // all days were hidden? bad.
    }

    this.isHiddenDayHash = isHiddenDayHash;
  }
  // Remove days from the beginning and end of the range that are computed as hidden.
  // If the whole range is trimmed off, returns null
  trimHiddenDays(range) {
    let {
      start,
      end
    } = range;
    if (start) {
      start = this.skipHiddenDays(start);
    }
    if (end) {
      end = this.skipHiddenDays(end, -1, true);
    }
    if (start == null || end == null || start < end) {
      return {
        start,
        end
      };
    }
    return null;
  }
  // Is the current day hidden?
  // `day` is a day-of-week index (0-6), or a Date (used for UTC)
  isHiddenDay(day) {
    if (day instanceof Date) {
      day = day.getUTCDay();
    }
    return this.isHiddenDayHash[day];
  }
  // Incrementing the current day until it is no longer a hidden day, returning a copy.
  // DOES NOT CONSIDER validRange!
  // If the initial value of `date` is not a hidden day, don't do anything.
  // Pass `isExclusive` as `true` if you are dealing with an end date.
  // `inc` defaults to `1` (increment one day forward each time)
  skipHiddenDays(date, inc = 1, isExclusive = false) {
    while (this.isHiddenDayHash[(date.getUTCDay() + (isExclusive ? inc : 0) + 7) % 7]) {
      date = addDays(date, inc);
    }
    return date;
  }
}
function triggerDateSelect(selection, pev, context) {
  context.emitter.trigger('select', Object.assign(Object.assign({}, buildDateSpanApiWithContext(selection, context)), {
    jsEvent: pev ? pev.origEvent : null,
    view: context.viewApi || context.calendarApi.view
  }));
}
function triggerDateUnselect(pev, context) {
  context.emitter.trigger('unselect', {
    jsEvent: pev ? pev.origEvent : null,
    view: context.viewApi || context.calendarApi.view
  });
}
function buildDateSpanApiWithContext(dateSpan, context) {
  let props = {};
  for (let transform of context.pluginHooks.dateSpanTransforms) {
    Object.assign(props, transform(dateSpan, context));
  }
  Object.assign(props, buildDateSpanApi(dateSpan, context.dateEnv));
  return props;
}
// Given an event's allDay status and start date, return what its fallback end date should be.
// TODO: rename to computeDefaultEventEnd
function getDefaultEventEnd(allDay, marker, context) {
  let {
    dateEnv,
    options
  } = context;
  let end = marker;
  if (allDay) {
    end = startOfDay(end);
    end = dateEnv.add(end, options.defaultAllDayEventDuration);
  } else {
    end = dateEnv.add(end, options.defaultTimedEventDuration);
  }
  return end;
}

// applies the mutation to ALL defs/instances within the event store
function applyMutationToEventStore(eventStore, eventConfigBase, mutation, context) {
  let eventConfigs = compileEventUis(eventStore.defs, eventConfigBase);
  let dest = createEmptyEventStore();
  for (let defId in eventStore.defs) {
    let def = eventStore.defs[defId];
    dest.defs[defId] = applyMutationToEventDef(def, eventConfigs[defId], mutation, context);
  }
  for (let instanceId in eventStore.instances) {
    let instance = eventStore.instances[instanceId];
    let def = dest.defs[instance.defId]; // important to grab the newly modified def
    dest.instances[instanceId] = applyMutationToEventInstance(instance, def, eventConfigs[instance.defId], mutation, context);
  }
  return dest;
}
function applyMutationToEventDef(eventDef, eventConfig, mutation, context) {
  let standardProps = mutation.standardProps || {};
  // if hasEnd has not been specified, guess a good value based on deltas.
  // if duration will change, there's no way the default duration will persist,
  // and thus, we need to mark the event as having a real end
  if (standardProps.hasEnd == null && eventConfig.durationEditable && (mutation.startDelta || mutation.endDelta)) {
    standardProps.hasEnd = true; // TODO: is this mutation okay?
  }

  let copy = Object.assign(Object.assign(Object.assign({}, eventDef), standardProps), {
    ui: Object.assign(Object.assign({}, eventDef.ui), standardProps.ui)
  });
  if (mutation.extendedProps) {
    copy.extendedProps = Object.assign(Object.assign({}, copy.extendedProps), mutation.extendedProps);
  }
  for (let applier of context.pluginHooks.eventDefMutationAppliers) {
    applier(copy, mutation, context);
  }
  if (!copy.hasEnd && context.options.forceEventDuration) {
    copy.hasEnd = true;
  }
  return copy;
}
function applyMutationToEventInstance(eventInstance, eventDef,
// must first be modified by applyMutationToEventDef
eventConfig, mutation, context) {
  let {
    dateEnv
  } = context;
  let forceAllDay = mutation.standardProps && mutation.standardProps.allDay === true;
  let clearEnd = mutation.standardProps && mutation.standardProps.hasEnd === false;
  let copy = Object.assign({}, eventInstance);
  if (forceAllDay) {
    copy.range = computeAlignedDayRange(copy.range);
  }
  if (mutation.datesDelta && eventConfig.startEditable) {
    copy.range = {
      start: dateEnv.add(copy.range.start, mutation.datesDelta),
      end: dateEnv.add(copy.range.end, mutation.datesDelta)
    };
  }
  if (mutation.startDelta && eventConfig.durationEditable) {
    copy.range = {
      start: dateEnv.add(copy.range.start, mutation.startDelta),
      end: copy.range.end
    };
  }
  if (mutation.endDelta && eventConfig.durationEditable) {
    copy.range = {
      start: copy.range.start,
      end: dateEnv.add(copy.range.end, mutation.endDelta)
    };
  }
  if (clearEnd) {
    copy.range = {
      start: copy.range.start,
      end: getDefaultEventEnd(eventDef.allDay, copy.range.start, context)
    };
  }
  // in case event was all-day but the supplied deltas were not
  // better util for this?
  if (eventDef.allDay) {
    copy.range = {
      start: startOfDay(copy.range.start),
      end: startOfDay(copy.range.end)
    };
  }
  // handle invalid durations
  if (copy.range.end < copy.range.start) {
    copy.range.end = getDefaultEventEnd(eventDef.allDay, copy.range.start, context);
  }
  return copy;
}
class EventSourceImpl {
  constructor(context, internalEventSource) {
    this.context = context;
    this.internalEventSource = internalEventSource;
  }
  remove() {
    this.context.dispatch({
      type: 'REMOVE_EVENT_SOURCE',
      sourceId: this.internalEventSource.sourceId
    });
  }
  refetch() {
    this.context.dispatch({
      type: 'FETCH_EVENT_SOURCES',
      sourceIds: [this.internalEventSource.sourceId],
      isRefetch: true
    });
  }
  get id() {
    return this.internalEventSource.publicId;
  }
  get url() {
    return this.internalEventSource.meta.url;
  }
  get format() {
    return this.internalEventSource.meta.format; // TODO: bad. not guaranteed
  }
}

class EventImpl {
  // instance will be null if expressing a recurring event that has no current instances,
  // OR if trying to validate an incoming external event that has no dates assigned
  constructor(context, def, instance) {
    this._context = context;
    this._def = def;
    this._instance = instance || null;
  }
  /*
  TODO: make event struct more responsible for this
  */
  setProp(name, val) {
    if (name in EVENT_DATE_REFINERS) {
      console.warn('Could not set date-related prop \'name\'. Use one of the date-related methods instead.');
      // TODO: make proper aliasing system?
    } else if (name === 'id') {
      val = EVENT_NON_DATE_REFINERS[name](val);
      this.mutate({
        standardProps: {
          publicId: val
        } // hardcoded internal name
      });
    } else if (name in EVENT_NON_DATE_REFINERS) {
      val = EVENT_NON_DATE_REFINERS[name](val);
      this.mutate({
        standardProps: {
          [name]: val
        }
      });
    } else if (name in EVENT_UI_REFINERS) {
      let ui = EVENT_UI_REFINERS[name](val);
      if (name === 'color') {
        ui = {
          backgroundColor: val,
          borderColor: val
        };
      } else if (name === 'editable') {
        ui = {
          startEditable: val,
          durationEditable: val
        };
      } else {
        ui = {
          [name]: val
        };
      }
      this.mutate({
        standardProps: {
          ui
        }
      });
    } else {
      console.warn(`Could not set prop '${name}'. Use setExtendedProp instead.`);
    }
  }
  setExtendedProp(name, val) {
    this.mutate({
      extendedProps: {
        [name]: val
      }
    });
  }
  setStart(startInput, options = {}) {
    let {
      dateEnv
    } = this._context;
    let start = dateEnv.createMarker(startInput);
    if (start && this._instance) {
      // TODO: warning if parsed bad
      let instanceRange = this._instance.range;
      let startDelta = diffDates(instanceRange.start, start, dateEnv, options.granularity); // what if parsed bad!?
      if (options.maintainDuration) {
        this.mutate({
          datesDelta: startDelta
        });
      } else {
        this.mutate({
          startDelta
        });
      }
    }
  }
  setEnd(endInput, options = {}) {
    let {
      dateEnv
    } = this._context;
    let end;
    if (endInput != null) {
      end = dateEnv.createMarker(endInput);
      if (!end) {
        return; // TODO: warning if parsed bad
      }
    }

    if (this._instance) {
      if (end) {
        let endDelta = diffDates(this._instance.range.end, end, dateEnv, options.granularity);
        this.mutate({
          endDelta
        });
      } else {
        this.mutate({
          standardProps: {
            hasEnd: false
          }
        });
      }
    }
  }
  setDates(startInput, endInput, options = {}) {
    let {
      dateEnv
    } = this._context;
    let standardProps = {
      allDay: options.allDay
    };
    let start = dateEnv.createMarker(startInput);
    let end;
    if (!start) {
      return; // TODO: warning if parsed bad
    }

    if (endInput != null) {
      end = dateEnv.createMarker(endInput);
      if (!end) {
        // TODO: warning if parsed bad
        return;
      }
    }
    if (this._instance) {
      let instanceRange = this._instance.range;
      // when computing the diff for an event being converted to all-day,
      // compute diff off of the all-day values the way event-mutation does.
      if (options.allDay === true) {
        instanceRange = computeAlignedDayRange(instanceRange);
      }
      let startDelta = diffDates(instanceRange.start, start, dateEnv, options.granularity);
      if (end) {
        let endDelta = diffDates(instanceRange.end, end, dateEnv, options.granularity);
        if (durationsEqual(startDelta, endDelta)) {
          this.mutate({
            datesDelta: startDelta,
            standardProps
          });
        } else {
          this.mutate({
            startDelta,
            endDelta,
            standardProps
          });
        }
      } else {
        // means "clear the end"
        standardProps.hasEnd = false;
        this.mutate({
          datesDelta: startDelta,
          standardProps
        });
      }
    }
  }
  moveStart(deltaInput) {
    let delta = createDuration(deltaInput);
    if (delta) {
      // TODO: warning if parsed bad
      this.mutate({
        startDelta: delta
      });
    }
  }
  moveEnd(deltaInput) {
    let delta = createDuration(deltaInput);
    if (delta) {
      // TODO: warning if parsed bad
      this.mutate({
        endDelta: delta
      });
    }
  }
  moveDates(deltaInput) {
    let delta = createDuration(deltaInput);
    if (delta) {
      // TODO: warning if parsed bad
      this.mutate({
        datesDelta: delta
      });
    }
  }
  setAllDay(allDay, options = {}) {
    let standardProps = {
      allDay
    };
    let {
      maintainDuration
    } = options;
    if (maintainDuration == null) {
      maintainDuration = this._context.options.allDayMaintainDuration;
    }
    if (this._def.allDay !== allDay) {
      standardProps.hasEnd = maintainDuration;
    }
    this.mutate({
      standardProps
    });
  }
  formatRange(formatInput) {
    let {
      dateEnv
    } = this._context;
    let instance = this._instance;
    let formatter = createFormatter(formatInput);
    if (this._def.hasEnd) {
      return dateEnv.formatRange(instance.range.start, instance.range.end, formatter, {
        forcedStartTzo: instance.forcedStartTzo,
        forcedEndTzo: instance.forcedEndTzo
      });
    }
    return dateEnv.format(instance.range.start, formatter, {
      forcedTzo: instance.forcedStartTzo
    });
  }
  mutate(mutation) {
    let instance = this._instance;
    if (instance) {
      let def = this._def;
      let context = this._context;
      let {
        eventStore
      } = context.getCurrentData();
      let relevantEvents = getRelevantEvents(eventStore, instance.instanceId);
      let eventConfigBase = {
        '': {
          display: '',
          startEditable: true,
          durationEditable: true,
          constraints: [],
          overlap: null,
          allows: [],
          backgroundColor: '',
          borderColor: '',
          textColor: '',
          classNames: []
        }
      };
      relevantEvents = applyMutationToEventStore(relevantEvents, eventConfigBase, mutation, context);
      let oldEvent = new EventImpl(context, def, instance); // snapshot
      this._def = relevantEvents.defs[def.defId];
      this._instance = relevantEvents.instances[instance.instanceId];
      context.dispatch({
        type: 'MERGE_EVENTS',
        eventStore: relevantEvents
      });
      context.emitter.trigger('eventChange', {
        oldEvent,
        event: this,
        relatedEvents: buildEventApis(relevantEvents, context, instance),
        revert() {
          context.dispatch({
            type: 'RESET_EVENTS',
            eventStore // the ORIGINAL store
          });
        }
      });
    }
  }

  remove() {
    let context = this._context;
    let asStore = eventApiToStore(this);
    context.dispatch({
      type: 'REMOVE_EVENTS',
      eventStore: asStore
    });
    context.emitter.trigger('eventRemove', {
      event: this,
      relatedEvents: [],
      revert() {
        context.dispatch({
          type: 'MERGE_EVENTS',
          eventStore: asStore
        });
      }
    });
  }
  get source() {
    let {
      sourceId
    } = this._def;
    if (sourceId) {
      return new EventSourceImpl(this._context, this._context.getCurrentData().eventSources[sourceId]);
    }
    return null;
  }
  get start() {
    return this._instance ? this._context.dateEnv.toDate(this._instance.range.start) : null;
  }
  get end() {
    return this._instance && this._def.hasEnd ? this._context.dateEnv.toDate(this._instance.range.end) : null;
  }
  get startStr() {
    let instance = this._instance;
    if (instance) {
      return this._context.dateEnv.formatIso(instance.range.start, {
        omitTime: this._def.allDay,
        forcedTzo: instance.forcedStartTzo
      });
    }
    return '';
  }
  get endStr() {
    let instance = this._instance;
    if (instance && this._def.hasEnd) {
      return this._context.dateEnv.formatIso(instance.range.end, {
        omitTime: this._def.allDay,
        forcedTzo: instance.forcedEndTzo
      });
    }
    return '';
  }
  // computable props that all access the def
  // TODO: find a TypeScript-compatible way to do this at scale
  get id() {
    return this._def.publicId;
  }
  get groupId() {
    return this._def.groupId;
  }
  get allDay() {
    return this._def.allDay;
  }
  get title() {
    return this._def.title;
  }
  get url() {
    return this._def.url;
  }
  get display() {
    return this._def.ui.display || 'auto';
  } // bad. just normalize the type earlier
  get startEditable() {
    return this._def.ui.startEditable;
  }
  get durationEditable() {
    return this._def.ui.durationEditable;
  }
  get constraint() {
    return this._def.ui.constraints[0] || null;
  }
  get overlap() {
    return this._def.ui.overlap;
  }
  get allow() {
    return this._def.ui.allows[0] || null;
  }
  get backgroundColor() {
    return this._def.ui.backgroundColor;
  }
  get borderColor() {
    return this._def.ui.borderColor;
  }
  get textColor() {
    return this._def.ui.textColor;
  }
  // NOTE: user can't modify these because Object.freeze was called in event-def parsing
  get classNames() {
    return this._def.ui.classNames;
  }
  get extendedProps() {
    return this._def.extendedProps;
  }
  toPlainObject(settings = {}) {
    let def = this._def;
    let {
      ui
    } = def;
    let {
      startStr,
      endStr
    } = this;
    let res = {
      allDay: def.allDay
    };
    if (def.title) {
      res.title = def.title;
    }
    if (startStr) {
      res.start = startStr;
    }
    if (endStr) {
      res.end = endStr;
    }
    if (def.publicId) {
      res.id = def.publicId;
    }
    if (def.groupId) {
      res.groupId = def.groupId;
    }
    if (def.url) {
      res.url = def.url;
    }
    if (ui.display && ui.display !== 'auto') {
      res.display = ui.display;
    }
    // TODO: what about recurring-event properties???
    // TODO: include startEditable/durationEditable/constraint/overlap/allow
    if (settings.collapseColor && ui.backgroundColor && ui.backgroundColor === ui.borderColor) {
      res.color = ui.backgroundColor;
    } else {
      if (ui.backgroundColor) {
        res.backgroundColor = ui.backgroundColor;
      }
      if (ui.borderColor) {
        res.borderColor = ui.borderColor;
      }
    }
    if (ui.textColor) {
      res.textColor = ui.textColor;
    }
    if (ui.classNames.length) {
      res.classNames = ui.classNames;
    }
    if (Object.keys(def.extendedProps).length) {
      if (settings.collapseExtendedProps) {
        Object.assign(res, def.extendedProps);
      } else {
        res.extendedProps = def.extendedProps;
      }
    }
    return res;
  }
  toJSON() {
    return this.toPlainObject();
  }
}
function eventApiToStore(eventApi) {
  let def = eventApi._def;
  let instance = eventApi._instance;
  return {
    defs: {
      [def.defId]: def
    },
    instances: instance ? {
      [instance.instanceId]: instance
    } : {}
  };
}
function buildEventApis(eventStore, context, excludeInstance) {
  let {
    defs,
    instances
  } = eventStore;
  let eventApis = [];
  let excludeInstanceId = excludeInstance ? excludeInstance.instanceId : '';
  for (let id in instances) {
    let instance = instances[id];
    let def = defs[instance.defId];
    if (instance.instanceId !== excludeInstanceId) {
      eventApis.push(new EventImpl(context, def, instance));
    }
  }
  return eventApis;
}

/*
Specifying nextDayThreshold signals that all-day ranges should be sliced.
*/
function sliceEventStore(eventStore, eventUiBases, framingRange, nextDayThreshold) {
  let inverseBgByGroupId = {};
  let inverseBgByDefId = {};
  let defByGroupId = {};
  let bgRanges = [];
  let fgRanges = [];
  let eventUis = compileEventUis(eventStore.defs, eventUiBases);
  for (let defId in eventStore.defs) {
    let def = eventStore.defs[defId];
    let ui = eventUis[def.defId];
    if (ui.display === 'inverse-background') {
      if (def.groupId) {
        inverseBgByGroupId[def.groupId] = [];
        if (!defByGroupId[def.groupId]) {
          defByGroupId[def.groupId] = def;
        }
      } else {
        inverseBgByDefId[defId] = [];
      }
    }
  }
  for (let instanceId in eventStore.instances) {
    let instance = eventStore.instances[instanceId];
    let def = eventStore.defs[instance.defId];
    let ui = eventUis[def.defId];
    let origRange = instance.range;
    let normalRange = !def.allDay && nextDayThreshold ? computeVisibleDayRange(origRange, nextDayThreshold) : origRange;
    let slicedRange = intersectRanges(normalRange, framingRange);
    if (slicedRange) {
      if (ui.display === 'inverse-background') {
        if (def.groupId) {
          inverseBgByGroupId[def.groupId].push(slicedRange);
        } else {
          inverseBgByDefId[instance.defId].push(slicedRange);
        }
      } else if (ui.display !== 'none') {
        (ui.display === 'background' ? bgRanges : fgRanges).push({
          def,
          ui,
          instance,
          range: slicedRange,
          isStart: normalRange.start && normalRange.start.valueOf() === slicedRange.start.valueOf(),
          isEnd: normalRange.end && normalRange.end.valueOf() === slicedRange.end.valueOf()
        });
      }
    }
  }
  for (let groupId in inverseBgByGroupId) {
    // BY GROUP
    let ranges = inverseBgByGroupId[groupId];
    let invertedRanges = invertRanges(ranges, framingRange);
    for (let invertedRange of invertedRanges) {
      let def = defByGroupId[groupId];
      let ui = eventUis[def.defId];
      bgRanges.push({
        def,
        ui,
        instance: null,
        range: invertedRange,
        isStart: false,
        isEnd: false
      });
    }
  }
  for (let defId in inverseBgByDefId) {
    let ranges = inverseBgByDefId[defId];
    let invertedRanges = invertRanges(ranges, framingRange);
    for (let invertedRange of invertedRanges) {
      bgRanges.push({
        def: eventStore.defs[defId],
        ui: eventUis[defId],
        instance: null,
        range: invertedRange,
        isStart: false,
        isEnd: false
      });
    }
  }
  return {
    bg: bgRanges,
    fg: fgRanges
  };
}
function hasBgRendering(def) {
  return def.ui.display === 'background' || def.ui.display === 'inverse-background';
}
function setElSeg(el, seg) {
  el.fcSeg = seg;
}
function getElSeg(el) {
  return el.fcSeg || el.parentNode.fcSeg ||
  // for the harness
  null;
}
// event ui computation
function compileEventUis(eventDefs, eventUiBases) {
  return mapHash(eventDefs, eventDef => compileEventUi(eventDef, eventUiBases));
}
function compileEventUi(eventDef, eventUiBases) {
  let uis = [];
  if (eventUiBases['']) {
    uis.push(eventUiBases['']);
  }
  if (eventUiBases[eventDef.defId]) {
    uis.push(eventUiBases[eventDef.defId]);
  }
  uis.push(eventDef.ui);
  return combineEventUis(uis);
}
function sortEventSegs(segs, eventOrderSpecs) {
  let objs = segs.map(buildSegCompareObj);
  objs.sort((obj0, obj1) => compareByFieldSpecs(obj0, obj1, eventOrderSpecs));
  return objs.map(c => c._seg);
}
// returns a object with all primitive props that can be compared
function buildSegCompareObj(seg) {
  let {
    eventRange
  } = seg;
  let eventDef = eventRange.def;
  let range = eventRange.instance ? eventRange.instance.range : eventRange.range;
  let start = range.start ? range.start.valueOf() : 0; // TODO: better support for open-range events
  let end = range.end ? range.end.valueOf() : 0; // "
  return Object.assign(Object.assign(Object.assign({}, eventDef.extendedProps), eventDef), {
    id: eventDef.publicId,
    start,
    end,
    duration: end - start,
    allDay: Number(eventDef.allDay),
    _seg: seg
  });
}
function computeSegDraggable(seg, context) {
  let {
    pluginHooks
  } = context;
  let transformers = pluginHooks.isDraggableTransformers;
  let {
    def,
    ui
  } = seg.eventRange;
  let val = ui.startEditable;
  for (let transformer of transformers) {
    val = transformer(val, def, ui, context);
  }
  return val;
}
function computeSegStartResizable(seg, context) {
  return seg.isStart && seg.eventRange.ui.durationEditable && context.options.eventResizableFromStart;
}
function computeSegEndResizable(seg, context) {
  return seg.isEnd && seg.eventRange.ui.durationEditable;
}
function buildSegTimeText(seg, timeFormat, context, defaultDisplayEventTime,
// defaults to true
defaultDisplayEventEnd,
// defaults to true
startOverride, endOverride) {
  let {
    dateEnv,
    options
  } = context;
  let {
    displayEventTime,
    displayEventEnd
  } = options;
  let eventDef = seg.eventRange.def;
  let eventInstance = seg.eventRange.instance;
  if (displayEventTime == null) {
    displayEventTime = defaultDisplayEventTime !== false;
  }
  if (displayEventEnd == null) {
    displayEventEnd = defaultDisplayEventEnd !== false;
  }
  let wholeEventStart = eventInstance.range.start;
  let wholeEventEnd = eventInstance.range.end;
  let segStart = startOverride || seg.start || seg.eventRange.range.start;
  let segEnd = endOverride || seg.end || seg.eventRange.range.end;
  let isStartDay = startOfDay(wholeEventStart).valueOf() === startOfDay(segStart).valueOf();
  let isEndDay = startOfDay(addMs(wholeEventEnd, -1)).valueOf() === startOfDay(addMs(segEnd, -1)).valueOf();
  if (displayEventTime && !eventDef.allDay && (isStartDay || isEndDay)) {
    segStart = isStartDay ? wholeEventStart : segStart;
    segEnd = isEndDay ? wholeEventEnd : segEnd;
    if (displayEventEnd && eventDef.hasEnd) {
      return dateEnv.formatRange(segStart, segEnd, timeFormat, {
        forcedStartTzo: startOverride ? null : eventInstance.forcedStartTzo,
        forcedEndTzo: endOverride ? null : eventInstance.forcedEndTzo
      });
    }
    return dateEnv.format(segStart, timeFormat, {
      forcedTzo: startOverride ? null : eventInstance.forcedStartTzo // nooooo, same
    });
  }

  return '';
}
function getSegMeta(seg, todayRange, nowDate) {
  let segRange = seg.eventRange.range;
  return {
    isPast: segRange.end < (nowDate || todayRange.start),
    isFuture: segRange.start >= (nowDate || todayRange.end),
    isToday: todayRange && rangeContainsMarker(todayRange, segRange.start)
  };
}
function getEventClassNames(props) {
  let classNames = ['fc-event'];
  if (props.isMirror) {
    classNames.push('fc-event-mirror');
  }
  if (props.isDraggable) {
    classNames.push('fc-event-draggable');
  }
  if (props.isStartResizable || props.isEndResizable) {
    classNames.push('fc-event-resizable');
  }
  if (props.isDragging) {
    classNames.push('fc-event-dragging');
  }
  if (props.isResizing) {
    classNames.push('fc-event-resizing');
  }
  if (props.isSelected) {
    classNames.push('fc-event-selected');
  }
  if (props.isStart) {
    classNames.push('fc-event-start');
  }
  if (props.isEnd) {
    classNames.push('fc-event-end');
  }
  if (props.isPast) {
    classNames.push('fc-event-past');
  }
  if (props.isToday) {
    classNames.push('fc-event-today');
  }
  if (props.isFuture) {
    classNames.push('fc-event-future');
  }
  return classNames;
}
function buildEventRangeKey(eventRange) {
  return eventRange.instance ? eventRange.instance.instanceId : `${eventRange.def.defId}:${eventRange.range.start.toISOString()}`;
  // inverse-background events don't have specific instances. TODO: better solution
}

function getSegAnchorAttrs(seg, context) {
  let {
    def,
    instance
  } = seg.eventRange;
  let {
    url
  } = def;
  if (url) {
    return {
      href: url
    };
  }
  let {
    emitter,
    options
  } = context;
  let {
    eventInteractive
  } = options;
  if (eventInteractive == null) {
    eventInteractive = def.interactive;
    if (eventInteractive == null) {
      eventInteractive = Boolean(emitter.hasHandlers('eventClick'));
    }
  }
  // mock what happens in EventClicking
  if (eventInteractive) {
    // only attach keyboard-related handlers because click handler is already done in EventClicking
    return createAriaKeyboardAttrs(ev => {
      emitter.trigger('eventClick', {
        el: ev.target,
        event: new EventImpl(context, def, instance),
        jsEvent: ev,
        view: context.viewApi
      });
    });
  }
  return {};
}
const STANDARD_PROPS = {
  start: identity,
  end: identity,
  allDay: Boolean
};
function parseDateSpan(raw, dateEnv, defaultDuration) {
  let span = parseOpenDateSpan(raw, dateEnv);
  let {
    range
  } = span;
  if (!range.start) {
    return null;
  }
  if (!range.end) {
    if (defaultDuration == null) {
      return null;
    }
    range.end = dateEnv.add(range.start, defaultDuration);
  }
  return span;
}
/*
TODO: somehow combine with parseRange?
Will return null if the start/end props were present but parsed invalidly.
*/
function parseOpenDateSpan(raw, dateEnv) {
  let {
    refined: standardProps,
    extra
  } = refineProps(raw, STANDARD_PROPS);
  let startMeta = standardProps.start ? dateEnv.createMarkerMeta(standardProps.start) : null;
  let endMeta = standardProps.end ? dateEnv.createMarkerMeta(standardProps.end) : null;
  let {
    allDay
  } = standardProps;
  if (allDay == null) {
    allDay = startMeta && startMeta.isTimeUnspecified && (!endMeta || endMeta.isTimeUnspecified);
  }
  return Object.assign({
    range: {
      start: startMeta ? startMeta.marker : null,
      end: endMeta ? endMeta.marker : null
    },
    allDay
  }, extra);
}
function isDateSpansEqual(span0, span1) {
  return rangesEqual(span0.range, span1.range) && span0.allDay === span1.allDay && isSpanPropsEqual(span0, span1);
}
// the NON-DATE-RELATED props
function isSpanPropsEqual(span0, span1) {
  for (let propName in span1) {
    if (propName !== 'range' && propName !== 'allDay') {
      if (span0[propName] !== span1[propName]) {
        return false;
      }
    }
  }
  // are there any props that span0 has that span1 DOESN'T have?
  // both have range/allDay, so no need to special-case.
  for (let propName in span0) {
    if (!(propName in span1)) {
      return false;
    }
  }
  return true;
}
function buildDateSpanApi(span, dateEnv) {
  return Object.assign(Object.assign({}, buildRangeApi(span.range, dateEnv, span.allDay)), {
    allDay: span.allDay
  });
}
function buildRangeApiWithTimeZone(range, dateEnv, omitTime) {
  return Object.assign(Object.assign({}, buildRangeApi(range, dateEnv, omitTime)), {
    timeZone: dateEnv.timeZone
  });
}
function buildRangeApi(range, dateEnv, omitTime) {
  return {
    start: dateEnv.toDate(range.start),
    end: dateEnv.toDate(range.end),
    startStr: dateEnv.formatIso(range.start, {
      omitTime
    }),
    endStr: dateEnv.formatIso(range.end, {
      omitTime
    })
  };
}
function fabricateEventRange(dateSpan, eventUiBases, context) {
  let res = refineEventDef({
    editable: false
  }, context);
  let def = parseEventDef(res.refined, res.extra, '',
  // sourceId
  dateSpan.allDay, true,
  // hasEnd
  context);
  return {
    def,
    ui: compileEventUi(def, eventUiBases),
    instance: createEventInstance(def.defId, dateSpan.range),
    range: dateSpan.range,
    isStart: true,
    isEnd: true
  };
}
let calendarSystemClassMap = {};
function registerCalendarSystem(name, theClass) {
  calendarSystemClassMap[name] = theClass;
}
function createCalendarSystem(name) {
  return new calendarSystemClassMap[name]();
}
class GregorianCalendarSystem {
  getMarkerYear(d) {
    return d.getUTCFullYear();
  }
  getMarkerMonth(d) {
    return d.getUTCMonth();
  }
  getMarkerDay(d) {
    return d.getUTCDate();
  }
  arrayToMarker(arr) {
    return arrayToUtcDate(arr);
  }
  markerToArray(marker) {
    return dateToUtcArray(marker);
  }
}
registerCalendarSystem('gregory', GregorianCalendarSystem);
const ISO_RE = /^\s*(\d{4})(-?(\d{2})(-?(\d{2})([T ](\d{2}):?(\d{2})(:?(\d{2})(\.(\d+))?)?(Z|(([-+])(\d{2})(:?(\d{2}))?))?)?)?)?$/;
function parse(str) {
  let m = ISO_RE.exec(str);
  if (m) {
    let marker = new Date(Date.UTC(Number(m[1]), m[3] ? Number(m[3]) - 1 : 0, Number(m[5] || 1), Number(m[7] || 0), Number(m[8] || 0), Number(m[10] || 0), m[12] ? Number(`0.${m[12]}`) * 1000 : 0));
    if (isValidDate(marker)) {
      let timeZoneOffset = null;
      if (m[13]) {
        timeZoneOffset = (m[15] === '-' ? -1 : 1) * (Number(m[16] || 0) * 60 + Number(m[18] || 0));
      }
      return {
        marker,
        isTimeUnspecified: !m[6],
        timeZoneOffset
      };
    }
  }
  return null;
}
class DateEnv {
  constructor(settings) {
    let timeZone = this.timeZone = settings.timeZone;
    let isNamedTimeZone = timeZone !== 'local' && timeZone !== 'UTC';
    if (settings.namedTimeZoneImpl && isNamedTimeZone) {
      this.namedTimeZoneImpl = new settings.namedTimeZoneImpl(timeZone);
    }
    this.canComputeOffset = Boolean(!isNamedTimeZone || this.namedTimeZoneImpl);
    this.calendarSystem = createCalendarSystem(settings.calendarSystem);
    this.locale = settings.locale;
    this.weekDow = settings.locale.week.dow;
    this.weekDoy = settings.locale.week.doy;
    if (settings.weekNumberCalculation === 'ISO') {
      this.weekDow = 1;
      this.weekDoy = 4;
    }
    if (typeof settings.firstDay === 'number') {
      this.weekDow = settings.firstDay;
    }
    if (typeof settings.weekNumberCalculation === 'function') {
      this.weekNumberFunc = settings.weekNumberCalculation;
    }
    this.weekText = settings.weekText != null ? settings.weekText : settings.locale.options.weekText;
    this.weekTextLong = (settings.weekTextLong != null ? settings.weekTextLong : settings.locale.options.weekTextLong) || this.weekText;
    this.cmdFormatter = settings.cmdFormatter;
    this.defaultSeparator = settings.defaultSeparator;
  }
  // Creating / Parsing
  createMarker(input) {
    let meta = this.createMarkerMeta(input);
    if (meta === null) {
      return null;
    }
    return meta.marker;
  }
  createNowMarker() {
    if (this.canComputeOffset) {
      return this.timestampToMarker(new Date().valueOf());
    }
    // if we can't compute the current date val for a timezone,
    // better to give the current local date vals than UTC
    return arrayToUtcDate(dateToLocalArray(new Date()));
  }
  createMarkerMeta(input) {
    if (typeof input === 'string') {
      return this.parse(input);
    }
    let marker = null;
    if (typeof input === 'number') {
      marker = this.timestampToMarker(input);
    } else if (input instanceof Date) {
      input = input.valueOf();
      if (!isNaN(input)) {
        marker = this.timestampToMarker(input);
      }
    } else if (Array.isArray(input)) {
      marker = arrayToUtcDate(input);
    }
    if (marker === null || !isValidDate(marker)) {
      return null;
    }
    return {
      marker,
      isTimeUnspecified: false,
      forcedTzo: null
    };
  }
  parse(s) {
    let parts = parse(s);
    if (parts === null) {
      return null;
    }
    let {
      marker
    } = parts;
    let forcedTzo = null;
    if (parts.timeZoneOffset !== null) {
      if (this.canComputeOffset) {
        marker = this.timestampToMarker(marker.valueOf() - parts.timeZoneOffset * 60 * 1000);
      } else {
        forcedTzo = parts.timeZoneOffset;
      }
    }
    return {
      marker,
      isTimeUnspecified: parts.isTimeUnspecified,
      forcedTzo
    };
  }
  // Accessors
  getYear(marker) {
    return this.calendarSystem.getMarkerYear(marker);
  }
  getMonth(marker) {
    return this.calendarSystem.getMarkerMonth(marker);
  }
  getDay(marker) {
    return this.calendarSystem.getMarkerDay(marker);
  }
  // Adding / Subtracting
  add(marker, dur) {
    let a = this.calendarSystem.markerToArray(marker);
    a[0] += dur.years;
    a[1] += dur.months;
    a[2] += dur.days;
    a[6] += dur.milliseconds;
    return this.calendarSystem.arrayToMarker(a);
  }
  subtract(marker, dur) {
    let a = this.calendarSystem.markerToArray(marker);
    a[0] -= dur.years;
    a[1] -= dur.months;
    a[2] -= dur.days;
    a[6] -= dur.milliseconds;
    return this.calendarSystem.arrayToMarker(a);
  }
  addYears(marker, n) {
    let a = this.calendarSystem.markerToArray(marker);
    a[0] += n;
    return this.calendarSystem.arrayToMarker(a);
  }
  addMonths(marker, n) {
    let a = this.calendarSystem.markerToArray(marker);
    a[1] += n;
    return this.calendarSystem.arrayToMarker(a);
  }
  // Diffing Whole Units
  diffWholeYears(m0, m1) {
    let {
      calendarSystem
    } = this;
    if (timeAsMs(m0) === timeAsMs(m1) && calendarSystem.getMarkerDay(m0) === calendarSystem.getMarkerDay(m1) && calendarSystem.getMarkerMonth(m0) === calendarSystem.getMarkerMonth(m1)) {
      return calendarSystem.getMarkerYear(m1) - calendarSystem.getMarkerYear(m0);
    }
    return null;
  }
  diffWholeMonths(m0, m1) {
    let {
      calendarSystem
    } = this;
    if (timeAsMs(m0) === timeAsMs(m1) && calendarSystem.getMarkerDay(m0) === calendarSystem.getMarkerDay(m1)) {
      return calendarSystem.getMarkerMonth(m1) - calendarSystem.getMarkerMonth(m0) + (calendarSystem.getMarkerYear(m1) - calendarSystem.getMarkerYear(m0)) * 12;
    }
    return null;
  }
  // Range / Duration
  greatestWholeUnit(m0, m1) {
    let n = this.diffWholeYears(m0, m1);
    if (n !== null) {
      return {
        unit: 'year',
        value: n
      };
    }
    n = this.diffWholeMonths(m0, m1);
    if (n !== null) {
      return {
        unit: 'month',
        value: n
      };
    }
    n = diffWholeWeeks(m0, m1);
    if (n !== null) {
      return {
        unit: 'week',
        value: n
      };
    }
    n = diffWholeDays(m0, m1);
    if (n !== null) {
      return {
        unit: 'day',
        value: n
      };
    }
    n = diffHours(m0, m1);
    if (isInt(n)) {
      return {
        unit: 'hour',
        value: n
      };
    }
    n = diffMinutes(m0, m1);
    if (isInt(n)) {
      return {
        unit: 'minute',
        value: n
      };
    }
    n = diffSeconds(m0, m1);
    if (isInt(n)) {
      return {
        unit: 'second',
        value: n
      };
    }
    return {
      unit: 'millisecond',
      value: m1.valueOf() - m0.valueOf()
    };
  }
  countDurationsBetween(m0, m1, d) {
    // TODO: can use greatestWholeUnit
    let diff;
    if (d.years) {
      diff = this.diffWholeYears(m0, m1);
      if (diff !== null) {
        return diff / asRoughYears(d);
      }
    }
    if (d.months) {
      diff = this.diffWholeMonths(m0, m1);
      if (diff !== null) {
        return diff / asRoughMonths(d);
      }
    }
    if (d.days) {
      diff = diffWholeDays(m0, m1);
      if (diff !== null) {
        return diff / asRoughDays(d);
      }
    }
    return (m1.valueOf() - m0.valueOf()) / asRoughMs(d);
  }
  // Start-Of
  // these DON'T return zoned-dates. only UTC start-of dates
  startOf(m, unit) {
    if (unit === 'year') {
      return this.startOfYear(m);
    }
    if (unit === 'month') {
      return this.startOfMonth(m);
    }
    if (unit === 'week') {
      return this.startOfWeek(m);
    }
    if (unit === 'day') {
      return startOfDay(m);
    }
    if (unit === 'hour') {
      return startOfHour(m);
    }
    if (unit === 'minute') {
      return startOfMinute(m);
    }
    if (unit === 'second') {
      return startOfSecond(m);
    }
    return null;
  }
  startOfYear(m) {
    return this.calendarSystem.arrayToMarker([this.calendarSystem.getMarkerYear(m)]);
  }
  startOfMonth(m) {
    return this.calendarSystem.arrayToMarker([this.calendarSystem.getMarkerYear(m), this.calendarSystem.getMarkerMonth(m)]);
  }
  startOfWeek(m) {
    return this.calendarSystem.arrayToMarker([this.calendarSystem.getMarkerYear(m), this.calendarSystem.getMarkerMonth(m), m.getUTCDate() - (m.getUTCDay() - this.weekDow + 7) % 7]);
  }
  // Week Number
  computeWeekNumber(marker) {
    if (this.weekNumberFunc) {
      return this.weekNumberFunc(this.toDate(marker));
    }
    return weekOfYear(marker, this.weekDow, this.weekDoy);
  }
  // TODO: choke on timeZoneName: long
  format(marker, formatter, dateOptions = {}) {
    return formatter.format({
      marker,
      timeZoneOffset: dateOptions.forcedTzo != null ? dateOptions.forcedTzo : this.offsetForMarker(marker)
    }, this);
  }
  formatRange(start, end, formatter, dateOptions = {}) {
    if (dateOptions.isEndExclusive) {
      end = addMs(end, -1);
    }
    return formatter.formatRange({
      marker: start,
      timeZoneOffset: dateOptions.forcedStartTzo != null ? dateOptions.forcedStartTzo : this.offsetForMarker(start)
    }, {
      marker: end,
      timeZoneOffset: dateOptions.forcedEndTzo != null ? dateOptions.forcedEndTzo : this.offsetForMarker(end)
    }, this, dateOptions.defaultSeparator);
  }
  /*
  DUMB: the omitTime arg is dumb. if we omit the time, we want to omit the timezone offset. and if we do that,
  might as well use buildIsoString or some other util directly
  */
  formatIso(marker, extraOptions = {}) {
    let timeZoneOffset = null;
    if (!extraOptions.omitTimeZoneOffset) {
      if (extraOptions.forcedTzo != null) {
        timeZoneOffset = extraOptions.forcedTzo;
      } else {
        timeZoneOffset = this.offsetForMarker(marker);
      }
    }
    return buildIsoString(marker, timeZoneOffset, extraOptions.omitTime);
  }
  // TimeZone
  timestampToMarker(ms) {
    if (this.timeZone === 'local') {
      return arrayToUtcDate(dateToLocalArray(new Date(ms)));
    }
    if (this.timeZone === 'UTC' || !this.namedTimeZoneImpl) {
      return new Date(ms);
    }
    return arrayToUtcDate(this.namedTimeZoneImpl.timestampToArray(ms));
  }
  offsetForMarker(m) {
    if (this.timeZone === 'local') {
      return -arrayToLocalDate(dateToUtcArray(m)).getTimezoneOffset(); // convert "inverse" offset to "normal" offset
    }

    if (this.timeZone === 'UTC') {
      return 0;
    }
    if (this.namedTimeZoneImpl) {
      return this.namedTimeZoneImpl.offsetForArray(dateToUtcArray(m));
    }
    return null;
  }
  // Conversion
  toDate(m, forcedTzo) {
    if (this.timeZone === 'local') {
      return arrayToLocalDate(dateToUtcArray(m));
    }
    if (this.timeZone === 'UTC') {
      return new Date(m.valueOf()); // make sure it's a copy
    }

    if (!this.namedTimeZoneImpl) {
      return new Date(m.valueOf() - (forcedTzo || 0));
    }
    return new Date(m.valueOf() - this.namedTimeZoneImpl.offsetForArray(dateToUtcArray(m)) * 1000 * 60);
  }
}
class NamedTimeZoneImpl {
  constructor(timeZoneName) {
    this.timeZoneName = timeZoneName;
  }
}
class SegHierarchy {
  constructor() {
    // settings
    this.strictOrder = false;
    this.allowReslicing = false;
    this.maxCoord = -1; // -1 means no max
    this.maxStackCnt = -1; // -1 means no max
    this.levelCoords = []; // ordered
    this.entriesByLevel = []; // parallel with levelCoords
    this.stackCnts = {}; // TODO: use better technique!?
  }

  addSegs(inputs) {
    let hiddenEntries = [];
    for (let input of inputs) {
      this.insertEntry(input, hiddenEntries);
    }
    return hiddenEntries;
  }
  insertEntry(entry, hiddenEntries) {
    let insertion = this.findInsertion(entry);
    if (this.isInsertionValid(insertion, entry)) {
      this.insertEntryAt(entry, insertion);
      return 1;
    }
    return this.handleInvalidInsertion(insertion, entry, hiddenEntries);
  }
  isInsertionValid(insertion, entry) {
    return (this.maxCoord === -1 || insertion.levelCoord + entry.thickness <= this.maxCoord) && (this.maxStackCnt === -1 || insertion.stackCnt < this.maxStackCnt);
  }
  // returns number of new entries inserted
  handleInvalidInsertion(insertion, entry, hiddenEntries) {
    if (this.allowReslicing && insertion.touchingEntry) {
      return this.splitEntry(entry, insertion.touchingEntry, hiddenEntries);
    }
    hiddenEntries.push(entry);
    return 0;
  }
  splitEntry(entry, barrier, hiddenEntries) {
    let partCnt = 0;
    let splitHiddenEntries = [];
    let entrySpan = entry.span;
    let barrierSpan = barrier.span;
    if (entrySpan.start < barrierSpan.start) {
      partCnt += this.insertEntry({
        index: entry.index,
        thickness: entry.thickness,
        span: {
          start: entrySpan.start,
          end: barrierSpan.start
        }
      }, splitHiddenEntries);
    }
    if (entrySpan.end > barrierSpan.end) {
      partCnt += this.insertEntry({
        index: entry.index,
        thickness: entry.thickness,
        span: {
          start: barrierSpan.end,
          end: entrySpan.end
        }
      }, splitHiddenEntries);
    }
    if (partCnt) {
      hiddenEntries.push({
        index: entry.index,
        thickness: entry.thickness,
        span: intersectSpans(barrierSpan, entrySpan) // guaranteed to intersect
      }, ...splitHiddenEntries);
      return partCnt;
    }
    hiddenEntries.push(entry);
    return 0;
  }
  insertEntryAt(entry, insertion) {
    let {
      entriesByLevel,
      levelCoords
    } = this;
    if (insertion.lateral === -1) {
      // create a new level
      insertAt(levelCoords, insertion.level, insertion.levelCoord);
      insertAt(entriesByLevel, insertion.level, [entry]);
    } else {
      // insert into existing level
      insertAt(entriesByLevel[insertion.level], insertion.lateral, entry);
    }
    this.stackCnts[buildEntryKey(entry)] = insertion.stackCnt;
  }
  findInsertion(newEntry) {
    let {
      levelCoords,
      entriesByLevel,
      strictOrder,
      stackCnts
    } = this;
    let levelCnt = levelCoords.length;
    let candidateCoord = 0;
    let touchingLevel = -1;
    let touchingLateral = -1;
    let touchingEntry = null;
    let stackCnt = 0;
    for (let trackingLevel = 0; trackingLevel < levelCnt; trackingLevel += 1) {
      let trackingCoord = levelCoords[trackingLevel];
      // if the current level is past the placed entry, we have found a good empty space and can stop.
      // if strictOrder, keep finding more lateral intersections.
      if (!strictOrder && trackingCoord >= candidateCoord + newEntry.thickness) {
        break;
      }
      let trackingEntries = entriesByLevel[trackingLevel];
      let trackingEntry;
      let searchRes = binarySearch(trackingEntries, newEntry.span.start, getEntrySpanEnd); // find first entry after newEntry's end
      let lateralIndex = searchRes[0] + searchRes[1]; // if exact match (which doesn't collide), go to next one
      while (
      // loop through entries that horizontally intersect
      (trackingEntry = trackingEntries[lateralIndex]) &&
      // but not past the whole entry list
      trackingEntry.span.start < newEntry.span.end // and not entirely past newEntry
      ) {
        let trackingEntryBottom = trackingCoord + trackingEntry.thickness;
        // intersects into the top of the candidate?
        if (trackingEntryBottom > candidateCoord) {
          candidateCoord = trackingEntryBottom;
          touchingEntry = trackingEntry;
          touchingLevel = trackingLevel;
          touchingLateral = lateralIndex;
        }
        // butts up against top of candidate? (will happen if just intersected as well)
        if (trackingEntryBottom === candidateCoord) {
          // accumulate the highest possible stackCnt of the trackingEntries that butt up
          stackCnt = Math.max(stackCnt, stackCnts[buildEntryKey(trackingEntry)] + 1);
        }
        lateralIndex += 1;
      }
    }
    // the destination level will be after touchingEntry's level. find it
    let destLevel = 0;
    if (touchingEntry) {
      destLevel = touchingLevel + 1;
      while (destLevel < levelCnt && levelCoords[destLevel] < candidateCoord) {
        destLevel += 1;
      }
    }
    // if adding to an existing level, find where to insert
    let destLateral = -1;
    if (destLevel < levelCnt && levelCoords[destLevel] === candidateCoord) {
      destLateral = binarySearch(entriesByLevel[destLevel], newEntry.span.end, getEntrySpanEnd)[0];
    }
    return {
      touchingLevel,
      touchingLateral,
      touchingEntry,
      stackCnt,
      levelCoord: candidateCoord,
      level: destLevel,
      lateral: destLateral
    };
  }
  // sorted by levelCoord (lowest to highest)
  toRects() {
    let {
      entriesByLevel,
      levelCoords
    } = this;
    let levelCnt = entriesByLevel.length;
    let rects = [];
    for (let level = 0; level < levelCnt; level += 1) {
      let entries = entriesByLevel[level];
      let levelCoord = levelCoords[level];
      for (let entry of entries) {
        rects.push(Object.assign(Object.assign({}, entry), {
          levelCoord
        }));
      }
    }
    return rects;
  }
}
function getEntrySpanEnd(entry) {
  return entry.span.end;
}
function buildEntryKey(entry) {
  return entry.index + ':' + entry.span.start;
}
// returns groups with entries sorted by input order
function groupIntersectingEntries(entries) {
  let merges = [];
  for (let entry of entries) {
    let filteredMerges = [];
    let hungryMerge = {
      span: entry.span,
      entries: [entry]
    };
    for (let merge of merges) {
      if (intersectSpans(merge.span, hungryMerge.span)) {
        hungryMerge = {
          entries: merge.entries.concat(hungryMerge.entries),
          span: joinSpans(merge.span, hungryMerge.span)
        };
      } else {
        filteredMerges.push(merge);
      }
    }
    filteredMerges.push(hungryMerge);
    merges = filteredMerges;
  }
  return merges;
}
function joinSpans(span0, span1) {
  return {
    start: Math.min(span0.start, span1.start),
    end: Math.max(span0.end, span1.end)
  };
}
function intersectSpans(span0, span1) {
  let start = Math.max(span0.start, span1.start);
  let end = Math.min(span0.end, span1.end);
  if (start < end) {
    return {
      start,
      end
    };
  }
  return null;
}
// general util
// ---------------------------------------------------------------------------------------------------------------------
function insertAt(arr, index, item) {
  arr.splice(index, 0, item);
}
function binarySearch(a, searchVal, getItemVal) {
  let startIndex = 0;
  let endIndex = a.length; // exclusive
  if (!endIndex || searchVal < getItemVal(a[startIndex])) {
    // no items OR before first item
    return [0, 0];
  }
  if (searchVal > getItemVal(a[endIndex - 1])) {
    // after last item
    return [endIndex, 0];
  }
  while (startIndex < endIndex) {
    let middleIndex = Math.floor(startIndex + (endIndex - startIndex) / 2);
    let middleVal = getItemVal(a[middleIndex]);
    if (searchVal < middleVal) {
      endIndex = middleIndex;
    } else if (searchVal > middleVal) {
      startIndex = middleIndex + 1;
    } else {
      // equal!
      return [middleIndex, 1];
    }
  }
  return [startIndex, 0];
}
class Interaction {
  constructor(settings) {
    this.component = settings.component;
    this.isHitComboAllowed = settings.isHitComboAllowed || null;
  }
  destroy() {}
}
function parseInteractionSettings(component, input) {
  return {
    component,
    el: input.el,
    useEventCenter: input.useEventCenter != null ? input.useEventCenter : true,
    isHitComboAllowed: input.isHitComboAllowed || null
  };
}
function interactionSettingsToStore(settings) {
  return {
    [settings.component.uid]: settings
  };
}
// global state
const interactionSettingsStore = {};

/*
An abstraction for a dragging interaction originating on an event.
Does higher-level things than PointerDragger, such as possibly:
- a "mirror" that moves with the pointer
- a minimum number of pixels or other criteria for a true drag to begin

subclasses must emit:
- pointerdown
- dragstart
- dragmove
- pointerup
- dragend
*/
class ElementDragging {
  constructor(el, selector) {
    this.emitter = new Emitter();
  }
  destroy() {}
  setMirrorIsVisible(bool) {
    // optional if subclass doesn't want to support a mirror
  }
  setMirrorNeedsRevert(bool) {
    // optional if subclass doesn't want to support a mirror
  }
  setAutoScrollEnabled(bool) {
    // optional
  }
}

// TODO: get rid of this in favor of options system,
// tho it's really easy to access this globally rather than pass thru options.
const config = {};

/*
Information about what will happen when an external element is dragged-and-dropped
onto a calendar. Contains information for creating an event.
*/
const DRAG_META_REFINERS = {
  startTime: createDuration,
  duration: createDuration,
  create: Boolean,
  sourceId: String
};
function parseDragMeta(raw) {
  let {
    refined,
    extra
  } = refineProps(raw, DRAG_META_REFINERS);
  return {
    startTime: refined.startTime || null,
    duration: refined.duration || null,
    create: refined.create != null ? refined.create : true,
    sourceId: refined.sourceId,
    leftoverProps: extra
  };
}
class CalendarRoot extends BaseComponent {
  constructor() {
    super(...arguments);
    this.state = {
      forPrint: false
    };
    this.handleBeforePrint = () => {
      this.setState({
        forPrint: true
      });
    };
    this.handleAfterPrint = () => {
      this.setState({
        forPrint: false
      });
    };
  }
  render() {
    let {
      props
    } = this;
    let {
      options
    } = props;
    let {
      forPrint
    } = this.state;
    let isHeightAuto = forPrint || options.height === 'auto' || options.contentHeight === 'auto';
    let height = !isHeightAuto && options.height != null ? options.height : '';
    let classNames = ['fc', forPrint ? 'fc-media-print' : 'fc-media-screen', `fc-direction-${options.direction}`, props.theme.getClass('root')];
    if (!getCanVGrowWithinCell()) {
      classNames.push('fc-liquid-hack');
    }
    return props.children(classNames, height, isHeightAuto, forPrint);
  }
  componentDidMount() {
    let {
      emitter
    } = this.props;
    emitter.on('_beforeprint', this.handleBeforePrint);
    emitter.on('_afterprint', this.handleAfterPrint);
  }
  componentWillUnmount() {
    let {
      emitter
    } = this.props;
    emitter.off('_beforeprint', this.handleBeforePrint);
    emitter.off('_afterprint', this.handleAfterPrint);
  }
}

// Computes a default column header formatting string if `colFormat` is not explicitly defined
function computeFallbackHeaderFormat(datesRepDistinctDays, dayCnt) {
  // if more than one week row, or if there are a lot of columns with not much space,
  // put just the day numbers will be in each cell
  if (!datesRepDistinctDays || dayCnt > 10) {
    return createFormatter({
      weekday: 'short'
    }); // "Sat"
  }

  if (dayCnt > 1) {
    return createFormatter({
      weekday: 'short',
      month: 'numeric',
      day: 'numeric',
      omitCommas: true
    }); // "Sat 11/12"
  }

  return createFormatter({
    weekday: 'long'
  }); // "Saturday"
}

const CLASS_NAME = 'fc-col-header-cell'; // do the cushion too? no
function renderInner$1(renderProps) {
  return renderProps.text;
}
class ContentInjector extends BaseComponent {
  constructor() {
    super(...arguments);
    this.id = guid();
    this.queuedDomNodes = [];
    this.currentDomNodes = [];
    this.handleEl = el => {
      if (this.props.elRef) {
        setRef(this.props.elRef, el);
      }
    };
  }
  render() {
    const {
      props,
      context
    } = this;
    const {
      options
    } = context;
    const {
      customGenerator,
      defaultGenerator,
      renderProps
    } = props;
    const attrs = buildElAttrs(props);
    let useDefault = false;
    let innerContent;
    let queuedDomNodes = [];
    let currentGeneratorMeta;
    if (customGenerator != null) {
      const customGeneratorRes = typeof customGenerator === 'function' ? customGenerator(renderProps, preact__WEBPACK_IMPORTED_MODULE_0__.createElement) : customGenerator;
      if (customGeneratorRes === true) {
        useDefault = true;
      } else {
        const isObject = customGeneratorRes && typeof customGeneratorRes === 'object'; // non-null
        if (isObject && 'html' in customGeneratorRes) {
          attrs.dangerouslySetInnerHTML = {
            __html: customGeneratorRes.html
          };
        } else if (isObject && 'domNodes' in customGeneratorRes) {
          queuedDomNodes = Array.prototype.slice.call(customGeneratorRes.domNodes);
        } else if (!isObject && typeof customGeneratorRes !== 'function') {
          // primitive value (like string or number)
          innerContent = customGeneratorRes;
        } else {
          // an exotic object for handleCustomRendering
          currentGeneratorMeta = customGeneratorRes;
        }
      }
    } else {
      useDefault = !hasCustomRenderingHandler(props.generatorName, options);
    }
    if (useDefault && defaultGenerator) {
      innerContent = defaultGenerator(renderProps);
    }
    this.queuedDomNodes = queuedDomNodes;
    this.currentGeneratorMeta = currentGeneratorMeta;
    return (0,preact__WEBPACK_IMPORTED_MODULE_0__.createElement)(props.elTag, attrs, innerContent);
  }
  componentDidMount() {
    this.applyQueueudDomNodes();
    this.triggerCustomRendering(true);
  }
  componentDidUpdate() {
    this.applyQueueudDomNodes();
    this.triggerCustomRendering(true);
  }
  componentWillUnmount() {
    this.triggerCustomRendering(false); // TODO: different API for removal?
  }

  triggerCustomRendering(isActive) {
    var _a;
    const {
      props,
      context
    } = this;
    const {
      handleCustomRendering,
      customRenderingMetaMap
    } = context.options;
    if (handleCustomRendering) {
      const generatorMeta = (_a = this.currentGeneratorMeta) !== null && _a !== void 0 ? _a : customRenderingMetaMap === null || customRenderingMetaMap === void 0 ? void 0 : customRenderingMetaMap[props.generatorName];
      if (generatorMeta) {
        handleCustomRendering(Object.assign(Object.assign({
          id: this.id,
          isActive,
          containerEl: this.base,
          reportNewContainerEl: this.handleEl,
          // for customRenderingReplacesEl
          generatorMeta
        }, props), {
          elClasses: (props.elClasses || []).filter(isTruthy)
        }));
      }
    }
  }
  applyQueueudDomNodes() {
    const {
      queuedDomNodes,
      currentDomNodes
    } = this;
    const el = this.base;
    if (!isArraysEqual(queuedDomNodes, currentDomNodes)) {
      currentDomNodes.forEach(removeElement);
      for (let newNode of queuedDomNodes) {
        el.appendChild(newNode);
      }
      this.currentDomNodes = queuedDomNodes;
    }
  }
}
ContentInjector.addPropsEquality({
  elClasses: isArraysEqual,
  elStyle: isPropsEqual,
  elAttrs: isNonHandlerPropsEqual,
  renderProps: isPropsEqual
});
// Util
/*
Does UI-framework provide custom way of rendering?
*/
function hasCustomRenderingHandler(generatorName, options) {
  var _a;
  return Boolean(options.handleCustomRendering && generatorName && ((_a = options.customRenderingMetaMap) === null || _a === void 0 ? void 0 : _a[generatorName]));
}
function buildElAttrs(props, extraClassNames) {
  const attrs = Object.assign(Object.assign({}, props.elAttrs), {
    ref: props.elRef
  });
  if (props.elClasses || extraClassNames) {
    attrs.className = (props.elClasses || []).concat(extraClassNames || []).concat(attrs.className || []).filter(Boolean).join(' ');
  }
  if (props.elStyle) {
    attrs.style = props.elStyle;
  }
  return attrs;
}
function isTruthy(val) {
  return Boolean(val);
}
const RenderId = createContext(0);
class ContentContainer extends preact__WEBPACK_IMPORTED_MODULE_0__.Component {
  constructor() {
    super(...arguments);
    this.InnerContent = InnerContentInjector.bind(undefined, this);
    this.handleRootEl = el => {
      this.rootEl = el;
      if (this.props.elRef) {
        setRef(this.props.elRef, el);
      }
    };
  }
  render() {
    const {
      props
    } = this;
    const generatedClassNames = generateClassNames(props.classNameGenerator, props.renderProps);
    if (props.children) {
      const elAttrs = buildElAttrs(props, generatedClassNames);
      const children = props.children(this.InnerContent, props.renderProps, elAttrs);
      if (props.elTag) {
        return (0,preact__WEBPACK_IMPORTED_MODULE_0__.createElement)(props.elTag, elAttrs, children);
      } else {
        return children;
      }
    } else {
      return (0,preact__WEBPACK_IMPORTED_MODULE_0__.createElement)(ContentInjector, Object.assign(Object.assign({}, props), {
        elRef: this.handleRootEl,
        elTag: props.elTag || 'div',
        elClasses: (props.elClasses || []).concat(generatedClassNames),
        renderId: this.context
      }));
    }
  }
  componentDidMount() {
    var _a, _b;
    (_b = (_a = this.props).didMount) === null || _b === void 0 ? void 0 : _b.call(_a, Object.assign(Object.assign({}, this.props.renderProps), {
      el: this.rootEl || this.base
    }));
  }
  componentWillUnmount() {
    var _a, _b;
    (_b = (_a = this.props).willUnmount) === null || _b === void 0 ? void 0 : _b.call(_a, Object.assign(Object.assign({}, this.props.renderProps), {
      el: this.rootEl || this.base
    }));
  }
}
ContentContainer.contextType = RenderId;
function InnerContentInjector(containerComponent, props) {
  const parentProps = containerComponent.props;
  return (0,preact__WEBPACK_IMPORTED_MODULE_0__.createElement)(ContentInjector, Object.assign({
    renderProps: parentProps.renderProps,
    generatorName: parentProps.generatorName,
    customGenerator: parentProps.customGenerator,
    defaultGenerator: parentProps.defaultGenerator,
    renderId: containerComponent.context
  }, props));
}
// Utils
function generateClassNames(classNameGenerator, renderProps) {
  const classNames = typeof classNameGenerator === 'function' ? classNameGenerator(renderProps) : classNameGenerator || [];
  return typeof classNames === 'string' ? [classNames] : classNames;
}

// BAD name for this class now. used in the Header
class TableDateCell extends BaseComponent {
  render() {
    let {
      dateEnv,
      options,
      theme,
      viewApi
    } = this.context;
    let {
      props
    } = this;
    let {
      date,
      dateProfile
    } = props;
    let dayMeta = getDateMeta(date, props.todayRange, null, dateProfile);
    let classNames = [CLASS_NAME].concat(getDayClassNames(dayMeta, theme));
    let text = dateEnv.format(date, props.dayHeaderFormat);
    // if colCnt is 1, we are already in a day-view and don't need a navlink
    let navLinkAttrs = !dayMeta.isDisabled && props.colCnt > 1 ? buildNavLinkAttrs(this.context, date) : {};
    let renderProps = Object.assign(Object.assign(Object.assign({
      date: dateEnv.toDate(date),
      view: viewApi
    }, props.extraRenderProps), {
      text
    }), dayMeta);
    return (0,preact__WEBPACK_IMPORTED_MODULE_0__.createElement)(ContentContainer, {
      elTag: "th",
      elClasses: classNames,
      elAttrs: Object.assign({
        role: 'columnheader',
        colSpan: props.colSpan,
        'data-date': !dayMeta.isDisabled ? formatDayString(date) : undefined
      }, props.extraDataAttrs),
      renderProps: renderProps,
      generatorName: "dayHeaderContent",
      customGenerator: options.dayHeaderContent,
      defaultGenerator: renderInner$1,
      classNameGenerator: options.dayHeaderClassNames,
      didMount: options.dayHeaderDidMount,
      willUnmount: options.dayHeaderWillUnmount
    }, InnerContainer => (0,preact__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "fc-scrollgrid-sync-inner"
    }, !dayMeta.isDisabled && (0,preact__WEBPACK_IMPORTED_MODULE_0__.createElement)(InnerContainer, {
      elTag: "a",
      elAttrs: navLinkAttrs,
      elClasses: ['fc-col-header-cell-cushion', props.isSticky && 'fc-sticky']
    })));
  }
}
const WEEKDAY_FORMAT = createFormatter({
  weekday: 'long'
});
class TableDowCell extends BaseComponent {
  render() {
    let {
      props
    } = this;
    let {
      dateEnv,
      theme,
      viewApi,
      options
    } = this.context;
    let date = addDays(new Date(259200000), props.dow); // start with Sun, 04 Jan 1970 00:00:00 GMT
    let dateMeta = {
      dow: props.dow,
      isDisabled: false,
      isFuture: false,
      isPast: false,
      isToday: false,
      isOther: false
    };
    let text = dateEnv.format(date, props.dayHeaderFormat);
    let renderProps = Object.assign(Object.assign(Object.assign(Object.assign({
      // TODO: make this public?
      date
    }, dateMeta), {
      view: viewApi
    }), props.extraRenderProps), {
      text
    });
    return (0,preact__WEBPACK_IMPORTED_MODULE_0__.createElement)(ContentContainer, {
      elTag: "th",
      elClasses: [CLASS_NAME, ...getDayClassNames(dateMeta, theme), ...(props.extraClassNames || [])],
      elAttrs: Object.assign({
        role: 'columnheader',
        colSpan: props.colSpan
      }, props.extraDataAttrs),
      renderProps: renderProps,
      generatorName: "dayHeaderContent",
      customGenerator: options.dayHeaderContent,
      defaultGenerator: renderInner$1,
      classNameGenerator: options.dayHeaderClassNames,
      didMount: options.dayHeaderDidMount,
      willUnmount: options.dayHeaderWillUnmount
    }, InnerContent => (0,preact__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "fc-scrollgrid-sync-inner"
    }, (0,preact__WEBPACK_IMPORTED_MODULE_0__.createElement)(InnerContent, {
      elTag: "a",
      elClasses: ['fc-col-header-cell-cushion', props.isSticky && 'fc-sticky'],
      elAttrs: {
        'aria-label': dateEnv.format(date, WEEKDAY_FORMAT)
      }
    })));
  }
}
class NowTimer extends preact__WEBPACK_IMPORTED_MODULE_0__.Component {
  constructor(props, context) {
    super(props, context);
    this.initialNowDate = getNow(context.options.now, context.dateEnv);
    this.initialNowQueriedMs = new Date().valueOf();
    this.state = this.computeTiming().currentState;
  }
  render() {
    let {
      props,
      state
    } = this;
    return props.children(state.nowDate, state.todayRange);
  }
  componentDidMount() {
    this.setTimeout();
  }
  componentDidUpdate(prevProps) {
    if (prevProps.unit !== this.props.unit) {
      this.clearTimeout();
      this.setTimeout();
    }
  }
  componentWillUnmount() {
    this.clearTimeout();
  }
  computeTiming() {
    let {
      props,
      context
    } = this;
    let unroundedNow = addMs(this.initialNowDate, new Date().valueOf() - this.initialNowQueriedMs);
    let currentUnitStart = context.dateEnv.startOf(unroundedNow, props.unit);
    let nextUnitStart = context.dateEnv.add(currentUnitStart, createDuration(1, props.unit));
    let waitMs = nextUnitStart.valueOf() - unroundedNow.valueOf();
    // there is a max setTimeout ms value (https://stackoverflow.com/a/3468650/96342)
    // ensure no longer than a day
    waitMs = Math.min(1000 * 60 * 60 * 24, waitMs);
    return {
      currentState: {
        nowDate: currentUnitStart,
        todayRange: buildDayRange(currentUnitStart)
      },
      nextState: {
        nowDate: nextUnitStart,
        todayRange: buildDayRange(nextUnitStart)
      },
      waitMs
    };
  }
  setTimeout() {
    let {
      nextState,
      waitMs
    } = this.computeTiming();
    this.timeoutId = setTimeout(() => {
      this.setState(nextState, () => {
        this.setTimeout();
      });
    }, waitMs);
  }
  clearTimeout() {
    if (this.timeoutId) {
      clearTimeout(this.timeoutId);
    }
  }
}
NowTimer.contextType = ViewContextType;
function buildDayRange(date) {
  let start = startOfDay(date);
  let end = addDays(start, 1);
  return {
    start,
    end
  };
}
class DayHeader extends BaseComponent {
  constructor() {
    super(...arguments);
    this.createDayHeaderFormatter = memoize(createDayHeaderFormatter);
  }
  render() {
    let {
      context
    } = this;
    let {
      dates,
      dateProfile,
      datesRepDistinctDays,
      renderIntro
    } = this.props;
    let dayHeaderFormat = this.createDayHeaderFormatter(context.options.dayHeaderFormat, datesRepDistinctDays, dates.length);
    return (0,preact__WEBPACK_IMPORTED_MODULE_0__.createElement)(NowTimer, {
      unit: "day"
    }, (nowDate, todayRange) => (0,preact__WEBPACK_IMPORTED_MODULE_0__.createElement)("tr", {
      role: "row"
    }, renderIntro && renderIntro('day'), dates.map(date => datesRepDistinctDays ? (0,preact__WEBPACK_IMPORTED_MODULE_0__.createElement)(TableDateCell, {
      key: date.toISOString(),
      date: date,
      dateProfile: dateProfile,
      todayRange: todayRange,
      colCnt: dates.length,
      dayHeaderFormat: dayHeaderFormat
    }) : (0,preact__WEBPACK_IMPORTED_MODULE_0__.createElement)(TableDowCell, {
      key: date.getUTCDay(),
      dow: date.getUTCDay(),
      dayHeaderFormat: dayHeaderFormat
    }))));
  }
}
function createDayHeaderFormatter(explicitFormat, datesRepDistinctDays, dateCnt) {
  return explicitFormat || computeFallbackHeaderFormat(datesRepDistinctDays, dateCnt);
}
class DaySeriesModel {
  constructor(range, dateProfileGenerator) {
    let date = range.start;
    let {
      end
    } = range;
    let indices = [];
    let dates = [];
    let dayIndex = -1;
    while (date < end) {
      // loop each day from start to end
      if (dateProfileGenerator.isHiddenDay(date)) {
        indices.push(dayIndex + 0.5); // mark that it's between indices
      } else {
        dayIndex += 1;
        indices.push(dayIndex);
        dates.push(date);
      }
      date = addDays(date, 1);
    }
    this.dates = dates;
    this.indices = indices;
    this.cnt = dates.length;
  }
  sliceRange(range) {
    let firstIndex = this.getDateDayIndex(range.start); // inclusive first index
    let lastIndex = this.getDateDayIndex(addDays(range.end, -1)); // inclusive last index
    let clippedFirstIndex = Math.max(0, firstIndex);
    let clippedLastIndex = Math.min(this.cnt - 1, lastIndex);
    // deal with in-between indices
    clippedFirstIndex = Math.ceil(clippedFirstIndex); // in-between starts round to next cell
    clippedLastIndex = Math.floor(clippedLastIndex); // in-between ends round to prev cell
    if (clippedFirstIndex <= clippedLastIndex) {
      return {
        firstIndex: clippedFirstIndex,
        lastIndex: clippedLastIndex,
        isStart: firstIndex === clippedFirstIndex,
        isEnd: lastIndex === clippedLastIndex
      };
    }
    return null;
  }
  // Given a date, returns its chronolocial cell-index from the first cell of the grid.
  // If the date lies between cells (because of hiddenDays), returns a floating-point value between offsets.
  // If before the first offset, returns a negative number.
  // If after the last offset, returns an offset past the last cell offset.
  // Only works for *start* dates of cells. Will not work for exclusive end dates for cells.
  getDateDayIndex(date) {
    let {
      indices
    } = this;
    let dayOffset = Math.floor(diffDays(this.dates[0], date));
    if (dayOffset < 0) {
      return indices[0] - 1;
    }
    if (dayOffset >= indices.length) {
      return indices[indices.length - 1] + 1;
    }
    return indices[dayOffset];
  }
}
class DayTableModel {
  constructor(daySeries, breakOnWeeks) {
    let {
      dates
    } = daySeries;
    let daysPerRow;
    let firstDay;
    let rowCnt;
    if (breakOnWeeks) {
      // count columns until the day-of-week repeats
      firstDay = dates[0].getUTCDay();
      for (daysPerRow = 1; daysPerRow < dates.length; daysPerRow += 1) {
        if (dates[daysPerRow].getUTCDay() === firstDay) {
          break;
        }
      }
      rowCnt = Math.ceil(dates.length / daysPerRow);
    } else {
      rowCnt = 1;
      daysPerRow = dates.length;
    }
    this.rowCnt = rowCnt;
    this.colCnt = daysPerRow;
    this.daySeries = daySeries;
    this.cells = this.buildCells();
    this.headerDates = this.buildHeaderDates();
  }
  buildCells() {
    let rows = [];
    for (let row = 0; row < this.rowCnt; row += 1) {
      let cells = [];
      for (let col = 0; col < this.colCnt; col += 1) {
        cells.push(this.buildCell(row, col));
      }
      rows.push(cells);
    }
    return rows;
  }
  buildCell(row, col) {
    let date = this.daySeries.dates[row * this.colCnt + col];
    return {
      key: date.toISOString(),
      date
    };
  }
  buildHeaderDates() {
    let dates = [];
    for (let col = 0; col < this.colCnt; col += 1) {
      dates.push(this.cells[0][col].date);
    }
    return dates;
  }
  sliceRange(range) {
    let {
      colCnt
    } = this;
    let seriesSeg = this.daySeries.sliceRange(range);
    let segs = [];
    if (seriesSeg) {
      let {
        firstIndex,
        lastIndex
      } = seriesSeg;
      let index = firstIndex;
      while (index <= lastIndex) {
        let row = Math.floor(index / colCnt);
        let nextIndex = Math.min((row + 1) * colCnt, lastIndex + 1);
        segs.push({
          row,
          firstCol: index % colCnt,
          lastCol: (nextIndex - 1) % colCnt,
          isStart: seriesSeg.isStart && index === firstIndex,
          isEnd: seriesSeg.isEnd && nextIndex - 1 === lastIndex
        });
        index = nextIndex;
      }
    }
    return segs;
  }
}
class Slicer {
  constructor() {
    this.sliceBusinessHours = memoize(this._sliceBusinessHours);
    this.sliceDateSelection = memoize(this._sliceDateSpan);
    this.sliceEventStore = memoize(this._sliceEventStore);
    this.sliceEventDrag = memoize(this._sliceInteraction);
    this.sliceEventResize = memoize(this._sliceInteraction);
    this.forceDayIfListItem = false; // hack
  }

  sliceProps(props, dateProfile, nextDayThreshold, context, ...extraArgs) {
    let {
      eventUiBases
    } = props;
    let eventSegs = this.sliceEventStore(props.eventStore, eventUiBases, dateProfile, nextDayThreshold, ...extraArgs);
    return {
      dateSelectionSegs: this.sliceDateSelection(props.dateSelection, dateProfile, nextDayThreshold, eventUiBases, context, ...extraArgs),
      businessHourSegs: this.sliceBusinessHours(props.businessHours, dateProfile, nextDayThreshold, context, ...extraArgs),
      fgEventSegs: eventSegs.fg,
      bgEventSegs: eventSegs.bg,
      eventDrag: this.sliceEventDrag(props.eventDrag, eventUiBases, dateProfile, nextDayThreshold, ...extraArgs),
      eventResize: this.sliceEventResize(props.eventResize, eventUiBases, dateProfile, nextDayThreshold, ...extraArgs),
      eventSelection: props.eventSelection
    }; // TODO: give interactionSegs?
  }

  sliceNowDate(
  // does not memoize
  date, dateProfile, nextDayThreshold, context, ...extraArgs) {
    return this._sliceDateSpan({
      range: {
        start: date,
        end: addMs(date, 1)
      },
      allDay: false
    },
    // add 1 ms, protect against null range
    dateProfile, nextDayThreshold, {}, context, ...extraArgs);
  }
  _sliceBusinessHours(businessHours, dateProfile, nextDayThreshold, context, ...extraArgs) {
    if (!businessHours) {
      return [];
    }
    return this._sliceEventStore(expandRecurring(businessHours, computeActiveRange(dateProfile, Boolean(nextDayThreshold)), context), {}, dateProfile, nextDayThreshold, ...extraArgs).bg;
  }
  _sliceEventStore(eventStore, eventUiBases, dateProfile, nextDayThreshold, ...extraArgs) {
    if (eventStore) {
      let rangeRes = sliceEventStore(eventStore, eventUiBases, computeActiveRange(dateProfile, Boolean(nextDayThreshold)), nextDayThreshold);
      return {
        bg: this.sliceEventRanges(rangeRes.bg, extraArgs),
        fg: this.sliceEventRanges(rangeRes.fg, extraArgs)
      };
    }
    return {
      bg: [],
      fg: []
    };
  }
  _sliceInteraction(interaction, eventUiBases, dateProfile, nextDayThreshold, ...extraArgs) {
    if (!interaction) {
      return null;
    }
    let rangeRes = sliceEventStore(interaction.mutatedEvents, eventUiBases, computeActiveRange(dateProfile, Boolean(nextDayThreshold)), nextDayThreshold);
    return {
      segs: this.sliceEventRanges(rangeRes.fg, extraArgs),
      affectedInstances: interaction.affectedEvents.instances,
      isEvent: interaction.isEvent
    };
  }
  _sliceDateSpan(dateSpan, dateProfile, nextDayThreshold, eventUiBases, context, ...extraArgs) {
    if (!dateSpan) {
      return [];
    }
    let activeRange = computeActiveRange(dateProfile, Boolean(nextDayThreshold));
    let activeDateSpanRange = intersectRanges(dateSpan.range, activeRange);
    if (activeDateSpanRange) {
      dateSpan = Object.assign(Object.assign({}, dateSpan), {
        range: activeDateSpanRange
      });
      let eventRange = fabricateEventRange(dateSpan, eventUiBases, context);
      let segs = this.sliceRange(dateSpan.range, ...extraArgs);
      for (let seg of segs) {
        seg.eventRange = eventRange;
      }
      return segs;
    }
    return [];
  }
  /*
  "complete" seg means it has component and eventRange
  */
  sliceEventRanges(eventRanges, extraArgs) {
    let segs = [];
    for (let eventRange of eventRanges) {
      segs.push(...this.sliceEventRange(eventRange, extraArgs));
    }
    return segs;
  }
  /*
  "complete" seg means it has component and eventRange
  */
  sliceEventRange(eventRange, extraArgs) {
    let dateRange = eventRange.range;
    // hack to make multi-day events that are being force-displayed as list-items to take up only one day
    if (this.forceDayIfListItem && eventRange.ui.display === 'list-item') {
      dateRange = {
        start: dateRange.start,
        end: addDays(dateRange.start, 1)
      };
    }
    let segs = this.sliceRange(dateRange, ...extraArgs);
    for (let seg of segs) {
      seg.eventRange = eventRange;
      seg.isStart = eventRange.isStart && seg.isStart;
      seg.isEnd = eventRange.isEnd && seg.isEnd;
    }
    return segs;
  }
}
/*
for incorporating slotMinTime/slotMaxTime if appropriate
TODO: should be part of DateProfile!
TimelineDateProfile already does this btw
*/
function computeActiveRange(dateProfile, isComponentAllDay) {
  let range = dateProfile.activeRange;
  if (isComponentAllDay) {
    return range;
  }
  return {
    start: addMs(range.start, dateProfile.slotMinTime.milliseconds),
    end: addMs(range.end, dateProfile.slotMaxTime.milliseconds - 864e5) // 864e5 = ms in a day
  };
}

function reduceEventStore(eventStore, action, eventSources, dateProfile, context) {
  switch (action.type) {
    case 'RECEIVE_EVENTS':
      // raw
      return receiveRawEvents(eventStore, eventSources[action.sourceId], action.fetchId, action.fetchRange, action.rawEvents, context);
    case 'RESET_RAW_EVENTS':
      return resetRawEvents(eventStore, eventSources[action.sourceId], action.rawEvents, dateProfile.activeRange, context);
    case 'ADD_EVENTS':
      // already parsed, but not expanded
      return addEvent(eventStore, action.eventStore,
      // new ones
      dateProfile ? dateProfile.activeRange : null, context);
    case 'RESET_EVENTS':
      return action.eventStore;
    case 'MERGE_EVENTS':
      // already parsed and expanded
      return mergeEventStores(eventStore, action.eventStore);
    case 'PREV': // TODO: how do we track all actions that affect dateProfile :(
    case 'NEXT':
    case 'CHANGE_DATE':
    case 'CHANGE_VIEW_TYPE':
      if (dateProfile) {
        return expandRecurring(eventStore, dateProfile.activeRange, context);
      }
      return eventStore;
    case 'REMOVE_EVENTS':
      return excludeSubEventStore(eventStore, action.eventStore);
    case 'REMOVE_EVENT_SOURCE':
      return excludeEventsBySourceId(eventStore, action.sourceId);
    case 'REMOVE_ALL_EVENT_SOURCES':
      return filterEventStoreDefs(eventStore, eventDef => !eventDef.sourceId // only keep events with no source id
      );

    case 'REMOVE_ALL_EVENTS':
      return createEmptyEventStore();
    default:
      return eventStore;
  }
}
function receiveRawEvents(eventStore, eventSource, fetchId, fetchRange, rawEvents, context) {
  if (eventSource &&
  // not already removed
  fetchId === eventSource.latestFetchId // TODO: wish this logic was always in event-sources
  ) {
    let subset = parseEvents(transformRawEvents(rawEvents, eventSource, context), eventSource, context);
    if (fetchRange) {
      subset = expandRecurring(subset, fetchRange, context);
    }
    return mergeEventStores(excludeEventsBySourceId(eventStore, eventSource.sourceId), subset);
  }
  return eventStore;
}
function resetRawEvents(existingEventStore, eventSource, rawEvents, activeRange, context) {
  const {
    defIdMap,
    instanceIdMap
  } = buildPublicIdMaps(existingEventStore);
  let newEventStore = parseEvents(transformRawEvents(rawEvents, eventSource, context), eventSource, context, false, defIdMap, instanceIdMap);
  return expandRecurring(newEventStore, activeRange, context);
}
function transformRawEvents(rawEvents, eventSource, context) {
  let calEachTransform = context.options.eventDataTransform;
  let sourceEachTransform = eventSource ? eventSource.eventDataTransform : null;
  if (sourceEachTransform) {
    rawEvents = transformEachRawEvent(rawEvents, sourceEachTransform);
  }
  if (calEachTransform) {
    rawEvents = transformEachRawEvent(rawEvents, calEachTransform);
  }
  return rawEvents;
}
function transformEachRawEvent(rawEvents, func) {
  let refinedEvents;
  if (!func) {
    refinedEvents = rawEvents;
  } else {
    refinedEvents = [];
    for (let rawEvent of rawEvents) {
      let refinedEvent = func(rawEvent);
      if (refinedEvent) {
        refinedEvents.push(refinedEvent);
      } else if (refinedEvent == null) {
        refinedEvents.push(rawEvent);
      } // if a different falsy value, do nothing
    }
  }

  return refinedEvents;
}
function addEvent(eventStore, subset, expandRange, context) {
  if (expandRange) {
    subset = expandRecurring(subset, expandRange, context);
  }
  return mergeEventStores(eventStore, subset);
}
function rezoneEventStoreDates(eventStore, oldDateEnv, newDateEnv) {
  let {
    defs
  } = eventStore;
  let instances = mapHash(eventStore.instances, instance => {
    let def = defs[instance.defId];
    if (def.allDay) {
      return instance; // isn't dependent on timezone
    }

    return Object.assign(Object.assign({}, instance), {
      range: {
        start: newDateEnv.createMarker(oldDateEnv.toDate(instance.range.start, instance.forcedStartTzo)),
        end: newDateEnv.createMarker(oldDateEnv.toDate(instance.range.end, instance.forcedEndTzo))
      },
      forcedStartTzo: newDateEnv.canComputeOffset ? null : instance.forcedStartTzo,
      forcedEndTzo: newDateEnv.canComputeOffset ? null : instance.forcedEndTzo
    });
  });
  return {
    defs,
    instances
  };
}
function excludeEventsBySourceId(eventStore, sourceId) {
  return filterEventStoreDefs(eventStore, eventDef => eventDef.sourceId !== sourceId);
}
// QUESTION: why not just return instances? do a general object-property-exclusion util
function excludeInstances(eventStore, removals) {
  return {
    defs: eventStore.defs,
    instances: filterHash(eventStore.instances, instance => !removals[instance.instanceId])
  };
}
function buildPublicIdMaps(eventStore) {
  const {
    defs,
    instances
  } = eventStore;
  const defIdMap = {};
  const instanceIdMap = {};
  for (let defId in defs) {
    const def = defs[defId];
    const {
      publicId
    } = def;
    if (publicId) {
      defIdMap[publicId] = defId;
    }
  }
  for (let instanceId in instances) {
    const instance = instances[instanceId];
    const def = defs[instance.defId];
    const {
      publicId
    } = def;
    if (publicId) {
      instanceIdMap[publicId] = instanceId;
    }
  }
  return {
    defIdMap,
    instanceIdMap
  };
}

// high-level segmenting-aware tester functions
// ------------------------------------------------------------------------------------------------------------------------
function isInteractionValid(interaction, dateProfile, context) {
  let {
    instances
  } = interaction.mutatedEvents;
  for (let instanceId in instances) {
    if (!rangeContainsRange(dateProfile.validRange, instances[instanceId].range)) {
      return false;
    }
  }
  return isNewPropsValid({
    eventDrag: interaction
  }, context); // HACK: the eventDrag props is used for ALL interactions
}

function isDateSelectionValid(dateSelection, dateProfile, context) {
  if (!rangeContainsRange(dateProfile.validRange, dateSelection.range)) {
    return false;
  }
  return isNewPropsValid({
    dateSelection
  }, context);
}
function isNewPropsValid(newProps, context) {
  let calendarState = context.getCurrentData();
  let props = Object.assign({
    businessHours: calendarState.businessHours,
    dateSelection: '',
    eventStore: calendarState.eventStore,
    eventUiBases: calendarState.eventUiBases,
    eventSelection: '',
    eventDrag: null,
    eventResize: null
  }, newProps);
  return (context.pluginHooks.isPropsValid || isPropsValid)(props, context);
}
function isPropsValid(state, context, dateSpanMeta = {}, filterConfig) {
  if (state.eventDrag && !isInteractionPropsValid(state, context, dateSpanMeta, filterConfig)) {
    return false;
  }
  if (state.dateSelection && !isDateSelectionPropsValid(state, context, dateSpanMeta, filterConfig)) {
    return false;
  }
  return true;
}
// Moving Event Validation
// ------------------------------------------------------------------------------------------------------------------------
function isInteractionPropsValid(state, context, dateSpanMeta, filterConfig) {
  let currentState = context.getCurrentData();
  let interaction = state.eventDrag; // HACK: the eventDrag props is used for ALL interactions
  let subjectEventStore = interaction.mutatedEvents;
  let subjectDefs = subjectEventStore.defs;
  let subjectInstances = subjectEventStore.instances;
  let subjectConfigs = compileEventUis(subjectDefs, interaction.isEvent ? state.eventUiBases : {
    '': currentState.selectionConfig
  });
  if (filterConfig) {
    subjectConfigs = mapHash(subjectConfigs, filterConfig);
  }
  // exclude the subject events. TODO: exclude defs too?
  let otherEventStore = excludeInstances(state.eventStore, interaction.affectedEvents.instances);
  let otherDefs = otherEventStore.defs;
  let otherInstances = otherEventStore.instances;
  let otherConfigs = compileEventUis(otherDefs, state.eventUiBases);
  for (let subjectInstanceId in subjectInstances) {
    let subjectInstance = subjectInstances[subjectInstanceId];
    let subjectRange = subjectInstance.range;
    let subjectConfig = subjectConfigs[subjectInstance.defId];
    let subjectDef = subjectDefs[subjectInstance.defId];
    // constraint
    if (!allConstraintsPass(subjectConfig.constraints, subjectRange, otherEventStore, state.businessHours, context)) {
      return false;
    }
    // overlap
    let {
      eventOverlap
    } = context.options;
    let eventOverlapFunc = typeof eventOverlap === 'function' ? eventOverlap : null;
    for (let otherInstanceId in otherInstances) {
      let otherInstance = otherInstances[otherInstanceId];
      // intersect! evaluate
      if (rangesIntersect(subjectRange, otherInstance.range)) {
        let otherOverlap = otherConfigs[otherInstance.defId].overlap;
        // consider the other event's overlap. only do this if the subject event is a "real" event
        if (otherOverlap === false && interaction.isEvent) {
          return false;
        }
        if (subjectConfig.overlap === false) {
          return false;
        }
        if (eventOverlapFunc && !eventOverlapFunc(new EventImpl(context, otherDefs[otherInstance.defId], otherInstance),
        // still event
        new EventImpl(context, subjectDef, subjectInstance))) {
          return false;
        }
      }
    }
    // allow (a function)
    let calendarEventStore = currentState.eventStore; // need global-to-calendar, not local to component (splittable)state
    for (let subjectAllow of subjectConfig.allows) {
      let subjectDateSpan = Object.assign(Object.assign({}, dateSpanMeta), {
        range: subjectInstance.range,
        allDay: subjectDef.allDay
      });
      let origDef = calendarEventStore.defs[subjectDef.defId];
      let origInstance = calendarEventStore.instances[subjectInstanceId];
      let eventApi;
      if (origDef) {
        // was previously in the calendar
        eventApi = new EventImpl(context, origDef, origInstance);
      } else {
        // was an external event
        eventApi = new EventImpl(context, subjectDef); // no instance, because had no dates
      }

      if (!subjectAllow(buildDateSpanApiWithContext(subjectDateSpan, context), eventApi)) {
        return false;
      }
    }
  }
  return true;
}
// Date Selection Validation
// ------------------------------------------------------------------------------------------------------------------------
function isDateSelectionPropsValid(state, context, dateSpanMeta, filterConfig) {
  let relevantEventStore = state.eventStore;
  let relevantDefs = relevantEventStore.defs;
  let relevantInstances = relevantEventStore.instances;
  let selection = state.dateSelection;
  let selectionRange = selection.range;
  let {
    selectionConfig
  } = context.getCurrentData();
  if (filterConfig) {
    selectionConfig = filterConfig(selectionConfig);
  }
  // constraint
  if (!allConstraintsPass(selectionConfig.constraints, selectionRange, relevantEventStore, state.businessHours, context)) {
    return false;
  }
  // overlap
  let {
    selectOverlap
  } = context.options;
  let selectOverlapFunc = typeof selectOverlap === 'function' ? selectOverlap : null;
  for (let relevantInstanceId in relevantInstances) {
    let relevantInstance = relevantInstances[relevantInstanceId];
    // intersect! evaluate
    if (rangesIntersect(selectionRange, relevantInstance.range)) {
      if (selectionConfig.overlap === false) {
        return false;
      }
      if (selectOverlapFunc && !selectOverlapFunc(new EventImpl(context, relevantDefs[relevantInstance.defId], relevantInstance), null)) {
        return false;
      }
    }
  }
  // allow (a function)
  for (let selectionAllow of selectionConfig.allows) {
    let fullDateSpan = Object.assign(Object.assign({}, dateSpanMeta), selection);
    if (!selectionAllow(buildDateSpanApiWithContext(fullDateSpan, context), null)) {
      return false;
    }
  }
  return true;
}
// Constraint Utils
// ------------------------------------------------------------------------------------------------------------------------
function allConstraintsPass(constraints, subjectRange, otherEventStore, businessHoursUnexpanded, context) {
  for (let constraint of constraints) {
    if (!anyRangesContainRange(constraintToRanges(constraint, subjectRange, otherEventStore, businessHoursUnexpanded, context), subjectRange)) {
      return false;
    }
  }
  return true;
}
function constraintToRanges(constraint, subjectRange,
// for expanding a recurring constraint, or expanding business hours
otherEventStore,
// for if constraint is an even group ID
businessHoursUnexpanded,
// for if constraint is 'businessHours'
context) {
  if (constraint === 'businessHours') {
    return eventStoreToRanges(expandRecurring(businessHoursUnexpanded, subjectRange, context));
  }
  if (typeof constraint === 'string') {
    // an group ID
    return eventStoreToRanges(filterEventStoreDefs(otherEventStore, eventDef => eventDef.groupId === constraint));
  }
  if (typeof constraint === 'object' && constraint) {
    // non-null object
    return eventStoreToRanges(expandRecurring(constraint, subjectRange, context));
  }
  return []; // if it's false
}
// TODO: move to event-store file?
function eventStoreToRanges(eventStore) {
  let {
    instances
  } = eventStore;
  let ranges = [];
  for (let instanceId in instances) {
    ranges.push(instances[instanceId].range);
  }
  return ranges;
}
// TODO: move to geom file?
function anyRangesContainRange(outerRanges, innerRange) {
  for (let outerRange of outerRanges) {
    if (rangeContainsRange(outerRange, innerRange)) {
      return true;
    }
  }
  return false;
}
class JsonRequestError extends Error {
  constructor(message, response) {
    super(message);
    this.response = response;
  }
}
function requestJson(method, url, params) {
  method = method.toUpperCase();
  const fetchOptions = {
    method
  };
  if (method === 'GET') {
    url += (url.indexOf('?') === -1 ? '?' : '&') + new URLSearchParams(params);
  } else {
    fetchOptions.body = new URLSearchParams(params);
    fetchOptions.headers = {
      'Content-Type': 'application/x-www-form-urlencoded'
    };
  }
  return fetch(url, fetchOptions).then(fetchRes => {
    if (fetchRes.ok) {
      return fetchRes.json().then(parsedResponse => {
        return [parsedResponse, fetchRes];
      }, () => {
        throw new JsonRequestError('Failure parsing JSON', fetchRes);
      });
    } else {
      throw new JsonRequestError('Request failed', fetchRes);
    }
  });
}
class DelayedRunner {
  constructor(drainedOption) {
    this.drainedOption = drainedOption;
    this.isRunning = false;
    this.isDirty = false;
    this.pauseDepths = {};
    this.timeoutId = 0;
  }
  request(delay) {
    this.isDirty = true;
    if (!this.isPaused()) {
      this.clearTimeout();
      if (delay == null) {
        this.tryDrain();
      } else {
        this.timeoutId = setTimeout(
        // NOT OPTIMAL! TODO: look at debounce
        this.tryDrain.bind(this), delay);
      }
    }
  }
  pause(scope = '') {
    let {
      pauseDepths
    } = this;
    pauseDepths[scope] = (pauseDepths[scope] || 0) + 1;
    this.clearTimeout();
  }
  resume(scope = '', force) {
    let {
      pauseDepths
    } = this;
    if (scope in pauseDepths) {
      if (force) {
        delete pauseDepths[scope];
      } else {
        pauseDepths[scope] -= 1;
        let depth = pauseDepths[scope];
        if (depth <= 0) {
          delete pauseDepths[scope];
        }
      }
      this.tryDrain();
    }
  }
  isPaused() {
    return Object.keys(this.pauseDepths).length;
  }
  tryDrain() {
    if (!this.isRunning && !this.isPaused()) {
      this.isRunning = true;
      while (this.isDirty) {
        this.isDirty = false;
        this.drained(); // might set isDirty to true again
      }

      this.isRunning = false;
    }
  }
  clear() {
    this.clearTimeout();
    this.isDirty = false;
    this.pauseDepths = {};
  }
  clearTimeout() {
    if (this.timeoutId) {
      clearTimeout(this.timeoutId);
      this.timeoutId = 0;
    }
  }
  drained() {
    if (this.drainedOption) {
      this.drainedOption();
    }
  }
}
const VISIBLE_HIDDEN_RE = /^(visible|hidden)$/;
class Scroller extends BaseComponent {
  constructor() {
    super(...arguments);
    this.handleEl = el => {
      this.el = el;
      setRef(this.props.elRef, el);
    };
  }
  render() {
    let {
      props
    } = this;
    let {
      liquid,
      liquidIsAbsolute
    } = props;
    let isAbsolute = liquid && liquidIsAbsolute;
    let className = ['fc-scroller'];
    if (liquid) {
      if (liquidIsAbsolute) {
        className.push('fc-scroller-liquid-absolute');
      } else {
        className.push('fc-scroller-liquid');
      }
    }
    return (0,preact__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      ref: this.handleEl,
      className: className.join(' '),
      style: {
        overflowX: props.overflowX,
        overflowY: props.overflowY,
        left: isAbsolute && -(props.overcomeLeft || 0) || '',
        right: isAbsolute && -(props.overcomeRight || 0) || '',
        bottom: isAbsolute && -(props.overcomeBottom || 0) || '',
        marginLeft: !isAbsolute && -(props.overcomeLeft || 0) || '',
        marginRight: !isAbsolute && -(props.overcomeRight || 0) || '',
        marginBottom: !isAbsolute && -(props.overcomeBottom || 0) || '',
        maxHeight: props.maxHeight || ''
      }
    }, props.children);
  }
  needsXScrolling() {
    if (VISIBLE_HIDDEN_RE.test(this.props.overflowX)) {
      return false;
    }
    // testing scrollWidth>clientWidth is unreliable cross-browser when pixel heights aren't integers.
    // much more reliable to see if children are taller than the scroller, even tho doesn't account for
    // inner-child margins and absolute positioning
    let {
      el
    } = this;
    let realClientWidth = this.el.getBoundingClientRect().width - this.getYScrollbarWidth();
    let {
      children
    } = el;
    for (let i = 0; i < children.length; i += 1) {
      let childEl = children[i];
      if (childEl.getBoundingClientRect().width > realClientWidth) {
        return true;
      }
    }
    return false;
  }
  needsYScrolling() {
    if (VISIBLE_HIDDEN_RE.test(this.props.overflowY)) {
      return false;
    }
    // testing scrollHeight>clientHeight is unreliable cross-browser when pixel heights aren't integers.
    // much more reliable to see if children are taller than the scroller, even tho doesn't account for
    // inner-child margins and absolute positioning
    let {
      el
    } = this;
    let realClientHeight = this.el.getBoundingClientRect().height - this.getXScrollbarWidth();
    let {
      children
    } = el;
    for (let i = 0; i < children.length; i += 1) {
      let childEl = children[i];
      if (childEl.getBoundingClientRect().height > realClientHeight) {
        return true;
      }
    }
    return false;
  }
  getXScrollbarWidth() {
    if (VISIBLE_HIDDEN_RE.test(this.props.overflowX)) {
      return 0;
    }
    return this.el.offsetHeight - this.el.clientHeight; // only works because we guarantee no borders. TODO: add to CSS with important?
  }

  getYScrollbarWidth() {
    if (VISIBLE_HIDDEN_RE.test(this.props.overflowY)) {
      return 0;
    }
    return this.el.offsetWidth - this.el.clientWidth; // only works because we guarantee no borders. TODO: add to CSS with important?
  }
}

/*
TODO: somehow infer OtherArgs from masterCallback?
TODO: infer RefType from masterCallback if provided
*/
class RefMap {
  constructor(masterCallback) {
    this.masterCallback = masterCallback;
    this.currentMap = {};
    this.depths = {};
    this.callbackMap = {};
    this.handleValue = (val, key) => {
      let {
        depths,
        currentMap
      } = this;
      let removed = false;
      let added = false;
      if (val !== null) {
        // for bug... ACTUALLY: can probably do away with this now that callers don't share numeric indices anymore
        removed = key in currentMap;
        currentMap[key] = val;
        depths[key] = (depths[key] || 0) + 1;
        added = true;
      } else {
        depths[key] -= 1;
        if (!depths[key]) {
          delete currentMap[key];
          delete this.callbackMap[key];
          removed = true;
        }
      }
      if (this.masterCallback) {
        if (removed) {
          this.masterCallback(null, String(key));
        }
        if (added) {
          this.masterCallback(val, String(key));
        }
      }
    };
  }
  createRef(key) {
    let refCallback = this.callbackMap[key];
    if (!refCallback) {
      refCallback = this.callbackMap[key] = val => {
        this.handleValue(val, String(key));
      };
    }
    return refCallback;
  }
  // TODO: check callers that don't care about order. should use getAll instead
  // NOTE: this method has become less valuable now that we are encouraged to map order by some other index
  // TODO: provide ONE array-export function, buildArray, which fails on non-numeric indexes. caller can manipulate and "collect"
  collect(startIndex, endIndex, step) {
    return collectFromHash(this.currentMap, startIndex, endIndex, step);
  }
  getAll() {
    return hashValuesToArray(this.currentMap);
  }
}
function computeShrinkWidth(chunkEls) {
  let shrinkCells = findElements(chunkEls, '.fc-scrollgrid-shrink');
  let largestWidth = 0;
  for (let shrinkCell of shrinkCells) {
    largestWidth = Math.max(largestWidth, computeSmallestCellWidth(shrinkCell));
  }
  return Math.ceil(largestWidth); // <table> elements work best with integers. round up to ensure contents fits
}

function getSectionHasLiquidHeight(props, sectionConfig) {
  return props.liquid && sectionConfig.liquid; // does the section do liquid-height? (need to have whole scrollgrid liquid-height as well)
}

function getAllowYScrolling(props, sectionConfig) {
  return sectionConfig.maxHeight != null ||
  // if its possible for the height to max out, we might need scrollbars
  getSectionHasLiquidHeight(props, sectionConfig); // if the section is liquid height, it might condense enough to require scrollbars
}
// TODO: ONLY use `arg`. force out internal function to use same API
function renderChunkContent(sectionConfig, chunkConfig, arg, isHeader) {
  let {
    expandRows
  } = arg;
  let content = typeof chunkConfig.content === 'function' ? chunkConfig.content(arg) : (0,preact__WEBPACK_IMPORTED_MODULE_0__.createElement)('table', {
    role: 'presentation',
    className: [chunkConfig.tableClassName, sectionConfig.syncRowHeights ? 'fc-scrollgrid-sync-table' : ''].join(' '),
    style: {
      minWidth: arg.tableMinWidth,
      width: arg.clientWidth,
      height: expandRows ? arg.clientHeight : '' // css `height` on a <table> serves as a min-height
    }
  }, arg.tableColGroupNode, (0,preact__WEBPACK_IMPORTED_MODULE_0__.createElement)(isHeader ? 'thead' : 'tbody', {
    role: 'presentation'
  }, typeof chunkConfig.rowContent === 'function' ? chunkConfig.rowContent(arg) : chunkConfig.rowContent));
  return content;
}
function isColPropsEqual(cols0, cols1) {
  return isArraysEqual(cols0, cols1, isPropsEqual);
}
function renderMicroColGroup(cols, shrinkWidth) {
  let colNodes = [];
  /*
  for ColProps with spans, it would have been great to make a single <col span="">
  HOWEVER, Chrome was getting messing up distributing the width to <td>/<th> elements with colspans.
  SOLUTION: making individual <col> elements makes Chrome behave.
  */
  for (let colProps of cols) {
    let span = colProps.span || 1;
    for (let i = 0; i < span; i += 1) {
      colNodes.push((0,preact__WEBPACK_IMPORTED_MODULE_0__.createElement)("col", {
        style: {
          width: colProps.width === 'shrink' ? sanitizeShrinkWidth(shrinkWidth) : colProps.width || '',
          minWidth: colProps.minWidth || ''
        }
      }));
    }
  }
  return (0,preact__WEBPACK_IMPORTED_MODULE_0__.createElement)('colgroup', {}, ...colNodes);
}
function sanitizeShrinkWidth(shrinkWidth) {
  /* why 4? if we do 0, it will kill any border, which are needed for computeSmallestCellWidth
  4 accounts for 2 2-pixel borders. TODO: better solution? */
  return shrinkWidth == null ? 4 : shrinkWidth;
}
function hasShrinkWidth(cols) {
  for (let col of cols) {
    if (col.width === 'shrink') {
      return true;
    }
  }
  return false;
}
function getScrollGridClassNames(liquid, context) {
  let classNames = ['fc-scrollgrid', context.theme.getClass('table')];
  if (liquid) {
    classNames.push('fc-scrollgrid-liquid');
  }
  return classNames;
}
function getSectionClassNames(sectionConfig, wholeTableVGrow) {
  let classNames = ['fc-scrollgrid-section', `fc-scrollgrid-section-${sectionConfig.type}`, sectionConfig.className // used?
  ];

  if (wholeTableVGrow && sectionConfig.liquid && sectionConfig.maxHeight == null) {
    classNames.push('fc-scrollgrid-section-liquid');
  }
  if (sectionConfig.isSticky) {
    classNames.push('fc-scrollgrid-section-sticky');
  }
  return classNames;
}
function renderScrollShim(arg) {
  return (0,preact__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "fc-scrollgrid-sticky-shim",
    style: {
      width: arg.clientWidth,
      minWidth: arg.tableMinWidth
    }
  });
}
function getStickyHeaderDates(options) {
  let {
    stickyHeaderDates
  } = options;
  if (stickyHeaderDates == null || stickyHeaderDates === 'auto') {
    stickyHeaderDates = options.height === 'auto' || options.viewHeight === 'auto';
  }
  return stickyHeaderDates;
}
function getStickyFooterScrollbar(options) {
  let {
    stickyFooterScrollbar
  } = options;
  if (stickyFooterScrollbar == null || stickyFooterScrollbar === 'auto') {
    stickyFooterScrollbar = options.height === 'auto' || options.viewHeight === 'auto';
  }
  return stickyFooterScrollbar;
}
class SimpleScrollGrid extends BaseComponent {
  constructor() {
    super(...arguments);
    this.processCols = memoize(a => a, isColPropsEqual); // so we get same `cols` props every time
    // yucky to memoize VNodes, but much more efficient for consumers
    this.renderMicroColGroup = memoize(renderMicroColGroup);
    this.scrollerRefs = new RefMap();
    this.scrollerElRefs = new RefMap(this._handleScrollerEl.bind(this));
    this.state = {
      shrinkWidth: null,
      forceYScrollbars: false,
      scrollerClientWidths: {},
      scrollerClientHeights: {}
    };
    // TODO: can do a really simple print-view. dont need to join rows
    this.handleSizing = () => {
      this.safeSetState(Object.assign({
        shrinkWidth: this.computeShrinkWidth()
      }, this.computeScrollerDims()));
    };
  }
  render() {
    let {
      props,
      state,
      context
    } = this;
    let sectionConfigs = props.sections || [];
    let cols = this.processCols(props.cols);
    let microColGroupNode = this.renderMicroColGroup(cols, state.shrinkWidth);
    let classNames = getScrollGridClassNames(props.liquid, context);
    if (props.collapsibleWidth) {
      classNames.push('fc-scrollgrid-collapsible');
    }
    // TODO: make DRY
    let configCnt = sectionConfigs.length;
    let configI = 0;
    let currentConfig;
    let headSectionNodes = [];
    let bodySectionNodes = [];
    let footSectionNodes = [];
    while (configI < configCnt && (currentConfig = sectionConfigs[configI]).type === 'header') {
      headSectionNodes.push(this.renderSection(currentConfig, microColGroupNode, true));
      configI += 1;
    }
    while (configI < configCnt && (currentConfig = sectionConfigs[configI]).type === 'body') {
      bodySectionNodes.push(this.renderSection(currentConfig, microColGroupNode, false));
      configI += 1;
    }
    while (configI < configCnt && (currentConfig = sectionConfigs[configI]).type === 'footer') {
      footSectionNodes.push(this.renderSection(currentConfig, microColGroupNode, true));
      configI += 1;
    }
    // firefox bug: when setting height on table and there is a thead or tfoot,
    // the necessary height:100% on the liquid-height body section forces the *whole* table to be taller. (bug #5524)
    // use getCanVGrowWithinCell as a way to detect table-stupid firefox.
    // if so, use a simpler dom structure, jam everything into a lone tbody.
    let isBuggy = !getCanVGrowWithinCell();
    const roleAttrs = {
      role: 'rowgroup'
    };
    return (0,preact__WEBPACK_IMPORTED_MODULE_0__.createElement)('table', {
      role: 'grid',
      className: classNames.join(' '),
      style: {
        height: props.height
      }
    }, Boolean(!isBuggy && headSectionNodes.length) && (0,preact__WEBPACK_IMPORTED_MODULE_0__.createElement)('thead', roleAttrs, ...headSectionNodes), Boolean(!isBuggy && bodySectionNodes.length) && (0,preact__WEBPACK_IMPORTED_MODULE_0__.createElement)('tbody', roleAttrs, ...bodySectionNodes), Boolean(!isBuggy && footSectionNodes.length) && (0,preact__WEBPACK_IMPORTED_MODULE_0__.createElement)('tfoot', roleAttrs, ...footSectionNodes), isBuggy && (0,preact__WEBPACK_IMPORTED_MODULE_0__.createElement)('tbody', roleAttrs, ...headSectionNodes, ...bodySectionNodes, ...footSectionNodes));
  }
  renderSection(sectionConfig, microColGroupNode, isHeader) {
    if ('outerContent' in sectionConfig) {
      return (0,preact__WEBPACK_IMPORTED_MODULE_0__.createElement)(preact__WEBPACK_IMPORTED_MODULE_0__.Fragment, {
        key: sectionConfig.key
      }, sectionConfig.outerContent);
    }
    return (0,preact__WEBPACK_IMPORTED_MODULE_0__.createElement)("tr", {
      key: sectionConfig.key,
      role: "presentation",
      className: getSectionClassNames(sectionConfig, this.props.liquid).join(' ')
    }, this.renderChunkTd(sectionConfig, microColGroupNode, sectionConfig.chunk, isHeader));
  }
  renderChunkTd(sectionConfig, microColGroupNode, chunkConfig, isHeader) {
    if ('outerContent' in chunkConfig) {
      return chunkConfig.outerContent;
    }
    let {
      props
    } = this;
    let {
      forceYScrollbars,
      scrollerClientWidths,
      scrollerClientHeights
    } = this.state;
    let needsYScrolling = getAllowYScrolling(props, sectionConfig); // TODO: do lazily. do in section config?
    let isLiquid = getSectionHasLiquidHeight(props, sectionConfig);
    // for `!props.liquid` - is WHOLE scrollgrid natural height?
    // TODO: do same thing in advanced scrollgrid? prolly not b/c always has horizontal scrollbars
    let overflowY = !props.liquid ? 'visible' : forceYScrollbars ? 'scroll' : !needsYScrolling ? 'hidden' : 'auto';
    let sectionKey = sectionConfig.key;
    let content = renderChunkContent(sectionConfig, chunkConfig, {
      tableColGroupNode: microColGroupNode,
      tableMinWidth: '',
      clientWidth: !props.collapsibleWidth && scrollerClientWidths[sectionKey] !== undefined ? scrollerClientWidths[sectionKey] : null,
      clientHeight: scrollerClientHeights[sectionKey] !== undefined ? scrollerClientHeights[sectionKey] : null,
      expandRows: sectionConfig.expandRows,
      syncRowHeights: false,
      rowSyncHeights: [],
      reportRowHeightChange: () => {}
    }, isHeader);
    return (0,preact__WEBPACK_IMPORTED_MODULE_0__.createElement)(isHeader ? 'th' : 'td', {
      ref: chunkConfig.elRef,
      role: 'presentation'
    }, (0,preact__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: `fc-scroller-harness${isLiquid ? ' fc-scroller-harness-liquid' : ''}`
    }, (0,preact__WEBPACK_IMPORTED_MODULE_0__.createElement)(Scroller, {
      ref: this.scrollerRefs.createRef(sectionKey),
      elRef: this.scrollerElRefs.createRef(sectionKey),
      overflowY: overflowY,
      overflowX: !props.liquid ? 'visible' : 'hidden' /* natural height? */,
      maxHeight: sectionConfig.maxHeight,
      liquid: isLiquid,
      liquidIsAbsolute // because its within a harness
      : true
    }, content)));
  }
  _handleScrollerEl(scrollerEl, key) {
    let section = getSectionByKey(this.props.sections, key);
    if (section) {
      setRef(section.chunk.scrollerElRef, scrollerEl);
    }
  }
  componentDidMount() {
    this.handleSizing();
    this.context.addResizeHandler(this.handleSizing);
  }
  componentDidUpdate() {
    // TODO: need better solution when state contains non-sizing things
    this.handleSizing();
  }
  componentWillUnmount() {
    this.context.removeResizeHandler(this.handleSizing);
  }
  computeShrinkWidth() {
    return hasShrinkWidth(this.props.cols) ? computeShrinkWidth(this.scrollerElRefs.getAll()) : 0;
  }
  computeScrollerDims() {
    let scrollbarWidth = getScrollbarWidths();
    let {
      scrollerRefs,
      scrollerElRefs
    } = this;
    let forceYScrollbars = false;
    let scrollerClientWidths = {};
    let scrollerClientHeights = {};
    for (let sectionKey in scrollerRefs.currentMap) {
      let scroller = scrollerRefs.currentMap[sectionKey];
      if (scroller && scroller.needsYScrolling()) {
        forceYScrollbars = true;
        break;
      }
    }
    for (let section of this.props.sections) {
      let sectionKey = section.key;
      let scrollerEl = scrollerElRefs.currentMap[sectionKey];
      if (scrollerEl) {
        let harnessEl = scrollerEl.parentNode; // TODO: weird way to get this. need harness b/c doesn't include table borders
        scrollerClientWidths[sectionKey] = Math.floor(harnessEl.getBoundingClientRect().width - (forceYScrollbars ? scrollbarWidth.y // use global because scroller might not have scrollbars yet but will need them in future
        : 0));
        scrollerClientHeights[sectionKey] = Math.floor(harnessEl.getBoundingClientRect().height);
      }
    }
    return {
      forceYScrollbars,
      scrollerClientWidths,
      scrollerClientHeights
    };
  }
}
SimpleScrollGrid.addStateEquality({
  scrollerClientWidths: isPropsEqual,
  scrollerClientHeights: isPropsEqual
});
function getSectionByKey(sections, key) {
  for (let section of sections) {
    if (section.key === key) {
      return section;
    }
  }
  return null;
}
class EventContainer extends BaseComponent {
  constructor() {
    super(...arguments);
    this.handleEl = el => {
      this.el = el;
      if (el) {
        setElSeg(el, this.props.seg);
      }
    };
  }
  render() {
    const {
      props,
      context
    } = this;
    const {
      options
    } = context;
    const {
      seg
    } = props;
    const {
      eventRange
    } = seg;
    const {
      ui
    } = eventRange;
    const renderProps = {
      event: new EventImpl(context, eventRange.def, eventRange.instance),
      view: context.viewApi,
      timeText: props.timeText,
      textColor: ui.textColor,
      backgroundColor: ui.backgroundColor,
      borderColor: ui.borderColor,
      isDraggable: !props.disableDragging && computeSegDraggable(seg, context),
      isStartResizable: !props.disableResizing && computeSegStartResizable(seg, context),
      isEndResizable: !props.disableResizing && computeSegEndResizable(seg),
      isMirror: Boolean(props.isDragging || props.isResizing || props.isDateSelecting),
      isStart: Boolean(seg.isStart),
      isEnd: Boolean(seg.isEnd),
      isPast: Boolean(props.isPast),
      isFuture: Boolean(props.isFuture),
      isToday: Boolean(props.isToday),
      isSelected: Boolean(props.isSelected),
      isDragging: Boolean(props.isDragging),
      isResizing: Boolean(props.isResizing)
    };
    return (0,preact__WEBPACK_IMPORTED_MODULE_0__.createElement)(ContentContainer, Object.assign({}, props /* contains children */, {
      elRef: this.handleEl,
      elClasses: [...getEventClassNames(renderProps), ...seg.eventRange.ui.classNames, ...(props.elClasses || [])],
      renderProps: renderProps,
      generatorName: "eventContent",
      customGenerator: options.eventContent,
      defaultGenerator: props.defaultGenerator,
      classNameGenerator: options.eventClassNames,
      didMount: options.eventDidMount,
      willUnmount: options.eventWillUnmount
    }));
  }
  componentDidUpdate(prevProps) {
    if (this.el && this.props.seg !== prevProps.seg) {
      setElSeg(this.el, this.props.seg);
    }
  }
}

// should not be a purecomponent
class StandardEvent extends BaseComponent {
  render() {
    let {
      props,
      context
    } = this;
    let {
      options
    } = context;
    let {
      seg
    } = props;
    let {
      ui
    } = seg.eventRange;
    let timeFormat = options.eventTimeFormat || props.defaultTimeFormat;
    let timeText = buildSegTimeText(seg, timeFormat, context, props.defaultDisplayEventTime, props.defaultDisplayEventEnd);
    return (0,preact__WEBPACK_IMPORTED_MODULE_0__.createElement)(EventContainer, Object.assign({}, props /* includes elRef */, {
      elTag: "a",
      elStyle: {
        borderColor: ui.borderColor,
        backgroundColor: ui.backgroundColor
      },
      elAttrs: getSegAnchorAttrs(seg, context),
      defaultGenerator: renderInnerContent$1,
      timeText: timeText
    }), (InnerContent, eventContentArg) => (0,preact__WEBPACK_IMPORTED_MODULE_0__.createElement)(preact__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,preact__WEBPACK_IMPORTED_MODULE_0__.createElement)(InnerContent, {
      elTag: "div",
      elClasses: ['fc-event-main'],
      elStyle: {
        color: eventContentArg.textColor
      }
    }), Boolean(eventContentArg.isStartResizable) && (0,preact__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "fc-event-resizer fc-event-resizer-start"
    }), Boolean(eventContentArg.isEndResizable) && (0,preact__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: "fc-event-resizer fc-event-resizer-end"
    })));
  }
}
function renderInnerContent$1(innerProps) {
  return (0,preact__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "fc-event-main-frame"
  }, innerProps.timeText && (0,preact__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "fc-event-time"
  }, innerProps.timeText), (0,preact__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "fc-event-title-container"
  }, (0,preact__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "fc-event-title fc-sticky"
  }, innerProps.event.title || (0,preact__WEBPACK_IMPORTED_MODULE_0__.createElement)(preact__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, "\u00A0"))));
}
const NowIndicatorContainer = props => (0,preact__WEBPACK_IMPORTED_MODULE_0__.createElement)(ViewContextType.Consumer, null, context => {
  let {
    options
  } = context;
  let renderProps = {
    isAxis: props.isAxis,
    date: context.dateEnv.toDate(props.date),
    view: context.viewApi
  };
  return (0,preact__WEBPACK_IMPORTED_MODULE_0__.createElement)(ContentContainer, Object.assign({}, props /* includes children */, {
    elTag: props.elTag || 'div',
    renderProps: renderProps,
    generatorName: "nowIndicatorContent",
    customGenerator: options.nowIndicatorContent,
    classNameGenerator: options.nowIndicatorClassNames,
    didMount: options.nowIndicatorDidMount,
    willUnmount: options.nowIndicatorWillUnmount
  }));
});
const DAY_NUM_FORMAT = createFormatter({
  day: 'numeric'
});
class DayCellContainer extends BaseComponent {
  constructor() {
    super(...arguments);
    this.refineRenderProps = memoizeObjArg(refineRenderProps);
  }
  render() {
    let {
      props,
      context
    } = this;
    let {
      options
    } = context;
    let renderProps = this.refineRenderProps({
      date: props.date,
      dateProfile: props.dateProfile,
      todayRange: props.todayRange,
      isMonthStart: props.isMonthStart || false,
      showDayNumber: props.showDayNumber,
      extraRenderProps: props.extraRenderProps,
      viewApi: context.viewApi,
      dateEnv: context.dateEnv,
      monthStartFormat: options.monthStartFormat
    });
    return (0,preact__WEBPACK_IMPORTED_MODULE_0__.createElement)(ContentContainer, Object.assign({}, props /* includes children */, {
      elClasses: [...getDayClassNames(renderProps, context.theme), ...(props.elClasses || [])],
      elAttrs: Object.assign(Object.assign({}, props.elAttrs), renderProps.isDisabled ? {} : {
        'data-date': formatDayString(props.date)
      }),
      renderProps: renderProps,
      generatorName: "dayCellContent",
      customGenerator: options.dayCellContent,
      defaultGenerator: props.defaultGenerator,
      classNameGenerator:
      // don't use custom classNames if disabled
      renderProps.isDisabled ? undefined : options.dayCellClassNames,
      didMount: options.dayCellDidMount,
      willUnmount: options.dayCellWillUnmount
    }));
  }
}
function hasCustomDayCellContent(options) {
  return Boolean(options.dayCellContent || hasCustomRenderingHandler('dayCellContent', options));
}
function refineRenderProps(raw) {
  let {
    date,
    dateEnv,
    dateProfile,
    isMonthStart
  } = raw;
  let dayMeta = getDateMeta(date, raw.todayRange, null, dateProfile);
  let dayNumberText = raw.showDayNumber ? dateEnv.format(date, isMonthStart ? raw.monthStartFormat : DAY_NUM_FORMAT) : '';
  return Object.assign(Object.assign(Object.assign({
    date: dateEnv.toDate(date),
    view: raw.viewApi
  }, dayMeta), {
    isMonthStart,
    dayNumberText
  }), raw.extraRenderProps);
}
class BgEvent extends BaseComponent {
  render() {
    let {
      props
    } = this;
    let {
      seg
    } = props;
    return (0,preact__WEBPACK_IMPORTED_MODULE_0__.createElement)(EventContainer, {
      elTag: "div",
      elClasses: ['fc-bg-event'],
      elStyle: {
        backgroundColor: seg.eventRange.ui.backgroundColor
      },
      defaultGenerator: renderInnerContent,
      seg: seg,
      timeText: "",
      isDragging: false,
      isResizing: false,
      isDateSelecting: false,
      isSelected: false,
      isPast: props.isPast,
      isFuture: props.isFuture,
      isToday: props.isToday,
      disableDragging: true,
      disableResizing: true
    });
  }
}
function renderInnerContent(props) {
  let {
    title
  } = props.event;
  return title && (0,preact__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: "fc-event-title"
  }, props.event.title);
}
function renderFill(fillType) {
  return (0,preact__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
    className: `fc-${fillType}`
  });
}
const WeekNumberContainer = props => (0,preact__WEBPACK_IMPORTED_MODULE_0__.createElement)(ViewContextType.Consumer, null, context => {
  let {
    dateEnv,
    options
  } = context;
  let {
    date
  } = props;
  let format = options.weekNumberFormat || props.defaultFormat;
  let num = dateEnv.computeWeekNumber(date); // TODO: somehow use for formatting as well?
  let text = dateEnv.format(date, format);
  let renderProps = {
    num,
    text,
    date
  };
  return (0,preact__WEBPACK_IMPORTED_MODULE_0__.createElement)(ContentContainer // why isn't WeekNumberContentArg being auto-detected?
  , Object.assign({}, props /* includes children */, {
    renderProps: renderProps,
    generatorName: "weekNumberContent",
    customGenerator: options.weekNumberContent,
    defaultGenerator: renderInner,
    classNameGenerator: options.weekNumberClassNames,
    didMount: options.weekNumberDidMount,
    willUnmount: options.weekNumberWillUnmount
  }));
});
function renderInner(innerProps) {
  return innerProps.text;
}
const PADDING_FROM_VIEWPORT = 10;
class Popover extends BaseComponent {
  constructor() {
    super(...arguments);
    this.state = {
      titleId: getUniqueDomId()
    };
    this.handleRootEl = el => {
      this.rootEl = el;
      if (this.props.elRef) {
        setRef(this.props.elRef, el);
      }
    };
    // Triggered when the user clicks *anywhere* in the document, for the autoHide feature
    this.handleDocumentMouseDown = ev => {
      // only hide the popover if the click happened outside the popover
      const target = getEventTargetViaRoot(ev);
      if (!this.rootEl.contains(target)) {
        this.handleCloseClick();
      }
    };
    this.handleDocumentKeyDown = ev => {
      if (ev.key === 'Escape') {
        this.handleCloseClick();
      }
    };
    this.handleCloseClick = () => {
      let {
        onClose
      } = this.props;
      if (onClose) {
        onClose();
      }
    };
  }
  render() {
    let {
      theme,
      options
    } = this.context;
    let {
      props,
      state
    } = this;
    let classNames = ['fc-popover', theme.getClass('popover')].concat(props.extraClassNames || []);
    return (0,preact_compat__WEBPACK_IMPORTED_MODULE_1__.createPortal)((0,preact__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", Object.assign({}, props.extraAttrs, {
      id: props.id,
      className: classNames.join(' '),
      "aria-labelledby": state.titleId,
      ref: this.handleRootEl
    }), (0,preact__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: 'fc-popover-header ' + theme.getClass('popoverHeader')
    }, (0,preact__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
      className: "fc-popover-title",
      id: state.titleId
    }, props.title), (0,preact__WEBPACK_IMPORTED_MODULE_0__.createElement)("span", {
      className: 'fc-popover-close ' + theme.getIconClass('close'),
      title: options.closeHint,
      onClick: this.handleCloseClick
    })), (0,preact__WEBPACK_IMPORTED_MODULE_0__.createElement)("div", {
      className: 'fc-popover-body ' + theme.getClass('popoverContent')
    }, props.children)), props.parentEl);
  }
  componentDidMount() {
    document.addEventListener('mousedown', this.handleDocumentMouseDown);
    document.addEventListener('keydown', this.handleDocumentKeyDown);
    this.updateSize();
  }
  componentWillUnmount() {
    document.removeEventListener('mousedown', this.handleDocumentMouseDown);
    document.removeEventListener('keydown', this.handleDocumentKeyDown);
  }
  updateSize() {
    let {
      isRtl
    } = this.context;
    let {
      alignmentEl,
      alignGridTop
    } = this.props;
    let {
      rootEl
    } = this;
    let alignmentRect = computeClippedClientRect(alignmentEl);
    if (alignmentRect) {
      let popoverDims = rootEl.getBoundingClientRect();
      // position relative to viewport
      let popoverTop = alignGridTop ? elementClosest(alignmentEl, '.fc-scrollgrid').getBoundingClientRect().top : alignmentRect.top;
      let popoverLeft = isRtl ? alignmentRect.right - popoverDims.width : alignmentRect.left;
      // constrain
      popoverTop = Math.max(popoverTop, PADDING_FROM_VIEWPORT);
      popoverLeft = Math.min(popoverLeft, document.documentElement.clientWidth - PADDING_FROM_VIEWPORT - popoverDims.width);
      popoverLeft = Math.max(popoverLeft, PADDING_FROM_VIEWPORT);
      let origin = rootEl.offsetParent.getBoundingClientRect();
      applyStyle(rootEl, {
        top: popoverTop - origin.top,
        left: popoverLeft - origin.left
      });
    }
  }
}
class MorePopover extends DateComponent {
  constructor() {
    super(...arguments);
    this.handleRootEl = rootEl => {
      this.rootEl = rootEl;
      if (rootEl) {
        this.context.registerInteractiveComponent(this, {
          el: rootEl,
          useEventCenter: false
        });
      } else {
        this.context.unregisterInteractiveComponent(this);
      }
    };
  }
  render() {
    let {
      options,
      dateEnv
    } = this.context;
    let {
      props
    } = this;
    let {
      startDate,
      todayRange,
      dateProfile
    } = props;
    let title = dateEnv.format(startDate, options.dayPopoverFormat);
    return (0,preact__WEBPACK_IMPORTED_MODULE_0__.createElement)(DayCellContainer, {
      elRef: this.handleRootEl,
      date: startDate,
      dateProfile: dateProfile,
      todayRange: todayRange
    }, (InnerContent, renderProps, elAttrs) => (0,preact__WEBPACK_IMPORTED_MODULE_0__.createElement)(Popover, {
      elRef: elAttrs.ref,
      id: props.id,
      title: title,
      extraClassNames: ['fc-more-popover'].concat(elAttrs.className || []),
      extraAttrs: elAttrs /* TODO: make these time-based when not whole-day? */,
      parentEl: props.parentEl,
      alignmentEl: props.alignmentEl,
      alignGridTop: props.alignGridTop,
      onClose: props.onClose
    }, hasCustomDayCellContent(options) && (0,preact__WEBPACK_IMPORTED_MODULE_0__.createElement)(InnerContent, {
      elTag: "div",
      elClasses: ['fc-more-popover-misc']
    }), props.children));
  }
  queryHit(positionLeft, positionTop, elWidth, elHeight) {
    let {
      rootEl,
      props
    } = this;
    if (positionLeft >= 0 && positionLeft < elWidth && positionTop >= 0 && positionTop < elHeight) {
      return {
        dateProfile: props.dateProfile,
        dateSpan: Object.assign({
          allDay: !props.forceTimed,
          range: {
            start: props.startDate,
            end: props.endDate
          }
        }, props.extraDateSpan),
        dayEl: rootEl,
        rect: {
          left: 0,
          top: 0,
          right: elWidth,
          bottom: elHeight
        },
        layer: 1 // important when comparing with hits from other components
      };
    }

    return null;
  }
}
class MoreLinkContainer extends BaseComponent {
  constructor() {
    super(...arguments);
    this.state = {
      isPopoverOpen: false,
      popoverId: getUniqueDomId()
    };
    this.handleLinkEl = linkEl => {
      this.linkEl = linkEl;
      if (this.props.elRef) {
        setRef(this.props.elRef, linkEl);
      }
    };
    this.handleClick = ev => {
      let {
        props,
        context
      } = this;
      let {
        moreLinkClick
      } = context.options;
      let date = computeRange(props).start;
      function buildPublicSeg(seg) {
        let {
          def,
          instance,
          range
        } = seg.eventRange;
        return {
          event: new EventImpl(context, def, instance),
          start: context.dateEnv.toDate(range.start),
          end: context.dateEnv.toDate(range.end),
          isStart: seg.isStart,
          isEnd: seg.isEnd
        };
      }
      if (typeof moreLinkClick === 'function') {
        moreLinkClick = moreLinkClick({
          date,
          allDay: Boolean(props.allDayDate),
          allSegs: props.allSegs.map(buildPublicSeg),
          hiddenSegs: props.hiddenSegs.map(buildPublicSeg),
          jsEvent: ev,
          view: context.viewApi
        });
      }
      if (!moreLinkClick || moreLinkClick === 'popover') {
        this.setState({
          isPopoverOpen: true
        });
      } else if (typeof moreLinkClick === 'string') {
        // a view name
        context.calendarApi.zoomTo(date, moreLinkClick);
      }
    };
    this.handlePopoverClose = () => {
      this.setState({
        isPopoverOpen: false
      });
    };
  }
  render() {
    let {
      props,
      state
    } = this;
    return (0,preact__WEBPACK_IMPORTED_MODULE_0__.createElement)(ViewContextType.Consumer, null, context => {
      let {
        viewApi,
        options,
        calendarApi
      } = context;
      let {
        moreLinkText
      } = options;
      let {
        moreCnt
      } = props;
      let range = computeRange(props);
      let text = typeof moreLinkText === 'function' // TODO: eventually use formatWithOrdinals
      ? moreLinkText.call(calendarApi, moreCnt) : `+${moreCnt} ${moreLinkText}`;
      let hint = formatWithOrdinals(options.moreLinkHint, [moreCnt], text);
      let renderProps = {
        num: moreCnt,
        shortText: `+${moreCnt}`,
        text,
        view: viewApi
      };
      return (0,preact__WEBPACK_IMPORTED_MODULE_0__.createElement)(preact__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, Boolean(props.moreCnt) && (0,preact__WEBPACK_IMPORTED_MODULE_0__.createElement)(ContentContainer, {
        elTag: props.elTag || 'a',
        elRef: this.handleLinkEl,
        elClasses: [...(props.elClasses || []), 'fc-more-link'],
        elStyle: props.elStyle,
        elAttrs: Object.assign(Object.assign(Object.assign({}, props.elAttrs), createAriaClickAttrs(this.handleClick)), {
          title: hint,
          'aria-expanded': state.isPopoverOpen,
          'aria-controls': state.isPopoverOpen ? state.popoverId : ''
        }),
        renderProps: renderProps,
        generatorName: "moreLinkContent",
        customGenerator: options.moreLinkContent,
        defaultGenerator: props.defaultGenerator || renderMoreLinkInner,
        classNameGenerator: options.moreLinkClassNames,
        didMount: options.moreLinkDidMount,
        willUnmount: options.moreLinkWillUnmount
      }, props.children), state.isPopoverOpen && (0,preact__WEBPACK_IMPORTED_MODULE_0__.createElement)(MorePopover, {
        id: state.popoverId,
        startDate: range.start,
        endDate: range.end,
        dateProfile: props.dateProfile,
        todayRange: props.todayRange,
        extraDateSpan: props.extraDateSpan,
        parentEl: this.parentEl,
        alignmentEl: props.alignmentElRef ? props.alignmentElRef.current : this.linkEl,
        alignGridTop: props.alignGridTop,
        forceTimed: props.forceTimed,
        onClose: this.handlePopoverClose
      }, props.popoverContent()));
    });
  }
  componentDidMount() {
    this.updateParentEl();
  }
  componentDidUpdate() {
    this.updateParentEl();
  }
  updateParentEl() {
    if (this.linkEl) {
      this.parentEl = elementClosest(this.linkEl, '.fc-view-harness');
    }
  }
}
function renderMoreLinkInner(props) {
  return props.text;
}
function computeRange(props) {
  if (props.allDayDate) {
    return {
      start: props.allDayDate,
      end: addDays(props.allDayDate, 1)
    };
  }
  let {
    hiddenSegs
  } = props;
  return {
    start: computeEarliestSegStart(hiddenSegs),
    end: computeLatestSegEnd(hiddenSegs)
  };
}
function computeEarliestSegStart(segs) {
  return segs.reduce(pickEarliestStart).eventRange.range.start;
}
function pickEarliestStart(seg0, seg1) {
  return seg0.eventRange.range.start < seg1.eventRange.range.start ? seg0 : seg1;
}
function computeLatestSegEnd(segs) {
  return segs.reduce(pickLatestEnd).eventRange.range.end;
}
function pickLatestEnd(seg0, seg1) {
  return seg0.eventRange.range.end > seg1.eventRange.range.end ? seg0 : seg1;
}
class ViewContainer extends BaseComponent {
  render() {
    let {
      props,
      context
    } = this;
    let {
      options
    } = context;
    let renderProps = {
      view: context.viewApi
    };
    return (0,preact__WEBPACK_IMPORTED_MODULE_0__.createElement)(ContentContainer, Object.assign({}, props, {
      elTag: props.elTag || 'div',
      elClasses: [...buildViewClassNames(props.viewSpec), ...(props.elClasses || [])],
      renderProps: renderProps,
      classNameGenerator: options.viewClassNames,
      generatorName: undefined,
      didMount: options.viewDidMount,
      willUnmount: options.viewWillUnmount
    }), () => props.children);
  }
}
function buildViewClassNames(viewSpec) {
  return [`fc-${viewSpec.type}-view`, 'fc-view'];
}
const EVENT_SOURCE_REFINERS = {
  id: String,
  defaultAllDay: Boolean,
  url: String,
  format: String,
  events: identity,
  eventDataTransform: identity,
  // for any network-related sources
  success: identity,
  failure: identity
};
function parseEventSource(raw, context, refiners = buildEventSourceRefiners(context)) {
  let rawObj;
  if (typeof raw === 'string') {
    rawObj = {
      url: raw
    };
  } else if (typeof raw === 'function' || Array.isArray(raw)) {
    rawObj = {
      events: raw
    };
  } else if (typeof raw === 'object' && raw) {
    // not null
    rawObj = raw;
  }
  if (rawObj) {
    let {
      refined,
      extra
    } = refineProps(rawObj, refiners);
    let metaRes = buildEventSourceMeta(refined, context);
    if (metaRes) {
      return {
        _raw: raw,
        isFetching: false,
        latestFetchId: '',
        fetchRange: null,
        defaultAllDay: refined.defaultAllDay,
        eventDataTransform: refined.eventDataTransform,
        success: refined.success,
        failure: refined.failure,
        publicId: refined.id || '',
        sourceId: guid(),
        sourceDefId: metaRes.sourceDefId,
        meta: metaRes.meta,
        ui: createEventUi(refined, context),
        extendedProps: extra
      };
    }
  }
  return null;
}
function buildEventSourceRefiners(context) {
  return Object.assign(Object.assign(Object.assign({}, EVENT_UI_REFINERS), EVENT_SOURCE_REFINERS), context.pluginHooks.eventSourceRefiners);
}
function buildEventSourceMeta(raw, context) {
  let defs = context.pluginHooks.eventSourceDefs;
  for (let i = defs.length - 1; i >= 0; i -= 1) {
    // later-added plugins take precedence
    let def = defs[i];
    let meta = def.parseMeta(raw);
    if (meta) {
      return {
        sourceDefId: i,
        meta
      };
    }
  }
  return null;
}
class CalendarImpl {
  getCurrentData() {
    return this.currentDataManager.getCurrentData();
  }
  dispatch(action) {
    this.currentDataManager.dispatch(action);
  }
  get view() {
    return this.getCurrentData().viewApi;
  }
  batchRendering(callback) {
    callback();
  }
  updateSize() {
    this.trigger('_resize', true);
  }
  // Options
  // -----------------------------------------------------------------------------------------------------------------
  setOption(name, val) {
    this.dispatch({
      type: 'SET_OPTION',
      optionName: name,
      rawOptionValue: val
    });
  }
  getOption(name) {
    return this.currentDataManager.currentCalendarOptionsInput[name];
  }
  getAvailableLocaleCodes() {
    return Object.keys(this.getCurrentData().availableRawLocales);
  }
  // Trigger
  // -----------------------------------------------------------------------------------------------------------------
  on(handlerName, handler) {
    let {
      currentDataManager
    } = this;
    if (currentDataManager.currentCalendarOptionsRefiners[handlerName]) {
      currentDataManager.emitter.on(handlerName, handler);
    } else {
      console.warn(`Unknown listener name '${handlerName}'`);
    }
  }
  off(handlerName, handler) {
    this.currentDataManager.emitter.off(handlerName, handler);
  }
  // not meant for public use
  trigger(handlerName, ...args) {
    this.currentDataManager.emitter.trigger(handlerName, ...args);
  }
  // View
  // -----------------------------------------------------------------------------------------------------------------
  changeView(viewType, dateOrRange) {
    this.batchRendering(() => {
      this.unselect();
      if (dateOrRange) {
        if (dateOrRange.start && dateOrRange.end) {
          // a range
          this.dispatch({
            type: 'CHANGE_VIEW_TYPE',
            viewType
          });
          this.dispatch({
            type: 'SET_OPTION',
            optionName: 'visibleRange',
            rawOptionValue: dateOrRange
          });
        } else {
          let {
            dateEnv
          } = this.getCurrentData();
          this.dispatch({
            type: 'CHANGE_VIEW_TYPE',
            viewType,
            dateMarker: dateEnv.createMarker(dateOrRange)
          });
        }
      } else {
        this.dispatch({
          type: 'CHANGE_VIEW_TYPE',
          viewType
        });
      }
    });
  }
  // Forces navigation to a view for the given date.
  // `viewType` can be a specific view name or a generic one like "week" or "day".
  // needs to change
  zoomTo(dateMarker, viewType) {
    let state = this.getCurrentData();
    let spec;
    viewType = viewType || 'day'; // day is default zoom
    spec = state.viewSpecs[viewType] || this.getUnitViewSpec(viewType);
    this.unselect();
    if (spec) {
      this.dispatch({
        type: 'CHANGE_VIEW_TYPE',
        viewType: spec.type,
        dateMarker
      });
    } else {
      this.dispatch({
        type: 'CHANGE_DATE',
        dateMarker
      });
    }
  }
  // Given a duration singular unit, like "week" or "day", finds a matching view spec.
  // Preference is given to views that have corresponding buttons.
  getUnitViewSpec(unit) {
    let {
      viewSpecs,
      toolbarConfig
    } = this.getCurrentData();
    let viewTypes = [].concat(toolbarConfig.header ? toolbarConfig.header.viewsWithButtons : [], toolbarConfig.footer ? toolbarConfig.footer.viewsWithButtons : []);
    let i;
    let spec;
    for (let viewType in viewSpecs) {
      viewTypes.push(viewType);
    }
    for (i = 0; i < viewTypes.length; i += 1) {
      spec = viewSpecs[viewTypes[i]];
      if (spec) {
        if (spec.singleUnit === unit) {
          return spec;
        }
      }
    }
    return null;
  }
  // Current Date
  // -----------------------------------------------------------------------------------------------------------------
  prev() {
    this.unselect();
    this.dispatch({
      type: 'PREV'
    });
  }
  next() {
    this.unselect();
    this.dispatch({
      type: 'NEXT'
    });
  }
  prevYear() {
    let state = this.getCurrentData();
    this.unselect();
    this.dispatch({
      type: 'CHANGE_DATE',
      dateMarker: state.dateEnv.addYears(state.currentDate, -1)
    });
  }
  nextYear() {
    let state = this.getCurrentData();
    this.unselect();
    this.dispatch({
      type: 'CHANGE_DATE',
      dateMarker: state.dateEnv.addYears(state.currentDate, 1)
    });
  }
  today() {
    let state = this.getCurrentData();
    this.unselect();
    this.dispatch({
      type: 'CHANGE_DATE',
      dateMarker: getNow(state.calendarOptions.now, state.dateEnv)
    });
  }
  gotoDate(zonedDateInput) {
    let state = this.getCurrentData();
    this.unselect();
    this.dispatch({
      type: 'CHANGE_DATE',
      dateMarker: state.dateEnv.createMarker(zonedDateInput)
    });
  }
  incrementDate(deltaInput) {
    let state = this.getCurrentData();
    let delta = createDuration(deltaInput);
    if (delta) {
      // else, warn about invalid input?
      this.unselect();
      this.dispatch({
        type: 'CHANGE_DATE',
        dateMarker: state.dateEnv.add(state.currentDate, delta)
      });
    }
  }
  getDate() {
    let state = this.getCurrentData();
    return state.dateEnv.toDate(state.currentDate);
  }
  // Date Formatting Utils
  // -----------------------------------------------------------------------------------------------------------------
  formatDate(d, formatter) {
    let {
      dateEnv
    } = this.getCurrentData();
    return dateEnv.format(dateEnv.createMarker(d), createFormatter(formatter));
  }
  // `settings` is for formatter AND isEndExclusive
  formatRange(d0, d1, settings) {
    let {
      dateEnv
    } = this.getCurrentData();
    return dateEnv.formatRange(dateEnv.createMarker(d0), dateEnv.createMarker(d1), createFormatter(settings), settings);
  }
  formatIso(d, omitTime) {
    let {
      dateEnv
    } = this.getCurrentData();
    return dateEnv.formatIso(dateEnv.createMarker(d), {
      omitTime
    });
  }
  // Date Selection / Event Selection / DayClick
  // -----------------------------------------------------------------------------------------------------------------
  select(dateOrObj, endDate) {
    let selectionInput;
    if (endDate == null) {
      if (dateOrObj.start != null) {
        selectionInput = dateOrObj;
      } else {
        selectionInput = {
          start: dateOrObj,
          end: null
        };
      }
    } else {
      selectionInput = {
        start: dateOrObj,
        end: endDate
      };
    }
    let state = this.getCurrentData();
    let selection = parseDateSpan(selectionInput, state.dateEnv, createDuration({
      days: 1
    }));
    if (selection) {
      // throw parse error otherwise?
      this.dispatch({
        type: 'SELECT_DATES',
        selection
      });
      triggerDateSelect(selection, null, state);
    }
  }
  unselect(pev) {
    let state = this.getCurrentData();
    if (state.dateSelection) {
      this.dispatch({
        type: 'UNSELECT_DATES'
      });
      triggerDateUnselect(pev, state);
    }
  }
  // Public Events API
  // -----------------------------------------------------------------------------------------------------------------
  addEvent(eventInput, sourceInput) {
    if (eventInput instanceof EventImpl) {
      let def = eventInput._def;
      let instance = eventInput._instance;
      let currentData = this.getCurrentData();
      // not already present? don't want to add an old snapshot
      if (!currentData.eventStore.defs[def.defId]) {
        this.dispatch({
          type: 'ADD_EVENTS',
          eventStore: eventTupleToStore({
            def,
            instance
          }) // TODO: better util for two args?
        });

        this.triggerEventAdd(eventInput);
      }
      return eventInput;
    }
    let state = this.getCurrentData();
    let eventSource;
    if (sourceInput instanceof EventSourceImpl) {
      eventSource = sourceInput.internalEventSource;
    } else if (typeof sourceInput === 'boolean') {
      if (sourceInput) {
        // true. part of the first event source
        [eventSource] = hashValuesToArray(state.eventSources);
      }
    } else if (sourceInput != null) {
      // an ID. accepts a number too
      let sourceApi = this.getEventSourceById(sourceInput); // TODO: use an internal function
      if (!sourceApi) {
        console.warn(`Could not find an event source with ID "${sourceInput}"`); // TODO: test
        return null;
      }
      eventSource = sourceApi.internalEventSource;
    }
    let tuple = parseEvent(eventInput, eventSource, state, false);
    if (tuple) {
      let newEventApi = new EventImpl(state, tuple.def, tuple.def.recurringDef ? null : tuple.instance);
      this.dispatch({
        type: 'ADD_EVENTS',
        eventStore: eventTupleToStore(tuple)
      });
      this.triggerEventAdd(newEventApi);
      return newEventApi;
    }
    return null;
  }
  triggerEventAdd(eventApi) {
    let {
      emitter
    } = this.getCurrentData();
    emitter.trigger('eventAdd', {
      event: eventApi,
      relatedEvents: [],
      revert: () => {
        this.dispatch({
          type: 'REMOVE_EVENTS',
          eventStore: eventApiToStore(eventApi)
        });
      }
    });
  }
  // TODO: optimize
  getEventById(id) {
    let state = this.getCurrentData();
    let {
      defs,
      instances
    } = state.eventStore;
    id = String(id);
    for (let defId in defs) {
      let def = defs[defId];
      if (def.publicId === id) {
        if (def.recurringDef) {
          return new EventImpl(state, def, null);
        }
        for (let instanceId in instances) {
          let instance = instances[instanceId];
          if (instance.defId === def.defId) {
            return new EventImpl(state, def, instance);
          }
        }
      }
    }
    return null;
  }
  getEvents() {
    let currentData = this.getCurrentData();
    return buildEventApis(currentData.eventStore, currentData);
  }
  removeAllEvents() {
    this.dispatch({
      type: 'REMOVE_ALL_EVENTS'
    });
  }
  // Public Event Sources API
  // -----------------------------------------------------------------------------------------------------------------
  getEventSources() {
    let state = this.getCurrentData();
    let sourceHash = state.eventSources;
    let sourceApis = [];
    for (let internalId in sourceHash) {
      sourceApis.push(new EventSourceImpl(state, sourceHash[internalId]));
    }
    return sourceApis;
  }
  getEventSourceById(id) {
    let state = this.getCurrentData();
    let sourceHash = state.eventSources;
    id = String(id);
    for (let sourceId in sourceHash) {
      if (sourceHash[sourceId].publicId === id) {
        return new EventSourceImpl(state, sourceHash[sourceId]);
      }
    }
    return null;
  }
  addEventSource(sourceInput) {
    let state = this.getCurrentData();
    if (sourceInput instanceof EventSourceImpl) {
      // not already present? don't want to add an old snapshot
      if (!state.eventSources[sourceInput.internalEventSource.sourceId]) {
        this.dispatch({
          type: 'ADD_EVENT_SOURCES',
          sources: [sourceInput.internalEventSource]
        });
      }
      return sourceInput;
    }
    let eventSource = parseEventSource(sourceInput, state);
    if (eventSource) {
      // TODO: error otherwise?
      this.dispatch({
        type: 'ADD_EVENT_SOURCES',
        sources: [eventSource]
      });
      return new EventSourceImpl(state, eventSource);
    }
    return null;
  }
  removeAllEventSources() {
    this.dispatch({
      type: 'REMOVE_ALL_EVENT_SOURCES'
    });
  }
  refetchEvents() {
    this.dispatch({
      type: 'FETCH_EVENT_SOURCES',
      isRefetch: true
    });
  }
  // Scroll
  // -----------------------------------------------------------------------------------------------------------------
  scrollToTime(timeInput) {
    let time = createDuration(timeInput);
    if (time) {
      this.trigger('_scrollRequest', {
        time
      });
    }
  }
}
class Store {
  constructor() {
    this.handlers = [];
  }
  set(value) {
    this.currentValue = value;
    for (let handler of this.handlers) {
      handler(value);
    }
  }
  subscribe(handler) {
    this.handlers.push(handler);
    if (this.currentValue !== undefined) {
      handler(this.currentValue);
    }
  }
}

/*
Subscribers will get a LIST of CustomRenderings
*/
class CustomRenderingStore extends Store {
  constructor() {
    super(...arguments);
    this.map = new Map();
  }
  // for consistent order
  handle(customRendering) {
    const {
      map
    } = this;
    let updated = false;
    if (customRendering.isActive) {
      map.set(customRendering.id, customRendering);
      updated = true;
    } else if (map.has(customRendering.id)) {
      map.delete(customRendering.id);
      updated = true;
    }
    if (updated) {
      this.set(map);
    }
  }
}


/***/ }),

/***/ 1788:
/*!****************************************************************************!*\
  !*** ./node_modules/@ng-select/ng-select/fesm2022/ng-select-ng-select.mjs ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   NgFooterTemplateDirective: () => (/* binding */ NgFooterTemplateDirective),
/* harmony export */   NgHeaderTemplateDirective: () => (/* binding */ NgHeaderTemplateDirective),
/* harmony export */   NgItemLabelDirective: () => (/* binding */ NgItemLabelDirective),
/* harmony export */   NgLabelTemplateDirective: () => (/* binding */ NgLabelTemplateDirective),
/* harmony export */   NgLoadingSpinnerTemplateDirective: () => (/* binding */ NgLoadingSpinnerTemplateDirective),
/* harmony export */   NgLoadingTextTemplateDirective: () => (/* binding */ NgLoadingTextTemplateDirective),
/* harmony export */   NgMultiLabelTemplateDirective: () => (/* binding */ NgMultiLabelTemplateDirective),
/* harmony export */   NgNotFoundTemplateDirective: () => (/* binding */ NgNotFoundTemplateDirective),
/* harmony export */   NgOptgroupTemplateDirective: () => (/* binding */ NgOptgroupTemplateDirective),
/* harmony export */   NgOptionComponent: () => (/* binding */ NgOptionComponent),
/* harmony export */   NgOptionTemplateDirective: () => (/* binding */ NgOptionTemplateDirective),
/* harmony export */   NgSelectComponent: () => (/* binding */ NgSelectComponent),
/* harmony export */   NgSelectConfig: () => (/* binding */ NgSelectConfig),
/* harmony export */   NgSelectModule: () => (/* binding */ NgSelectModule),
/* harmony export */   NgTagTemplateDirective: () => (/* binding */ NgTagTemplateDirective),
/* harmony export */   NgTypeToSearchTemplateDirective: () => (/* binding */ NgTypeToSearchTemplateDirective),
/* harmony export */   SELECTION_MODEL_FACTORY: () => (/* binding */ SELECTION_MODEL_FACTORY)
/* harmony export */ });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ 1699);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @angular/forms */ 8849);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! rxjs/operators */ 274);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! rxjs/operators */ 2815);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! rxjs/operators */ 5043);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! rxjs/operators */ 3738);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! rxjs/operators */ 655);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! rxjs/operators */ 4520);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! rxjs/operators */ 9736);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs */ 6345);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ 1141);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ 2513);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs */ 9016);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! rxjs */ 7835);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/common */ 6575);







const _c0 = ["content"];
const _c1 = ["scroll"];
const _c2 = ["padding"];
const _c3 = function (a0) {
  return {
    searchTerm: a0
  };
};
function NgDropdownPanelComponent_div_0_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainer"](1, 7);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngTemplateOutlet", ctx_r0.headerTemplate)("ngTemplateOutletContext", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpureFunction1"](2, _c3, ctx_r0.filterValue));
  }
}
function NgDropdownPanelComponent_div_8_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 8);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainer"](1, 7);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const ctx_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngTemplateOutlet", ctx_r4.footerTemplate)("ngTemplateOutletContext", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpureFunction1"](2, _c3, ctx_r4.filterValue));
  }
}
const _c4 = ["*"];
const _c5 = ["searchInput"];
function NgSelectComponent_ng_container_4_div_1_ng_template_1_Template(rf, ctx) {
  if (rf & 1) {
    const _r13 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span", 15);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function NgSelectComponent_ng_container_4_div_1_ng_template_1_Template_span_click_0_listener() {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r13);
      const item_r7 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]().$implicit;
      const ctx_r11 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);
      return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵresetView"](ctx_r11.unselect(item_r7));
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, "\xD7");
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](2, "span", 16);
  }
  if (rf & 2) {
    const item_r7 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]().$implicit;
    const ctx_r9 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngItemLabel", item_r7.label)("escape", ctx_r9.escapeHTML);
  }
}
function NgSelectComponent_ng_container_4_div_1_ng_template_3_Template(rf, ctx) {}
const _c6 = function (a0, a1, a2) {
  return {
    item: a0,
    clear: a1,
    label: a2
  };
};
function NgSelectComponent_ng_container_4_div_1_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 12);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, NgSelectComponent_ng_container_4_div_1_ng_template_1_Template, 3, 2, "ng-template", null, 13, _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplateRefExtractor"]);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](3, NgSelectComponent_ng_container_4_div_1_ng_template_3_Template, 0, 0, "ng-template", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const item_r7 = ctx.$implicit;
    const _r8 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](2);
    const ctx_r6 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵclassProp"]("ng-value-disabled", item_r7.disabled);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngTemplateOutlet", ctx_r6.labelTemplate || _r8)("ngTemplateOutletContext", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpureFunction3"](4, _c6, item_r7.value, ctx_r6.clearItem, item_r7.label));
  }
}
function NgSelectComponent_ng_container_4_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerStart"](0);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, NgSelectComponent_ng_container_4_div_1_Template, 4, 8, "div", 11);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerEnd"]();
  }
  if (rf & 2) {
    const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngForOf", ctx_r0.selectedItems)("ngForTrackBy", ctx_r0.trackByOption);
  }
}
function NgSelectComponent_5_ng_template_0_Template(rf, ctx) {}
const _c7 = function (a0, a1) {
  return {
    items: a0,
    clear: a1
  };
};
function NgSelectComponent_5_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](0, NgSelectComponent_5_ng_template_0_Template, 0, 0, "ng-template", 14);
  }
  if (rf & 2) {
    const ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngTemplateOutlet", ctx_r1.multiLabelTemplate)("ngTemplateOutletContext", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpureFunction2"](2, _c7, ctx_r1.selectedValues, ctx_r1.clearItem));
  }
}
function NgSelectComponent_ng_container_9_ng_template_1_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](0, "div", 19);
  }
}
function NgSelectComponent_ng_container_9_ng_template_3_Template(rf, ctx) {}
function NgSelectComponent_ng_container_9_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerStart"](0);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, NgSelectComponent_ng_container_9_ng_template_1_Template, 1, 0, "ng-template", null, 17, _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplateRefExtractor"]);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](3, NgSelectComponent_ng_container_9_ng_template_3_Template, 0, 0, "ng-template", 18);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerEnd"]();
  }
  if (rf & 2) {
    const _r16 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](2);
    const ctx_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngTemplateOutlet", ctx_r3.loadingSpinnerTemplate || _r16);
  }
}
function NgSelectComponent_span_10_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span", 20)(1, "span", 21);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2, "\xD7");
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]()();
  }
  if (rf & 2) {
    const ctx_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpropertyInterpolate"]("title", ctx_r4.clearAllText);
  }
}
function NgSelectComponent_ng_dropdown_panel_13_div_2_ng_template_1_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](0, "span", 27);
  }
  if (rf & 2) {
    const item_r24 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]().$implicit;
    const ctx_r26 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngItemLabel", item_r24.label)("escape", ctx_r26.escapeHTML);
  }
}
function NgSelectComponent_ng_dropdown_panel_13_div_2_ng_template_3_Template(rf, ctx) {}
const _c8 = function (a0, a1, a2, a3) {
  return {
    item: a0,
    item$: a1,
    index: a2,
    searchTerm: a3
  };
};
function NgSelectComponent_ng_dropdown_panel_13_div_2_Template(rf, ctx) {
  if (rf & 1) {
    const _r30 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 25);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function NgSelectComponent_ng_dropdown_panel_13_div_2_Template_div_click_0_listener() {
      const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r30);
      const item_r24 = restoredCtx.$implicit;
      const ctx_r29 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);
      return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵresetView"](ctx_r29.toggleItem(item_r24));
    })("mouseover", function NgSelectComponent_ng_dropdown_panel_13_div_2_Template_div_mouseover_0_listener() {
      const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r30);
      const item_r24 = restoredCtx.$implicit;
      const ctx_r31 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);
      return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵresetView"](ctx_r31.onItemHover(item_r24));
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, NgSelectComponent_ng_dropdown_panel_13_div_2_ng_template_1_Template, 1, 2, "ng-template", null, 26, _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplateRefExtractor"]);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](3, NgSelectComponent_ng_dropdown_panel_13_div_2_ng_template_3_Template, 0, 0, "ng-template", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const item_r24 = ctx.$implicit;
    const _r25 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](2);
    const ctx_r19 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵclassProp"]("ng-option-disabled", item_r24.disabled)("ng-option-selected", item_r24.selected)("ng-optgroup", item_r24.children)("ng-option", !item_r24.children)("ng-option-child", !!item_r24.parent)("ng-option-marked", item_r24 === ctx_r19.itemsList.markedItem);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵattribute"]("role", item_r24.children ? "group" : "option")("aria-selected", item_r24.selected)("id", item_r24 == null ? null : item_r24.htmlId);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngTemplateOutlet", item_r24.children ? ctx_r19.optgroupTemplate || _r25 : ctx_r19.optionTemplate || _r25)("ngTemplateOutletContext", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpureFunction4"](17, _c8, item_r24.value, item_r24, item_r24.index, ctx_r19.searchTerm));
  }
}
function NgSelectComponent_ng_dropdown_panel_13_div_3_ng_template_1_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "span")(1, "span", 30);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const ctx_r33 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](ctx_r33.addTagText);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate1"]("\"", ctx_r33.searchTerm, "\"");
  }
}
function NgSelectComponent_ng_dropdown_panel_13_div_3_ng_template_3_Template(rf, ctx) {}
function NgSelectComponent_ng_dropdown_panel_13_div_3_Template(rf, ctx) {
  if (rf & 1) {
    const _r36 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 28);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("mouseover", function NgSelectComponent_ng_dropdown_panel_13_div_3_Template_div_mouseover_0_listener() {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r36);
      const ctx_r35 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);
      return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵresetView"](ctx_r35.itemsList.unmarkItem());
    })("click", function NgSelectComponent_ng_dropdown_panel_13_div_3_Template_div_click_0_listener() {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r36);
      const ctx_r37 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);
      return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵresetView"](ctx_r37.selectTag());
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, NgSelectComponent_ng_dropdown_panel_13_div_3_ng_template_1_Template, 4, 2, "ng-template", null, 29, _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplateRefExtractor"]);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](3, NgSelectComponent_ng_dropdown_panel_13_div_3_ng_template_3_Template, 0, 0, "ng-template", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const _r32 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](2);
    const ctx_r20 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵclassProp"]("ng-option-marked", !ctx_r20.itemsList.markedItem);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngTemplateOutlet", ctx_r20.tagTemplate || _r32)("ngTemplateOutletContext", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpureFunction1"](4, _c3, ctx_r20.searchTerm));
  }
}
function NgSelectComponent_ng_dropdown_panel_13_ng_container_4_ng_template_1_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 32);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const ctx_r39 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](ctx_r39.notFoundText);
  }
}
function NgSelectComponent_ng_dropdown_panel_13_ng_container_4_ng_template_3_Template(rf, ctx) {}
function NgSelectComponent_ng_dropdown_panel_13_ng_container_4_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerStart"](0);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, NgSelectComponent_ng_dropdown_panel_13_ng_container_4_ng_template_1_Template, 2, 1, "ng-template", null, 31, _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplateRefExtractor"]);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](3, NgSelectComponent_ng_dropdown_panel_13_ng_container_4_ng_template_3_Template, 0, 0, "ng-template", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerEnd"]();
  }
  if (rf & 2) {
    const _r38 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](2);
    const ctx_r21 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngTemplateOutlet", ctx_r21.notFoundTemplate || _r38)("ngTemplateOutletContext", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpureFunction1"](2, _c3, ctx_r21.searchTerm));
  }
}
function NgSelectComponent_ng_dropdown_panel_13_ng_container_5_ng_template_1_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 32);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const ctx_r42 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](ctx_r42.typeToSearchText);
  }
}
function NgSelectComponent_ng_dropdown_panel_13_ng_container_5_ng_template_3_Template(rf, ctx) {}
function NgSelectComponent_ng_dropdown_panel_13_ng_container_5_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerStart"](0);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, NgSelectComponent_ng_dropdown_panel_13_ng_container_5_ng_template_1_Template, 2, 1, "ng-template", null, 33, _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplateRefExtractor"]);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](3, NgSelectComponent_ng_dropdown_panel_13_ng_container_5_ng_template_3_Template, 0, 0, "ng-template", 18);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerEnd"]();
  }
  if (rf & 2) {
    const _r41 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](2);
    const ctx_r22 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngTemplateOutlet", ctx_r22.typeToSearchTemplate || _r41);
  }
}
function NgSelectComponent_ng_dropdown_panel_13_ng_container_6_ng_template_1_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 32);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const ctx_r45 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](ctx_r45.loadingText);
  }
}
function NgSelectComponent_ng_dropdown_panel_13_ng_container_6_ng_template_3_Template(rf, ctx) {}
function NgSelectComponent_ng_dropdown_panel_13_ng_container_6_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerStart"](0);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, NgSelectComponent_ng_dropdown_panel_13_ng_container_6_ng_template_1_Template, 2, 1, "ng-template", null, 34, _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplateRefExtractor"]);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](3, NgSelectComponent_ng_dropdown_panel_13_ng_container_6_ng_template_3_Template, 0, 0, "ng-template", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerEnd"]();
  }
  if (rf & 2) {
    const _r44 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](2);
    const ctx_r23 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngTemplateOutlet", ctx_r23.loadingTextTemplate || _r44)("ngTemplateOutletContext", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpureFunction1"](2, _c3, ctx_r23.searchTerm));
  }
}
function NgSelectComponent_ng_dropdown_panel_13_Template(rf, ctx) {
  if (rf & 1) {
    const _r48 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "ng-dropdown-panel", 22);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("update", function NgSelectComponent_ng_dropdown_panel_13_Template_ng_dropdown_panel_update_0_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r48);
      const ctx_r47 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
      return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵresetView"](ctx_r47.viewPortItems = $event);
    })("scroll", function NgSelectComponent_ng_dropdown_panel_13_Template_ng_dropdown_panel_scroll_0_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r48);
      const ctx_r49 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
      return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵresetView"](ctx_r49.scroll.emit($event));
    })("scrollToEnd", function NgSelectComponent_ng_dropdown_panel_13_Template_ng_dropdown_panel_scrollToEnd_0_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r48);
      const ctx_r50 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
      return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵresetView"](ctx_r50.scrollToEnd.emit($event));
    })("outsideClick", function NgSelectComponent_ng_dropdown_panel_13_Template_ng_dropdown_panel_outsideClick_0_listener() {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r48);
      const ctx_r51 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
      return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵresetView"](ctx_r51.close());
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerStart"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](2, NgSelectComponent_ng_dropdown_panel_13_div_2_Template, 4, 22, "div", 23);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](3, NgSelectComponent_ng_dropdown_panel_13_div_3_Template, 4, 6, "div", 24);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](4, NgSelectComponent_ng_dropdown_panel_13_ng_container_4_Template, 4, 4, "ng-container", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](5, NgSelectComponent_ng_dropdown_panel_13_ng_container_5_Template, 4, 1, "ng-container", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](6, NgSelectComponent_ng_dropdown_panel_13_ng_container_6_Template, 4, 4, "ng-container", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const ctx_r5 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵclassProp"]("ng-select-multiple", ctx_r5.multiple);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("virtualScroll", ctx_r5.virtualScroll)("bufferAmount", ctx_r5.bufferAmount)("appendTo", ctx_r5.appendTo)("position", ctx_r5.dropdownPosition)("headerTemplate", ctx_r5.headerTemplate)("footerTemplate", ctx_r5.footerTemplate)("filterValue", ctx_r5.searchTerm)("items", ctx_r5.itemsList.filteredItems)("markedItem", ctx_r5.itemsList.markedItem)("ngClass", ctx_r5.appendTo ? ctx_r5.classes : null)("id", ctx_r5.dropdownId);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngForOf", ctx_r5.viewPortItems)("ngForTrackBy", ctx_r5.trackByOption);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx_r5.showAddTag);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx_r5.showNoItemsFound());
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx_r5.showTypeToSearch());
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx_r5.loading && ctx_r5.itemsList.filteredItems.length === 0);
  }
}
const unescapedHTMLExp = /[&<>"']/g;
const hasUnescapedHTMLExp = RegExp(unescapedHTMLExp.source);
const htmlEscapes = {
  '&': '&amp;',
  '<': '&lt;',
  '>': '&gt;',
  '"': '&quot;',
  '\'': '&#39;'
};
function escapeHTML(value) {
  return value && hasUnescapedHTMLExp.test(value) ? value.replace(unescapedHTMLExp, chr => htmlEscapes[chr]) : value;
}
function isDefined(value) {
  return value !== undefined && value !== null;
}
function isObject(value) {
  return typeof value === 'object' && isDefined(value);
}
function isPromise(value) {
  return value instanceof Promise;
}
function isFunction(value) {
  return value instanceof Function;
}
class NgItemLabelDirective {
  constructor(element) {
    this.element = element;
    this.escape = true;
  }
  ngOnChanges(changes) {
    this.element.nativeElement.innerHTML = this.escape ? escapeHTML(this.ngItemLabel) : this.ngItemLabel;
  }
  static #_ = this.ɵfac = function NgItemLabelDirective_Factory(t) {
    return new (t || NgItemLabelDirective)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef));
  };
  static #_2 = this.ɵdir = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineDirective"]({
    type: NgItemLabelDirective,
    selectors: [["", "ngItemLabel", ""]],
    inputs: {
      ngItemLabel: "ngItemLabel",
      escape: "escape"
    },
    features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵNgOnChangesFeature"]]
  });
}
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](NgItemLabelDirective, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Directive,
    args: [{
      selector: '[ngItemLabel]'
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef
    }];
  }, {
    ngItemLabel: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    escape: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }]
  });
})();
// eslint-disable-next-line @angular-eslint/directive-selector
class NgOptionTemplateDirective {
  constructor(template) {
    this.template = template;
  }
  static #_ = this.ɵfac = function NgOptionTemplateDirective_Factory(t) {
    return new (t || NgOptionTemplateDirective)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.TemplateRef));
  };
  static #_2 = this.ɵdir = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineDirective"]({
    type: NgOptionTemplateDirective,
    selectors: [["", "ng-option-tmp", ""]]
  });
}
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](NgOptionTemplateDirective, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Directive,
    args: [{
      selector: '[ng-option-tmp]'
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.TemplateRef
    }];
  }, null);
})();
// eslint-disable-next-line @angular-eslint/directive-selector
class NgOptgroupTemplateDirective {
  constructor(template) {
    this.template = template;
  }
  static #_ = this.ɵfac = function NgOptgroupTemplateDirective_Factory(t) {
    return new (t || NgOptgroupTemplateDirective)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.TemplateRef));
  };
  static #_2 = this.ɵdir = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineDirective"]({
    type: NgOptgroupTemplateDirective,
    selectors: [["", "ng-optgroup-tmp", ""]]
  });
}
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](NgOptgroupTemplateDirective, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Directive,
    args: [{
      selector: '[ng-optgroup-tmp]'
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.TemplateRef
    }];
  }, null);
})();
// eslint-disable-next-line @angular-eslint/directive-selector
class NgLabelTemplateDirective {
  constructor(template) {
    this.template = template;
  }
  static #_ = this.ɵfac = function NgLabelTemplateDirective_Factory(t) {
    return new (t || NgLabelTemplateDirective)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.TemplateRef));
  };
  static #_2 = this.ɵdir = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineDirective"]({
    type: NgLabelTemplateDirective,
    selectors: [["", "ng-label-tmp", ""]]
  });
}
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](NgLabelTemplateDirective, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Directive,
    args: [{
      selector: '[ng-label-tmp]'
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.TemplateRef
    }];
  }, null);
})();
// eslint-disable-next-line @angular-eslint/directive-selector
class NgMultiLabelTemplateDirective {
  constructor(template) {
    this.template = template;
  }
  static #_ = this.ɵfac = function NgMultiLabelTemplateDirective_Factory(t) {
    return new (t || NgMultiLabelTemplateDirective)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.TemplateRef));
  };
  static #_2 = this.ɵdir = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineDirective"]({
    type: NgMultiLabelTemplateDirective,
    selectors: [["", "ng-multi-label-tmp", ""]]
  });
}
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](NgMultiLabelTemplateDirective, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Directive,
    args: [{
      selector: '[ng-multi-label-tmp]'
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.TemplateRef
    }];
  }, null);
})();
// eslint-disable-next-line @angular-eslint/directive-selector
class NgHeaderTemplateDirective {
  constructor(template) {
    this.template = template;
  }
  static #_ = this.ɵfac = function NgHeaderTemplateDirective_Factory(t) {
    return new (t || NgHeaderTemplateDirective)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.TemplateRef));
  };
  static #_2 = this.ɵdir = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineDirective"]({
    type: NgHeaderTemplateDirective,
    selectors: [["", "ng-header-tmp", ""]]
  });
}
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](NgHeaderTemplateDirective, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Directive,
    args: [{
      selector: '[ng-header-tmp]'
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.TemplateRef
    }];
  }, null);
})();
// eslint-disable-next-line @angular-eslint/directive-selector
class NgFooterTemplateDirective {
  constructor(template) {
    this.template = template;
  }
  static #_ = this.ɵfac = function NgFooterTemplateDirective_Factory(t) {
    return new (t || NgFooterTemplateDirective)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.TemplateRef));
  };
  static #_2 = this.ɵdir = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineDirective"]({
    type: NgFooterTemplateDirective,
    selectors: [["", "ng-footer-tmp", ""]]
  });
}
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](NgFooterTemplateDirective, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Directive,
    args: [{
      selector: '[ng-footer-tmp]'
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.TemplateRef
    }];
  }, null);
})();
// eslint-disable-next-line @angular-eslint/directive-selector
class NgNotFoundTemplateDirective {
  constructor(template) {
    this.template = template;
  }
  static #_ = this.ɵfac = function NgNotFoundTemplateDirective_Factory(t) {
    return new (t || NgNotFoundTemplateDirective)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.TemplateRef));
  };
  static #_2 = this.ɵdir = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineDirective"]({
    type: NgNotFoundTemplateDirective,
    selectors: [["", "ng-notfound-tmp", ""]]
  });
}
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](NgNotFoundTemplateDirective, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Directive,
    args: [{
      selector: '[ng-notfound-tmp]'
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.TemplateRef
    }];
  }, null);
})();
// eslint-disable-next-line @angular-eslint/directive-selector
class NgTypeToSearchTemplateDirective {
  constructor(template) {
    this.template = template;
  }
  static #_ = this.ɵfac = function NgTypeToSearchTemplateDirective_Factory(t) {
    return new (t || NgTypeToSearchTemplateDirective)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.TemplateRef));
  };
  static #_2 = this.ɵdir = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineDirective"]({
    type: NgTypeToSearchTemplateDirective,
    selectors: [["", "ng-typetosearch-tmp", ""]]
  });
}
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](NgTypeToSearchTemplateDirective, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Directive,
    args: [{
      selector: '[ng-typetosearch-tmp]'
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.TemplateRef
    }];
  }, null);
})();
// eslint-disable-next-line @angular-eslint/directive-selector
class NgLoadingTextTemplateDirective {
  constructor(template) {
    this.template = template;
  }
  static #_ = this.ɵfac = function NgLoadingTextTemplateDirective_Factory(t) {
    return new (t || NgLoadingTextTemplateDirective)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.TemplateRef));
  };
  static #_2 = this.ɵdir = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineDirective"]({
    type: NgLoadingTextTemplateDirective,
    selectors: [["", "ng-loadingtext-tmp", ""]]
  });
}
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](NgLoadingTextTemplateDirective, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Directive,
    args: [{
      selector: '[ng-loadingtext-tmp]'
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.TemplateRef
    }];
  }, null);
})();
// eslint-disable-next-line @angular-eslint/directive-selector
class NgTagTemplateDirective {
  constructor(template) {
    this.template = template;
  }
  static #_ = this.ɵfac = function NgTagTemplateDirective_Factory(t) {
    return new (t || NgTagTemplateDirective)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.TemplateRef));
  };
  static #_2 = this.ɵdir = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineDirective"]({
    type: NgTagTemplateDirective,
    selectors: [["", "ng-tag-tmp", ""]]
  });
}
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](NgTagTemplateDirective, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Directive,
    args: [{
      selector: '[ng-tag-tmp]'
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.TemplateRef
    }];
  }, null);
})();
// eslint-disable-next-line @angular-eslint/directive-selector
class NgLoadingSpinnerTemplateDirective {
  constructor(template) {
    this.template = template;
  }
  static #_ = this.ɵfac = function NgLoadingSpinnerTemplateDirective_Factory(t) {
    return new (t || NgLoadingSpinnerTemplateDirective)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.TemplateRef));
  };
  static #_2 = this.ɵdir = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineDirective"]({
    type: NgLoadingSpinnerTemplateDirective,
    selectors: [["", "ng-loadingspinner-tmp", ""]]
  });
}
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](NgLoadingSpinnerTemplateDirective, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Directive,
    args: [{
      selector: '[ng-loadingspinner-tmp]'
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.TemplateRef
    }];
  }, null);
})();
function newId() {
  // First character is an 'a', it's good practice to tag id to begin with a letter
  return 'axxxxxxxxxxx'.replace(/[x]/g, () => {
    // eslint-disable-next-line no-bitwise
    const val = Math.random() * 16 | 0;
    return val.toString(16);
  });
}
const diacritics = {
  '\u24B6': 'A',
  '\uFF21': 'A',
  '\u00C0': 'A',
  '\u00C1': 'A',
  '\u00C2': 'A',
  '\u1EA6': 'A',
  '\u1EA4': 'A',
  '\u1EAA': 'A',
  '\u1EA8': 'A',
  '\u00C3': 'A',
  '\u0100': 'A',
  '\u0102': 'A',
  '\u1EB0': 'A',
  '\u1EAE': 'A',
  '\u1EB4': 'A',
  '\u1EB2': 'A',
  '\u0226': 'A',
  '\u01E0': 'A',
  '\u00C4': 'A',
  '\u01DE': 'A',
  '\u1EA2': 'A',
  '\u00C5': 'A',
  '\u01FA': 'A',
  '\u01CD': 'A',
  '\u0200': 'A',
  '\u0202': 'A',
  '\u1EA0': 'A',
  '\u1EAC': 'A',
  '\u1EB6': 'A',
  '\u1E00': 'A',
  '\u0104': 'A',
  '\u023A': 'A',
  '\u2C6F': 'A',
  '\uA732': 'AA',
  '\u00C6': 'AE',
  '\u01FC': 'AE',
  '\u01E2': 'AE',
  '\uA734': 'AO',
  '\uA736': 'AU',
  '\uA738': 'AV',
  '\uA73A': 'AV',
  '\uA73C': 'AY',
  '\u24B7': 'B',
  '\uFF22': 'B',
  '\u1E02': 'B',
  '\u1E04': 'B',
  '\u1E06': 'B',
  '\u0243': 'B',
  '\u0182': 'B',
  '\u0181': 'B',
  '\u24B8': 'C',
  '\uFF23': 'C',
  '\u0106': 'C',
  '\u0108': 'C',
  '\u010A': 'C',
  '\u010C': 'C',
  '\u00C7': 'C',
  '\u1E08': 'C',
  '\u0187': 'C',
  '\u023B': 'C',
  '\uA73E': 'C',
  '\u24B9': 'D',
  '\uFF24': 'D',
  '\u1E0A': 'D',
  '\u010E': 'D',
  '\u1E0C': 'D',
  '\u1E10': 'D',
  '\u1E12': 'D',
  '\u1E0E': 'D',
  '\u0110': 'D',
  '\u018B': 'D',
  '\u018A': 'D',
  '\u0189': 'D',
  '\uA779': 'D',
  '\u01F1': 'DZ',
  '\u01C4': 'DZ',
  '\u01F2': 'Dz',
  '\u01C5': 'Dz',
  '\u24BA': 'E',
  '\uFF25': 'E',
  '\u00C8': 'E',
  '\u00C9': 'E',
  '\u00CA': 'E',
  '\u1EC0': 'E',
  '\u1EBE': 'E',
  '\u1EC4': 'E',
  '\u1EC2': 'E',
  '\u1EBC': 'E',
  '\u0112': 'E',
  '\u1E14': 'E',
  '\u1E16': 'E',
  '\u0114': 'E',
  '\u0116': 'E',
  '\u00CB': 'E',
  '\u1EBA': 'E',
  '\u011A': 'E',
  '\u0204': 'E',
  '\u0206': 'E',
  '\u1EB8': 'E',
  '\u1EC6': 'E',
  '\u0228': 'E',
  '\u1E1C': 'E',
  '\u0118': 'E',
  '\u1E18': 'E',
  '\u1E1A': 'E',
  '\u0190': 'E',
  '\u018E': 'E',
  '\u24BB': 'F',
  '\uFF26': 'F',
  '\u1E1E': 'F',
  '\u0191': 'F',
  '\uA77B': 'F',
  '\u24BC': 'G',
  '\uFF27': 'G',
  '\u01F4': 'G',
  '\u011C': 'G',
  '\u1E20': 'G',
  '\u011E': 'G',
  '\u0120': 'G',
  '\u01E6': 'G',
  '\u0122': 'G',
  '\u01E4': 'G',
  '\u0193': 'G',
  '\uA7A0': 'G',
  '\uA77D': 'G',
  '\uA77E': 'G',
  '\u24BD': 'H',
  '\uFF28': 'H',
  '\u0124': 'H',
  '\u1E22': 'H',
  '\u1E26': 'H',
  '\u021E': 'H',
  '\u1E24': 'H',
  '\u1E28': 'H',
  '\u1E2A': 'H',
  '\u0126': 'H',
  '\u2C67': 'H',
  '\u2C75': 'H',
  '\uA78D': 'H',
  '\u24BE': 'I',
  '\uFF29': 'I',
  '\u00CC': 'I',
  '\u00CD': 'I',
  '\u00CE': 'I',
  '\u0128': 'I',
  '\u012A': 'I',
  '\u012C': 'I',
  '\u0130': 'I',
  '\u00CF': 'I',
  '\u1E2E': 'I',
  '\u1EC8': 'I',
  '\u01CF': 'I',
  '\u0208': 'I',
  '\u020A': 'I',
  '\u1ECA': 'I',
  '\u012E': 'I',
  '\u1E2C': 'I',
  '\u0197': 'I',
  '\u24BF': 'J',
  '\uFF2A': 'J',
  '\u0134': 'J',
  '\u0248': 'J',
  '\u24C0': 'K',
  '\uFF2B': 'K',
  '\u1E30': 'K',
  '\u01E8': 'K',
  '\u1E32': 'K',
  '\u0136': 'K',
  '\u1E34': 'K',
  '\u0198': 'K',
  '\u2C69': 'K',
  '\uA740': 'K',
  '\uA742': 'K',
  '\uA744': 'K',
  '\uA7A2': 'K',
  '\u24C1': 'L',
  '\uFF2C': 'L',
  '\u013F': 'L',
  '\u0139': 'L',
  '\u013D': 'L',
  '\u1E36': 'L',
  '\u1E38': 'L',
  '\u013B': 'L',
  '\u1E3C': 'L',
  '\u1E3A': 'L',
  '\u0141': 'L',
  '\u023D': 'L',
  '\u2C62': 'L',
  '\u2C60': 'L',
  '\uA748': 'L',
  '\uA746': 'L',
  '\uA780': 'L',
  '\u01C7': 'LJ',
  '\u01C8': 'Lj',
  '\u24C2': 'M',
  '\uFF2D': 'M',
  '\u1E3E': 'M',
  '\u1E40': 'M',
  '\u1E42': 'M',
  '\u2C6E': 'M',
  '\u019C': 'M',
  '\u24C3': 'N',
  '\uFF2E': 'N',
  '\u01F8': 'N',
  '\u0143': 'N',
  '\u00D1': 'N',
  '\u1E44': 'N',
  '\u0147': 'N',
  '\u1E46': 'N',
  '\u0145': 'N',
  '\u1E4A': 'N',
  '\u1E48': 'N',
  '\u0220': 'N',
  '\u019D': 'N',
  '\uA790': 'N',
  '\uA7A4': 'N',
  '\u01CA': 'NJ',
  '\u01CB': 'Nj',
  '\u24C4': 'O',
  '\uFF2F': 'O',
  '\u00D2': 'O',
  '\u00D3': 'O',
  '\u00D4': 'O',
  '\u1ED2': 'O',
  '\u1ED0': 'O',
  '\u1ED6': 'O',
  '\u1ED4': 'O',
  '\u00D5': 'O',
  '\u1E4C': 'O',
  '\u022C': 'O',
  '\u1E4E': 'O',
  '\u014C': 'O',
  '\u1E50': 'O',
  '\u1E52': 'O',
  '\u014E': 'O',
  '\u022E': 'O',
  '\u0230': 'O',
  '\u00D6': 'O',
  '\u022A': 'O',
  '\u1ECE': 'O',
  '\u0150': 'O',
  '\u01D1': 'O',
  '\u020C': 'O',
  '\u020E': 'O',
  '\u01A0': 'O',
  '\u1EDC': 'O',
  '\u1EDA': 'O',
  '\u1EE0': 'O',
  '\u1EDE': 'O',
  '\u1EE2': 'O',
  '\u1ECC': 'O',
  '\u1ED8': 'O',
  '\u01EA': 'O',
  '\u01EC': 'O',
  '\u00D8': 'O',
  '\u01FE': 'O',
  '\u0186': 'O',
  '\u019F': 'O',
  '\uA74A': 'O',
  '\uA74C': 'O',
  '\u01A2': 'OI',
  '\uA74E': 'OO',
  '\u0222': 'OU',
  '\u24C5': 'P',
  '\uFF30': 'P',
  '\u1E54': 'P',
  '\u1E56': 'P',
  '\u01A4': 'P',
  '\u2C63': 'P',
  '\uA750': 'P',
  '\uA752': 'P',
  '\uA754': 'P',
  '\u24C6': 'Q',
  '\uFF31': 'Q',
  '\uA756': 'Q',
  '\uA758': 'Q',
  '\u024A': 'Q',
  '\u24C7': 'R',
  '\uFF32': 'R',
  '\u0154': 'R',
  '\u1E58': 'R',
  '\u0158': 'R',
  '\u0210': 'R',
  '\u0212': 'R',
  '\u1E5A': 'R',
  '\u1E5C': 'R',
  '\u0156': 'R',
  '\u1E5E': 'R',
  '\u024C': 'R',
  '\u2C64': 'R',
  '\uA75A': 'R',
  '\uA7A6': 'R',
  '\uA782': 'R',
  '\u24C8': 'S',
  '\uFF33': 'S',
  '\u1E9E': 'S',
  '\u015A': 'S',
  '\u1E64': 'S',
  '\u015C': 'S',
  '\u1E60': 'S',
  '\u0160': 'S',
  '\u1E66': 'S',
  '\u1E62': 'S',
  '\u1E68': 'S',
  '\u0218': 'S',
  '\u015E': 'S',
  '\u2C7E': 'S',
  '\uA7A8': 'S',
  '\uA784': 'S',
  '\u24C9': 'T',
  '\uFF34': 'T',
  '\u1E6A': 'T',
  '\u0164': 'T',
  '\u1E6C': 'T',
  '\u021A': 'T',
  '\u0162': 'T',
  '\u1E70': 'T',
  '\u1E6E': 'T',
  '\u0166': 'T',
  '\u01AC': 'T',
  '\u01AE': 'T',
  '\u023E': 'T',
  '\uA786': 'T',
  '\uA728': 'TZ',
  '\u24CA': 'U',
  '\uFF35': 'U',
  '\u00D9': 'U',
  '\u00DA': 'U',
  '\u00DB': 'U',
  '\u0168': 'U',
  '\u1E78': 'U',
  '\u016A': 'U',
  '\u1E7A': 'U',
  '\u016C': 'U',
  '\u00DC': 'U',
  '\u01DB': 'U',
  '\u01D7': 'U',
  '\u01D5': 'U',
  '\u01D9': 'U',
  '\u1EE6': 'U',
  '\u016E': 'U',
  '\u0170': 'U',
  '\u01D3': 'U',
  '\u0214': 'U',
  '\u0216': 'U',
  '\u01AF': 'U',
  '\u1EEA': 'U',
  '\u1EE8': 'U',
  '\u1EEE': 'U',
  '\u1EEC': 'U',
  '\u1EF0': 'U',
  '\u1EE4': 'U',
  '\u1E72': 'U',
  '\u0172': 'U',
  '\u1E76': 'U',
  '\u1E74': 'U',
  '\u0244': 'U',
  '\u24CB': 'V',
  '\uFF36': 'V',
  '\u1E7C': 'V',
  '\u1E7E': 'V',
  '\u01B2': 'V',
  '\uA75E': 'V',
  '\u0245': 'V',
  '\uA760': 'VY',
  '\u24CC': 'W',
  '\uFF37': 'W',
  '\u1E80': 'W',
  '\u1E82': 'W',
  '\u0174': 'W',
  '\u1E86': 'W',
  '\u1E84': 'W',
  '\u1E88': 'W',
  '\u2C72': 'W',
  '\u24CD': 'X',
  '\uFF38': 'X',
  '\u1E8A': 'X',
  '\u1E8C': 'X',
  '\u24CE': 'Y',
  '\uFF39': 'Y',
  '\u1EF2': 'Y',
  '\u00DD': 'Y',
  '\u0176': 'Y',
  '\u1EF8': 'Y',
  '\u0232': 'Y',
  '\u1E8E': 'Y',
  '\u0178': 'Y',
  '\u1EF6': 'Y',
  '\u1EF4': 'Y',
  '\u01B3': 'Y',
  '\u024E': 'Y',
  '\u1EFE': 'Y',
  '\u24CF': 'Z',
  '\uFF3A': 'Z',
  '\u0179': 'Z',
  '\u1E90': 'Z',
  '\u017B': 'Z',
  '\u017D': 'Z',
  '\u1E92': 'Z',
  '\u1E94': 'Z',
  '\u01B5': 'Z',
  '\u0224': 'Z',
  '\u2C7F': 'Z',
  '\u2C6B': 'Z',
  '\uA762': 'Z',
  '\u24D0': 'a',
  '\uFF41': 'a',
  '\u1E9A': 'a',
  '\u00E0': 'a',
  '\u00E1': 'a',
  '\u00E2': 'a',
  '\u1EA7': 'a',
  '\u1EA5': 'a',
  '\u1EAB': 'a',
  '\u1EA9': 'a',
  '\u00E3': 'a',
  '\u0101': 'a',
  '\u0103': 'a',
  '\u1EB1': 'a',
  '\u1EAF': 'a',
  '\u1EB5': 'a',
  '\u1EB3': 'a',
  '\u0227': 'a',
  '\u01E1': 'a',
  '\u00E4': 'a',
  '\u01DF': 'a',
  '\u1EA3': 'a',
  '\u00E5': 'a',
  '\u01FB': 'a',
  '\u01CE': 'a',
  '\u0201': 'a',
  '\u0203': 'a',
  '\u1EA1': 'a',
  '\u1EAD': 'a',
  '\u1EB7': 'a',
  '\u1E01': 'a',
  '\u0105': 'a',
  '\u2C65': 'a',
  '\u0250': 'a',
  '\uA733': 'aa',
  '\u00E6': 'ae',
  '\u01FD': 'ae',
  '\u01E3': 'ae',
  '\uA735': 'ao',
  '\uA737': 'au',
  '\uA739': 'av',
  '\uA73B': 'av',
  '\uA73D': 'ay',
  '\u24D1': 'b',
  '\uFF42': 'b',
  '\u1E03': 'b',
  '\u1E05': 'b',
  '\u1E07': 'b',
  '\u0180': 'b',
  '\u0183': 'b',
  '\u0253': 'b',
  '\u24D2': 'c',
  '\uFF43': 'c',
  '\u0107': 'c',
  '\u0109': 'c',
  '\u010B': 'c',
  '\u010D': 'c',
  '\u00E7': 'c',
  '\u1E09': 'c',
  '\u0188': 'c',
  '\u023C': 'c',
  '\uA73F': 'c',
  '\u2184': 'c',
  '\u24D3': 'd',
  '\uFF44': 'd',
  '\u1E0B': 'd',
  '\u010F': 'd',
  '\u1E0D': 'd',
  '\u1E11': 'd',
  '\u1E13': 'd',
  '\u1E0F': 'd',
  '\u0111': 'd',
  '\u018C': 'd',
  '\u0256': 'd',
  '\u0257': 'd',
  '\uA77A': 'd',
  '\u01F3': 'dz',
  '\u01C6': 'dz',
  '\u24D4': 'e',
  '\uFF45': 'e',
  '\u00E8': 'e',
  '\u00E9': 'e',
  '\u00EA': 'e',
  '\u1EC1': 'e',
  '\u1EBF': 'e',
  '\u1EC5': 'e',
  '\u1EC3': 'e',
  '\u1EBD': 'e',
  '\u0113': 'e',
  '\u1E15': 'e',
  '\u1E17': 'e',
  '\u0115': 'e',
  '\u0117': 'e',
  '\u00EB': 'e',
  '\u1EBB': 'e',
  '\u011B': 'e',
  '\u0205': 'e',
  '\u0207': 'e',
  '\u1EB9': 'e',
  '\u1EC7': 'e',
  '\u0229': 'e',
  '\u1E1D': 'e',
  '\u0119': 'e',
  '\u1E19': 'e',
  '\u1E1B': 'e',
  '\u0247': 'e',
  '\u025B': 'e',
  '\u01DD': 'e',
  '\u24D5': 'f',
  '\uFF46': 'f',
  '\u1E1F': 'f',
  '\u0192': 'f',
  '\uA77C': 'f',
  '\u24D6': 'g',
  '\uFF47': 'g',
  '\u01F5': 'g',
  '\u011D': 'g',
  '\u1E21': 'g',
  '\u011F': 'g',
  '\u0121': 'g',
  '\u01E7': 'g',
  '\u0123': 'g',
  '\u01E5': 'g',
  '\u0260': 'g',
  '\uA7A1': 'g',
  '\u1D79': 'g',
  '\uA77F': 'g',
  '\u24D7': 'h',
  '\uFF48': 'h',
  '\u0125': 'h',
  '\u1E23': 'h',
  '\u1E27': 'h',
  '\u021F': 'h',
  '\u1E25': 'h',
  '\u1E29': 'h',
  '\u1E2B': 'h',
  '\u1E96': 'h',
  '\u0127': 'h',
  '\u2C68': 'h',
  '\u2C76': 'h',
  '\u0265': 'h',
  '\u0195': 'hv',
  '\u24D8': 'i',
  '\uFF49': 'i',
  '\u00EC': 'i',
  '\u00ED': 'i',
  '\u00EE': 'i',
  '\u0129': 'i',
  '\u012B': 'i',
  '\u012D': 'i',
  '\u00EF': 'i',
  '\u1E2F': 'i',
  '\u1EC9': 'i',
  '\u01D0': 'i',
  '\u0209': 'i',
  '\u020B': 'i',
  '\u1ECB': 'i',
  '\u012F': 'i',
  '\u1E2D': 'i',
  '\u0268': 'i',
  '\u0131': 'i',
  '\u24D9': 'j',
  '\uFF4A': 'j',
  '\u0135': 'j',
  '\u01F0': 'j',
  '\u0249': 'j',
  '\u24DA': 'k',
  '\uFF4B': 'k',
  '\u1E31': 'k',
  '\u01E9': 'k',
  '\u1E33': 'k',
  '\u0137': 'k',
  '\u1E35': 'k',
  '\u0199': 'k',
  '\u2C6A': 'k',
  '\uA741': 'k',
  '\uA743': 'k',
  '\uA745': 'k',
  '\uA7A3': 'k',
  '\u24DB': 'l',
  '\uFF4C': 'l',
  '\u0140': 'l',
  '\u013A': 'l',
  '\u013E': 'l',
  '\u1E37': 'l',
  '\u1E39': 'l',
  '\u013C': 'l',
  '\u1E3D': 'l',
  '\u1E3B': 'l',
  '\u017F': 'l',
  '\u0142': 'l',
  '\u019A': 'l',
  '\u026B': 'l',
  '\u2C61': 'l',
  '\uA749': 'l',
  '\uA781': 'l',
  '\uA747': 'l',
  '\u01C9': 'lj',
  '\u24DC': 'm',
  '\uFF4D': 'm',
  '\u1E3F': 'm',
  '\u1E41': 'm',
  '\u1E43': 'm',
  '\u0271': 'm',
  '\u026F': 'm',
  '\u24DD': 'n',
  '\uFF4E': 'n',
  '\u01F9': 'n',
  '\u0144': 'n',
  '\u00F1': 'n',
  '\u1E45': 'n',
  '\u0148': 'n',
  '\u1E47': 'n',
  '\u0146': 'n',
  '\u1E4B': 'n',
  '\u1E49': 'n',
  '\u019E': 'n',
  '\u0272': 'n',
  '\u0149': 'n',
  '\uA791': 'n',
  '\uA7A5': 'n',
  '\u01CC': 'nj',
  '\u24DE': 'o',
  '\uFF4F': 'o',
  '\u00F2': 'o',
  '\u00F3': 'o',
  '\u00F4': 'o',
  '\u1ED3': 'o',
  '\u1ED1': 'o',
  '\u1ED7': 'o',
  '\u1ED5': 'o',
  '\u00F5': 'o',
  '\u1E4D': 'o',
  '\u022D': 'o',
  '\u1E4F': 'o',
  '\u014D': 'o',
  '\u1E51': 'o',
  '\u1E53': 'o',
  '\u014F': 'o',
  '\u022F': 'o',
  '\u0231': 'o',
  '\u00F6': 'o',
  '\u022B': 'o',
  '\u1ECF': 'o',
  '\u0151': 'o',
  '\u01D2': 'o',
  '\u020D': 'o',
  '\u020F': 'o',
  '\u01A1': 'o',
  '\u1EDD': 'o',
  '\u1EDB': 'o',
  '\u1EE1': 'o',
  '\u1EDF': 'o',
  '\u1EE3': 'o',
  '\u1ECD': 'o',
  '\u1ED9': 'o',
  '\u01EB': 'o',
  '\u01ED': 'o',
  '\u00F8': 'o',
  '\u01FF': 'o',
  '\u0254': 'o',
  '\uA74B': 'o',
  '\uA74D': 'o',
  '\u0275': 'o',
  '\u01A3': 'oi',
  '\u0223': 'ou',
  '\uA74F': 'oo',
  '\u24DF': 'p',
  '\uFF50': 'p',
  '\u1E55': 'p',
  '\u1E57': 'p',
  '\u01A5': 'p',
  '\u1D7D': 'p',
  '\uA751': 'p',
  '\uA753': 'p',
  '\uA755': 'p',
  '\u24E0': 'q',
  '\uFF51': 'q',
  '\u024B': 'q',
  '\uA757': 'q',
  '\uA759': 'q',
  '\u24E1': 'r',
  '\uFF52': 'r',
  '\u0155': 'r',
  '\u1E59': 'r',
  '\u0159': 'r',
  '\u0211': 'r',
  '\u0213': 'r',
  '\u1E5B': 'r',
  '\u1E5D': 'r',
  '\u0157': 'r',
  '\u1E5F': 'r',
  '\u024D': 'r',
  '\u027D': 'r',
  '\uA75B': 'r',
  '\uA7A7': 'r',
  '\uA783': 'r',
  '\u24E2': 's',
  '\uFF53': 's',
  '\u00DF': 's',
  '\u015B': 's',
  '\u1E65': 's',
  '\u015D': 's',
  '\u1E61': 's',
  '\u0161': 's',
  '\u1E67': 's',
  '\u1E63': 's',
  '\u1E69': 's',
  '\u0219': 's',
  '\u015F': 's',
  '\u023F': 's',
  '\uA7A9': 's',
  '\uA785': 's',
  '\u1E9B': 's',
  '\u24E3': 't',
  '\uFF54': 't',
  '\u1E6B': 't',
  '\u1E97': 't',
  '\u0165': 't',
  '\u1E6D': 't',
  '\u021B': 't',
  '\u0163': 't',
  '\u1E71': 't',
  '\u1E6F': 't',
  '\u0167': 't',
  '\u01AD': 't',
  '\u0288': 't',
  '\u2C66': 't',
  '\uA787': 't',
  '\uA729': 'tz',
  '\u24E4': 'u',
  '\uFF55': 'u',
  '\u00F9': 'u',
  '\u00FA': 'u',
  '\u00FB': 'u',
  '\u0169': 'u',
  '\u1E79': 'u',
  '\u016B': 'u',
  '\u1E7B': 'u',
  '\u016D': 'u',
  '\u00FC': 'u',
  '\u01DC': 'u',
  '\u01D8': 'u',
  '\u01D6': 'u',
  '\u01DA': 'u',
  '\u1EE7': 'u',
  '\u016F': 'u',
  '\u0171': 'u',
  '\u01D4': 'u',
  '\u0215': 'u',
  '\u0217': 'u',
  '\u01B0': 'u',
  '\u1EEB': 'u',
  '\u1EE9': 'u',
  '\u1EEF': 'u',
  '\u1EED': 'u',
  '\u1EF1': 'u',
  '\u1EE5': 'u',
  '\u1E73': 'u',
  '\u0173': 'u',
  '\u1E77': 'u',
  '\u1E75': 'u',
  '\u0289': 'u',
  '\u24E5': 'v',
  '\uFF56': 'v',
  '\u1E7D': 'v',
  '\u1E7F': 'v',
  '\u028B': 'v',
  '\uA75F': 'v',
  '\u028C': 'v',
  '\uA761': 'vy',
  '\u24E6': 'w',
  '\uFF57': 'w',
  '\u1E81': 'w',
  '\u1E83': 'w',
  '\u0175': 'w',
  '\u1E87': 'w',
  '\u1E85': 'w',
  '\u1E98': 'w',
  '\u1E89': 'w',
  '\u2C73': 'w',
  '\u24E7': 'x',
  '\uFF58': 'x',
  '\u1E8B': 'x',
  '\u1E8D': 'x',
  '\u24E8': 'y',
  '\uFF59': 'y',
  '\u1EF3': 'y',
  '\u00FD': 'y',
  '\u0177': 'y',
  '\u1EF9': 'y',
  '\u0233': 'y',
  '\u1E8F': 'y',
  '\u00FF': 'y',
  '\u1EF7': 'y',
  '\u1E99': 'y',
  '\u1EF5': 'y',
  '\u01B4': 'y',
  '\u024F': 'y',
  '\u1EFF': 'y',
  '\u24E9': 'z',
  '\uFF5A': 'z',
  '\u017A': 'z',
  '\u1E91': 'z',
  '\u017C': 'z',
  '\u017E': 'z',
  '\u1E93': 'z',
  '\u1E95': 'z',
  '\u01B6': 'z',
  '\u0225': 'z',
  '\u0240': 'z',
  '\u2C6C': 'z',
  '\uA763': 'z',
  '\u0386': '\u0391',
  '\u0388': '\u0395',
  '\u0389': '\u0397',
  '\u038A': '\u0399',
  '\u03AA': '\u0399',
  '\u038C': '\u039F',
  '\u038E': '\u03A5',
  '\u03AB': '\u03A5',
  '\u038F': '\u03A9',
  '\u03AC': '\u03B1',
  '\u03AD': '\u03B5',
  '\u03AE': '\u03B7',
  '\u03AF': '\u03B9',
  '\u03CA': '\u03B9',
  '\u0390': '\u03B9',
  '\u03CC': '\u03BF',
  '\u03CD': '\u03C5',
  '\u03CB': '\u03C5',
  '\u03B0': '\u03C5',
  '\u03C9': '\u03C9',
  '\u03C2': '\u03C3'
};
function stripSpecialChars(text) {
  const match = a => diacritics[a] || a;
  return text.replace(/[^\u0000-\u007E]/g, match);
}
class ItemsList {
  constructor(_ngSelect, _selectionModel) {
    this._ngSelect = _ngSelect;
    this._selectionModel = _selectionModel;
    this._items = [];
    this._filteredItems = [];
    this._markedIndex = -1;
  }
  get items() {
    return this._items;
  }
  get filteredItems() {
    return this._filteredItems;
  }
  get markedIndex() {
    return this._markedIndex;
  }
  get selectedItems() {
    return this._selectionModel.value;
  }
  get markedItem() {
    return this._filteredItems[this._markedIndex];
  }
  get noItemsToSelect() {
    return this._ngSelect.hideSelected && this._items.length === this.selectedItems.length;
  }
  get maxItemsSelected() {
    return this._ngSelect.multiple && this._ngSelect.maxSelectedItems <= this.selectedItems.length;
  }
  get lastSelectedItem() {
    let i = this.selectedItems.length - 1;
    for (; i >= 0; i--) {
      const item = this.selectedItems[i];
      if (!item.disabled) {
        return item;
      }
    }
    return null;
  }
  setItems(items) {
    this._items = items.map((item, index) => this.mapItem(item, index));
    if (this._ngSelect.groupBy) {
      this._groups = this._groupBy(this._items, this._ngSelect.groupBy);
      this._items = this._flatten(this._groups);
    } else {
      this._groups = new Map();
      this._groups.set(undefined, this._items);
    }
    this._filteredItems = [...this._items];
  }
  select(item) {
    if (item.selected || this.maxItemsSelected) {
      return;
    }
    const multiple = this._ngSelect.multiple;
    if (!multiple) {
      this.clearSelected();
    }
    this._selectionModel.select(item, multiple, this._ngSelect.selectableGroupAsModel);
    if (this._ngSelect.hideSelected) {
      this._hideSelected(item);
    }
  }
  unselect(item) {
    if (!item.selected) {
      return;
    }
    this._selectionModel.unselect(item, this._ngSelect.multiple);
    if (this._ngSelect.hideSelected && isDefined(item.index) && this._ngSelect.multiple) {
      this._showSelected(item);
    }
  }
  findItem(value) {
    let findBy;
    if (this._ngSelect.compareWith) {
      findBy = item => this._ngSelect.compareWith(item.value, value);
    } else if (this._ngSelect.bindValue) {
      findBy = item => !item.children && this.resolveNested(item.value, this._ngSelect.bindValue) === value;
    } else {
      findBy = item => item.value === value || !item.children && item.label && item.label === this.resolveNested(value, this._ngSelect.bindLabel);
    }
    return this._items.find(item => findBy(item));
  }
  addItem(item) {
    const option = this.mapItem(item, this._items.length);
    this._items.push(option);
    this._filteredItems.push(option);
    return option;
  }
  clearSelected(keepDisabled = false) {
    this._selectionModel.clear(keepDisabled);
    this._items.forEach(item => {
      item.selected = keepDisabled && item.selected && item.disabled;
      item.marked = false;
    });
    if (this._ngSelect.hideSelected) {
      this.resetFilteredItems();
    }
  }
  findByLabel(term) {
    term = stripSpecialChars(term).toLocaleLowerCase();
    return this.filteredItems.find(item => {
      const label = stripSpecialChars(item.label).toLocaleLowerCase();
      return label.substr(0, term.length) === term;
    });
  }
  filter(term) {
    if (!term) {
      this.resetFilteredItems();
      return;
    }
    this._filteredItems = [];
    term = this._ngSelect.searchFn ? term : stripSpecialChars(term).toLocaleLowerCase();
    const match = this._ngSelect.searchFn || this._defaultSearchFn;
    const hideSelected = this._ngSelect.hideSelected;
    for (const key of Array.from(this._groups.keys())) {
      const matchedItems = [];
      for (const item of this._groups.get(key)) {
        if (hideSelected && (item.parent && item.parent.selected || item.selected)) {
          continue;
        }
        const searchItem = this._ngSelect.searchFn ? item.value : item;
        if (match(term, searchItem)) {
          matchedItems.push(item);
        }
      }
      if (matchedItems.length > 0) {
        const [last] = matchedItems.slice(-1);
        if (last.parent) {
          const head = this._items.find(x => x === last.parent);
          this._filteredItems.push(head);
        }
        this._filteredItems.push(...matchedItems);
      }
    }
  }
  resetFilteredItems() {
    if (this._filteredItems.length === this._items.length) {
      return;
    }
    if (this._ngSelect.hideSelected && this.selectedItems.length > 0) {
      this._filteredItems = this._items.filter(x => !x.selected);
    } else {
      this._filteredItems = this._items;
    }
  }
  unmarkItem() {
    this._markedIndex = -1;
  }
  markNextItem() {
    this._stepToItem(+1);
  }
  markPreviousItem() {
    this._stepToItem(-1);
  }
  markItem(item) {
    this._markedIndex = this._filteredItems.indexOf(item);
  }
  markSelectedOrDefault(markDefault) {
    if (this._filteredItems.length === 0) {
      return;
    }
    const lastMarkedIndex = this._getLastMarkedIndex();
    if (lastMarkedIndex > -1) {
      this._markedIndex = lastMarkedIndex;
    } else {
      this._markedIndex = markDefault ? this.filteredItems.findIndex(x => !x.disabled) : -1;
    }
  }
  resolveNested(option, key) {
    if (!isObject(option)) {
      return option;
    }
    if (key.indexOf('.') === -1) {
      return option[key];
    } else {
      const keys = key.split('.');
      let value = option;
      for (let i = 0, len = keys.length; i < len; ++i) {
        if (value == null) {
          return null;
        }
        value = value[keys[i]];
      }
      return value;
    }
  }
  mapItem(item, index) {
    const label = isDefined(item.$ngOptionLabel) ? item.$ngOptionLabel : this.resolveNested(item, this._ngSelect.bindLabel);
    const value = isDefined(item.$ngOptionValue) ? item.$ngOptionValue : item;
    return {
      index,
      label: isDefined(label) ? label.toString() : '',
      value,
      disabled: item.disabled,
      htmlId: `${this._ngSelect.dropdownId}-${index}`
    };
  }
  mapSelectedItems() {
    const multiple = this._ngSelect.multiple;
    for (const selected of this.selectedItems) {
      const value = this._ngSelect.bindValue ? this.resolveNested(selected.value, this._ngSelect.bindValue) : selected.value;
      const item = isDefined(value) ? this.findItem(value) : null;
      this._selectionModel.unselect(selected, multiple);
      this._selectionModel.select(item || selected, multiple, this._ngSelect.selectableGroupAsModel);
    }
    if (this._ngSelect.hideSelected) {
      this._filteredItems = this.filteredItems.filter(x => this.selectedItems.indexOf(x) === -1);
    }
  }
  _showSelected(item) {
    this._filteredItems.push(item);
    if (item.parent) {
      const parent = item.parent;
      const parentExists = this._filteredItems.find(x => x === parent);
      if (!parentExists) {
        this._filteredItems.push(parent);
      }
    } else if (item.children) {
      for (const child of item.children) {
        child.selected = false;
        this._filteredItems.push(child);
      }
    }
    this._filteredItems = [...this._filteredItems.sort((a, b) => a.index - b.index)];
  }
  _hideSelected(item) {
    this._filteredItems = this._filteredItems.filter(x => x !== item);
    if (item.parent) {
      const children = item.parent.children;
      if (children.every(x => x.selected)) {
        this._filteredItems = this._filteredItems.filter(x => x !== item.parent);
      }
    } else if (item.children) {
      this._filteredItems = this.filteredItems.filter(x => x.parent !== item);
    }
  }
  _defaultSearchFn(search, opt) {
    const label = stripSpecialChars(opt.label).toLocaleLowerCase();
    return label.indexOf(search) > -1;
  }
  _getNextItemIndex(steps) {
    if (steps > 0) {
      return this._markedIndex >= this._filteredItems.length - 1 ? 0 : this._markedIndex + 1;
    }
    return this._markedIndex <= 0 ? this._filteredItems.length - 1 : this._markedIndex - 1;
  }
  _stepToItem(steps) {
    if (this._filteredItems.length === 0 || this._filteredItems.every(x => x.disabled)) {
      return;
    }
    this._markedIndex = this._getNextItemIndex(steps);
    if (this.markedItem.disabled) {
      this._stepToItem(steps);
    }
  }
  _getLastMarkedIndex() {
    if (this._ngSelect.hideSelected) {
      return -1;
    }
    if (this._markedIndex > -1 && this.markedItem === undefined) {
      return -1;
    }
    const selectedIndex = this._filteredItems.indexOf(this.lastSelectedItem);
    if (this.lastSelectedItem && selectedIndex < 0) {
      return -1;
    }
    return Math.max(this.markedIndex, selectedIndex);
  }
  _groupBy(items, prop) {
    const groups = new Map();
    if (items.length === 0) {
      return groups;
    }
    // Check if items are already grouped by given key.
    if (Array.isArray(items[0].value[prop])) {
      for (const item of items) {
        const children = (item.value[prop] || []).map((x, index) => this.mapItem(x, index));
        groups.set(item, children);
      }
      return groups;
    }
    const isFnKey = isFunction(this._ngSelect.groupBy);
    const keyFn = item => {
      const key = isFnKey ? prop(item.value) : item.value[prop];
      return isDefined(key) ? key : undefined;
    };
    // Group items by key.
    for (const item of items) {
      const key = keyFn(item);
      const group = groups.get(key);
      if (group) {
        group.push(item);
      } else {
        groups.set(key, [item]);
      }
    }
    return groups;
  }
  _flatten(groups) {
    const isGroupByFn = isFunction(this._ngSelect.groupBy);
    const items = [];
    for (const key of Array.from(groups.keys())) {
      let i = items.length;
      if (key === undefined) {
        const withoutGroup = groups.get(undefined) || [];
        items.push(...withoutGroup.map(x => {
          x.index = i++;
          return x;
        }));
        continue;
      }
      const isObjectKey = isObject(key);
      const parent = {
        label: isObjectKey ? '' : String(key),
        children: undefined,
        parent: null,
        index: i++,
        disabled: !this._ngSelect.selectableGroup,
        htmlId: newId()
      };
      const groupKey = isGroupByFn ? this._ngSelect.bindLabel : this._ngSelect.groupBy;
      const groupValue = this._ngSelect.groupValue || (() => {
        if (isObjectKey) {
          return key.value;
        }
        return {
          [groupKey]: key
        };
      });
      const children = groups.get(key).map(x => {
        x.parent = parent;
        x.children = undefined;
        x.index = i++;
        return x;
      });
      parent.children = children;
      parent.value = groupValue(key, children.map(x => x.value));
      items.push(parent);
      items.push(...children);
    }
    return items;
  }
}
var KeyCode;
(function (KeyCode) {
  KeyCode[KeyCode["Tab"] = 9] = "Tab";
  KeyCode[KeyCode["Enter"] = 13] = "Enter";
  KeyCode[KeyCode["Esc"] = 27] = "Esc";
  KeyCode[KeyCode["Space"] = 32] = "Space";
  KeyCode[KeyCode["ArrowUp"] = 38] = "ArrowUp";
  KeyCode[KeyCode["ArrowDown"] = 40] = "ArrowDown";
  KeyCode[KeyCode["Backspace"] = 8] = "Backspace";
})(KeyCode || (KeyCode = {}));
class NgDropdownPanelService {
  constructor() {
    this._dimensions = {
      itemHeight: 0,
      panelHeight: 0,
      itemsPerViewport: 0
    };
  }
  get dimensions() {
    return this._dimensions;
  }
  calculateItems(scrollPos, itemsLength, buffer) {
    const d = this._dimensions;
    const scrollHeight = d.itemHeight * itemsLength;
    const scrollTop = Math.max(0, scrollPos);
    const indexByScrollTop = scrollTop / scrollHeight * itemsLength;
    let end = Math.min(itemsLength, Math.ceil(indexByScrollTop) + (d.itemsPerViewport + 1));
    const maxStartEnd = end;
    const maxStart = Math.max(0, maxStartEnd - d.itemsPerViewport);
    let start = Math.min(maxStart, Math.floor(indexByScrollTop));
    let topPadding = d.itemHeight * Math.ceil(start) - d.itemHeight * Math.min(start, buffer);
    topPadding = !isNaN(topPadding) ? topPadding : 0;
    start = !isNaN(start) ? start : -1;
    end = !isNaN(end) ? end : -1;
    start -= buffer;
    start = Math.max(0, start);
    end += buffer;
    end = Math.min(itemsLength, end);
    return {
      topPadding,
      scrollHeight,
      start,
      end
    };
  }
  setDimensions(itemHeight, panelHeight) {
    const itemsPerViewport = Math.max(1, Math.floor(panelHeight / itemHeight));
    this._dimensions = {
      itemHeight,
      panelHeight,
      itemsPerViewport
    };
  }
  getScrollTo(itemTop, itemHeight, lastScroll) {
    const {
      panelHeight
    } = this.dimensions;
    const itemBottom = itemTop + itemHeight;
    const top = lastScroll;
    const bottom = top + panelHeight;
    if (panelHeight >= itemBottom && lastScroll === itemTop) {
      return null;
    }
    if (itemBottom > bottom) {
      return top + itemBottom - bottom;
    } else if (itemTop <= top) {
      return itemTop;
    }
    return null;
  }
  static #_ = this.ɵfac = function NgDropdownPanelService_Factory(t) {
    return new (t || NgDropdownPanelService)();
  };
  static #_2 = this.ɵprov = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({
    token: NgDropdownPanelService,
    factory: NgDropdownPanelService.ɵfac
  });
}
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](NgDropdownPanelService, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Injectable
  }], null, null);
})();
const CSS_POSITIONS = ['top', 'right', 'bottom', 'left'];
const SCROLL_SCHEDULER = typeof requestAnimationFrame !== 'undefined' ? rxjs__WEBPACK_IMPORTED_MODULE_1__.animationFrameScheduler : rxjs__WEBPACK_IMPORTED_MODULE_2__.asapScheduler;
class NgDropdownPanelComponent {
  constructor(_renderer, _zone, _panelService, _elementRef, _document) {
    this._renderer = _renderer;
    this._zone = _zone;
    this._panelService = _panelService;
    this._document = _document;
    this.items = [];
    this.position = 'auto';
    this.virtualScroll = false;
    this.filterValue = null;
    this.update = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
    this.scroll = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
    this.scrollToEnd = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
    this.outsideClick = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
    this._destroy$ = new rxjs__WEBPACK_IMPORTED_MODULE_3__.Subject();
    this._scrollToEndFired = false;
    this._updateScrollHeight = false;
    this._lastScrollPosition = 0;
    this._dropdown = _elementRef.nativeElement;
  }
  get currentPosition() {
    return this._currentPosition;
  }
  get itemsLength() {
    return this._itemsLength;
  }
  set itemsLength(value) {
    if (value !== this._itemsLength) {
      this._itemsLength = value;
      this._onItemsLengthChanged();
    }
  }
  get _startOffset() {
    if (this.markedItem) {
      const {
        itemHeight,
        panelHeight
      } = this._panelService.dimensions;
      const offset = this.markedItem.index * itemHeight;
      return panelHeight > offset ? 0 : offset;
    }
    return 0;
  }
  ngOnInit() {
    this._select = this._dropdown.parentElement;
    this._virtualPadding = this.paddingElementRef.nativeElement;
    this._scrollablePanel = this.scrollElementRef.nativeElement;
    this._contentPanel = this.contentElementRef.nativeElement;
    this._handleScroll();
    this._handleOutsideClick();
    this._appendDropdown();
    this._setupMousedownListener();
  }
  ngOnChanges(changes) {
    if (changes.items) {
      const change = changes.items;
      this._onItemsChange(change.currentValue, change.firstChange);
    }
  }
  ngOnDestroy() {
    this._destroy$.next();
    this._destroy$.complete();
    this._destroy$.unsubscribe();
    if (this.appendTo) {
      this._renderer.removeChild(this._dropdown.parentNode, this._dropdown);
    }
  }
  scrollTo(option, startFromOption = false) {
    if (!option) {
      return;
    }
    const index = this.items.indexOf(option);
    if (index < 0 || index >= this.itemsLength) {
      return;
    }
    let scrollTo;
    if (this.virtualScroll) {
      const itemHeight = this._panelService.dimensions.itemHeight;
      scrollTo = this._panelService.getScrollTo(index * itemHeight, itemHeight, this._lastScrollPosition);
    } else {
      const item = this._dropdown.querySelector(`#${option.htmlId}`);
      const lastScroll = startFromOption ? item.offsetTop : this._lastScrollPosition;
      scrollTo = this._panelService.getScrollTo(item.offsetTop, item.clientHeight, lastScroll);
    }
    if (isDefined(scrollTo)) {
      this._scrollablePanel.scrollTop = scrollTo;
    }
  }
  scrollToTag() {
    const panel = this._scrollablePanel;
    panel.scrollTop = panel.scrollHeight - panel.clientHeight;
  }
  adjustPosition() {
    this._updateYPosition();
  }
  _handleDropdownPosition() {
    this._currentPosition = this._calculateCurrentPosition(this._dropdown);
    if (CSS_POSITIONS.includes(this._currentPosition)) {
      this._updateDropdownClass(this._currentPosition);
    } else {
      this._updateDropdownClass('bottom');
    }
    if (this.appendTo) {
      this._updateYPosition();
    }
    this._dropdown.style.opacity = '1';
  }
  _updateDropdownClass(currentPosition) {
    CSS_POSITIONS.forEach(position => {
      const REMOVE_CSS_CLASS = `ng-select-${position}`;
      this._renderer.removeClass(this._dropdown, REMOVE_CSS_CLASS);
      this._renderer.removeClass(this._select, REMOVE_CSS_CLASS);
    });
    const ADD_CSS_CLASS = `ng-select-${currentPosition}`;
    this._renderer.addClass(this._dropdown, ADD_CSS_CLASS);
    this._renderer.addClass(this._select, ADD_CSS_CLASS);
  }
  _handleScroll() {
    this._zone.runOutsideAngular(() => {
      (0,rxjs__WEBPACK_IMPORTED_MODULE_4__.fromEvent)(this.scrollElementRef.nativeElement, 'scroll').pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_5__.takeUntil)(this._destroy$), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_6__.auditTime)(0, SCROLL_SCHEDULER)).subscribe(e => {
        const path = e.path || e.composedPath && e.composedPath();
        const scrollTop = !path || path.length === 0 ? e.target.scrollTop : path[0].scrollTop;
        this._onContentScrolled(scrollTop);
      });
    });
  }
  _handleOutsideClick() {
    if (!this._document) {
      return;
    }
    this._zone.runOutsideAngular(() => {
      (0,rxjs__WEBPACK_IMPORTED_MODULE_7__.merge)((0,rxjs__WEBPACK_IMPORTED_MODULE_4__.fromEvent)(this._document, 'touchstart', {
        capture: true
      }), (0,rxjs__WEBPACK_IMPORTED_MODULE_4__.fromEvent)(this._document, 'mousedown', {
        capture: true
      })).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_5__.takeUntil)(this._destroy$)).subscribe($event => this._checkToClose($event));
    });
  }
  _checkToClose($event) {
    if (this._select.contains($event.target) || this._dropdown.contains($event.target)) {
      return;
    }
    const path = $event.path || $event.composedPath && $event.composedPath();
    if ($event.target && $event.target.shadowRoot && path && path[0] && this._select.contains(path[0])) {
      return;
    }
    this._zone.run(() => this.outsideClick.emit());
  }
  _onItemsChange(items, firstChange) {
    this.items = items || [];
    this._scrollToEndFired = false;
    this.itemsLength = items.length;
    if (this.virtualScroll) {
      this._updateItemsRange(firstChange);
    } else {
      this._setVirtualHeight();
      this._updateItems(firstChange);
    }
  }
  _updateItems(firstChange) {
    this.update.emit(this.items);
    if (firstChange === false) {
      return;
    }
    this._zone.runOutsideAngular(() => {
      Promise.resolve().then(() => {
        const panelHeight = this._scrollablePanel.clientHeight;
        this._panelService.setDimensions(0, panelHeight);
        this._handleDropdownPosition();
        this.scrollTo(this.markedItem, firstChange);
      });
    });
  }
  _updateItemsRange(firstChange) {
    this._zone.runOutsideAngular(() => {
      this._measureDimensions().then(() => {
        if (firstChange) {
          this._renderItemsRange(this._startOffset);
          this._handleDropdownPosition();
        } else {
          this._renderItemsRange();
        }
      });
    });
  }
  _onContentScrolled(scrollTop) {
    if (this.virtualScroll) {
      this._renderItemsRange(scrollTop);
    }
    this._lastScrollPosition = scrollTop;
    this._fireScrollToEnd(scrollTop);
  }
  _updateVirtualHeight(height) {
    if (this._updateScrollHeight) {
      this._virtualPadding.style.height = `${height}px`;
      this._updateScrollHeight = false;
    }
  }
  _setVirtualHeight() {
    if (!this._virtualPadding) {
      return;
    }
    this._virtualPadding.style.height = `0px`;
  }
  _onItemsLengthChanged() {
    this._updateScrollHeight = true;
  }
  _renderItemsRange(scrollTop = null) {
    if (scrollTop && this._lastScrollPosition === scrollTop) {
      return;
    }
    scrollTop = scrollTop || this._scrollablePanel.scrollTop;
    const range = this._panelService.calculateItems(scrollTop, this.itemsLength, this.bufferAmount);
    this._updateVirtualHeight(range.scrollHeight);
    this._contentPanel.style.transform = `translateY(${range.topPadding}px)`;
    this._zone.run(() => {
      this.update.emit(this.items.slice(range.start, range.end));
      this.scroll.emit({
        start: range.start,
        end: range.end
      });
    });
    if (isDefined(scrollTop) && this._lastScrollPosition === 0) {
      this._scrollablePanel.scrollTop = scrollTop;
      this._lastScrollPosition = scrollTop;
    }
  }
  _measureDimensions() {
    if (this._panelService.dimensions.itemHeight > 0 || this.itemsLength === 0) {
      return Promise.resolve(this._panelService.dimensions);
    }
    const [first] = this.items;
    this.update.emit([first]);
    return Promise.resolve().then(() => {
      const option = this._dropdown.querySelector(`#${first.htmlId}`);
      const optionHeight = option.clientHeight;
      this._virtualPadding.style.height = `${optionHeight * this.itemsLength}px`;
      const panelHeight = this._scrollablePanel.clientHeight;
      this._panelService.setDimensions(optionHeight, panelHeight);
      return this._panelService.dimensions;
    });
  }
  _fireScrollToEnd(scrollTop) {
    if (this._scrollToEndFired || scrollTop === 0) {
      return;
    }
    const padding = this.virtualScroll ? this._virtualPadding : this._contentPanel;
    if (scrollTop + this._dropdown.clientHeight >= padding.clientHeight - 1) {
      this._zone.run(() => this.scrollToEnd.emit());
      this._scrollToEndFired = true;
    }
  }
  _calculateCurrentPosition(dropdownEl) {
    if (this.position !== 'auto') {
      return this.position;
    }
    const selectRect = this._select.getBoundingClientRect();
    const scrollTop = document.documentElement.scrollTop || document.body.scrollTop;
    const offsetTop = selectRect.top + window.pageYOffset;
    const height = selectRect.height;
    const dropdownHeight = dropdownEl.getBoundingClientRect().height;
    if (offsetTop + height + dropdownHeight > scrollTop + document.documentElement.clientHeight) {
      return 'top';
    } else {
      return 'bottom';
    }
  }
  _appendDropdown() {
    if (!this.appendTo) {
      return;
    }
    this._parent = document.querySelector(this.appendTo);
    if (!this._parent) {
      throw new Error(`appendTo selector ${this.appendTo} did not found any parent element`);
    }
    this._updateXPosition();
    this._parent.appendChild(this._dropdown);
  }
  _updateXPosition() {
    const select = this._select.getBoundingClientRect();
    const parent = this._parent.getBoundingClientRect();
    const offsetLeft = select.left - parent.left;
    this._dropdown.style.left = offsetLeft + 'px';
    this._dropdown.style.width = select.width + 'px';
    this._dropdown.style.minWidth = select.width + 'px';
  }
  _updateYPosition() {
    const select = this._select.getBoundingClientRect();
    const parent = this._parent.getBoundingClientRect();
    const delta = select.height;
    if (this._currentPosition === 'top') {
      const offsetBottom = parent.bottom - select.bottom;
      this._dropdown.style.bottom = offsetBottom + delta + 'px';
      this._dropdown.style.top = 'auto';
    } else if (this._currentPosition === 'bottom') {
      const offsetTop = select.top - parent.top;
      this._dropdown.style.top = offsetTop + delta + 'px';
      this._dropdown.style.bottom = 'auto';
    }
  }
  _setupMousedownListener() {
    this._zone.runOutsideAngular(() => {
      (0,rxjs__WEBPACK_IMPORTED_MODULE_4__.fromEvent)(this._dropdown, 'mousedown').pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_5__.takeUntil)(this._destroy$)).subscribe(event => {
        const target = event.target;
        if (target.tagName === 'INPUT') {
          return;
        }
        event.preventDefault();
      });
    });
  }
  static #_ = this.ɵfac = function NgDropdownPanelComponent_Factory(t) {
    return new (t || NgDropdownPanelComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.Renderer2), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.NgZone), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](NgDropdownPanelService), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_common__WEBPACK_IMPORTED_MODULE_8__.DOCUMENT, 8));
  };
  static #_2 = this.ɵcmp = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
    type: NgDropdownPanelComponent,
    selectors: [["ng-dropdown-panel"]],
    viewQuery: function NgDropdownPanelComponent_Query(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](_c0, 7, _angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](_c1, 7, _angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](_c2, 7, _angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef);
      }
      if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.contentElementRef = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.scrollElementRef = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.paddingElementRef = _t.first);
      }
    },
    inputs: {
      items: "items",
      markedItem: "markedItem",
      position: "position",
      appendTo: "appendTo",
      bufferAmount: "bufferAmount",
      virtualScroll: "virtualScroll",
      headerTemplate: "headerTemplate",
      footerTemplate: "footerTemplate",
      filterValue: "filterValue"
    },
    outputs: {
      update: "update",
      scroll: "scroll",
      scrollToEnd: "scrollToEnd",
      outsideClick: "outsideClick"
    },
    features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵNgOnChangesFeature"]],
    ngContentSelectors: _c4,
    decls: 9,
    vars: 6,
    consts: [["class", "ng-dropdown-header", 4, "ngIf"], ["role", "listbox", 1, "ng-dropdown-panel-items", "scroll-host"], ["scroll", ""], ["padding", ""], ["content", ""], ["class", "ng-dropdown-footer", 4, "ngIf"], [1, "ng-dropdown-header"], [3, "ngTemplateOutlet", "ngTemplateOutletContext"], [1, "ng-dropdown-footer"]],
    template: function NgDropdownPanelComponent_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵprojectionDef"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](0, NgDropdownPanelComponent_div_0_Template, 2, 4, "div", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "div", 1, 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](3, "div", null, 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](5, "div", null, 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵprojection"](7);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]()();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](8, NgDropdownPanelComponent_div_8_Template, 2, 4, "div", 5);
      }
      if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.headerTemplate);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵclassProp"]("total-padding", ctx.virtualScroll);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵclassProp"]("scrollable-content", ctx.virtualScroll && ctx.items.length);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.footerTemplate);
      }
    },
    dependencies: [_angular_common__WEBPACK_IMPORTED_MODULE_8__.NgIf, _angular_common__WEBPACK_IMPORTED_MODULE_8__.NgTemplateOutlet],
    encapsulation: 2,
    changeDetection: 0
  });
}
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](NgDropdownPanelComponent, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Component,
    args: [{
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ChangeDetectionStrategy.OnPush,
      encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ViewEncapsulation.None,
      selector: 'ng-dropdown-panel',
      template: `
        <div *ngIf="headerTemplate" class="ng-dropdown-header">
            <ng-container [ngTemplateOutlet]="headerTemplate" [ngTemplateOutletContext]="{ searchTerm: filterValue }"></ng-container>
        </div>
        <div #scroll role="listbox" class="ng-dropdown-panel-items scroll-host">
            <div #padding [class.total-padding]="virtualScroll"></div>
            <div #content [class.scrollable-content]="virtualScroll && items.length">
                <ng-content></ng-content>
            </div>
        </div>
        <div *ngIf="footerTemplate" class="ng-dropdown-footer">
            <ng-container [ngTemplateOutlet]="footerTemplate" [ngTemplateOutletContext]="{ searchTerm: filterValue }"></ng-container>
        </div>
    `
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Renderer2
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.NgZone
    }, {
      type: NgDropdownPanelService
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Optional
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Inject,
        args: [_angular_common__WEBPACK_IMPORTED_MODULE_8__.DOCUMENT]
      }]
    }];
  }, {
    items: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    markedItem: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    position: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    appendTo: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    bufferAmount: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    virtualScroll: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    headerTemplate: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    footerTemplate: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    filterValue: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    update: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
    }],
    scroll: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
    }],
    scrollToEnd: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
    }],
    outsideClick: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
    }],
    contentElementRef: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ViewChild,
      args: ['content', {
        read: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef,
        static: true
      }]
    }],
    scrollElementRef: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ViewChild,
      args: ['scroll', {
        read: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef,
        static: true
      }]
    }],
    paddingElementRef: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ViewChild,
      args: ['padding', {
        read: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef,
        static: true
      }]
    }]
  });
})();
class NgOptionComponent {
  get disabled() {
    return this._disabled;
  }
  set disabled(value) {
    this._disabled = this._isDisabled(value);
  }
  constructor(elementRef) {
    this.elementRef = elementRef;
    this.stateChange$ = new rxjs__WEBPACK_IMPORTED_MODULE_3__.Subject();
    this._disabled = false;
  }
  get label() {
    return (this.elementRef.nativeElement.textContent || '').trim();
  }
  ngOnChanges(changes) {
    if (changes.disabled) {
      this.stateChange$.next({
        value: this.value,
        disabled: this._disabled
      });
    }
  }
  ngAfterViewChecked() {
    if (this.label !== this._previousLabel) {
      this._previousLabel = this.label;
      this.stateChange$.next({
        value: this.value,
        disabled: this._disabled,
        label: this.elementRef.nativeElement.innerHTML
      });
    }
  }
  ngOnDestroy() {
    this.stateChange$.complete();
  }
  _isDisabled(value) {
    return value != null && `${value}` !== 'false';
  }
  static #_ = this.ɵfac = function NgOptionComponent_Factory(t) {
    return new (t || NgOptionComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef));
  };
  static #_2 = this.ɵcmp = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
    type: NgOptionComponent,
    selectors: [["ng-option"]],
    inputs: {
      value: "value",
      disabled: "disabled"
    },
    features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵNgOnChangesFeature"]],
    ngContentSelectors: _c4,
    decls: 1,
    vars: 0,
    template: function NgOptionComponent_Template(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵprojectionDef"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵprojection"](0);
      }
    },
    encapsulation: 2,
    changeDetection: 0
  });
}
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](NgOptionComponent, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Component,
    args: [{
      selector: 'ng-option',
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ChangeDetectionStrategy.OnPush,
      template: `<ng-content></ng-content>`
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef
    }];
  }, {
    value: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    disabled: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }]
  });
})();
class NgSelectConfig {
  constructor() {
    this.notFoundText = 'No items found';
    this.typeToSearchText = 'Type to search';
    this.addTagText = 'Add item';
    this.loadingText = 'Loading...';
    this.clearAllText = 'Clear all';
    this.disableVirtualScroll = true;
    this.openOnEnter = true;
    this.appearance = 'underline';
  }
  static #_ = this.ɵfac = function NgSelectConfig_Factory(t) {
    return new (t || NgSelectConfig)();
  };
  static #_2 = this.ɵprov = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({
    token: NgSelectConfig,
    factory: NgSelectConfig.ɵfac,
    providedIn: 'root'
  });
}
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](NgSelectConfig, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Injectable,
    args: [{
      providedIn: 'root'
    }]
  }], null, null);
})();
class ConsoleService {
  warn(message) {
    console.warn(message);
  }
  static #_ = this.ɵfac = function ConsoleService_Factory(t) {
    return new (t || ConsoleService)();
  };
  static #_2 = this.ɵprov = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({
    token: ConsoleService,
    factory: ConsoleService.ɵfac,
    providedIn: 'root'
  });
}
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](ConsoleService, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Injectable,
    args: [{
      providedIn: 'root'
    }]
  }], null, null);
})();
const SELECTION_MODEL_FACTORY = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.InjectionToken('ng-select-selection-model');
class NgSelectComponent {
  get items() {
    return this._items;
  }
  set items(value) {
    if (value === null) {
      value = [];
    }
    this._itemsAreUsed = true;
    this._items = value;
  }
  get compareWith() {
    return this._compareWith;
  }
  set compareWith(fn) {
    if (fn !== undefined && fn !== null && !isFunction(fn)) {
      throw Error('`compareWith` must be a function.');
    }
    this._compareWith = fn;
  }
  get clearSearchOnAdd() {
    if (isDefined(this._clearSearchOnAdd)) {
      return this._clearSearchOnAdd;
    } else if (isDefined(this.config.clearSearchOnAdd)) {
      return this.config.clearSearchOnAdd;
    }
    return this.closeOnSelect;
  }
  set clearSearchOnAdd(value) {
    this._clearSearchOnAdd = value;
  }
  get disabled() {
    return this.readonly || this._disabled;
  }
  get filtered() {
    return !!this.searchTerm && this.searchable || this._isComposing;
  }
  get single() {
    return !this.multiple;
  }
  get _editableSearchTerm() {
    return this.editableSearchTerm && !this.multiple;
  }
  constructor(classes, autoFocus, config, newSelectionModel, _elementRef, _cd, _console) {
    this.classes = classes;
    this.autoFocus = autoFocus;
    this.config = config;
    this._cd = _cd;
    this._console = _console;
    this.markFirst = true;
    this.dropdownPosition = 'auto';
    this.loading = false;
    this.closeOnSelect = true;
    this.hideSelected = false;
    this.selectOnTab = false;
    this.bufferAmount = 4;
    this.selectableGroup = false;
    this.selectableGroupAsModel = true;
    this.searchFn = null;
    this.trackByFn = null;
    this.clearOnBackspace = true;
    this.labelForId = null;
    this.inputAttrs = {};
    this.readonly = false;
    this.searchWhileComposing = true;
    this.minTermLength = 0;
    this.editableSearchTerm = false;
    this.keyDownFn = _ => true;
    this.multiple = false;
    this.addTag = false;
    this.searchable = true;
    this.clearable = true;
    this.isOpen = false;
    // output events
    this.blurEvent = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
    this.focusEvent = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
    this.changeEvent = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
    this.openEvent = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
    this.closeEvent = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
    this.searchEvent = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
    this.clearEvent = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
    this.addEvent = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
    this.removeEvent = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
    this.scroll = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
    this.scrollToEnd = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
    this.useDefaultClass = true;
    this.viewPortItems = [];
    this.searchTerm = null;
    this.dropdownId = newId();
    this.escapeHTML = true;
    this._items = [];
    this._defaultLabel = 'label';
    this._pressedKeys = [];
    this._isComposing = false;
    this._destroy$ = new rxjs__WEBPACK_IMPORTED_MODULE_3__.Subject();
    this._keyPress$ = new rxjs__WEBPACK_IMPORTED_MODULE_3__.Subject();
    this._onChange = _ => {};
    this._onTouched = () => {};
    this.clearItem = item => {
      const option = this.selectedItems.find(x => x.value === item);
      this.unselect(option);
    };
    this.trackByOption = (_, item) => {
      if (this.trackByFn) {
        return this.trackByFn(item.value);
      }
      return item;
    };
    this._mergeGlobalConfig(config);
    this.itemsList = new ItemsList(this, newSelectionModel());
    this.element = _elementRef.nativeElement;
  }
  get selectedItems() {
    return this.itemsList.selectedItems;
  }
  get selectedValues() {
    return this.selectedItems.map(x => x.value);
  }
  get hasValue() {
    return this.selectedItems.length > 0;
  }
  get currentPanelPosition() {
    if (this.dropdownPanel) {
      return this.dropdownPanel.currentPosition;
    }
    return undefined;
  }
  ngOnInit() {
    this._handleKeyPresses();
    this._setInputAttributes();
  }
  ngOnChanges(changes) {
    if (changes.multiple) {
      this.itemsList.clearSelected();
    }
    if (changes.items) {
      this._setItems(changes.items.currentValue || []);
    }
    if (changes.isOpen) {
      this._manualOpen = isDefined(changes.isOpen.currentValue);
    }
  }
  ngAfterViewInit() {
    if (!this._itemsAreUsed) {
      this.escapeHTML = false;
      this._setItemsFromNgOptions();
    }
    if (isDefined(this.autoFocus)) {
      this.focus();
    }
  }
  ngOnDestroy() {
    this._destroy$.next();
    this._destroy$.complete();
  }
  handleKeyDown($event) {
    const keyCode = KeyCode[$event.which];
    if (keyCode) {
      if (this.keyDownFn($event) === false) {
        return;
      }
      this.handleKeyCode($event);
    } else if ($event.key && $event.key.length === 1) {
      this._keyPress$.next($event.key.toLocaleLowerCase());
    }
  }
  handleKeyCode($event) {
    switch ($event.which) {
      case KeyCode.ArrowDown:
        this._handleArrowDown($event);
        break;
      case KeyCode.ArrowUp:
        this._handleArrowUp($event);
        break;
      case KeyCode.Space:
        this._handleSpace($event);
        break;
      case KeyCode.Enter:
        this._handleEnter($event);
        break;
      case KeyCode.Tab:
        this._handleTab($event);
        break;
      case KeyCode.Esc:
        this.close();
        $event.preventDefault();
        break;
      case KeyCode.Backspace:
        this._handleBackspace();
        break;
    }
  }
  handleMousedown($event) {
    const target = $event.target;
    if (target.tagName !== 'INPUT') {
      $event.preventDefault();
    }
    if (target.classList.contains('ng-clear-wrapper')) {
      this.handleClearClick();
      return;
    }
    if (target.classList.contains('ng-arrow-wrapper')) {
      this.handleArrowClick();
      return;
    }
    if (target.classList.contains('ng-value-icon')) {
      return;
    }
    if (!this.focused) {
      this.focus();
    }
    if (this.searchable) {
      this.open();
    } else {
      this.toggle();
    }
  }
  handleArrowClick() {
    if (this.isOpen) {
      this.close();
    } else {
      this.open();
    }
  }
  handleClearClick() {
    if (this.hasValue) {
      this.itemsList.clearSelected(true);
      this._updateNgModel();
    }
    this._clearSearch();
    this.focus();
    this.clearEvent.emit();
    this._onSelectionChanged();
  }
  clearModel() {
    if (!this.clearable) {
      return;
    }
    this.itemsList.clearSelected();
    this._updateNgModel();
  }
  writeValue(value) {
    this.itemsList.clearSelected();
    this._handleWriteValue(value);
    this._cd.markForCheck();
  }
  registerOnChange(fn) {
    this._onChange = fn;
  }
  registerOnTouched(fn) {
    this._onTouched = fn;
  }
  setDisabledState(state) {
    this._disabled = state;
    this._cd.markForCheck();
  }
  toggle() {
    if (!this.isOpen) {
      this.open();
    } else {
      this.close();
    }
  }
  open() {
    if (this.disabled || this.isOpen || this._manualOpen) {
      return;
    }
    if (!this._isTypeahead && !this.addTag && this.itemsList.noItemsToSelect) {
      return;
    }
    this.isOpen = true;
    this.itemsList.markSelectedOrDefault(this.markFirst);
    this.openEvent.emit();
    if (!this.searchTerm) {
      this.focus();
    }
    this.detectChanges();
  }
  close() {
    if (!this.isOpen || this._manualOpen) {
      return;
    }
    this.isOpen = false;
    this._isComposing = false;
    if (!this._editableSearchTerm) {
      this._clearSearch();
    } else {
      this.itemsList.resetFilteredItems();
    }
    this.itemsList.unmarkItem();
    this._onTouched();
    this.closeEvent.emit();
    this._cd.markForCheck();
  }
  toggleItem(item) {
    if (!item || item.disabled || this.disabled) {
      return;
    }
    if (this.multiple && item.selected) {
      this.unselect(item);
    } else {
      this.select(item);
    }
    if (this._editableSearchTerm) {
      this._setSearchTermFromItems();
    }
    this._onSelectionChanged();
  }
  select(item) {
    if (!item.selected) {
      this.itemsList.select(item);
      if (this.clearSearchOnAdd && !this._editableSearchTerm) {
        this._clearSearch();
      }
      this._updateNgModel();
      if (this.multiple) {
        this.addEvent.emit(item.value);
      }
    }
    if (this.closeOnSelect || this.itemsList.noItemsToSelect) {
      this.close();
    }
  }
  focus() {
    if (!this.searchInput.nativeElement.readOnly) {
      this.searchInput.nativeElement.focus();
    }
    ;
  }
  blur() {
    this.searchInput.nativeElement.blur();
  }
  unselect(item) {
    if (!item) {
      return;
    }
    this.itemsList.unselect(item);
    this.focus();
    this._updateNgModel();
    this.removeEvent.emit(item);
  }
  selectTag() {
    let tag;
    if (isFunction(this.addTag)) {
      tag = this.addTag(this.searchTerm);
    } else {
      tag = this._primitive ? this.searchTerm : {
        [this.bindLabel]: this.searchTerm
      };
    }
    const handleTag = item => this._isTypeahead || !this.isOpen ? this.itemsList.mapItem(item, null) : this.itemsList.addItem(item);
    if (isPromise(tag)) {
      tag.then(item => this.select(handleTag(item))).catch(() => {});
    } else if (tag) {
      this.select(handleTag(tag));
    }
  }
  showClear() {
    return this.clearable && (this.hasValue || this.searchTerm) && !this.disabled;
  }
  get showAddTag() {
    if (!this._validTerm) {
      return false;
    }
    const term = this.searchTerm.toLowerCase().trim();
    return this.addTag && !this.itemsList.filteredItems.some(x => x.label.toLowerCase() === term) && (!this.hideSelected && this.isOpen || !this.selectedItems.some(x => x.label.toLowerCase() === term)) && !this.loading;
  }
  showNoItemsFound() {
    const empty = this.itemsList.filteredItems.length === 0;
    return (empty && !this._isTypeahead && !this.loading || empty && this._isTypeahead && this._validTerm && !this.loading) && !this.showAddTag;
  }
  showTypeToSearch() {
    const empty = this.itemsList.filteredItems.length === 0;
    return empty && this._isTypeahead && !this._validTerm && !this.loading;
  }
  onCompositionStart() {
    this._isComposing = true;
  }
  onCompositionEnd(term) {
    this._isComposing = false;
    if (this.searchWhileComposing) {
      return;
    }
    this.filter(term);
  }
  filter(term) {
    if (this._isComposing && !this.searchWhileComposing) {
      return;
    }
    this.searchTerm = term;
    if (this._isTypeahead && (this._validTerm || this.minTermLength === 0)) {
      this.typeahead.next(term);
    }
    if (!this._isTypeahead) {
      this.itemsList.filter(this.searchTerm);
      if (this.isOpen) {
        this.itemsList.markSelectedOrDefault(this.markFirst);
      }
    }
    this.searchEvent.emit({
      term,
      items: this.itemsList.filteredItems.map(x => x.value)
    });
    this.open();
  }
  onInputFocus($event) {
    if (this.focused) {
      return;
    }
    if (this._editableSearchTerm) {
      this._setSearchTermFromItems();
    }
    this.element.classList.add('ng-select-focused');
    this.focusEvent.emit($event);
    this.focused = true;
  }
  onInputBlur($event) {
    this.element.classList.remove('ng-select-focused');
    this.blurEvent.emit($event);
    if (!this.isOpen && !this.disabled) {
      this._onTouched();
    }
    if (this._editableSearchTerm) {
      this._setSearchTermFromItems();
    }
    this.focused = false;
  }
  onItemHover(item) {
    if (item.disabled) {
      return;
    }
    this.itemsList.markItem(item);
  }
  detectChanges() {
    if (!this._cd.destroyed) {
      this._cd.detectChanges();
    }
  }
  _setSearchTermFromItems() {
    const selected = this.selectedItems && this.selectedItems[0];
    this.searchTerm = selected && selected.label || null;
  }
  _setItems(items) {
    const firstItem = items[0];
    this.bindLabel = this.bindLabel || this._defaultLabel;
    this._primitive = isDefined(firstItem) ? !isObject(firstItem) : this._primitive || this.bindLabel === this._defaultLabel;
    this.itemsList.setItems(items);
    if (items.length > 0 && this.hasValue) {
      this.itemsList.mapSelectedItems();
    }
    if (this.isOpen && isDefined(this.searchTerm) && !this._isTypeahead) {
      this.itemsList.filter(this.searchTerm);
    }
    if (this._isTypeahead || this.isOpen) {
      this.itemsList.markSelectedOrDefault(this.markFirst);
    }
  }
  _setItemsFromNgOptions() {
    const mapNgOptions = options => {
      this.items = options.map(option => ({
        $ngOptionValue: option.value,
        $ngOptionLabel: option.elementRef.nativeElement.innerHTML,
        disabled: option.disabled
      }));
      this.itemsList.setItems(this.items);
      if (this.hasValue) {
        this.itemsList.mapSelectedItems();
      }
      this.detectChanges();
    };
    const handleOptionChange = () => {
      const changedOrDestroyed = (0,rxjs__WEBPACK_IMPORTED_MODULE_7__.merge)(this.ngOptions.changes, this._destroy$);
      (0,rxjs__WEBPACK_IMPORTED_MODULE_7__.merge)(...this.ngOptions.map(option => option.stateChange$)).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_5__.takeUntil)(changedOrDestroyed)).subscribe(option => {
        const item = this.itemsList.findItem(option.value);
        item.disabled = option.disabled;
        item.label = option.label || item.label;
        this._cd.detectChanges();
      });
    };
    this.ngOptions.changes.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_9__.startWith)(this.ngOptions), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_5__.takeUntil)(this._destroy$)).subscribe(options => {
      this.bindLabel = this._defaultLabel;
      mapNgOptions(options);
      handleOptionChange();
    });
  }
  _isValidWriteValue(value) {
    if (!isDefined(value) || this.multiple && value === '' || Array.isArray(value) && value.length === 0) {
      return false;
    }
    const validateBinding = item => {
      if (!isDefined(this.compareWith) && isObject(item) && this.bindValue) {
        this._console.warn(`Setting object(${JSON.stringify(item)}) as your model with bindValue is not allowed unless [compareWith] is used.`);
        return false;
      }
      return true;
    };
    if (this.multiple) {
      if (!Array.isArray(value)) {
        this._console.warn('Multiple select ngModel should be array.');
        return false;
      }
      return value.every(item => validateBinding(item));
    } else {
      return validateBinding(value);
    }
  }
  _handleWriteValue(ngModel) {
    if (!this._isValidWriteValue(ngModel)) {
      return;
    }
    const select = val => {
      let item = this.itemsList.findItem(val);
      if (item) {
        this.itemsList.select(item);
      } else {
        const isValObject = isObject(val);
        const isPrimitive = !isValObject && !this.bindValue;
        if (isValObject || isPrimitive) {
          this.itemsList.select(this.itemsList.mapItem(val, null));
        } else if (this.bindValue) {
          item = {
            [this.bindLabel]: null,
            [this.bindValue]: val
          };
          this.itemsList.select(this.itemsList.mapItem(item, null));
        }
      }
    };
    if (this.multiple) {
      ngModel.forEach(item => select(item));
    } else {
      select(ngModel);
    }
  }
  _handleKeyPresses() {
    if (this.searchable) {
      return;
    }
    this._keyPress$.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_5__.takeUntil)(this._destroy$), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_10__.tap)(letter => this._pressedKeys.push(letter)), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_11__.debounceTime)(200), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_12__.filter)(() => this._pressedKeys.length > 0), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_13__.map)(() => this._pressedKeys.join(''))).subscribe(term => {
      const item = this.itemsList.findByLabel(term);
      if (item) {
        if (this.isOpen) {
          this.itemsList.markItem(item);
          this._scrollToMarked();
          this._cd.markForCheck();
        } else {
          this.select(item);
        }
      }
      this._pressedKeys = [];
    });
  }
  _setInputAttributes() {
    const input = this.searchInput.nativeElement;
    const attributes = {
      type: 'text',
      autocorrect: 'off',
      autocapitalize: 'off',
      autocomplete: this.labelForId ? 'off' : this.dropdownId,
      ...this.inputAttrs
    };
    for (const key of Object.keys(attributes)) {
      input.setAttribute(key, attributes[key]);
    }
  }
  _updateNgModel() {
    const model = [];
    for (const item of this.selectedItems) {
      if (this.bindValue) {
        let value = null;
        if (item.children) {
          const groupKey = this.groupValue ? this.bindValue : this.groupBy;
          value = item.value[groupKey || this.groupBy];
        } else {
          value = this.itemsList.resolveNested(item.value, this.bindValue);
        }
        model.push(value);
      } else {
        model.push(item.value);
      }
    }
    const selected = this.selectedItems.map(x => x.value);
    if (this.multiple) {
      this._onChange(model);
      this.changeEvent.emit(selected);
    } else {
      this._onChange(isDefined(model[0]) ? model[0] : null);
      this.changeEvent.emit(selected[0]);
    }
    this._cd.markForCheck();
  }
  _clearSearch() {
    if (!this.searchTerm) {
      return;
    }
    this._changeSearch(null);
    this.itemsList.resetFilteredItems();
  }
  _changeSearch(searchTerm) {
    this.searchTerm = searchTerm;
    if (this._isTypeahead) {
      this.typeahead.next(searchTerm);
    }
  }
  _scrollToMarked() {
    if (!this.isOpen || !this.dropdownPanel) {
      return;
    }
    this.dropdownPanel.scrollTo(this.itemsList.markedItem);
  }
  _scrollToTag() {
    if (!this.isOpen || !this.dropdownPanel) {
      return;
    }
    this.dropdownPanel.scrollToTag();
  }
  _onSelectionChanged() {
    if (this.isOpen && this.multiple && this.appendTo) {
      // Make sure items are rendered.
      this._cd.detectChanges();
      this.dropdownPanel.adjustPosition();
    }
  }
  _handleTab($event) {
    if (this.isOpen === false && !this.addTag) {
      return;
    }
    if (this.selectOnTab) {
      if (this.itemsList.markedItem) {
        this.toggleItem(this.itemsList.markedItem);
        $event.preventDefault();
      } else if (this.showAddTag) {
        this.selectTag();
        $event.preventDefault();
      } else {
        this.close();
      }
    } else {
      this.close();
    }
  }
  _handleEnter($event) {
    if (this.isOpen || this._manualOpen) {
      if (this.itemsList.markedItem) {
        this.toggleItem(this.itemsList.markedItem);
      } else if (this.showAddTag) {
        this.selectTag();
      }
    } else if (this.openOnEnter) {
      this.open();
    } else {
      return;
    }
    $event.preventDefault();
  }
  _handleSpace($event) {
    if (this.isOpen || this._manualOpen) {
      return;
    }
    this.open();
    $event.preventDefault();
  }
  _handleArrowDown($event) {
    if (this._nextItemIsTag(+1)) {
      this.itemsList.unmarkItem();
      this._scrollToTag();
    } else {
      this.itemsList.markNextItem();
      this._scrollToMarked();
    }
    this.open();
    $event.preventDefault();
  }
  _handleArrowUp($event) {
    if (!this.isOpen) {
      return;
    }
    if (this._nextItemIsTag(-1)) {
      this.itemsList.unmarkItem();
      this._scrollToTag();
    } else {
      this.itemsList.markPreviousItem();
      this._scrollToMarked();
    }
    $event.preventDefault();
  }
  _nextItemIsTag(nextStep) {
    const nextIndex = this.itemsList.markedIndex + nextStep;
    return this.addTag && this.searchTerm && this.itemsList.markedItem && (nextIndex < 0 || nextIndex === this.itemsList.filteredItems.length);
  }
  _handleBackspace() {
    if (this.searchTerm || !this.clearable || !this.clearOnBackspace || !this.hasValue) {
      return;
    }
    if (this.multiple) {
      this.unselect(this.itemsList.lastSelectedItem);
    } else {
      this.clearModel();
    }
  }
  get _isTypeahead() {
    return this.typeahead && this.typeahead.observers.length > 0;
  }
  get _validTerm() {
    const term = this.searchTerm && this.searchTerm.trim();
    return term && term.length >= this.minTermLength;
  }
  _mergeGlobalConfig(config) {
    this.placeholder = this.placeholder || config.placeholder;
    this.notFoundText = this.notFoundText || config.notFoundText;
    this.typeToSearchText = this.typeToSearchText || config.typeToSearchText;
    this.addTagText = this.addTagText || config.addTagText;
    this.loadingText = this.loadingText || config.loadingText;
    this.clearAllText = this.clearAllText || config.clearAllText;
    this.virtualScroll = isDefined(this.virtualScroll) ? this.virtualScroll : isDefined(config.disableVirtualScroll) ? !config.disableVirtualScroll : false;
    this.openOnEnter = isDefined(this.openOnEnter) ? this.openOnEnter : config.openOnEnter;
    this.appendTo = this.appendTo || config.appendTo;
    this.bindValue = this.bindValue || config.bindValue;
    this.bindLabel = this.bindLabel || config.bindLabel;
    this.appearance = this.appearance || config.appearance;
  }
  static #_ = this.ɵfac = function NgSelectComponent_Factory(t) {
    return new (t || NgSelectComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinjectAttribute"]('class'), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinjectAttribute"]('autofocus'), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](NgSelectConfig), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](SELECTION_MODEL_FACTORY), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.ChangeDetectorRef), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](ConsoleService));
  };
  static #_2 = this.ɵcmp = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
    type: NgSelectComponent,
    selectors: [["ng-select"]],
    contentQueries: function NgSelectComponent_ContentQueries(rf, ctx, dirIndex) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵcontentQuery"](dirIndex, NgOptionTemplateDirective, 5, _angular_core__WEBPACK_IMPORTED_MODULE_0__.TemplateRef);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵcontentQuery"](dirIndex, NgOptgroupTemplateDirective, 5, _angular_core__WEBPACK_IMPORTED_MODULE_0__.TemplateRef);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵcontentQuery"](dirIndex, NgLabelTemplateDirective, 5, _angular_core__WEBPACK_IMPORTED_MODULE_0__.TemplateRef);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵcontentQuery"](dirIndex, NgMultiLabelTemplateDirective, 5, _angular_core__WEBPACK_IMPORTED_MODULE_0__.TemplateRef);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵcontentQuery"](dirIndex, NgHeaderTemplateDirective, 5, _angular_core__WEBPACK_IMPORTED_MODULE_0__.TemplateRef);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵcontentQuery"](dirIndex, NgFooterTemplateDirective, 5, _angular_core__WEBPACK_IMPORTED_MODULE_0__.TemplateRef);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵcontentQuery"](dirIndex, NgNotFoundTemplateDirective, 5, _angular_core__WEBPACK_IMPORTED_MODULE_0__.TemplateRef);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵcontentQuery"](dirIndex, NgTypeToSearchTemplateDirective, 5, _angular_core__WEBPACK_IMPORTED_MODULE_0__.TemplateRef);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵcontentQuery"](dirIndex, NgLoadingTextTemplateDirective, 5, _angular_core__WEBPACK_IMPORTED_MODULE_0__.TemplateRef);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵcontentQuery"](dirIndex, NgTagTemplateDirective, 5, _angular_core__WEBPACK_IMPORTED_MODULE_0__.TemplateRef);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵcontentQuery"](dirIndex, NgLoadingSpinnerTemplateDirective, 5, _angular_core__WEBPACK_IMPORTED_MODULE_0__.TemplateRef);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵcontentQuery"](dirIndex, NgOptionComponent, 5);
      }
      if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.optionTemplate = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.optgroupTemplate = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.labelTemplate = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.multiLabelTemplate = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.headerTemplate = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.footerTemplate = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.notFoundTemplate = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.typeToSearchTemplate = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.loadingTextTemplate = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.tagTemplate = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.loadingSpinnerTemplate = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.ngOptions = _t);
      }
    },
    viewQuery: function NgSelectComponent_Query(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](NgDropdownPanelComponent, 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](_c5, 7);
      }
      if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.dropdownPanel = _t.first);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.searchInput = _t.first);
      }
    },
    hostVars: 20,
    hostBindings: function NgSelectComponent_HostBindings(rf, ctx) {
      if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("keydown", function NgSelectComponent_keydown_HostBindingHandler($event) {
          return ctx.handleKeyDown($event);
        });
      }
      if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵclassProp"]("ng-select-typeahead", ctx.typeahead)("ng-select-multiple", ctx.multiple)("ng-select-taggable", ctx.addTag)("ng-select-searchable", ctx.searchable)("ng-select-clearable", ctx.clearable)("ng-select-opened", ctx.isOpen)("ng-select", ctx.useDefaultClass)("ng-select-disabled", ctx.disabled)("ng-select-filtered", ctx.filtered)("ng-select-single", ctx.single);
      }
    },
    inputs: {
      bindLabel: "bindLabel",
      bindValue: "bindValue",
      markFirst: "markFirst",
      placeholder: "placeholder",
      notFoundText: "notFoundText",
      typeToSearchText: "typeToSearchText",
      addTagText: "addTagText",
      loadingText: "loadingText",
      clearAllText: "clearAllText",
      appearance: "appearance",
      dropdownPosition: "dropdownPosition",
      appendTo: "appendTo",
      loading: "loading",
      closeOnSelect: "closeOnSelect",
      hideSelected: "hideSelected",
      selectOnTab: "selectOnTab",
      openOnEnter: "openOnEnter",
      maxSelectedItems: "maxSelectedItems",
      groupBy: "groupBy",
      groupValue: "groupValue",
      bufferAmount: "bufferAmount",
      virtualScroll: "virtualScroll",
      selectableGroup: "selectableGroup",
      selectableGroupAsModel: "selectableGroupAsModel",
      searchFn: "searchFn",
      trackByFn: "trackByFn",
      clearOnBackspace: "clearOnBackspace",
      labelForId: "labelForId",
      inputAttrs: "inputAttrs",
      tabIndex: "tabIndex",
      readonly: "readonly",
      searchWhileComposing: "searchWhileComposing",
      minTermLength: "minTermLength",
      editableSearchTerm: "editableSearchTerm",
      keyDownFn: "keyDownFn",
      typeahead: "typeahead",
      multiple: "multiple",
      addTag: "addTag",
      searchable: "searchable",
      clearable: "clearable",
      isOpen: "isOpen",
      items: "items",
      compareWith: "compareWith",
      clearSearchOnAdd: "clearSearchOnAdd"
    },
    outputs: {
      blurEvent: "blur",
      focusEvent: "focus",
      changeEvent: "change",
      openEvent: "open",
      closeEvent: "close",
      searchEvent: "search",
      clearEvent: "clear",
      addEvent: "add",
      removeEvent: "remove",
      scroll: "scroll",
      scrollToEnd: "scrollToEnd"
    },
    features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵProvidersFeature"]([{
      provide: _angular_forms__WEBPACK_IMPORTED_MODULE_14__.NG_VALUE_ACCESSOR,
      useExisting: (0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(() => NgSelectComponent),
      multi: true
    }, NgDropdownPanelService]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵNgOnChangesFeature"]],
    decls: 14,
    vars: 19,
    consts: [[1, "ng-select-container", 3, "mousedown"], [1, "ng-value-container"], [1, "ng-placeholder"], [4, "ngIf"], ["role", "combobox", "aria-haspopup", "listbox", 1, "ng-input"], ["aria-autocomplete", "list", 3, "readOnly", "disabled", "value", "input", "compositionstart", "compositionend", "focus", "blur", "change"], ["searchInput", ""], ["class", "ng-clear-wrapper", 3, "title", 4, "ngIf"], [1, "ng-arrow-wrapper"], [1, "ng-arrow"], ["class", "ng-dropdown-panel", "role", "listbox", "aria-label", "Options list", 3, "virtualScroll", "bufferAmount", "appendTo", "position", "headerTemplate", "footerTemplate", "filterValue", "items", "markedItem", "ng-select-multiple", "ngClass", "id", "update", "scroll", "scrollToEnd", "outsideClick", 4, "ngIf"], ["class", "ng-value", 3, "ng-value-disabled", 4, "ngFor", "ngForOf", "ngForTrackBy"], [1, "ng-value"], ["defaultLabelTemplate", ""], [3, "ngTemplateOutlet", "ngTemplateOutletContext"], ["aria-hidden", "true", 1, "ng-value-icon", "left", 3, "click"], [1, "ng-value-label", 3, "ngItemLabel", "escape"], ["defaultLoadingSpinnerTemplate", ""], [3, "ngTemplateOutlet"], [1, "ng-spinner-loader"], [1, "ng-clear-wrapper", 3, "title"], ["aria-hidden", "true", 1, "ng-clear"], ["role", "listbox", "aria-label", "Options list", 1, "ng-dropdown-panel", 3, "virtualScroll", "bufferAmount", "appendTo", "position", "headerTemplate", "footerTemplate", "filterValue", "items", "markedItem", "ngClass", "id", "update", "scroll", "scrollToEnd", "outsideClick"], ["class", "ng-option", 3, "ng-option-disabled", "ng-option-selected", "ng-optgroup", "ng-option", "ng-option-child", "ng-option-marked", "click", "mouseover", 4, "ngFor", "ngForOf", "ngForTrackBy"], ["class", "ng-option", "role", "option", 3, "ng-option-marked", "mouseover", "click", 4, "ngIf"], [1, "ng-option", 3, "click", "mouseover"], ["defaultOptionTemplate", ""], [1, "ng-option-label", 3, "ngItemLabel", "escape"], ["role", "option", 1, "ng-option", 3, "mouseover", "click"], ["defaultTagTemplate", ""], [1, "ng-tag-label"], ["defaultNotFoundTemplate", ""], [1, "ng-option", "ng-option-disabled"], ["defaultTypeToSearchTemplate", ""], ["defaultLoadingTextTemplate", ""]],
    template: function NgSelectComponent_Template(rf, ctx) {
      if (rf & 1) {
        const _r52 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("mousedown", function NgSelectComponent_Template_div_mousedown_0_listener($event) {
          return ctx.handleMousedown($event);
        });
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "div", 1)(2, "div", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](4, NgSelectComponent_ng_container_4_Template, 2, 2, "ng-container", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](5, NgSelectComponent_5_Template, 1, 5, null, 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](6, "div", 4)(7, "input", 5, 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("input", function NgSelectComponent_Template_input_input_7_listener() {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r52);
          const _r2 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](8);
          return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵresetView"](ctx.filter(_r2.value));
        })("compositionstart", function NgSelectComponent_Template_input_compositionstart_7_listener() {
          return ctx.onCompositionStart();
        })("compositionend", function NgSelectComponent_Template_input_compositionend_7_listener() {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r52);
          const _r2 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](8);
          return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵresetView"](ctx.onCompositionEnd(_r2.value));
        })("focus", function NgSelectComponent_Template_input_focus_7_listener($event) {
          return ctx.onInputFocus($event);
        })("blur", function NgSelectComponent_Template_input_blur_7_listener($event) {
          return ctx.onInputBlur($event);
        })("change", function NgSelectComponent_Template_input_change_7_listener($event) {
          return $event.stopPropagation();
        });
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]()()();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](9, NgSelectComponent_ng_container_9_Template, 4, 1, "ng-container", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](10, NgSelectComponent_span_10_Template, 3, 1, "span", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](11, "span", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](12, "span", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]()();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](13, NgSelectComponent_ng_dropdown_panel_13_Template, 7, 19, "ng-dropdown-panel", 10);
      }
      if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵclassProp"]("ng-appearance-outline", ctx.appearance === "outline")("ng-has-value", ctx.hasValue);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](ctx.placeholder);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", (!ctx.multiLabelTemplate || !ctx.multiple) && ctx.selectedItems.length > 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.multiple && ctx.multiLabelTemplate && ctx.selectedValues.length > 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵattribute"]("aria-expanded", ctx.isOpen)("aria-owns", ctx.isOpen ? ctx.dropdownId : null);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("readOnly", !ctx.searchable || ctx.itemsList.maxItemsSelected)("disabled", ctx.disabled)("value", ctx.searchTerm ? ctx.searchTerm : "");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵattribute"]("id", ctx.labelForId)("tabindex", ctx.tabIndex)("aria-activedescendant", ctx.isOpen ? ctx.itemsList == null ? null : ctx.itemsList.markedItem == null ? null : ctx.itemsList.markedItem.htmlId : null)("aria-controls", ctx.isOpen ? ctx.dropdownId : null);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.loading);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.showClear());
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.isOpen);
      }
    },
    dependencies: [_angular_common__WEBPACK_IMPORTED_MODULE_8__.NgClass, _angular_common__WEBPACK_IMPORTED_MODULE_8__.NgForOf, _angular_common__WEBPACK_IMPORTED_MODULE_8__.NgIf, _angular_common__WEBPACK_IMPORTED_MODULE_8__.NgTemplateOutlet, NgDropdownPanelComponent, NgItemLabelDirective],
    styles: ["@charset \"UTF-8\";.ng-select{position:relative;display:block;box-sizing:border-box}.ng-select div,.ng-select input,.ng-select span{box-sizing:border-box}.ng-select [hidden]{display:none}.ng-select.ng-select-searchable .ng-select-container .ng-value-container .ng-input{opacity:1}.ng-select.ng-select-opened .ng-select-container{z-index:1001}.ng-select.ng-select-disabled .ng-select-container .ng-value-container .ng-placeholder,.ng-select.ng-select-disabled .ng-select-container .ng-value-container .ng-value{-webkit-user-select:none;user-select:none;cursor:default}.ng-select.ng-select-disabled .ng-arrow-wrapper{cursor:default}.ng-select.ng-select-filtered .ng-placeholder{display:none}.ng-select .ng-select-container{cursor:default;display:flex;outline:none;overflow:hidden;position:relative;width:100%}.ng-select .ng-select-container .ng-value-container{display:flex;flex:1}.ng-select .ng-select-container .ng-value-container .ng-input{opacity:0}.ng-select .ng-select-container .ng-value-container .ng-input>input{box-sizing:content-box;background:none transparent;border:0 none;box-shadow:none;outline:none;padding:0;cursor:default;width:100%}.ng-select .ng-select-container .ng-value-container .ng-input>input::-ms-clear{display:none}.ng-select .ng-select-container .ng-value-container .ng-input>input[readonly]{-webkit-user-select:none;user-select:none;width:0;padding:0}.ng-select.ng-select-single.ng-select-filtered .ng-select-container .ng-value-container .ng-value{visibility:hidden}.ng-select.ng-select-single .ng-select-container .ng-value-container,.ng-select.ng-select-single .ng-select-container .ng-value-container .ng-value{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.ng-select.ng-select-single .ng-select-container .ng-value-container .ng-value .ng-value-icon{display:none}.ng-select.ng-select-single .ng-select-container .ng-value-container .ng-input{position:absolute;left:0;width:100%}.ng-select.ng-select-multiple.ng-select-disabled>.ng-select-container .ng-value-container .ng-value .ng-value-icon{display:none}.ng-select.ng-select-multiple .ng-select-container .ng-value-container{flex-wrap:wrap}.ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-placeholder{position:absolute}.ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-value{white-space:nowrap}.ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-value.ng-value-disabled .ng-value-icon{display:none}.ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-value .ng-value-icon{cursor:pointer}.ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-input{flex:1;z-index:2}.ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-placeholder{z-index:1}.ng-select .ng-clear-wrapper{cursor:pointer;position:relative;width:17px;-webkit-user-select:none;user-select:none}.ng-select .ng-clear-wrapper .ng-clear{display:inline-block;font-size:18px;line-height:1;pointer-events:none}.ng-select .ng-spinner-loader{border-radius:50%;width:17px;height:17px;margin-right:5px;font-size:10px;position:relative;text-indent:-9999em;border-top:2px solid rgba(66,66,66,.2);border-right:2px solid rgba(66,66,66,.2);border-bottom:2px solid rgba(66,66,66,.2);border-left:2px solid #424242;transform:translateZ(0);animation:load8 .8s infinite linear}.ng-select .ng-spinner-loader:after{border-radius:50%;width:17px;height:17px}@keyframes load8{0%{transform:rotate(0)}to{transform:rotate(360deg)}}.ng-select .ng-arrow-wrapper{cursor:pointer;position:relative;text-align:center;-webkit-user-select:none;user-select:none}.ng-select .ng-arrow-wrapper .ng-arrow{pointer-events:none;display:inline-block;height:0;width:0;position:relative}.ng-dropdown-panel{box-sizing:border-box;position:absolute;opacity:0;width:100%;z-index:1050;-webkit-overflow-scrolling:touch}.ng-dropdown-panel .ng-dropdown-panel-items{display:block;height:auto;box-sizing:border-box;max-height:240px;overflow-y:auto}.ng-dropdown-panel .ng-dropdown-panel-items .ng-optgroup{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.ng-dropdown-panel .ng-dropdown-panel-items .ng-option{box-sizing:border-box;cursor:pointer;display:block;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.ng-dropdown-panel .ng-dropdown-panel-items .ng-option .ng-option-label:empty:before{content:\"\\200b\"}.ng-dropdown-panel .ng-dropdown-panel-items .ng-option .highlighted{font-weight:700;text-decoration:underline}.ng-dropdown-panel .ng-dropdown-panel-items .ng-option.disabled{cursor:default}.ng-dropdown-panel .scroll-host{overflow:hidden;overflow-y:auto;position:relative;display:block;-webkit-overflow-scrolling:touch}.ng-dropdown-panel .scrollable-content{top:0;left:0;width:100%;height:100%;position:absolute}.ng-dropdown-panel .total-padding{width:1px;opacity:0}\n"],
    encapsulation: 2,
    changeDetection: 0
  });
}
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](NgSelectComponent, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Component,
    args: [{
      selector: 'ng-select',
      providers: [{
        provide: _angular_forms__WEBPACK_IMPORTED_MODULE_14__.NG_VALUE_ACCESSOR,
        useExisting: (0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(() => NgSelectComponent),
        multi: true
      }, NgDropdownPanelService],
      encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ViewEncapsulation.None,
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ChangeDetectionStrategy.OnPush,
      template: "<div\n    (mousedown)=\"handleMousedown($event)\"\n    [class.ng-appearance-outline]=\"appearance === 'outline'\"\n    [class.ng-has-value]=\"hasValue\"\n    class=\"ng-select-container\">\n\n    <div class=\"ng-value-container\">\n        <div class=\"ng-placeholder\">{{placeholder}}</div>\n\n        <ng-container *ngIf=\"(!multiLabelTemplate  || !multiple ) && selectedItems.length > 0\">\n            <div [class.ng-value-disabled]=\"item.disabled\" class=\"ng-value\" *ngFor=\"let item of selectedItems; trackBy: trackByOption\">\n                <ng-template #defaultLabelTemplate>\n                    <span class=\"ng-value-icon left\" (click)=\"unselect(item);\" aria-hidden=\"true\">\u00D7</span>\n                    <span class=\"ng-value-label\" [ngItemLabel]=\"item.label\" [escape]=\"escapeHTML\"></span>\n                </ng-template>\n\n                <ng-template\n                    [ngTemplateOutlet]=\"labelTemplate || defaultLabelTemplate\"\n                    [ngTemplateOutletContext]=\"{ item: item.value, clear: clearItem, label: item.label }\">\n                </ng-template>\n            </div>\n        </ng-container>\n\n        <ng-template *ngIf=\"multiple && multiLabelTemplate && selectedValues.length > 0\"\n                [ngTemplateOutlet]=\"multiLabelTemplate\"\n                [ngTemplateOutletContext]=\"{ items: selectedValues, clear: clearItem }\">\n        </ng-template>\n\n        <div class=\"ng-input\"\n            role=\"combobox\" \n            [attr.aria-expanded]=\"isOpen\" \n            [attr.aria-owns]=\"isOpen ? dropdownId : null\" \n            aria-haspopup=\"listbox\">\n\n            <input #searchInput\n                   [attr.id]=\"labelForId\"\n                   [attr.tabindex]=\"tabIndex\"\n                   [readOnly]=\"!searchable || itemsList.maxItemsSelected\"\n                   [disabled]=\"disabled\"\n                   [value]=\"searchTerm ? searchTerm : ''\"\n                   (input)=\"filter(searchInput.value)\"\n                   (compositionstart)=\"onCompositionStart()\"\n                   (compositionend)=\"onCompositionEnd(searchInput.value)\"\n                   (focus)=\"onInputFocus($event)\"\n                   (blur)=\"onInputBlur($event)\"\n                   (change)=\"$event.stopPropagation()\"\n                   [attr.aria-activedescendant]=\"isOpen ? itemsList?.markedItem?.htmlId : null\"\n                   aria-autocomplete=\"list\"\n                   [attr.aria-controls]=\"isOpen ? dropdownId : null\">\n        </div>\n    </div>\n\n    <ng-container *ngIf=\"loading\">\n        <ng-template #defaultLoadingSpinnerTemplate>\n            <div class=\"ng-spinner-loader\"></div>\n        </ng-template>\n\n        <ng-template\n            [ngTemplateOutlet]=\"loadingSpinnerTemplate || defaultLoadingSpinnerTemplate\">\n        </ng-template>\n    </ng-container>\n\n    <span *ngIf=\"showClear()\" class=\"ng-clear-wrapper\" title=\"{{clearAllText}}\">\n        <span class=\"ng-clear\" aria-hidden=\"true\">\u00D7</span>\n    </span>\n\n    <span class=\"ng-arrow-wrapper\">\n        <span class=\"ng-arrow\"></span>\n    </span>\n</div>\n\n<ng-dropdown-panel *ngIf=\"isOpen\"\n                   class=\"ng-dropdown-panel\"\n                   [virtualScroll]=\"virtualScroll\"\n                   [bufferAmount]=\"bufferAmount\"\n                   [appendTo]=\"appendTo\"\n                   [position]=\"dropdownPosition\"\n                   [headerTemplate]=\"headerTemplate\"\n                   [footerTemplate]=\"footerTemplate\"\n                   [filterValue]=\"searchTerm\"\n                   [items]=\"itemsList.filteredItems\"\n                   [markedItem]=\"itemsList.markedItem\"\n                   (update)=\"viewPortItems = $event\"\n                   (scroll)=\"scroll.emit($event)\"\n                   (scrollToEnd)=\"scrollToEnd.emit($event)\"\n                   (outsideClick)=\"close()\"\n                   [class.ng-select-multiple]=\"multiple\"\n                   [ngClass]=\"appendTo ? classes : null\"\n                   [id]=\"dropdownId\"\n                   role=\"listbox\"\n                   aria-label=\"Options list\">\n\n    <ng-container>\n        <div class=\"ng-option\" [attr.role]=\"item.children ? 'group' : 'option'\" (click)=\"toggleItem(item)\" (mouseover)=\"onItemHover(item)\"\n                *ngFor=\"let item of viewPortItems; trackBy: trackByOption\"\n                [class.ng-option-disabled]=\"item.disabled\"\n                [class.ng-option-selected]=\"item.selected\"\n                [class.ng-optgroup]=\"item.children\"\n                [class.ng-option]=\"!item.children\"\n                [class.ng-option-child]=\"!!item.parent\"\n                [class.ng-option-marked]=\"item === itemsList.markedItem\"\n                [attr.aria-selected]=\"item.selected\"\n                [attr.id]=\"item?.htmlId\">\n\n            <ng-template #defaultOptionTemplate>\n                <span class=\"ng-option-label\" [ngItemLabel]=\"item.label\" [escape]=\"escapeHTML\"></span>\n            </ng-template>\n\n            <ng-template\n                [ngTemplateOutlet]=\"item.children ? (optgroupTemplate || defaultOptionTemplate) : (optionTemplate || defaultOptionTemplate)\"\n                [ngTemplateOutletContext]=\"{ item: item.value, item$:item, index: item.index, searchTerm: searchTerm }\">\n            </ng-template>\n        </div>\n\n        <div class=\"ng-option\" [class.ng-option-marked]=\"!itemsList.markedItem\" (mouseover)=\"itemsList.unmarkItem()\" role=\"option\" (click)=\"selectTag()\" *ngIf=\"showAddTag\">\n            <ng-template #defaultTagTemplate>\n                <span><span class=\"ng-tag-label\">{{addTagText}}</span>\"{{searchTerm}}\"</span>\n            </ng-template>\n\n            <ng-template\n                [ngTemplateOutlet]=\"tagTemplate || defaultTagTemplate\"\n                [ngTemplateOutletContext]=\"{ searchTerm: searchTerm }\">\n            </ng-template>\n        </div>\n    </ng-container>\n\n    <ng-container *ngIf=\"showNoItemsFound()\">\n        <ng-template #defaultNotFoundTemplate>\n            <div class=\"ng-option ng-option-disabled\">{{notFoundText}}</div>\n        </ng-template>\n\n        <ng-template\n            [ngTemplateOutlet]=\"notFoundTemplate || defaultNotFoundTemplate\"\n            [ngTemplateOutletContext]=\"{ searchTerm: searchTerm }\">\n        </ng-template>\n    </ng-container>\n\n    <ng-container *ngIf=\"showTypeToSearch()\">\n        <ng-template #defaultTypeToSearchTemplate>\n            <div class=\"ng-option ng-option-disabled\">{{typeToSearchText}}</div>\n        </ng-template>\n\n        <ng-template\n            [ngTemplateOutlet]=\"typeToSearchTemplate || defaultTypeToSearchTemplate\">\n        </ng-template>\n    </ng-container>\n\n    <ng-container *ngIf=\"loading && itemsList.filteredItems.length === 0\">\n        <ng-template #defaultLoadingTextTemplate>\n            <div class=\"ng-option ng-option-disabled\">{{loadingText}}</div>\n        </ng-template>\n\n        <ng-template\n            [ngTemplateOutlet]=\"loadingTextTemplate || defaultLoadingTextTemplate\"\n            [ngTemplateOutletContext]=\"{ searchTerm: searchTerm }\">\n        </ng-template>\n    </ng-container>\n\n</ng-dropdown-panel>\n",
      styles: ["@charset \"UTF-8\";.ng-select{position:relative;display:block;box-sizing:border-box}.ng-select div,.ng-select input,.ng-select span{box-sizing:border-box}.ng-select [hidden]{display:none}.ng-select.ng-select-searchable .ng-select-container .ng-value-container .ng-input{opacity:1}.ng-select.ng-select-opened .ng-select-container{z-index:1001}.ng-select.ng-select-disabled .ng-select-container .ng-value-container .ng-placeholder,.ng-select.ng-select-disabled .ng-select-container .ng-value-container .ng-value{-webkit-user-select:none;user-select:none;cursor:default}.ng-select.ng-select-disabled .ng-arrow-wrapper{cursor:default}.ng-select.ng-select-filtered .ng-placeholder{display:none}.ng-select .ng-select-container{cursor:default;display:flex;outline:none;overflow:hidden;position:relative;width:100%}.ng-select .ng-select-container .ng-value-container{display:flex;flex:1}.ng-select .ng-select-container .ng-value-container .ng-input{opacity:0}.ng-select .ng-select-container .ng-value-container .ng-input>input{box-sizing:content-box;background:none transparent;border:0 none;box-shadow:none;outline:none;padding:0;cursor:default;width:100%}.ng-select .ng-select-container .ng-value-container .ng-input>input::-ms-clear{display:none}.ng-select .ng-select-container .ng-value-container .ng-input>input[readonly]{-webkit-user-select:none;user-select:none;width:0;padding:0}.ng-select.ng-select-single.ng-select-filtered .ng-select-container .ng-value-container .ng-value{visibility:hidden}.ng-select.ng-select-single .ng-select-container .ng-value-container,.ng-select.ng-select-single .ng-select-container .ng-value-container .ng-value{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.ng-select.ng-select-single .ng-select-container .ng-value-container .ng-value .ng-value-icon{display:none}.ng-select.ng-select-single .ng-select-container .ng-value-container .ng-input{position:absolute;left:0;width:100%}.ng-select.ng-select-multiple.ng-select-disabled>.ng-select-container .ng-value-container .ng-value .ng-value-icon{display:none}.ng-select.ng-select-multiple .ng-select-container .ng-value-container{flex-wrap:wrap}.ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-placeholder{position:absolute}.ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-value{white-space:nowrap}.ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-value.ng-value-disabled .ng-value-icon{display:none}.ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-value .ng-value-icon{cursor:pointer}.ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-input{flex:1;z-index:2}.ng-select.ng-select-multiple .ng-select-container .ng-value-container .ng-placeholder{z-index:1}.ng-select .ng-clear-wrapper{cursor:pointer;position:relative;width:17px;-webkit-user-select:none;user-select:none}.ng-select .ng-clear-wrapper .ng-clear{display:inline-block;font-size:18px;line-height:1;pointer-events:none}.ng-select .ng-spinner-loader{border-radius:50%;width:17px;height:17px;margin-right:5px;font-size:10px;position:relative;text-indent:-9999em;border-top:2px solid rgba(66,66,66,.2);border-right:2px solid rgba(66,66,66,.2);border-bottom:2px solid rgba(66,66,66,.2);border-left:2px solid #424242;transform:translateZ(0);animation:load8 .8s infinite linear}.ng-select .ng-spinner-loader:after{border-radius:50%;width:17px;height:17px}@keyframes load8{0%{transform:rotate(0)}to{transform:rotate(360deg)}}.ng-select .ng-arrow-wrapper{cursor:pointer;position:relative;text-align:center;-webkit-user-select:none;user-select:none}.ng-select .ng-arrow-wrapper .ng-arrow{pointer-events:none;display:inline-block;height:0;width:0;position:relative}.ng-dropdown-panel{box-sizing:border-box;position:absolute;opacity:0;width:100%;z-index:1050;-webkit-overflow-scrolling:touch}.ng-dropdown-panel .ng-dropdown-panel-items{display:block;height:auto;box-sizing:border-box;max-height:240px;overflow-y:auto}.ng-dropdown-panel .ng-dropdown-panel-items .ng-optgroup{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.ng-dropdown-panel .ng-dropdown-panel-items .ng-option{box-sizing:border-box;cursor:pointer;display:block;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.ng-dropdown-panel .ng-dropdown-panel-items .ng-option .ng-option-label:empty:before{content:\"\\200b\"}.ng-dropdown-panel .ng-dropdown-panel-items .ng-option .highlighted{font-weight:700;text-decoration:underline}.ng-dropdown-panel .ng-dropdown-panel-items .ng-option.disabled{cursor:default}.ng-dropdown-panel .scroll-host{overflow:hidden;overflow-y:auto;position:relative;display:block;-webkit-overflow-scrolling:touch}.ng-dropdown-panel .scrollable-content{top:0;left:0;width:100%;height:100%;position:absolute}.ng-dropdown-panel .total-padding{width:1px;opacity:0}\n"]
    }]
  }], function () {
    return [{
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Attribute,
        args: ['class']
      }]
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Attribute,
        args: ['autofocus']
      }]
    }, {
      type: NgSelectConfig
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Inject,
        args: [SELECTION_MODEL_FACTORY]
      }]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ChangeDetectorRef
    }, {
      type: ConsoleService
    }];
  }, {
    bindLabel: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    bindValue: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    markFirst: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    placeholder: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    notFoundText: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    typeToSearchText: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    addTagText: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    loadingText: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    clearAllText: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    appearance: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    dropdownPosition: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    appendTo: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    loading: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    closeOnSelect: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    hideSelected: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    selectOnTab: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    openOnEnter: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    maxSelectedItems: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    groupBy: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    groupValue: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    bufferAmount: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    virtualScroll: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    selectableGroup: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    selectableGroupAsModel: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    searchFn: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    trackByFn: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    clearOnBackspace: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    labelForId: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    inputAttrs: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    tabIndex: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    readonly: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    searchWhileComposing: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    minTermLength: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    editableSearchTerm: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    keyDownFn: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    typeahead: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.HostBinding,
      args: ['class.ng-select-typeahead']
    }],
    multiple: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.HostBinding,
      args: ['class.ng-select-multiple']
    }],
    addTag: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.HostBinding,
      args: ['class.ng-select-taggable']
    }],
    searchable: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.HostBinding,
      args: ['class.ng-select-searchable']
    }],
    clearable: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.HostBinding,
      args: ['class.ng-select-clearable']
    }],
    isOpen: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.HostBinding,
      args: ['class.ng-select-opened']
    }],
    items: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    compareWith: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    clearSearchOnAdd: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    blurEvent: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output,
      args: ['blur']
    }],
    focusEvent: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output,
      args: ['focus']
    }],
    changeEvent: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output,
      args: ['change']
    }],
    openEvent: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output,
      args: ['open']
    }],
    closeEvent: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output,
      args: ['close']
    }],
    searchEvent: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output,
      args: ['search']
    }],
    clearEvent: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output,
      args: ['clear']
    }],
    addEvent: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output,
      args: ['add']
    }],
    removeEvent: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output,
      args: ['remove']
    }],
    scroll: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output,
      args: ['scroll']
    }],
    scrollToEnd: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output,
      args: ['scrollToEnd']
    }],
    optionTemplate: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ContentChild,
      args: [NgOptionTemplateDirective, {
        read: _angular_core__WEBPACK_IMPORTED_MODULE_0__.TemplateRef
      }]
    }],
    optgroupTemplate: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ContentChild,
      args: [NgOptgroupTemplateDirective, {
        read: _angular_core__WEBPACK_IMPORTED_MODULE_0__.TemplateRef
      }]
    }],
    labelTemplate: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ContentChild,
      args: [NgLabelTemplateDirective, {
        read: _angular_core__WEBPACK_IMPORTED_MODULE_0__.TemplateRef
      }]
    }],
    multiLabelTemplate: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ContentChild,
      args: [NgMultiLabelTemplateDirective, {
        read: _angular_core__WEBPACK_IMPORTED_MODULE_0__.TemplateRef
      }]
    }],
    headerTemplate: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ContentChild,
      args: [NgHeaderTemplateDirective, {
        read: _angular_core__WEBPACK_IMPORTED_MODULE_0__.TemplateRef
      }]
    }],
    footerTemplate: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ContentChild,
      args: [NgFooterTemplateDirective, {
        read: _angular_core__WEBPACK_IMPORTED_MODULE_0__.TemplateRef
      }]
    }],
    notFoundTemplate: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ContentChild,
      args: [NgNotFoundTemplateDirective, {
        read: _angular_core__WEBPACK_IMPORTED_MODULE_0__.TemplateRef
      }]
    }],
    typeToSearchTemplate: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ContentChild,
      args: [NgTypeToSearchTemplateDirective, {
        read: _angular_core__WEBPACK_IMPORTED_MODULE_0__.TemplateRef
      }]
    }],
    loadingTextTemplate: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ContentChild,
      args: [NgLoadingTextTemplateDirective, {
        read: _angular_core__WEBPACK_IMPORTED_MODULE_0__.TemplateRef
      }]
    }],
    tagTemplate: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ContentChild,
      args: [NgTagTemplateDirective, {
        read: _angular_core__WEBPACK_IMPORTED_MODULE_0__.TemplateRef
      }]
    }],
    loadingSpinnerTemplate: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ContentChild,
      args: [NgLoadingSpinnerTemplateDirective, {
        read: _angular_core__WEBPACK_IMPORTED_MODULE_0__.TemplateRef
      }]
    }],
    dropdownPanel: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ViewChild,
      args: [(0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(() => NgDropdownPanelComponent)]
    }],
    searchInput: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ViewChild,
      args: ['searchInput', {
        static: true
      }]
    }],
    ngOptions: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ContentChildren,
      args: [NgOptionComponent, {
        descendants: true
      }]
    }],
    useDefaultClass: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.HostBinding,
      args: ['class.ng-select']
    }],
    disabled: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.HostBinding,
      args: ['class.ng-select-disabled']
    }],
    filtered: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.HostBinding,
      args: ['class.ng-select-filtered']
    }],
    single: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.HostBinding,
      args: ['class.ng-select-single']
    }],
    handleKeyDown: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.HostListener,
      args: ['keydown', ['$event']]
    }]
  });
})();
function DefaultSelectionModelFactory() {
  return new DefaultSelectionModel();
}
class DefaultSelectionModel {
  constructor() {
    this._selected = [];
  }
  get value() {
    return this._selected;
  }
  select(item, multiple, groupAsModel) {
    item.selected = true;
    if (!item.children || !multiple && groupAsModel) {
      this._selected.push(item);
    }
    if (multiple) {
      if (item.parent) {
        const childrenCount = item.parent.children.length;
        const selectedCount = item.parent.children.filter(x => x.selected).length;
        item.parent.selected = childrenCount === selectedCount;
      } else if (item.children) {
        this._setChildrenSelectedState(item.children, true);
        this._removeChildren(item);
        if (groupAsModel && this._activeChildren(item)) {
          this._selected = [...this._selected.filter(x => x.parent !== item), item];
        } else {
          this._selected = [...this._selected, ...item.children.filter(x => !x.disabled)];
        }
      }
    }
  }
  unselect(item, multiple) {
    this._selected = this._selected.filter(x => x !== item);
    item.selected = false;
    if (multiple) {
      if (item.parent && item.parent.selected) {
        const children = item.parent.children;
        this._removeParent(item.parent);
        this._removeChildren(item.parent);
        this._selected.push(...children.filter(x => x !== item && !x.disabled));
        item.parent.selected = false;
      } else if (item.children) {
        this._setChildrenSelectedState(item.children, false);
        this._removeChildren(item);
      }
    }
  }
  clear(keepDisabled) {
    this._selected = keepDisabled ? this._selected.filter(x => x.disabled) : [];
  }
  _setChildrenSelectedState(children, selected) {
    for (const child of children) {
      if (child.disabled) {
        continue;
      }
      child.selected = selected;
    }
  }
  _removeChildren(parent) {
    this._selected = [...this._selected.filter(x => x.parent !== parent), ...parent.children.filter(x => x.parent === parent && x.disabled && x.selected)];
  }
  _removeParent(parent) {
    this._selected = this._selected.filter(x => x !== parent);
  }
  _activeChildren(item) {
    return item.children.every(x => !x.disabled || x.selected);
  }
}
class NgSelectModule {
  static #_ = this.ɵfac = function NgSelectModule_Factory(t) {
    return new (t || NgSelectModule)();
  };
  static #_2 = this.ɵmod = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineNgModule"]({
    type: NgSelectModule
  });
  static #_3 = this.ɵinj = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjector"]({
    providers: [{
      provide: SELECTION_MODEL_FACTORY,
      useValue: DefaultSelectionModelFactory
    }],
    imports: [_angular_common__WEBPACK_IMPORTED_MODULE_8__.CommonModule]
  });
}
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](NgSelectModule, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.NgModule,
    args: [{
      declarations: [NgDropdownPanelComponent, NgOptionComponent, NgSelectComponent, NgOptgroupTemplateDirective, NgOptionTemplateDirective, NgLabelTemplateDirective, NgMultiLabelTemplateDirective, NgHeaderTemplateDirective, NgFooterTemplateDirective, NgNotFoundTemplateDirective, NgTypeToSearchTemplateDirective, NgLoadingTextTemplateDirective, NgTagTemplateDirective, NgLoadingSpinnerTemplateDirective, NgItemLabelDirective],
      imports: [_angular_common__WEBPACK_IMPORTED_MODULE_8__.CommonModule],
      exports: [NgSelectComponent, NgOptionComponent, NgOptgroupTemplateDirective, NgOptionTemplateDirective, NgLabelTemplateDirective, NgMultiLabelTemplateDirective, NgHeaderTemplateDirective, NgFooterTemplateDirective, NgNotFoundTemplateDirective, NgTypeToSearchTemplateDirective, NgLoadingTextTemplateDirective, NgTagTemplateDirective, NgLoadingSpinnerTemplateDirective],
      providers: [{
        provide: SELECTION_MODEL_FACTORY,
        useValue: DefaultSelectionModelFactory
      }]
    }]
  }], null, null);
})();

/*
 * Public API Surface of ng-select
 */

/**
 * Generated bundle index. Do not edit.
 */



/***/ }),

/***/ 7854:
/*!***************************************************************!*\
  !*** ./node_modules/ng-apexcharts/fesm2020/ng-apexcharts.mjs ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ChartComponent: () => (/* binding */ ChartComponent),
/* harmony export */   NgApexchartsModule: () => (/* binding */ NgApexchartsModule)
/* harmony export */ });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 1699);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs */ 1141);
/* harmony import */ var apexcharts__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! apexcharts */ 3624);




const _c0 = ["chart"];
class ChartComponent {
  constructor(ngZone) {
    this.ngZone = ngZone;
    this.autoUpdateSeries = true;
  }
  ngOnChanges(changes) {
    rxjs__WEBPACK_IMPORTED_MODULE_1__.asapScheduler.schedule(() => {
      if (this.autoUpdateSeries && Object.keys(changes).filter(c => c !== "series").length === 0) {
        this.updateSeries(this.series, true);
        return;
      }
      this.createElement();
    });
  }
  ngOnDestroy() {
    if (this.chartObj) {
      this.chartObj.destroy();
    }
  }
  createElement() {
    const options = {};
    if (this.annotations) {
      options.annotations = this.annotations;
    }
    if (this.chart) {
      options.chart = this.chart;
    }
    if (this.colors) {
      options.colors = this.colors;
    }
    if (this.dataLabels) {
      options.dataLabels = this.dataLabels;
    }
    if (this.series) {
      options.series = this.series;
    }
    if (this.stroke) {
      options.stroke = this.stroke;
    }
    if (this.labels) {
      options.labels = this.labels;
    }
    if (this.legend) {
      options.legend = this.legend;
    }
    if (this.fill) {
      options.fill = this.fill;
    }
    if (this.tooltip) {
      options.tooltip = this.tooltip;
    }
    if (this.plotOptions) {
      options.plotOptions = this.plotOptions;
    }
    if (this.responsive) {
      options.responsive = this.responsive;
    }
    if (this.markers) {
      options.markers = this.markers;
    }
    if (this.noData) {
      options.noData = this.noData;
    }
    if (this.xaxis) {
      options.xaxis = this.xaxis;
    }
    if (this.yaxis) {
      options.yaxis = this.yaxis;
    }
    if (this.forecastDataPoints) {
      options.forecastDataPoints = this.forecastDataPoints;
    }
    if (this.grid) {
      options.grid = this.grid;
    }
    if (this.states) {
      options.states = this.states;
    }
    if (this.title) {
      options.title = this.title;
    }
    if (this.subtitle) {
      options.subtitle = this.subtitle;
    }
    if (this.theme) {
      options.theme = this.theme;
    }
    if (this.chartObj) {
      this.chartObj.destroy();
    }
    this.ngZone.runOutsideAngular(() => {
      this.chartObj = new apexcharts__WEBPACK_IMPORTED_MODULE_0__(this.chartElement.nativeElement, options);
    });
    this.render();
  }
  render() {
    return this.ngZone.runOutsideAngular(() => this.chartObj.render());
  }
  updateOptions(options, redrawPaths, animate, updateSyncedCharts) {
    return this.ngZone.runOutsideAngular(() => this.chartObj.updateOptions(options, redrawPaths, animate, updateSyncedCharts));
  }
  updateSeries(newSeries, animate) {
    return this.ngZone.runOutsideAngular(() => this.chartObj.updateSeries(newSeries, animate));
  }
  appendSeries(newSeries, animate) {
    this.ngZone.runOutsideAngular(() => this.chartObj.appendSeries(newSeries, animate));
  }
  appendData(newData) {
    this.ngZone.runOutsideAngular(() => this.chartObj.appendData(newData));
  }
  toggleSeries(seriesName) {
    return this.ngZone.runOutsideAngular(() => this.chartObj.toggleSeries(seriesName));
  }
  showSeries(seriesName) {
    this.ngZone.runOutsideAngular(() => this.chartObj.showSeries(seriesName));
  }
  hideSeries(seriesName) {
    this.ngZone.runOutsideAngular(() => this.chartObj.hideSeries(seriesName));
  }
  resetSeries() {
    this.ngZone.runOutsideAngular(() => this.chartObj.resetSeries());
  }
  zoomX(min, max) {
    this.ngZone.runOutsideAngular(() => this.chartObj.zoomX(min, max));
  }
  toggleDataPointSelection(seriesIndex, dataPointIndex) {
    this.ngZone.runOutsideAngular(() => this.chartObj.toggleDataPointSelection(seriesIndex, dataPointIndex));
  }
  destroy() {
    this.chartObj.destroy();
  }
  setLocale(localeName) {
    this.ngZone.runOutsideAngular(() => this.chartObj.setLocale(localeName));
  }
  paper() {
    this.ngZone.runOutsideAngular(() => this.chartObj.paper());
  }
  addXaxisAnnotation(options, pushToMemory, context) {
    this.ngZone.runOutsideAngular(() => this.chartObj.addXaxisAnnotation(options, pushToMemory, context));
  }
  addYaxisAnnotation(options, pushToMemory, context) {
    this.ngZone.runOutsideAngular(() => this.chartObj.addYaxisAnnotation(options, pushToMemory, context));
  }
  addPointAnnotation(options, pushToMemory, context) {
    this.ngZone.runOutsideAngular(() => this.chartObj.addPointAnnotation(options, pushToMemory, context));
  }
  removeAnnotation(id, options) {
    this.ngZone.runOutsideAngular(() => this.chartObj.removeAnnotation(id, options));
  }
  clearAnnotations(options) {
    this.ngZone.runOutsideAngular(() => this.chartObj.clearAnnotations(options));
  }
  dataURI(options) {
    return this.chartObj.dataURI(options);
  }
}
/** @nocollapse */ /** @nocollapse */
ChartComponent.ɵfac = function ChartComponent_Factory(t) {
  return new (t || ChartComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_2__.NgZone));
};
/** @nocollapse */ /** @nocollapse */
ChartComponent.ɵcmp = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineComponent"]({
  type: ChartComponent,
  selectors: [["apx-chart"]],
  viewQuery: function ChartComponent_Query(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵviewQuery"](_c0, 7);
    }
    if (rf & 2) {
      let _t;
      _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵloadQuery"]()) && (ctx.chartElement = _t.first);
    }
  },
  inputs: {
    chart: "chart",
    annotations: "annotations",
    colors: "colors",
    dataLabels: "dataLabels",
    series: "series",
    stroke: "stroke",
    labels: "labels",
    legend: "legend",
    markers: "markers",
    noData: "noData",
    fill: "fill",
    tooltip: "tooltip",
    plotOptions: "plotOptions",
    responsive: "responsive",
    xaxis: "xaxis",
    yaxis: "yaxis",
    forecastDataPoints: "forecastDataPoints",
    grid: "grid",
    states: "states",
    title: "title",
    subtitle: "subtitle",
    theme: "theme",
    autoUpdateSeries: "autoUpdateSeries"
  },
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵNgOnChangesFeature"]],
  decls: 2,
  vars: 0,
  consts: [["chart", ""]],
  template: function ChartComponent_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelement"](0, "div", null, 0);
    }
  },
  encapsulation: 2,
  changeDetection: 0
});
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵsetClassMetadata"](ChartComponent, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Component,
    args: [{
      selector: "apx-chart",
      template: `<div #chart></div>`,
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_2__.ChangeDetectionStrategy.OnPush
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.NgZone
    }];
  }, {
    chart: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
    }],
    annotations: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
    }],
    colors: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
    }],
    dataLabels: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
    }],
    series: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
    }],
    stroke: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
    }],
    labels: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
    }],
    legend: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
    }],
    markers: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
    }],
    noData: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
    }],
    fill: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
    }],
    tooltip: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
    }],
    plotOptions: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
    }],
    responsive: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
    }],
    xaxis: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
    }],
    yaxis: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
    }],
    forecastDataPoints: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
    }],
    grid: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
    }],
    states: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
    }],
    title: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
    }],
    subtitle: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
    }],
    theme: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
    }],
    autoUpdateSeries: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.Input
    }],
    chartElement: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.ViewChild,
      args: ["chart", {
        static: true
      }]
    }]
  });
})();
window.ApexCharts = apexcharts__WEBPACK_IMPORTED_MODULE_0__;
const declerations = [ChartComponent];
class NgApexchartsModule {}
/** @nocollapse */ /** @nocollapse */
NgApexchartsModule.ɵfac = function NgApexchartsModule_Factory(t) {
  return new (t || NgApexchartsModule)();
};
/** @nocollapse */ /** @nocollapse */
NgApexchartsModule.ɵmod = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineNgModule"]({
  type: NgApexchartsModule
});
/** @nocollapse */ /** @nocollapse */
NgApexchartsModule.ɵinj = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineInjector"]({
  imports: [[]]
});
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵsetClassMetadata"](NgApexchartsModule, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_2__.NgModule,
    args: [{
      declarations: [...declerations],
      imports: [],
      exports: [...declerations]
    }]
  }], null, null);
})();

/*
 * Public API Surface of ng-apexcharts
 */

/**
 * Generated bundle index. Do not edit.
 */



/***/ }),

/***/ 8460:
/*!*********************************************************************************!*\
  !*** ./node_modules/ngx-bootstrap/carousel/fesm2020/ngx-bootstrap-carousel.mjs ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CarouselComponent: () => (/* binding */ CarouselComponent),
/* harmony export */   CarouselConfig: () => (/* binding */ CarouselConfig),
/* harmony export */   CarouselModule: () => (/* binding */ CarouselModule),
/* harmony export */   SlideComponent: () => (/* binding */ SlideComponent)
/* harmony export */ });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ 1699);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common */ 6575);
/* harmony import */ var ngx_bootstrap_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ngx-bootstrap/utils */ 6630);





function CarouselComponent_ng_container_1_li_2_Template(rf, ctx) {
  if (rf & 1) {
    const _r8 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "li", 7);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function CarouselComponent_ng_container_1_li_2_Template_li_click_0_listener() {
      const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r8);
      const i_r6 = restoredCtx.index;
      const ctx_r7 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);
      return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵresetView"](ctx_r7.selectSlide(i_r6));
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const slide_r5 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵclassProp"]("active", slide_r5.active === true);
  }
}
function CarouselComponent_ng_container_1_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerStart"](0);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "ol", 5);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](2, CarouselComponent_ng_container_1_li_2_Template, 1, 2, "li", 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerEnd"]();
  }
  if (rf & 2) {
    const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngForOf", ctx_r0.indicatorsSlides());
  }
}
function CarouselComponent_ng_container_2_button_2_Template(rf, ctx) {
  if (rf & 1) {
    const _r13 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "button", 9);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function CarouselComponent_ng_container_2_button_2_Template_button_click_0_listener() {
      const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r13);
      const i_r11 = restoredCtx.index;
      const ctx_r12 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);
      return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵresetView"](ctx_r12.selectSlide(i_r11));
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
  }
  if (rf & 2) {
    const slide_r10 = ctx.$implicit;
    const i_r11 = ctx.index;
    const ctx_r9 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵclassProp"]("active", slide_r10.active === true);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵattribute"]("data-bs-target", "#carousel" + ctx_r9.currentId)("data-bs-slide-to", i_r11);
  }
}
function CarouselComponent_ng_container_2_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerStart"](0);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](1, "div", 5);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](2, CarouselComponent_ng_container_2_button_2_Template, 1, 4, "button", 8);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementContainerEnd"]();
  }
  if (rf & 2) {
    const ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngForOf", ctx_r1.indicatorsSlides());
  }
}
function CarouselComponent_a_5_Template(rf, ctx) {
  if (rf & 1) {
    const _r15 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "a", 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function CarouselComponent_a_5_Template_a_click_0_listener() {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r15);
      const ctx_r14 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
      return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵresetView"](ctx_r14.previousSlide());
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](1, "span", 11);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "span", 12);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](3, "Previous");
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]()();
  }
  if (rf & 2) {
    const ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵclassProp"]("disabled", ctx_r2.checkDisabledClass("prev"));
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵattribute"]("data-bs-target", "#carousel" + ctx_r2.currentId);
  }
}
function CarouselComponent_a_6_Template(rf, ctx) {
  if (rf & 1) {
    const _r17 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "a", 13);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function CarouselComponent_a_6_Template_a_click_0_listener() {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵrestoreView"](_r17);
      const ctx_r16 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
      return _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵresetView"](ctx_r16.nextSlide());
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](1, "span", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "span", 12);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](3, "Next");
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]()();
  }
  if (rf & 2) {
    const ctx_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵclassProp"]("disabled", ctx_r3.checkDisabledClass("next"));
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵattribute"]("data-bs-target", "#carousel" + ctx_r3.currentId);
  }
}
const _c0 = function (a0) {
  return {
    "display": a0
  };
};
const _c1 = ["*"];
class CarouselConfig {
  constructor() {
    /* Default interval of auto changing of slides */
    this.interval = 5000;
    /* Is loop of auto changing of slides can be paused */
    this.noPause = false;
    /* Is slides can wrap from the last to the first slide */
    this.noWrap = false;
    /* Show carousel-indicators */
    this.showIndicators = true;
    /* Slides can be paused on focus */
    this.pauseOnFocus = false;
    /* If `true` - carousel indicators indicate slides chunks works ONLY if singleSlideOffset = FALSE */
    this.indicatorsByChunk = false;
    /* If value more then 1 — carousel works in multilist mode */
    this.itemsPerSlide = 1;
    /* If `true` — carousel shifts by one element. By default carousel shifts by number
      of visible elements (itemsPerSlide field) */
    this.singleSlideOffset = false;
  }
}
CarouselConfig.ɵfac = function CarouselConfig_Factory(t) {
  return new (t || CarouselConfig)();
};
CarouselConfig.ɵprov = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({
  token: CarouselConfig,
  factory: CarouselConfig.ɵfac,
  providedIn: 'root'
});
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](CarouselConfig, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Injectable,
    args: [{
      providedIn: 'root'
    }]
  }], null, null);
})();

/**
 * Returns the index of the last element in the array where predicate is true, and -1
 * otherwise.
 * @param array The source array to search in
 * @param predicate find calls predicate once for each element of the array, in descending
 * order, until it finds one where predicate returns true. If such an element is found,
 * findLastIndex immediately returns that element index. Otherwise, findLastIndex returns -1.
 */
function findLastIndex(array, predicate) {
  let l = array.length;
  while (l--) {
    if (predicate(array[l], l, array)) {
      return l;
    }
  }
  return -1;
}
function chunkByNumber(array, size) {
  const out = [];
  const n = Math.ceil(array.length / size);
  let i = 0;
  while (i < n) {
    const chunk = array.splice(0, i === n - 1 && size < array.length ? array.length : size);
    out.push(chunk);
    i++;
  }
  return out;
}
function isNumber(value) {
  return typeof value === 'number' || Object.prototype.toString.call(value) === '[object Number]';
}

/***
 * pause (not yet supported) (?string='hover') - event group name which pauses
 * the cycling of the carousel, if hover pauses on mouseenter and resumes on
 * mouseleave keyboard (not yet supported) (?boolean=true) - if false
 * carousel will not react to keyboard events
 * note: swiping not yet supported
 */
var Direction;
(function (Direction) {
  Direction[Direction["UNKNOWN"] = 0] = "UNKNOWN";
  Direction[Direction["NEXT"] = 1] = "NEXT";
  Direction[Direction["PREV"] = 2] = "PREV";
})(Direction || (Direction = {}));
let _currentId = 1;
/**
 * Base element to create carousel
 */
class CarouselComponent {
  constructor(config, ngZone, platformId) {
    this.ngZone = ngZone;
    this.platformId = platformId;
    /* If `true` — carousel will not cycle continuously and will have hard stops (prevent looping) */
    this.noWrap = false;
    /*  If `true` — will disable pausing on carousel mouse hover */
    this.noPause = false;
    /*  If `true` — carousel-indicators are visible  */
    this.showIndicators = true;
    /*  If `true` - autoplay will be stopped on focus */
    this.pauseOnFocus = false;
    /* If `true` - carousel indicators indicate slides chunks
       works ONLY if singleSlideOffset = FALSE */
    this.indicatorsByChunk = false;
    /* If value more then 1 — carousel works in multilist mode */
    this.itemsPerSlide = 1;
    /* If `true` — carousel shifts by one element. By default carousel shifts by number
       of visible elements (itemsPerSlide field) */
    this.singleSlideOffset = false;
    /** Turn on/off animation. Animation doesn't work for multilist carousel */
    this.isAnimated = false;
    /** Will be emitted when active slide has been changed. Part of two-way-bindable [(activeSlide)] property */
    this.activeSlideChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter(false);
    /** Will be emitted when active slides has been changed in multilist mode */
    this.slideRangeChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
    /* Index to start display slides from it */
    this.startFromIndex = 0;
    this._interval = 5000;
    this._slides = new ngx_bootstrap_utils__WEBPACK_IMPORTED_MODULE_1__.LinkedList();
    this._currentVisibleSlidesIndex = 0;
    this.isPlaying = false;
    this.destroyed = false;
    this.currentId = 0;
    this.getActive = slide => slide.active;
    this.makeSlidesConsistent = slides => {
      slides.forEach((slide, index) => slide.item.order = index);
    };
    Object.assign(this, config);
    this.currentId = _currentId++;
  }
  /** Index of currently displayed slide(started for 0) */
  set activeSlide(index) {
    if (this.multilist) {
      return;
    }
    if (isNumber(index)) {
      this.customActiveSlide = index;
    }
    if (this._slides.length && index !== this._currentActiveSlide) {
      this._select(index);
    }
  }
  get activeSlide() {
    return this._currentActiveSlide || 0;
  }
  /**
   * Delay of item cycling in milliseconds. If false, carousel won't cycle
   * automatically.
   */
  get interval() {
    return this._interval;
  }
  set interval(value) {
    this._interval = value;
    this.restartTimer();
  }
  get slides() {
    return this._slides.toArray();
  }
  get isFirstSlideVisible() {
    const indexes = this.getVisibleIndexes();
    if (!indexes || indexes instanceof Array && !indexes.length) {
      return false;
    }
    return indexes.includes(0);
  }
  get isLastSlideVisible() {
    const indexes = this.getVisibleIndexes();
    if (!indexes || indexes instanceof Array && !indexes.length) {
      return false;
    }
    return indexes.includes(this._slides.length - 1);
  }
  get _bsVer() {
    return (0,ngx_bootstrap_utils__WEBPACK_IMPORTED_MODULE_1__.getBsVer)();
  }
  ngAfterViewInit() {
    setTimeout(() => {
      if (this.singleSlideOffset) {
        this.indicatorsByChunk = false;
      }
      if (this.multilist) {
        this._chunkedSlides = chunkByNumber(this.mapSlidesAndIndexes(), this.itemsPerSlide);
        this.selectInitialSlides();
      }
      if (this.customActiveSlide && !this.multilist) {
        this._select(this.customActiveSlide);
      }
    }, 0);
  }
  ngOnDestroy() {
    this.destroyed = true;
  }
  /**
   * Adds new slide. If this slide is first in collection - set it as active
   * and starts auto changing
   * @param slide
   */
  addSlide(slide) {
    this._slides.add(slide);
    if (this.multilist && this._slides.length <= this.itemsPerSlide) {
      slide.active = true;
    }
    if (!this.multilist && this.isAnimated) {
      slide.isAnimated = true;
    }
    if (!this.multilist && this._slides.length === 1) {
      this._currentActiveSlide = undefined;
      if (!this.customActiveSlide) {
        this.activeSlide = 0;
      }
      this.play();
    }
    if (this.multilist && this._slides.length > this.itemsPerSlide) {
      this.play();
    }
  }
  /**
   * Removes specified slide. If this slide is active - will roll to another
   * slide
   * @param slide
   */
  removeSlide(slide) {
    const remIndex = this._slides.indexOf(slide);
    if (this._currentActiveSlide === remIndex) {
      // removing of active slide
      let nextSlideIndex;
      if (this._slides.length > 1) {
        // if this slide last - will roll to first slide, if noWrap flag is
        // FALSE or to previous, if noWrap is TRUE in case, if this slide in
        // middle of collection, index of next slide is same to removed
        nextSlideIndex = !this.isLast(remIndex) ? remIndex : this.noWrap ? remIndex - 1 : 0;
      }
      this._slides.remove(remIndex);
      // prevents exception with changing some value after checking
      setTimeout(() => {
        this._select(nextSlideIndex);
      }, 0);
    } else {
      this._slides.remove(remIndex);
      const currentSlideIndex = this.getCurrentSlideIndex();
      setTimeout(() => {
        // after removing, need to actualize index of current active slide
        this._currentActiveSlide = currentSlideIndex;
        this.activeSlideChange.emit(this._currentActiveSlide);
      }, 0);
    }
  }
  nextSlideFromInterval(force = false) {
    this.move(Direction.NEXT, force);
  }
  /**
   * Rolling to next slide
   * @param force: {boolean} if true - will ignore noWrap flag
   */
  nextSlide(force = false) {
    if (this.isPlaying) {
      this.restartTimer();
    }
    this.move(Direction.NEXT, force);
  }
  /**
   * Rolling to previous slide
   * @param force: {boolean} if true - will ignore noWrap flag
   */
  previousSlide(force = false) {
    if (this.isPlaying) {
      this.restartTimer();
    }
    this.move(Direction.PREV, force);
  }
  getFirstVisibleIndex() {
    return this.slides.findIndex(this.getActive);
  }
  getLastVisibleIndex() {
    return findLastIndex(this.slides, this.getActive);
  }
  move(direction, force = false) {
    const firstVisibleIndex = this.getFirstVisibleIndex();
    const lastVisibleIndex = this.getLastVisibleIndex();
    if (this.noWrap) {
      if (direction === Direction.NEXT && this.isLast(lastVisibleIndex) || direction === Direction.PREV && firstVisibleIndex === 0) {
        return;
      }
    }
    if (!this.multilist) {
      this.activeSlide = this.findNextSlideIndex(direction, force) || 0;
    } else {
      this.moveMultilist(direction);
    }
  }
  /**
   * Swith slides by enter, space and arrows keys
   * @internal
   */
  keydownPress(event) {
    if (event.keyCode === 13 || event.key === 'Enter' || event.keyCode === 32 || event.key === 'Space') {
      this.nextSlide();
      event.preventDefault();
      return;
    }
    if (event.keyCode === 37 || event.key === 'LeftArrow') {
      this.previousSlide();
      return;
    }
    if (event.keyCode === 39 || event.key === 'RightArrow') {
      this.nextSlide();
      return;
    }
  }
  /**
   * Play on mouse leave
   * @internal
   */
  onMouseLeave() {
    if (!this.pauseOnFocus) {
      this.play();
    }
  }
  /**
   * Play on mouse up
   * @internal
   */
  onMouseUp() {
    if (!this.pauseOnFocus) {
      this.play();
    }
  }
  /**
   * When slides on focus autoplay is stopped(optional)
   * @internal
   */
  pauseFocusIn() {
    if (this.pauseOnFocus) {
      this.isPlaying = false;
      this.resetTimer();
    }
  }
  /**
   * When slides out of focus autoplay is started
   * @internal
   */
  pauseFocusOut() {
    this.play();
  }
  /**
   * Rolling to specified slide
   * @param index: {number} index of slide, which must be shown
   */
  selectSlide(index) {
    if (this.isPlaying) {
      this.restartTimer();
    }
    if (!this.multilist) {
      this.activeSlide = this.indicatorsByChunk ? index * this.itemsPerSlide : index;
    } else {
      this.selectSlideRange(this.indicatorsByChunk ? index * this.itemsPerSlide : index);
    }
  }
  /**
   * Starts a auto changing of slides
   */
  play() {
    if (!this.isPlaying) {
      this.isPlaying = true;
      this.restartTimer();
    }
  }
  /**
   * Stops a auto changing of slides
   */
  pause() {
    if (!this.noPause) {
      this.isPlaying = false;
      this.resetTimer();
    }
  }
  /**
   * Finds and returns index of currently displayed slide
   */
  getCurrentSlideIndex() {
    return this._slides.findIndex(this.getActive);
  }
  /**
   * Defines, whether the specified index is last in collection
   * @param index
   */
  isLast(index) {
    return index + 1 >= this._slides.length;
  }
  /**
   * Defines, whether the specified index is first in collection
   * @param index
   */
  isFirst(index) {
    return index === 0;
  }
  indicatorsSlides() {
    return this.slides.filter((slide, index) => !this.indicatorsByChunk || index % this.itemsPerSlide === 0);
  }
  selectInitialSlides() {
    const startIndex = this.startFromIndex <= this._slides.length ? this.startFromIndex : 0;
    this.hideSlides();
    if (this.singleSlideOffset) {
      this._slidesWithIndexes = this.mapSlidesAndIndexes();
      if (this._slides.length - startIndex < this.itemsPerSlide) {
        const slidesToAppend = this._slidesWithIndexes.slice(0, startIndex);
        this._slidesWithIndexes = [...this._slidesWithIndexes, ...slidesToAppend].slice(slidesToAppend.length).slice(0, this.itemsPerSlide);
      } else {
        this._slidesWithIndexes = this._slidesWithIndexes.slice(startIndex, startIndex + this.itemsPerSlide);
      }
      this._slidesWithIndexes.forEach(slide => slide.item.active = true);
      this.makeSlidesConsistent(this._slidesWithIndexes);
    } else {
      this.selectRangeByNestedIndex(startIndex);
    }
    this.slideRangeChange.emit(this.getVisibleIndexes());
  }
  /**
   * Defines next slide index, depending of direction
   * @param direction: Direction(UNKNOWN|PREV|NEXT)
   * @param force: {boolean} if TRUE - will ignore noWrap flag, else will
   *   return undefined if next slide require wrapping
   */
  findNextSlideIndex(direction, force) {
    let nextSlideIndex = 0;
    if (!force && this.isLast(this.activeSlide) && direction !== Direction.PREV && this.noWrap) {
      return;
    }
    switch (direction) {
      case Direction.NEXT:
        // if this is last slide, not force, looping is disabled
        // and need to going forward - select current slide, as a next
        if (typeof this._currentActiveSlide === 'undefined') {
          nextSlideIndex = 0;
          break;
        }
        if (!this.isLast(this._currentActiveSlide)) {
          nextSlideIndex = this._currentActiveSlide + 1;
          break;
        }
        nextSlideIndex = !force && this.noWrap ? this._currentActiveSlide : 0;
        break;
      case Direction.PREV:
        // if this is first slide, not force, looping is disabled
        // and need to going backward - select current slide, as a next
        if (typeof this._currentActiveSlide === 'undefined') {
          nextSlideIndex = 0;
          break;
        }
        if (this._currentActiveSlide > 0) {
          nextSlideIndex = this._currentActiveSlide - 1;
          break;
        }
        if (!force && this.noWrap) {
          nextSlideIndex = this._currentActiveSlide;
          break;
        }
        nextSlideIndex = this._slides.length - 1;
        break;
      default:
        throw new Error('Unknown direction');
    }
    return nextSlideIndex;
  }
  mapSlidesAndIndexes() {
    return this.slides.slice().map((slide, index) => {
      return {
        index,
        item: slide
      };
    });
  }
  selectSlideRange(index) {
    if (this.isIndexInRange(index)) {
      return;
    }
    this.hideSlides();
    if (!this.singleSlideOffset) {
      this.selectRangeByNestedIndex(index);
    } else {
      const startIndex = this.isIndexOnTheEdges(index) ? index : index - this.itemsPerSlide + 1;
      const endIndex = this.isIndexOnTheEdges(index) ? index + this.itemsPerSlide : index + 1;
      this._slidesWithIndexes = this.mapSlidesAndIndexes().slice(startIndex, endIndex);
      this.makeSlidesConsistent(this._slidesWithIndexes);
      this._slidesWithIndexes.forEach(slide => slide.item.active = true);
    }
    this.slideRangeChange.emit(this.getVisibleIndexes());
  }
  selectRangeByNestedIndex(index) {
    if (!this._chunkedSlides) {
      return;
    }
    const selectedRange = this._chunkedSlides.map((slidesList, i) => {
      return {
        index: i,
        list: slidesList
      };
    }).find(slidesList => {
      return slidesList.list.find(slide => slide.index === index) !== undefined;
    });
    if (!selectedRange) {
      return;
    }
    this._currentVisibleSlidesIndex = selectedRange.index;
    this._chunkedSlides[selectedRange.index].forEach(slide => {
      slide.item.active = true;
    });
  }
  isIndexOnTheEdges(index) {
    return index + 1 - this.itemsPerSlide <= 0 || index + this.itemsPerSlide <= this._slides.length;
  }
  isIndexInRange(index) {
    if (this.singleSlideOffset && this._slidesWithIndexes) {
      const visibleIndexes = this._slidesWithIndexes.map(slide => slide.index);
      return visibleIndexes.indexOf(index) >= 0;
    }
    return index <= this.getLastVisibleIndex() && index >= this.getFirstVisibleIndex();
  }
  hideSlides() {
    this.slides.forEach(slide => slide.active = false);
  }
  isVisibleSlideListLast() {
    if (!this._chunkedSlides) {
      return false;
    }
    return this._currentVisibleSlidesIndex === this._chunkedSlides.length - 1;
  }
  isVisibleSlideListFirst() {
    return this._currentVisibleSlidesIndex === 0;
  }
  moveSliderByOneItem(direction) {
    let firstVisibleIndex;
    let lastVisibleIndex;
    let indexToHide;
    let indexToShow;
    if (this.noWrap) {
      firstVisibleIndex = this.getFirstVisibleIndex();
      lastVisibleIndex = this.getLastVisibleIndex();
      indexToHide = direction === Direction.NEXT ? firstVisibleIndex : lastVisibleIndex;
      indexToShow = direction !== Direction.NEXT ? firstVisibleIndex - 1 : !this.isLast(lastVisibleIndex) ? lastVisibleIndex + 1 : 0;
      const slideToHide = this._slides.get(indexToHide);
      if (slideToHide) {
        slideToHide.active = false;
      }
      const slideToShow = this._slides.get(indexToShow);
      if (slideToShow) {
        slideToShow.active = true;
      }
      const slidesToReorder = this.mapSlidesAndIndexes().filter(slide => slide.item.active);
      this.makeSlidesConsistent(slidesToReorder);
      if (this.singleSlideOffset) {
        this._slidesWithIndexes = slidesToReorder;
      }
      this.slideRangeChange.emit(this.getVisibleIndexes());
      return;
    }
    if (!this._slidesWithIndexes || !this._slidesWithIndexes[0]) {
      return;
    }
    let index;
    firstVisibleIndex = this._slidesWithIndexes[0].index;
    lastVisibleIndex = this._slidesWithIndexes[this._slidesWithIndexes.length - 1].index;
    if (direction === Direction.NEXT) {
      this._slidesWithIndexes.shift();
      index = this.isLast(lastVisibleIndex) ? 0 : lastVisibleIndex + 1;
      const item = this._slides.get(index);
      if (item) {
        this._slidesWithIndexes.push({
          index,
          item
        });
      }
    } else {
      this._slidesWithIndexes.pop();
      index = this.isFirst(firstVisibleIndex) ? this._slides.length - 1 : firstVisibleIndex - 1;
      const item = this._slides.get(index);
      if (item) {
        this._slidesWithIndexes = [{
          index,
          item
        }, ...this._slidesWithIndexes];
      }
    }
    this.hideSlides();
    this._slidesWithIndexes.forEach(slide => slide.item.active = true);
    this.makeSlidesConsistent(this._slidesWithIndexes);
    this.slideRangeChange.emit(this._slidesWithIndexes.map(slide => slide.index));
  }
  moveMultilist(direction) {
    if (this.singleSlideOffset) {
      this.moveSliderByOneItem(direction);
    } else {
      this.hideSlides();
      if (this.noWrap) {
        this._currentVisibleSlidesIndex = direction === Direction.NEXT ? this._currentVisibleSlidesIndex + 1 : this._currentVisibleSlidesIndex - 1;
      } else if (direction === Direction.NEXT) {
        this._currentVisibleSlidesIndex = this.isVisibleSlideListLast() ? 0 : this._currentVisibleSlidesIndex + 1;
      } else {
        if (this.isVisibleSlideListFirst()) {
          this._currentVisibleSlidesIndex = this._chunkedSlides ? this._chunkedSlides.length - 1 : 0;
        } else {
          this._currentVisibleSlidesIndex = this._currentVisibleSlidesIndex - 1;
        }
      }
      if (this._chunkedSlides) {
        this._chunkedSlides[this._currentVisibleSlidesIndex].forEach(slide => slide.item.active = true);
      }
      this.slideRangeChange.emit(this.getVisibleIndexes());
    }
  }
  getVisibleIndexes() {
    if (!this.singleSlideOffset && this._chunkedSlides) {
      return this._chunkedSlides[this._currentVisibleSlidesIndex].map(slide => slide.index);
    }
    if (this._slidesWithIndexes) {
      return this._slidesWithIndexes.map(slide => slide.index);
    }
  }
  /**
   * Sets a slide, which specified through index, as active
   * @param index
   */
  _select(index) {
    if (isNaN(index)) {
      this.pause();
      return;
    }
    if (!this.multilist && typeof this._currentActiveSlide !== 'undefined') {
      const currentSlide = this._slides.get(this._currentActiveSlide);
      if (typeof currentSlide !== 'undefined') {
        currentSlide.active = false;
      }
    }
    const nextSlide = this._slides.get(index);
    if (typeof nextSlide !== 'undefined') {
      this._currentActiveSlide = index;
      nextSlide.active = true;
      this.activeSlide = index;
      this.activeSlideChange.emit(index);
    }
  }
  /**
   * Starts loop of auto changing of slides
   */
  restartTimer() {
    this.resetTimer();
    const interval = +this.interval;
    if (!isNaN(interval) && interval > 0 && (0,_angular_common__WEBPACK_IMPORTED_MODULE_2__.isPlatformBrowser)(this.platformId)) {
      this.currentInterval = this.ngZone.runOutsideAngular(() => {
        return window.setInterval(() => {
          const nInterval = +this.interval;
          this.ngZone.run(() => {
            if (this.isPlaying && !isNaN(this.interval) && nInterval > 0 && this.slides.length) {
              this.nextSlideFromInterval();
            } else {
              this.pause();
            }
          });
        }, interval);
      });
    }
  }
  get multilist() {
    return this.itemsPerSlide > 1;
  }
  /**
   * Stops loop of auto changing of slides
   */
  resetTimer() {
    if (this.currentInterval) {
      clearInterval(this.currentInterval);
      this.currentInterval = void 0;
    }
  }
  checkDisabledClass(buttonType) {
    if (buttonType === 'prev') {
      return this.activeSlide === 0 && this.noWrap && !this.multilist || this.isFirstSlideVisible && this.noWrap && this.multilist;
    }
    return this.isLast(this.activeSlide) && this.noWrap && !this.multilist || this.isLastSlideVisible && this.noWrap && this.multilist;
  }
}
CarouselComponent.ɵfac = function CarouselComponent_Factory(t) {
  return new (t || CarouselComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](CarouselConfig), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.NgZone), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.PLATFORM_ID));
};
CarouselComponent.ɵcmp = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
  type: CarouselComponent,
  selectors: [["carousel"]],
  inputs: {
    noWrap: "noWrap",
    noPause: "noPause",
    showIndicators: "showIndicators",
    pauseOnFocus: "pauseOnFocus",
    indicatorsByChunk: "indicatorsByChunk",
    itemsPerSlide: "itemsPerSlide",
    singleSlideOffset: "singleSlideOffset",
    isAnimated: "isAnimated",
    activeSlide: "activeSlide",
    startFromIndex: "startFromIndex",
    interval: "interval"
  },
  outputs: {
    activeSlideChange: "activeSlideChange",
    slideRangeChange: "slideRangeChange"
  },
  ngContentSelectors: _c1,
  decls: 7,
  vars: 8,
  consts: [["tabindex", "0", 1, "carousel", "slide", 3, "id", "mouseenter", "mouseleave", "mouseup", "keydown", "focusin", "focusout"], [4, "ngIf"], [1, "carousel-inner", 3, "ngStyle"], ["class", "left carousel-control carousel-control-prev", "href", "javascript:void(0);", "tabindex", "0", "role", "button", 3, "disabled", "click", 4, "ngIf"], ["class", "right carousel-control carousel-control-next", "href", "javascript:void(0);", "tabindex", "0", "role", "button", 3, "disabled", "click", 4, "ngIf"], [1, "carousel-indicators"], [3, "active", "click", 4, "ngFor", "ngForOf"], [3, "click"], ["type", "button", "aria-current", "true", 3, "active", "click", 4, "ngFor", "ngForOf"], ["type", "button", "aria-current", "true", 3, "click"], ["href", "javascript:void(0);", "tabindex", "0", "role", "button", 1, "left", "carousel-control", "carousel-control-prev", 3, "click"], ["aria-hidden", "true", 1, "icon-prev", "carousel-control-prev-icon"], [1, "sr-only", "visually-hidden"], ["href", "javascript:void(0);", "tabindex", "0", "role", "button", 1, "right", "carousel-control", "carousel-control-next", 3, "click"], ["aria-hidden", "true", 1, "icon-next", "carousel-control-next-icon"]],
  template: function CarouselComponent_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵprojectionDef"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 0);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("mouseenter", function CarouselComponent_Template_div_mouseenter_0_listener() {
        return ctx.pause();
      })("mouseleave", function CarouselComponent_Template_div_mouseleave_0_listener() {
        return ctx.onMouseLeave();
      })("mouseup", function CarouselComponent_Template_div_mouseup_0_listener() {
        return ctx.onMouseUp();
      })("keydown", function CarouselComponent_Template_div_keydown_0_listener($event) {
        return ctx.keydownPress($event);
      })("focusin", function CarouselComponent_Template_div_focusin_0_listener() {
        return ctx.pauseFocusIn();
      })("focusout", function CarouselComponent_Template_div_focusout_0_listener() {
        return ctx.pauseFocusOut();
      });
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](1, CarouselComponent_ng_container_1_Template, 3, 1, "ng-container", 1);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](2, CarouselComponent_ng_container_2_Template, 3, 1, "ng-container", 1);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "div", 2);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵprojection"](4);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](5, CarouselComponent_a_5_Template, 4, 3, "a", 3);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](6, CarouselComponent_a_6_Template, 4, 3, "a", 4);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
    }
    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("id", "carousel" + ctx.currentId);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", !ctx._bsVer.isBs5 && ctx.showIndicators && ctx.slides.length > 1);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx._bsVer.isBs5 && ctx.showIndicators && ctx.slides.length > 1);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngStyle", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpureFunction1"](6, _c0, ctx.multilist ? "flex" : "block"));
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.slides.length > 1);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngIf", ctx.slides.length > 1);
    }
  },
  dependencies: [_angular_common__WEBPACK_IMPORTED_MODULE_2__.NgForOf, _angular_common__WEBPACK_IMPORTED_MODULE_2__.NgIf, _angular_common__WEBPACK_IMPORTED_MODULE_2__.NgStyle],
  encapsulation: 2
});
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](CarouselComponent, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Component,
    args: [{
      selector: 'carousel',
      template: "<div (mouseenter)=\"pause()\"\n     (mouseleave)=\"onMouseLeave()\"\n     (mouseup)=\"onMouseUp()\"\n     (keydown)=\"keydownPress($event)\"\n     (focusin)=\"pauseFocusIn()\"\n     (focusout)=\"pauseFocusOut()\"\n     [id]=\"'carousel' + currentId\"\n     class=\"carousel slide\" tabindex=\"0\">\n  <ng-container *ngIf=\"!_bsVer.isBs5 && showIndicators && slides.length > 1\">\n    <ol class=\"carousel-indicators\">\n      <li *ngFor=\"let slide of indicatorsSlides(); let i = index;\"\n          [class.active]=\"slide.active === true\"\n          (click)=\"selectSlide(i)\">\n      </li>\n    </ol>\n  </ng-container>\n  <ng-container *ngIf=\"_bsVer.isBs5 && showIndicators && slides.length > 1\">\n    <div class=\"carousel-indicators\">\n      <button\n        *ngFor=\"let slide of indicatorsSlides(); let i = index;\"\n        [class.active]=\"slide.active === true\"\n        (click)=\"selectSlide(i)\"\n        type=\"button\"\n        [attr.data-bs-target]=\"'#carousel' + currentId\"\n        [attr.data-bs-slide-to]=\"i\" aria-current=\"true\"\n      >\n      </button>\n    </div>\n  </ng-container>\n  <div class=\"carousel-inner\" [ngStyle]=\"{'display': multilist ? 'flex' : 'block'}\">\n    <ng-content></ng-content>\n  </div>\n  <a class=\"left carousel-control carousel-control-prev\"\n     href=\"javascript:void(0);\"\n     [class.disabled]=\"checkDisabledClass('prev')\"\n     [attr.data-bs-target]=\"'#carousel' + currentId\"\n     *ngIf=\"slides.length > 1\"\n     (click)=\"previousSlide()\"\n     tabindex=\"0\" role=\"button\">\n    <span class=\"icon-prev carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n    <span class=\"sr-only visually-hidden\">Previous</span>\n  </a>\n\n  <a class=\"right carousel-control carousel-control-next\"\n     href=\"javascript:void(0);\"\n     *ngIf=\"slides.length > 1\"\n     (click)=\"nextSlide()\"\n     [class.disabled]=\"checkDisabledClass('next')\"\n     [attr.data-bs-target]=\"'#carousel' + currentId\"\n     tabindex=\"0\" role=\"button\">\n    <span class=\"icon-next carousel-control-next-icon\" aria-hidden=\"true\"></span>\n    <span class=\"sr-only visually-hidden\">Next</span>\n  </a>\n</div>\n"
    }]
  }], function () {
    return [{
      type: CarouselConfig
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.NgZone
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Inject,
        args: [_angular_core__WEBPACK_IMPORTED_MODULE_0__.PLATFORM_ID]
      }]
    }];
  }, {
    noWrap: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    noPause: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    showIndicators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    pauseOnFocus: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    indicatorsByChunk: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    itemsPerSlide: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    singleSlideOffset: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    isAnimated: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    activeSlideChange: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
    }],
    slideRangeChange: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
    }],
    activeSlide: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    startFromIndex: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    interval: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }]
  });
})();
class SlideComponent {
  constructor(carousel) {
    /** Is current slide active */
    this.active = false;
    this.itemWidth = '100%';
    this.order = 0;
    this.isAnimated = false;
    /** Wraps element by appropriate CSS classes */
    this.addClass = true;
    this.multilist = false;
    this.carousel = carousel;
  }
  /** Fires changes in container collection after adding a new slide instance */
  ngOnInit() {
    this.carousel.addSlide(this);
    this.itemWidth = `${100 / this.carousel.itemsPerSlide}%`;
    this.multilist = this.carousel?.itemsPerSlide > 1;
  }
  /** Fires changes in container collection after removing of this slide instance */
  ngOnDestroy() {
    this.carousel.removeSlide(this);
  }
}
SlideComponent.ɵfac = function SlideComponent_Factory(t) {
  return new (t || SlideComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](CarouselComponent));
};
SlideComponent.ɵcmp = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
  type: SlideComponent,
  selectors: [["slide"]],
  hostVars: 15,
  hostBindings: function SlideComponent_HostBindings(rf, ctx) {
    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵattribute"]("aria-hidden", !ctx.active);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵstyleProp"]("width", ctx.itemWidth)("order", ctx.order);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵclassProp"]("multilist-margin", ctx.multilist)("active", ctx.active)("carousel-animation", ctx.isAnimated)("item", ctx.addClass)("carousel-item", ctx.addClass);
    }
  },
  inputs: {
    active: "active"
  },
  ngContentSelectors: _c1,
  decls: 2,
  vars: 2,
  consts: [[1, "item"]],
  template: function SlideComponent_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵprojectionDef"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 0);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵprojection"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
    }
    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵclassProp"]("active", ctx.active);
    }
  },
  styles: [".carousel-animation[_nghost-%COMP%]{transition:opacity .6s ease,visibility .6s ease;float:left}.carousel-animation.active[_nghost-%COMP%]{opacity:1;visibility:visible}.carousel-animation[_nghost-%COMP%]:not(.active){display:block;position:absolute;opacity:0;visibility:hidden}.multilist-margin[_nghost-%COMP%]{margin-right:auto}.carousel-item[_nghost-%COMP%]{perspective:1000px}"]
});
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](SlideComponent, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Component,
    args: [{
      selector: 'slide',
      template: `
    <div [class.active]="active" class="item">
      <ng-content></ng-content>
    </div>
  `,
      host: {
        '[attr.aria-hidden]': '!active',
        '[class.multilist-margin]': 'multilist'
      },
      styles: [":host.carousel-animation{transition:opacity .6s ease,visibility .6s ease;float:left}:host.carousel-animation.active{opacity:1;visibility:visible}:host.carousel-animation:not(.active){display:block;position:absolute;opacity:0;visibility:hidden}:host.multilist-margin{margin-right:auto}:host.carousel-item{perspective:1000px}\n"]
    }]
  }], function () {
    return [{
      type: CarouselComponent
    }];
  }, {
    active: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.HostBinding,
      args: ['class.active']
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    itemWidth: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.HostBinding,
      args: ['style.width']
    }],
    order: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.HostBinding,
      args: ['style.order']
    }],
    isAnimated: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.HostBinding,
      args: ['class.carousel-animation']
    }],
    addClass: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.HostBinding,
      args: ['class.item']
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.HostBinding,
      args: ['class.carousel-item']
    }]
  });
})();
class CarouselModule {
  static forRoot() {
    return {
      ngModule: CarouselModule,
      providers: []
    };
  }
}
CarouselModule.ɵfac = function CarouselModule_Factory(t) {
  return new (t || CarouselModule)();
};
CarouselModule.ɵmod = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineNgModule"]({
  type: CarouselModule
});
CarouselModule.ɵinj = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjector"]({
  imports: [_angular_common__WEBPACK_IMPORTED_MODULE_2__.CommonModule]
});
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](CarouselModule, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.NgModule,
    args: [{
      imports: [_angular_common__WEBPACK_IMPORTED_MODULE_2__.CommonModule],
      declarations: [SlideComponent, CarouselComponent],
      exports: [SlideComponent, CarouselComponent]
    }]
  }], null, null);
})();

/**
 * Generated bundle index. Do not edit.
 */



/***/ }),

/***/ 196:
/*!*************************************************************************************!*\
  !*** ./node_modules/ngx-bootstrap/focus-trap/fesm2020/ngx-bootstrap-focus-trap.mjs ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   FocusTrap: () => (/* binding */ FocusTrap),
/* harmony export */   FocusTrapDirective: () => (/* binding */ FocusTrapDirective),
/* harmony export */   FocusTrapModule: () => (/* binding */ FocusTrapModule)
/* harmony export */ });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ 1699);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common */ 6575);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs/operators */ 1527);





/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
/** Injectable that ensures only the most recently enabled FocusTrap is active. */
class FocusTrapManager {
  constructor() {
    // A stack of the FocusTraps on the page. Only the FocusTrap at the
    // top of the stack is active.
    this._focusTrapStack = [];
  }
  /**
   * Disables the FocusTrap at the top of the stack, and then pushes
   * the new FocusTrap onto the stack.
   */
  register(focusTrap) {
    // Dedupe focusTraps that register multiple times.
    this._focusTrapStack = this._focusTrapStack.filter(ft => ft !== focusTrap);
    let stack = this._focusTrapStack;
    if (stack.length) {
      stack[stack.length - 1]._disable();
    }
    stack.push(focusTrap);
    focusTrap._enable();
  }
  /**
   * Removes the FocusTrap from the stack, and activates the
   * FocusTrap that is the new top of the stack.
   */
  deregister(focusTrap) {
    focusTrap._disable();
    const stack = this._focusTrapStack;
    const i = stack.indexOf(focusTrap);
    if (i !== -1) {
      stack.splice(i, 1);
      if (stack.length) {
        stack[stack.length - 1]._enable();
      }
    }
  }
}
FocusTrapManager.ɵfac = function FocusTrapManager_Factory(t) {
  return new (t || FocusTrapManager)();
};
FocusTrapManager.ɵprov = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({
  token: FocusTrapManager,
  factory: FocusTrapManager.ɵfac,
  providedIn: 'root'
});
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](FocusTrapManager, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Injectable,
    args: [{
      providedIn: 'root'
    }]
  }], null, null);
})();

/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
// Whether the current platform supports the V8 Break Iterator. The V8 check
// is necessary to detect all Blink based browsers.
let hasV8BreakIterator;
// We need a try/catch around the reference to `Intl`, because accessing it in some cases can
// cause IE to throw. These cases are tied to particular versions of Windows and can happen if
// the consumer is providing a polyfilled `Map`. See:
// https://github.com/Microsoft/ChakraCore/issues/3189
// https://github.com/angular/components/issues/15687
try {
  hasV8BreakIterator = typeof Intl !== 'undefined' && Intl.v8BreakIterator;
} catch {
  hasV8BreakIterator = false;
}
/**
 * Service to detect the current platform by comparing the userAgent strings and
 * checking browser-specific global properties.
 */
class Platform {
  constructor(_platformId) {
    this._platformId = _platformId;
    // We want to use the Angular platform check because if the Document is shimmed
    // without the navigator, the following checks will fail. This is preferred because
    // sometimes the Document may be shimmed without the user's knowledge or intention
    /** Whether the Angular application is being rendered in the browser. */
    this.isBrowser = this._platformId ? (0,_angular_common__WEBPACK_IMPORTED_MODULE_1__.isPlatformBrowser)(this._platformId) : typeof document === 'object' && !!document;
    /** Whether the current browser is Microsoft Edge. */
    this.EDGE = this.isBrowser && /(edge)/i.test(navigator.userAgent);
    /** Whether the current rendering engine is Microsoft Trident. */
    this.TRIDENT = this.isBrowser && /(msie|trident)/i.test(navigator.userAgent);
    // EdgeHTML and Trident mock Blink specific things and need to be excluded from this check.
    /** Whether the current rendering engine is Blink. */
    this.BLINK = this.isBrowser && !!(window.chrome || hasV8BreakIterator) && typeof CSS !== 'undefined' && !this.EDGE && !this.TRIDENT;
    // Webkit is part of the userAgent in EdgeHTML, Blink and Trident. Therefore we need to
    // ensure that Webkit runs standalone and is not used as another engine's base.
    /** Whether the current rendering engine is WebKit. */
    this.WEBKIT = this.isBrowser && /AppleWebKit/i.test(navigator.userAgent) && !this.BLINK && !this.EDGE && !this.TRIDENT;
    /** Whether the current platform is Apple iOS. */
    this.IOS = this.isBrowser && /iPad|iPhone|iPod/.test(navigator.userAgent) && !('MSStream' in window);
    // It's difficult to detect the plain Gecko engine, because most of the browsers identify
    // them self as Gecko-like browsers and modify the userAgent's according to that.
    // Since we only cover one explicit Firefox case, we can simply check for Firefox
    // instead of having an unstable check for Gecko.
    /** Whether the current browser is Firefox. */
    this.FIREFOX = this.isBrowser && /(firefox|minefield)/i.test(navigator.userAgent);
    /** Whether the current platform is Android. */
    // Trident on mobile adds the android platform to the userAgent to trick detections.
    this.ANDROID = this.isBrowser && /android/i.test(navigator.userAgent) && !this.TRIDENT;
    // Safari browsers will include the Safari keyword in their userAgent. Some browsers may fake
    // this and just place the Safari keyword in the userAgent. To be more safe about Safari every
    // Safari browser should also use Webkit as its layout engine.
    /** Whether the current browser is Safari. */
    this.SAFARI = this.isBrowser && /safari/i.test(navigator.userAgent) && this.WEBKIT;
  }
}
Platform.ɵfac = function Platform_Factory(t) {
  return new (t || Platform)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.PLATFORM_ID));
};
Platform.ɵprov = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({
  token: Platform,
  factory: Platform.ɵfac,
  providedIn: 'root'
});
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](Platform, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Injectable,
    args: [{
      providedIn: 'root'
    }]
  }], function () {
    return [{
      type: Object,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Inject,
        args: [_angular_core__WEBPACK_IMPORTED_MODULE_0__.PLATFORM_ID]
      }]
    }];
  }, null);
})();

/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
/**
 * Configuration for the isFocusable method.
 */
class IsFocusableConfig {
  constructor() {
    /**
     * Whether to count an element as focusable even if it is not currently visible.
     */
    this.ignoreVisibility = false;
  }
}
// The InteractivityChecker leans heavily on the ally.js accessibility utilities.
// Methods like `isTabbable` are only covering specific edge-cases for the browsers which are
// supported.
/**
 * Utility for checking the interactivity of an element, such as whether is is focusable or
 * tabbable.
 */
class InteractivityChecker {
  constructor(_platform) {
    this._platform = _platform;
  }
  /**
   * Gets whether an element is disabled.
   *
   * @param element Element to be checked.
   * @returns Whether the element is disabled.
   */
  isDisabled(element) {
    // This does not capture some cases, such as a non-form control with a disabled attribute or
    // a form control inside of a disabled form, but should capture the most common cases.
    return element.hasAttribute('disabled');
  }
  /**
   * Gets whether an element is visible for the purposes of interactivity.
   *
   * This will capture states like `display: none` and `visibility: hidden`, but not things like
   * being clipped by an `overflow: hidden` parent or being outside the viewport.
   *
   * @returns Whether the element is visible.
   */
  isVisible(element) {
    return hasGeometry(element) && getComputedStyle(element).visibility === 'visible';
  }
  /**
   * Gets whether an element can be reached via Tab key.
   * Assumes that the element has already been checked with isFocusable.
   *
   * @param element Element to be checked.
   * @returns Whether the element is tabbable.
   */
  isTabbable(element) {
    // Nothing is tabbable on the server 😎
    if (!this._platform.isBrowser) {
      return false;
    }
    const frameElement = getFrameElement(getWindow(element));
    if (frameElement) {
      // Frame elements inherit their tabindex onto all child elements.
      if (getTabIndexValue(frameElement) === -1) {
        return false;
      }
      // Browsers disable tabbing to an element inside of an invisible frame.
      if (!this.isVisible(frameElement)) {
        return false;
      }
    }
    let nodeName = element.nodeName.toLowerCase();
    let tabIndexValue = getTabIndexValue(element);
    if (element.hasAttribute('contenteditable')) {
      return tabIndexValue !== -1;
    }
    if (nodeName === 'iframe' || nodeName === 'object') {
      // The frame or object's content may be tabbable depending on the content, but it's
      // not possibly to reliably detect the content of the frames. We always consider such
      // elements as non-tabbable.
      return false;
    }
    // In iOS, the browser only considers some specific elements as tabbable.
    if (this._platform.WEBKIT && this._platform.IOS && !isPotentiallyTabbableIOS(element)) {
      return false;
    }
    if (nodeName === 'audio') {
      // Audio elements without controls enabled are never tabbable, regardless
      // of the tabindex attribute explicitly being set.
      if (!element.hasAttribute('controls')) {
        return false;
      }
      // Audio elements with controls are by default tabbable unless the
      // tabindex attribute is set to `-1` explicitly.
      return tabIndexValue !== -1;
    }
    if (nodeName === 'video') {
      // For all video elements, if the tabindex attribute is set to `-1`, the video
      // is not tabbable. Note: We cannot rely on the default `HTMLElement.tabIndex`
      // property as that one is set to `-1` in Chrome, Edge and Safari v13.1. The
      // tabindex attribute is the source of truth here.
      if (tabIndexValue === -1) {
        return false;
      }
      // If the tabindex is explicitly set, and not `-1` (as per check before), the
      // video element is always tabbable (regardless of whether it has controls or not).
      if (tabIndexValue !== null) {
        return true;
      }
      // Otherwise (when no explicit tabindex is set), a video is only tabbable if it
      // has controls enabled. Firefox is special as videos are always tabbable regardless
      // of whether there are controls or not.
      return this._platform.FIREFOX || element.hasAttribute('controls');
    }
    return element.tabIndex >= 0;
  }
  /**
   * Gets whether an element can be focused by the user.
   *
   * @param element Element to be checked.
   * @param config The config object with options to customize this method's behavior
   * @returns Whether the element is focusable.
   */
  isFocusable(element, config) {
    // Perform checks in order of left to most expensive.
    // Again, naive approach that does not capture many edge cases and browser quirks.
    return isPotentiallyFocusable(element) && !this.isDisabled(element) && (config?.ignoreVisibility || this.isVisible(element));
  }
}
InteractivityChecker.ɵfac = function InteractivityChecker_Factory(t) {
  return new (t || InteractivityChecker)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](Platform));
};
InteractivityChecker.ɵprov = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({
  token: InteractivityChecker,
  factory: InteractivityChecker.ɵfac,
  providedIn: 'root'
});
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](InteractivityChecker, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Injectable,
    args: [{
      providedIn: 'root'
    }]
  }], function () {
    return [{
      type: Platform
    }];
  }, null);
})();
/**
 * Returns the frame element from a window object. Since browsers like MS Edge throw errors if
 * the frameElement property is being accessed from a different host address, this property
 * should be accessed carefully.
 */
function getFrameElement(window) {
  try {
    return window.frameElement;
  } catch {
    return null;
  }
}
/** Checks whether the specified element has any geometry / rectangles. */
function hasGeometry(element) {
  // Use logic from jQuery to check for an invisible element.
  // See https://github.com/jquery/jquery/blob/master/src/css/hiddenVisibleSelectors.js#L12
  return !!(element.offsetWidth || element.offsetHeight || typeof element.getClientRects === 'function' && element.getClientRects().length);
}
/** Gets whether an element's  */
function isNativeFormElement(element) {
  let nodeName = element.nodeName.toLowerCase();
  return nodeName === 'input' || nodeName === 'select' || nodeName === 'button' || nodeName === 'textarea';
}
/** Gets whether an element is an `<input type="hidden">`. */
function isHiddenInput(element) {
  return isInputElement(element) && element.type == 'hidden';
}
/** Gets whether an element is an anchor that has an href attribute. */
function isAnchorWithHref(element) {
  return isAnchorElement(element) && element.hasAttribute('href');
}
/** Gets whether an element is an input element. */
function isInputElement(element) {
  return element.nodeName.toLowerCase() == 'input';
}
/** Gets whether an element is an anchor element. */
function isAnchorElement(element) {
  return element.nodeName.toLowerCase() == 'a';
}
/** Gets whether an element has a valid tabindex. */
function hasValidTabIndex(element) {
  if (!element.hasAttribute('tabindex') || element.tabIndex === undefined) {
    return false;
  }
  let tabIndex = element.getAttribute('tabindex');
  // IE11 parses tabindex="" as the value "-32768"
  if (tabIndex == '-32768') {
    return false;
  }
  return !!(tabIndex && !isNaN(parseInt(tabIndex, 10)));
}
/**
 * Returns the parsed tabindex from the element attributes instead of returning the
 * evaluated tabindex from the browsers defaults.
 */
function getTabIndexValue(element) {
  if (!hasValidTabIndex(element)) {
    return null;
  }
  // See browser issue in Gecko https://bugzilla.mozilla.org/show_bug.cgi?id=1128054
  const tabIndex = parseInt(element.getAttribute('tabindex') || '', 10);
  return isNaN(tabIndex) ? -1 : tabIndex;
}
/** Checks whether the specified element is potentially tabbable on iOS */
function isPotentiallyTabbableIOS(element) {
  let nodeName = element.nodeName.toLowerCase();
  let inputType = nodeName === 'input' && element.type;
  return inputType === 'text' || inputType === 'password' || nodeName === 'select' || nodeName === 'textarea';
}
/**
 * Gets whether an element is potentially focusable without taking current visible/disabled state
 * into account.
 */
function isPotentiallyFocusable(element) {
  // Inputs are potentially focusable *unless* they're type="hidden".
  if (isHiddenInput(element)) {
    return false;
  }
  return isNativeFormElement(element) || isAnchorWithHref(element) || element.hasAttribute('contenteditable') || hasValidTabIndex(element);
}
/** Gets the parent window of a DOM node with regards of being inside of an iframe. */
function getWindow(node) {
  // ownerDocument is null if `node` itself *is* a document.
  return node.ownerDocument && node.ownerDocument.defaultView || window;
}

/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
/** Coerces a data-bound value (typically a string) to a boolean. */
function coerceBooleanProperty(value) {
  return value != null && `${value}` !== 'false';
}

/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
/**
 * Class that allows for trapping focus within a DOM element.
 *
 * This class currently uses a relatively simple approach to focus trapping.
 * It assumes that the tab order is the same as DOM order, which is not necessarily true.
 * Things like `tabIndex > 0`, flex `order`, and shadow roots can cause the two to misalign.
 *
 * @deprecated Use `ConfigurableFocusTrap` instead.
 * @breaking-change for 11.0.0 Remove this class.
 */
class FocusTrap {
  constructor(_element, _checker, _ngZone, _document, deferAnchors = false) {
    this._element = _element;
    this._checker = _checker;
    this._ngZone = _ngZone;
    this._document = _document;
    this._hasAttached = false;
    // Event listeners for the anchors. Need to be regular functions so that we can unbind them later.
    this.startAnchorListener = () => this.focusLastTabbableElement();
    this.endAnchorListener = () => this.focusFirstTabbableElement();
    this._enabled = true;
    if (!deferAnchors) {
      this.attachAnchors();
    }
  }
  /** Whether the focus trap is active. */
  get enabled() {
    return this._enabled;
  }
  set enabled(value) {
    this._enabled = value;
    if (this._startAnchor && this._endAnchor) {
      this._toggleAnchorTabIndex(value, this._startAnchor);
      this._toggleAnchorTabIndex(value, this._endAnchor);
    }
  }
  /** Destroys the focus trap by cleaning up the anchors. */
  destroy() {
    const startAnchor = this._startAnchor;
    const endAnchor = this._endAnchor;
    if (startAnchor) {
      startAnchor.removeEventListener('focus', this.startAnchorListener);
      if (startAnchor.parentNode) {
        startAnchor.parentNode.removeChild(startAnchor);
      }
    }
    if (endAnchor) {
      endAnchor.removeEventListener('focus', this.endAnchorListener);
      if (endAnchor.parentNode) {
        endAnchor.parentNode.removeChild(endAnchor);
      }
    }
    this._startAnchor = this._endAnchor = null;
    this._hasAttached = false;
  }
  /**
   * Inserts the anchors into the DOM. This is usually done automatically
   * in the constructor, but can be deferred for cases like directives with `*ngIf`.
   * @returns Whether the focus trap managed to attach successfuly. This may not be the case
   * if the target element isn't currently in the DOM.
   */
  attachAnchors() {
    // If we're not on the browser, there can be no focus to trap.
    if (this._hasAttached) {
      return true;
    }
    this._ngZone.runOutsideAngular(() => {
      if (!this._startAnchor) {
        this._startAnchor = this._createAnchor();
        this._startAnchor.addEventListener('focus', this.startAnchorListener);
      }
      if (!this._endAnchor) {
        this._endAnchor = this._createAnchor();
        this._endAnchor.addEventListener('focus', this.endAnchorListener);
      }
    });
    if (this._element.parentNode) {
      this._element.parentNode.insertBefore(this._startAnchor, this._element);
      this._element.parentNode.insertBefore(this._endAnchor, this._element.nextSibling);
      this._hasAttached = true;
    }
    return this._hasAttached;
  }
  /**
   * Waits for the zone to stabilize, then either focuses the first element that the
   * user specified, or the first tabbable element.
   * @returns Returns a promise that resolves with a boolean, depending
   * on whether focus was moved successfully.
   */
  focusInitialElementWhenReady() {
    return new Promise(resolve => {
      this._executeOnStable(() => resolve(this.focusInitialElement()));
    });
  }
  /**
   * Waits for the zone to stabilize, then focuses
   * the first tabbable element within the focus trap region.
   * @returns Returns a promise that resolves with a boolean, depending
   * on whether focus was moved successfully.
   */
  focusFirstTabbableElementWhenReady() {
    return new Promise(resolve => {
      this._executeOnStable(() => resolve(this.focusFirstTabbableElement()));
    });
  }
  /**
   * Waits for the zone to stabilize, then focuses
   * the last tabbable element within the focus trap region.
   * @returns Returns a promise that resolves with a boolean, depending
   * on whether focus was moved successfully.
   */
  focusLastTabbableElementWhenReady() {
    return new Promise(resolve => {
      this._executeOnStable(() => resolve(this.focusLastTabbableElement()));
    });
  }
  /**
   * Get the specified boundary element of the trapped region.
   * @param bound The boundary to get (start or end of trapped region).
   * @returns The boundary element.
   */
  _getRegionBoundary(bound) {
    // Contains the deprecated version of selector, for temporary backwards comparability.
    let markers = this._element.querySelectorAll(`[cdk-focus-region-${bound}], ` + `[cdkFocusRegion${bound}], ` + `[cdk-focus-${bound}]`);
    for (let i = 0; i < markers.length; i++) {
      // @breaking-change 8.0.0
      if (markers[i].hasAttribute(`cdk-focus-${bound}`)) {
        console.warn(`Found use of deprecated attribute 'cdk-focus-${bound}', ` + `use 'cdkFocusRegion${bound}' instead. The deprecated ` + `attribute will be removed in 8.0.0.`, markers[i]);
      } else if (markers[i].hasAttribute(`cdk-focus-region-${bound}`)) {
        console.warn(`Found use of deprecated attribute 'cdk-focus-region-${bound}', ` + `use 'cdkFocusRegion${bound}' instead. The deprecated attribute ` + `will be removed in 8.0.0.`, markers[i]);
      }
    }
    if (bound == 'start') {
      return markers.length ? markers[0] : this._getFirstTabbableElement(this._element);
    }
    return markers.length ? markers[markers.length - 1] : this._getLastTabbableElement(this._element);
  }
  /**
   * Focuses the element that should be focused when the focus trap is initialized.
   * @returns Whether focus was moved successfully.
   */
  focusInitialElement() {
    // Contains the deprecated version of selector, for temporary backwards comparability.
    const redirectToElement = this._element.querySelector(`[cdk-focus-initial], ` + `[cdkFocusInitial]`);
    if (redirectToElement) {
      // @breaking-change 8.0.0
      if (redirectToElement.hasAttribute(`cdk-focus-initial`)) {
        console.warn(`Found use of deprecated attribute 'cdk-focus-initial', ` + `use 'cdkFocusInitial' instead. The deprecated attribute ` + `will be removed in 8.0.0`, redirectToElement);
      }
      // Warn the consumer if the element they've pointed to
      // isn't focusable, when not in production mode.
      if (!this._checker.isFocusable(redirectToElement)) {
        const focusableChild = this._getFirstTabbableElement(redirectToElement);
        focusableChild?.focus();
        return !!focusableChild;
      }
      redirectToElement.focus();
      return true;
    }
    return this.focusFirstTabbableElement();
  }
  /**
   * Focuses the first tabbable element within the focus trap region.
   * @returns Whether focus was moved successfully.
   */
  focusFirstTabbableElement() {
    const redirectToElement = this._getRegionBoundary('start');
    if (redirectToElement) {
      redirectToElement.focus();
    }
    return !!redirectToElement;
  }
  /**
   * Focuses the last tabbable element within the focus trap region.
   * @returns Whether focus was moved successfully.
   */
  focusLastTabbableElement() {
    const redirectToElement = this._getRegionBoundary('end');
    if (redirectToElement) {
      redirectToElement.focus();
    }
    return !!redirectToElement;
  }
  /**
   * Checks whether the focus trap has successfully been attached.
   */
  hasAttached() {
    return this._hasAttached;
  }
  /** Get the first tabbable element from a DOM subtree (inclusive). */
  _getFirstTabbableElement(root) {
    if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {
      return root;
    }
    // Iterate in DOM order. Note that IE doesn't have `children` for SVG so we fall
    // back to `childNodes` which includes text nodes, comments etc.
    let children = root.children || root.childNodes;
    for (let i = 0; i < children.length; i++) {
      let tabbableChild = children[i].nodeType === this._document.ELEMENT_NODE ? this._getFirstTabbableElement(children[i]) : null;
      if (tabbableChild) {
        return tabbableChild;
      }
    }
    return null;
  }
  /** Get the last tabbable element from a DOM subtree (inclusive). */
  _getLastTabbableElement(root) {
    if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {
      return root;
    }
    // Iterate in reverse DOM order.
    let children = root.children || root.childNodes;
    for (let i = children.length - 1; i >= 0; i--) {
      let tabbableChild = children[i].nodeType === this._document.ELEMENT_NODE ? this._getLastTabbableElement(children[i]) : null;
      if (tabbableChild) {
        return tabbableChild;
      }
    }
    return null;
  }
  /** Creates an anchor element. */
  _createAnchor() {
    const anchor = this._document.createElement('div');
    this._toggleAnchorTabIndex(this._enabled, anchor);
    anchor.classList.add('cdk-visually-hidden');
    anchor.classList.add('cdk-focus-trap-anchor');
    anchor.setAttribute('aria-hidden', 'true');
    return anchor;
  }
  /**
   * Toggles the `tabindex` of an anchor, based on the enabled state of the focus trap.
   * @param isEnabled Whether the focus trap is enabled.
   * @param anchor Anchor on which to toggle the tabindex.
   */
  _toggleAnchorTabIndex(isEnabled, anchor) {
    // Remove the tabindex completely, rather than setting it to -1, because if the
    // element has a tabindex, the user might still hit it when navigating with the arrow keys.
    isEnabled ? anchor.setAttribute('tabindex', '0') : anchor.removeAttribute('tabindex');
  }
  /**
   * Toggles the`tabindex` of both anchors to either trap Tab focus or allow it to escape.
   * @param enabled: Whether the anchors should trap Tab.
   */
  toggleAnchors(enabled) {
    if (this._startAnchor && this._endAnchor) {
      this._toggleAnchorTabIndex(enabled, this._startAnchor);
      this._toggleAnchorTabIndex(enabled, this._endAnchor);
    }
  }
  /** Executes a function when the zone is stable. */
  _executeOnStable(fn) {
    if (this._ngZone.isStable) {
      fn();
    } else {
      this._ngZone.onStable.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_2__.take)(1)).subscribe(fn);
    }
  }
}
/**
 * Factory that allows easy instantiation of focus traps.
 * @deprecated Use `ConfigurableFocusTrapFactory` instead.
 * @breaking-change for 11.0.0 Remove this class.
 */
class FocusTrapFactory {
  constructor(_checker, _ngZone, _document) {
    this._checker = _checker;
    this._ngZone = _ngZone;
    this._document = _document;
  }
  /**
   * Creates a focus-trapped region around the given element.
   * @param element The element around which focus will be trapped.
   * @param deferCaptureElements Defers the creation of focus-capturing elements to be done
   *     manually by the user.
   * @returns The created focus trap instance.
   */
  create(element, deferCaptureElements = false) {
    return new FocusTrap(element, this._checker, this._ngZone, this._document, deferCaptureElements);
  }
}
FocusTrapFactory.ɵfac = function FocusTrapFactory_Factory(t) {
  return new (t || FocusTrapFactory)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](InteractivityChecker), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.NgZone), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_angular_common__WEBPACK_IMPORTED_MODULE_1__.DOCUMENT));
};
FocusTrapFactory.ɵprov = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({
  token: FocusTrapFactory,
  factory: FocusTrapFactory.ɵfac,
  providedIn: 'root'
});
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](FocusTrapFactory, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Injectable,
    args: [{
      providedIn: 'root'
    }]
  }], function () {
    return [{
      type: InteractivityChecker
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.NgZone
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Inject,
        args: [_angular_common__WEBPACK_IMPORTED_MODULE_1__.DOCUMENT]
      }]
    }];
  }, null);
})();
/** Directive for trapping focus within a region. */
class FocusTrapDirective {
  constructor(_elementRef, _focusTrapFactory, _document) {
    this._elementRef = _elementRef;
    this._focusTrapFactory = _focusTrapFactory;
    /** Previously focused element to restore focus to upon destroy when using autoCapture. */
    this._previouslyFocusedElement = null;
    this._autoCapture = false;
    this._document = _document;
    this.focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement, true);
  }
  /** Whether the focus trap is active. */
  get enabled() {
    return this.focusTrap.enabled;
  }
  set enabled(value) {
    this.focusTrap.enabled = coerceBooleanProperty(value);
  }
  /**
   * Whether the directive should automatically move focus into the trapped region upon
   * initialization and return focus to the previous activeElement upon destruction.
   */
  get autoCapture() {
    return this._autoCapture;
  }
  set autoCapture(value) {
    this._autoCapture = coerceBooleanProperty(value);
  }
  ngOnDestroy() {
    this.focusTrap.destroy();
    // If we stored a previously focused element when using autoCapture, return focus to that
    // element now that the trapped region is being destroyed.
    if (this._previouslyFocusedElement) {
      this._previouslyFocusedElement.focus();
      this._previouslyFocusedElement = null;
    }
  }
  ngAfterContentInit() {
    this.focusTrap.attachAnchors();
    if (this.autoCapture) {
      this._captureFocus();
    }
  }
  ngDoCheck() {
    if (!this.focusTrap.hasAttached()) {
      this.focusTrap.attachAnchors();
    }
  }
  ngOnChanges(changes) {
    const autoCaptureChange = changes['autoCapture'];
    if (autoCaptureChange && !autoCaptureChange.firstChange && this.autoCapture && this.focusTrap.hasAttached()) {
      this._captureFocus();
    }
  }
  _captureFocus() {
    this._previouslyFocusedElement = this._document.activeElement;
    this.focusTrap.focusInitialElementWhenReady();
  }
}
FocusTrapDirective.ɵfac = function FocusTrapDirective_Factory(t) {
  return new (t || FocusTrapDirective)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](FocusTrapFactory), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_common__WEBPACK_IMPORTED_MODULE_1__.DOCUMENT));
};
FocusTrapDirective.ɵdir = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineDirective"]({
  type: FocusTrapDirective,
  selectors: [["", "focusTrap", ""]],
  inputs: {
    enabled: ["cdkTrapFocus", "enabled"],
    autoCapture: ["cdkTrapFocusAutoCapture", "autoCapture"]
  },
  exportAs: ["focusTrap"],
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵNgOnChangesFeature"]]
});
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](FocusTrapDirective, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Directive,
    args: [{
      selector: '[focusTrap]',
      exportAs: 'focusTrap'
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef
    }, {
      type: FocusTrapFactory
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Inject,
        args: [_angular_common__WEBPACK_IMPORTED_MODULE_1__.DOCUMENT]
      }]
    }];
  }, {
    enabled: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input,
      args: ['cdkTrapFocus']
    }],
    autoCapture: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input,
      args: ['cdkTrapFocusAutoCapture']
    }]
  });
})();
class FocusTrapModule {
  static forRoot() {
    return {
      ngModule: FocusTrapModule,
      providers: [FocusTrapManager, Platform, InteractivityChecker]
    };
  }
}
FocusTrapModule.ɵfac = function FocusTrapModule_Factory(t) {
  return new (t || FocusTrapModule)();
};
FocusTrapModule.ɵmod = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineNgModule"]({
  type: FocusTrapModule
});
FocusTrapModule.ɵinj = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjector"]({
  imports: [_angular_common__WEBPACK_IMPORTED_MODULE_1__.CommonModule]
});
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](FocusTrapModule, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.NgModule,
    args: [{
      imports: [_angular_common__WEBPACK_IMPORTED_MODULE_1__.CommonModule],
      declarations: [FocusTrapDirective],
      exports: [FocusTrapDirective]
    }]
  }], null, null);
})();

/**
 * Generated bundle index. Do not edit.
 */



/***/ }),

/***/ 7269:
/*!***************************************************************************!*\
  !*** ./node_modules/ngx-bootstrap/modal/fesm2020/ngx-bootstrap-modal.mjs ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   BsModalRef: () => (/* binding */ BsModalRef),
/* harmony export */   BsModalService: () => (/* binding */ BsModalService),
/* harmony export */   MODAL_CONFIG_DEFAULT_OVERRIDE: () => (/* binding */ MODAL_CONFIG_DEFAULT_OVERRIDE),
/* harmony export */   ModalBackdropComponent: () => (/* binding */ ModalBackdropComponent),
/* harmony export */   ModalBackdropOptions: () => (/* binding */ ModalBackdropOptions),
/* harmony export */   ModalContainerComponent: () => (/* binding */ ModalContainerComponent),
/* harmony export */   ModalDirective: () => (/* binding */ ModalDirective),
/* harmony export */   ModalModule: () => (/* binding */ ModalModule),
/* harmony export */   ModalOptions: () => (/* binding */ ModalOptions)
/* harmony export */ });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ 1699);
/* harmony import */ var ngx_bootstrap_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ngx-bootstrap/utils */ 6630);
/* harmony import */ var ngx_bootstrap_focus_trap__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ngx-bootstrap/focus-trap */ 196);
/* harmony import */ var ngx_bootstrap_component_loader__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ngx-bootstrap/component-loader */ 6111);
/* harmony import */ var ngx_bootstrap_positioning__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ngx-bootstrap/positioning */ 2827);









// eslint-disable-next-line @typescript-eslint/no-explicit-any
const _c0 = ["*"];
class BsModalRef {
  constructor() {
    /**
     * Hides the modal
     */
    this.hide = () => void 0;
    /**
     * Sets new class to modal window
     */
    this.setClass = () => void 0;
  }
}
BsModalRef.ɵfac = function BsModalRef_Factory(t) {
  return new (t || BsModalRef)();
};
BsModalRef.ɵprov = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({
  token: BsModalRef,
  factory: BsModalRef.ɵfac,
  providedIn: 'platform'
});
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](BsModalRef, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Injectable,
    args: [{
      providedIn: 'platform'
    }]
  }], null, null);
})();
class ModalBackdropOptions {
  constructor(options) {
    this.animate = true;
    Object.assign(this, options);
  }
}
class ModalOptions {}
ModalOptions.ɵfac = function ModalOptions_Factory(t) {
  return new (t || ModalOptions)();
};
ModalOptions.ɵprov = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({
  token: ModalOptions,
  factory: ModalOptions.ɵfac,
  providedIn: 'platform'
});
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](ModalOptions, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Injectable,
    args: [{
      providedIn: 'platform'
    }]
  }], null, null);
})();
const modalConfigDefaults = {
  backdrop: true,
  keyboard: true,
  focus: true,
  show: false,
  ignoreBackdropClick: false,
  class: '',
  animated: true,
  initialState: {},
  closeInterceptor: void 0
};
const MODAL_CONFIG_DEFAULT_OVERRIDE = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.InjectionToken('override-default-config');
const CLASS_NAME = {
  SCROLLBAR_MEASURER: 'modal-scrollbar-measure',
  BACKDROP: 'modal-backdrop',
  OPEN: 'modal-open',
  FADE: 'fade',
  IN: 'in',
  SHOW: 'show'
};
const SELECTOR = {
  DIALOG: '.modal-dialog',
  DATA_TOGGLE: '[data-toggle="modal"]',
  DATA_DISMISS: '[data-dismiss="modal"]',
  FIXED_CONTENT: '.navbar-fixed-top, .navbar-fixed-bottom, .is-fixed'
};
const TRANSITION_DURATIONS = {
  MODAL: 300,
  BACKDROP: 150
};
const DISMISS_REASONS = {
  BACKRDOP: 'backdrop-click',
  ESC: 'esc',
  BACK: 'browser-back-navigation-clicked'
};
class ModalContainerComponent {
  constructor(options, _element, _renderer) {
    this._element = _element;
    this._renderer = _renderer;
    this.isShown = false;
    this.isAnimated = false;
    this._focusEl = null;
    this.isModalHiding = false;
    this.clickStartedInContent = false;
    this.config = Object.assign({}, options);
  }
  ngOnInit() {
    this._focusEl = ngx_bootstrap_utils__WEBPACK_IMPORTED_MODULE_1__.document.activeElement;
    if (this.isAnimated) {
      this._renderer.addClass(this._element.nativeElement, CLASS_NAME.FADE);
    }
    this._renderer.setStyle(this._element.nativeElement, 'display', 'block');
    setTimeout(() => {
      this.isShown = true;
      this._renderer.addClass(this._element.nativeElement, CLASS_NAME.SHOW);
    }, this.isAnimated ? TRANSITION_DURATIONS.BACKDROP : 0);
    if (ngx_bootstrap_utils__WEBPACK_IMPORTED_MODULE_1__.document && ngx_bootstrap_utils__WEBPACK_IMPORTED_MODULE_1__.document.body) {
      if (this.bsModalService && this.bsModalService.getModalsCount() === 1) {
        this.bsModalService.checkScrollbar();
        this.bsModalService.setScrollbar();
      }
      this._renderer.addClass(ngx_bootstrap_utils__WEBPACK_IMPORTED_MODULE_1__.document.body, CLASS_NAME.OPEN);
      this._renderer.setStyle(ngx_bootstrap_utils__WEBPACK_IMPORTED_MODULE_1__.document.body, 'overflow-y', 'hidden');
    }
    if (this._element.nativeElement) {
      this._element.nativeElement.focus();
    }
  }
  onClickStarted(event) {
    this.clickStartedInContent = event.target !== this._element.nativeElement;
  }
  onClickStop(event) {
    const clickedInBackdrop = event.target === this._element.nativeElement && !this.clickStartedInContent;
    if (this.config.ignoreBackdropClick || this.config.backdrop === 'static' || !clickedInBackdrop) {
      this.clickStartedInContent = false;
      return;
    }
    this.bsModalService?.setDismissReason(DISMISS_REASONS.BACKRDOP);
    this.hide();
  }
  onPopState() {
    this.bsModalService?.setDismissReason(DISMISS_REASONS.BACK);
    this.hide();
  }
  onEsc(event) {
    if (!this.isShown) {
      return;
    }
    if (event.keyCode === 27 || event.key === 'Escape') {
      event.preventDefault();
    }
    if (this.config.keyboard && this.level === this.bsModalService?.getModalsCount()) {
      this.bsModalService?.setDismissReason(DISMISS_REASONS.ESC);
      this.hide();
    }
  }
  ngOnDestroy() {
    if (this.isShown) {
      this._hide();
    }
  }
  hide() {
    if (this.isModalHiding) {
      return;
    }
    if (this.config.closeInterceptor) {
      this.config.closeInterceptor().then(() => this._hide(), () => undefined);
      return;
    }
    this._hide();
  }
  _hide() {
    this.isModalHiding = true;
    this._renderer.removeClass(this._element.nativeElement, CLASS_NAME.SHOW);
    setTimeout(() => {
      this.isShown = false;
      if (ngx_bootstrap_utils__WEBPACK_IMPORTED_MODULE_1__.document && ngx_bootstrap_utils__WEBPACK_IMPORTED_MODULE_1__.document.body && this.bsModalService?.getModalsCount() === 1) {
        this._renderer.removeClass(ngx_bootstrap_utils__WEBPACK_IMPORTED_MODULE_1__.document.body, CLASS_NAME.OPEN);
        this._renderer.setStyle(ngx_bootstrap_utils__WEBPACK_IMPORTED_MODULE_1__.document.body, 'overflow-y', '');
      }
      this.bsModalService?.hide(this.config.id);
      this.isModalHiding = false;
      if (this._focusEl) {
        this._focusEl.focus();
      }
    }, this.isAnimated ? TRANSITION_DURATIONS.MODAL : 0);
  }
}
ModalContainerComponent.ɵfac = function ModalContainerComponent_Factory(t) {
  return new (t || ModalContainerComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](ModalOptions), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.Renderer2));
};
ModalContainerComponent.ɵcmp = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
  type: ModalContainerComponent,
  selectors: [["modal-container"]],
  hostAttrs: ["role", "dialog", "tabindex", "-1", 1, "modal"],
  hostVars: 3,
  hostBindings: function ModalContainerComponent_HostBindings(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("mousedown", function ModalContainerComponent_mousedown_HostBindingHandler($event) {
        return ctx.onClickStarted($event);
      })("click", function ModalContainerComponent_click_HostBindingHandler($event) {
        return ctx.onClickStop($event);
      })("popstate", function ModalContainerComponent_popstate_HostBindingHandler() {
        return ctx.onPopState();
      }, false, _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵresolveWindow"])("keydown.esc", function ModalContainerComponent_keydown_esc_HostBindingHandler($event) {
        return ctx.onEsc($event);
      }, false, _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵresolveWindow"]);
    }
    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵattribute"]("aria-modal", true)("aria-labelledby", ctx.config.ariaLabelledBy)("aria-describedby", ctx.config.ariaDescribedby);
    }
  },
  ngContentSelectors: _c0,
  decls: 3,
  vars: 2,
  consts: [["role", "document", "focusTrap", ""], [1, "modal-content"]],
  template: function ModalContainerComponent_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵprojectionDef"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div", 0)(1, "div", 1);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵprojection"](2);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]()();
    }
    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵclassMap"]("modal-dialog" + (ctx.config.class ? " " + ctx.config.class : ""));
    }
  },
  dependencies: [ngx_bootstrap_focus_trap__WEBPACK_IMPORTED_MODULE_2__.FocusTrapDirective],
  encapsulation: 2
});
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](ModalContainerComponent, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Component,
    args: [{
      selector: 'modal-container',
      template: `
    <div [class]="'modal-dialog' + (config.class ? ' ' + config.class : '')"
         role="document"
         focusTrap>
      <div class="modal-content">
        <ng-content></ng-content>
      </div>
    </div>
  `,
      // eslint-disable-next-line @angular-eslint/no-host-metadata-property
      host: {
        class: 'modal',
        role: 'dialog',
        tabindex: '-1',
        '[attr.aria-modal]': 'true',
        '[attr.aria-labelledby]': 'config.ariaLabelledBy',
        '[attr.aria-describedby]': 'config.ariaDescribedby'
      }
    }]
  }], function () {
    return [{
      type: ModalOptions
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Renderer2
    }];
  }, {
    onClickStarted: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.HostListener,
      args: ['mousedown', ['$event']]
    }],
    onClickStop: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.HostListener,
      args: ['click', ['$event']]
    }],
    onPopState: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.HostListener,
      args: ['window:popstate']
    }],
    onEsc: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.HostListener,
      args: ['window:keydown.esc', ['$event']]
    }]
  });
})();

/** This component will be added as background layout for modals if enabled */
class ModalBackdropComponent {
  constructor(element, renderer) {
    this._isAnimated = false;
    this._isShown = false;
    this.element = element;
    this.renderer = renderer;
  }
  get isAnimated() {
    return this._isAnimated;
  }
  set isAnimated(value) {
    this._isAnimated = value;
  }
  get isShown() {
    return this._isShown;
  }
  set isShown(value) {
    this._isShown = value;
    if (value) {
      this.renderer.addClass(this.element.nativeElement, `${CLASS_NAME.SHOW}`);
    } else {
      this.renderer.removeClass(this.element.nativeElement, `${CLASS_NAME.SHOW}`);
    }
  }
  ngOnInit() {
    if (this.isAnimated) {
      this.renderer.addClass(this.element.nativeElement, `${CLASS_NAME.FADE}`);
      ngx_bootstrap_utils__WEBPACK_IMPORTED_MODULE_1__.Utils.reflow(this.element.nativeElement);
    }
    this.isShown = true;
  }
}
ModalBackdropComponent.ɵfac = function ModalBackdropComponent_Factory(t) {
  return new (t || ModalBackdropComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.Renderer2));
};
ModalBackdropComponent.ɵcmp = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
  type: ModalBackdropComponent,
  selectors: [["bs-modal-backdrop"]],
  hostAttrs: [1, "modal-backdrop"],
  decls: 0,
  vars: 0,
  template: function ModalBackdropComponent_Template(rf, ctx) {},
  encapsulation: 2
});
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](ModalBackdropComponent, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Component,
    args: [{
      selector: 'bs-modal-backdrop',
      template: ' ',
      // eslint-disable-next-line @angular-eslint/no-host-metadata-property
      host: {
        class: CLASS_NAME.BACKDROP
      }
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Renderer2
    }];
  }, null);
})();

// todo: should we support enforce focus in?
const TRANSITION_DURATION = 300;
const BACKDROP_TRANSITION_DURATION = 150;
/** Mark any code with directive to show it's content in modal */
class ModalDirective {
  constructor(_element, _viewContainerRef, _renderer, clf, modalDefaultOption) {
    this._element = _element;
    this._renderer = _renderer;
    /** This event fires immediately when the `show` instance method is called. */
    this.onShow = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
    /** This event is fired when the modal has been made visible to the user
     * (will wait for CSS transitions to complete)
     */
    this.onShown = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
    /** This event is fired immediately when
     * the hide instance method has been called.
     */
    this.onHide = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
    /** This event is fired when the modal has finished being
     * hidden from the user (will wait for CSS transitions to complete).
     */
    this.onHidden = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
    this._isShown = false;
    this.isBodyOverflowing = false;
    this.originalBodyPadding = 0;
    this.scrollbarWidth = 0;
    this.timerHideModal = 0;
    this.timerRmBackDrop = 0;
    this.isNested = false;
    this.clickStartedInContent = false;
    this._focusEl = null;
    this._backdrop = clf.createLoader(_element, _viewContainerRef, _renderer);
    this._config = modalDefaultOption || modalConfigDefaults;
  }
  /** allows to set modal configuration via element property */
  set config(conf) {
    this._config = this.getConfig(conf);
  }
  get config() {
    return this._config;
  }
  get isShown() {
    return this._isShown;
  }
  onClickStarted(event) {
    this.clickStartedInContent = event.target !== this._element.nativeElement;
  }
  onClickStop(event) {
    const clickedInBackdrop = event.target === this._element.nativeElement && !this.clickStartedInContent;
    if (this.config.ignoreBackdropClick || this.config.backdrop === 'static' || !clickedInBackdrop) {
      this.clickStartedInContent = false;
      return;
    }
    this.dismissReason = DISMISS_REASONS.BACKRDOP;
    this.hide(event);
  }
  // todo: consider preventing default and stopping propagation
  onEsc(event) {
    if (!this._isShown) {
      return;
    }
    if (event.keyCode === 27 || event.key === 'Escape') {
      event.preventDefault();
    }
    if (this.config.keyboard) {
      this.dismissReason = DISMISS_REASONS.ESC;
      this.hide();
    }
  }
  ngOnDestroy() {
    if (this._isShown) {
      this._isShown = false;
      this.hideModal();
      this._backdrop.dispose();
    }
  }
  ngOnInit() {
    this._config = this._config || this.getConfig();
    setTimeout(() => {
      if (this._config.show) {
        this.show();
      }
    }, 0);
  }
  /* Public methods */
  /** Allows to manually toggle modal visibility */
  toggle() {
    return this._isShown ? this.hide() : this.show();
  }
  /** Allows to manually open modal */
  show() {
    this.dismissReason = void 0;
    this.onShow.emit(this);
    if (this._isShown) {
      return;
    }
    clearTimeout(this.timerHideModal);
    clearTimeout(this.timerRmBackDrop);
    this._isShown = true;
    this.checkScrollbar();
    this.setScrollbar();
    if (ngx_bootstrap_utils__WEBPACK_IMPORTED_MODULE_1__.document && ngx_bootstrap_utils__WEBPACK_IMPORTED_MODULE_1__.document.body) {
      if (ngx_bootstrap_utils__WEBPACK_IMPORTED_MODULE_1__.document.body.classList.contains(CLASS_NAME.OPEN)) {
        this.isNested = true;
      } else {
        this._renderer.addClass(ngx_bootstrap_utils__WEBPACK_IMPORTED_MODULE_1__.document.body, CLASS_NAME.OPEN);
        this._renderer.setStyle(ngx_bootstrap_utils__WEBPACK_IMPORTED_MODULE_1__.document.body, 'overflow-y', 'hidden');
      }
    }
    this.showBackdrop(() => {
      this.showElement();
    });
  }
  /** Check if we can close the modal */
  hide(event) {
    if (!this._isShown) {
      return;
    }
    if (event) {
      event.preventDefault();
    }
    if (this.config.closeInterceptor) {
      this.config.closeInterceptor().then(() => this._hide(), () => undefined);
      return;
    }
    this._hide();
  }
  /** Private methods @internal */
  /**
   *  Manually close modal
   *  @internal
   */
  _hide() {
    this.onHide.emit(this);
    ngx_bootstrap_utils__WEBPACK_IMPORTED_MODULE_1__.window.clearTimeout(this.timerHideModal);
    ngx_bootstrap_utils__WEBPACK_IMPORTED_MODULE_1__.window.clearTimeout(this.timerRmBackDrop);
    this._isShown = false;
    this._renderer.removeClass(this._element.nativeElement, CLASS_NAME.SHOW);
    if (this._config.animated) {
      this.timerHideModal = ngx_bootstrap_utils__WEBPACK_IMPORTED_MODULE_1__.window.setTimeout(() => this.hideModal(), TRANSITION_DURATION);
    } else {
      this.hideModal();
    }
    if (this._focusEl) {
      this._focusEl.focus();
    }
  }
  getConfig(config) {
    return Object.assign({}, this._config, config);
  }
  /**
   *  Show dialog
   *  @internal
   */
  showElement() {
    // todo: replace this with component loader usage
    if (!this._element.nativeElement.parentNode || this._element.nativeElement.parentNode.nodeType !== Node.ELEMENT_NODE) {
      // don't move modals dom position
      if (ngx_bootstrap_utils__WEBPACK_IMPORTED_MODULE_1__.document && ngx_bootstrap_utils__WEBPACK_IMPORTED_MODULE_1__.document.body) {
        ngx_bootstrap_utils__WEBPACK_IMPORTED_MODULE_1__.document.body.appendChild(this._element.nativeElement);
      }
    }
    this._renderer.setAttribute(this._element.nativeElement, 'aria-hidden', 'false');
    this._renderer.setAttribute(this._element.nativeElement, 'aria-modal', 'true');
    this._renderer.setStyle(this._element.nativeElement, 'display', 'block');
    this._renderer.setProperty(this._element.nativeElement, 'scrollTop', 0);
    if (this._config.animated) {
      ngx_bootstrap_utils__WEBPACK_IMPORTED_MODULE_1__.Utils.reflow(this._element.nativeElement);
    }
    this._renderer.addClass(this._element.nativeElement, CLASS_NAME.SHOW);
    const transitionComplete = () => {
      if (this._config.focus) {
        this._element.nativeElement.focus();
      }
      this.onShown.emit(this);
    };
    if (this._config.animated) {
      setTimeout(transitionComplete, TRANSITION_DURATION);
    } else {
      transitionComplete();
    }
  }
  /** @internal */
  hideModal() {
    this._renderer.setAttribute(this._element.nativeElement, 'aria-hidden', 'true');
    this._renderer.setStyle(this._element.nativeElement, 'display', 'none');
    this.showBackdrop(() => {
      if (!this.isNested) {
        if (ngx_bootstrap_utils__WEBPACK_IMPORTED_MODULE_1__.document && ngx_bootstrap_utils__WEBPACK_IMPORTED_MODULE_1__.document.body) {
          this._renderer.removeClass(ngx_bootstrap_utils__WEBPACK_IMPORTED_MODULE_1__.document.body, CLASS_NAME.OPEN);
          this._renderer.setStyle(ngx_bootstrap_utils__WEBPACK_IMPORTED_MODULE_1__.document.body, 'overflow-y', '');
        }
        this.resetScrollbar();
      }
      this.resetAdjustments();
      this.focusOtherModal();
      this.onHidden.emit(this);
    });
  }
  // todo: original show was calling a callback when done, but we can use
  // promise
  /** @internal */
  showBackdrop(callback) {
    if (this._isShown && this.config.backdrop && (!this.backdrop || !this.backdrop.instance.isShown)) {
      this.removeBackdrop();
      this._backdrop.attach(ModalBackdropComponent).to('body').show({
        isAnimated: this._config.animated
      });
      this.backdrop = this._backdrop._componentRef;
      if (!callback) {
        return;
      }
      if (!this._config.animated) {
        callback();
        return;
      }
      setTimeout(callback, BACKDROP_TRANSITION_DURATION);
    } else if (!this._isShown && this.backdrop) {
      this.backdrop.instance.isShown = false;
      const callbackRemove = () => {
        this.removeBackdrop();
        if (callback) {
          callback();
        }
      };
      if (this.backdrop.instance.isAnimated) {
        this.timerRmBackDrop = ngx_bootstrap_utils__WEBPACK_IMPORTED_MODULE_1__.window.setTimeout(callbackRemove, BACKDROP_TRANSITION_DURATION);
      } else {
        callbackRemove();
      }
    } else if (callback) {
      callback();
    }
  }
  /** @internal */
  removeBackdrop() {
    this._backdrop.hide();
  }
  /** Events tricks */
  // no need for it
  // protected setEscapeEvent():void {
  //   if (this._isShown && this._config.keyboard) {
  //     $(this._element).on(Event.KEYDOWN_DISMISS, (event) => {
  //       if (event.which === 27) {
  //         this.hide()
  //       }
  //     })
  //
  //   } else if (!this._isShown) {
  //     $(this._element).off(Event.KEYDOWN_DISMISS)
  //   }
  // }
  // protected setResizeEvent():void {
  // console.log(this.renderer.listenGlobal('', Event.RESIZE));
  // if (this._isShown) {
  //   $(window).on(Event.RESIZE, $.proxy(this._handleUpdate, this))
  // } else {
  //   $(window).off(Event.RESIZE)
  // }
  // }
  focusOtherModal() {
    if (this._element.nativeElement.parentElement == null) {
      return;
    }
    const otherOpenedModals = this._element.nativeElement.parentElement.querySelectorAll('.in[bsModal]');
    if (!otherOpenedModals.length) {
      return;
    }
    otherOpenedModals[otherOpenedModals.length - 1].focus();
  }
  /** @internal */
  resetAdjustments() {
    this._renderer.setStyle(this._element.nativeElement, 'paddingLeft', '');
    this._renderer.setStyle(this._element.nativeElement, 'paddingRight', '');
  }
  /** Scroll bar tricks */
  /** @internal */
  checkScrollbar() {
    this.isBodyOverflowing = ngx_bootstrap_utils__WEBPACK_IMPORTED_MODULE_1__.document.body.clientWidth < ngx_bootstrap_utils__WEBPACK_IMPORTED_MODULE_1__.window.innerWidth;
    this.scrollbarWidth = this.getScrollbarWidth();
  }
  setScrollbar() {
    if (!ngx_bootstrap_utils__WEBPACK_IMPORTED_MODULE_1__.document) {
      return;
    }
    this.originalBodyPadding = parseInt(ngx_bootstrap_utils__WEBPACK_IMPORTED_MODULE_1__.window.getComputedStyle(ngx_bootstrap_utils__WEBPACK_IMPORTED_MODULE_1__.document.body).getPropertyValue('padding-right') || 0, 10);
    if (this.isBodyOverflowing) {
      ngx_bootstrap_utils__WEBPACK_IMPORTED_MODULE_1__.document.body.style.paddingRight = `${this.originalBodyPadding + this.scrollbarWidth}px`;
    }
  }
  resetScrollbar() {
    ngx_bootstrap_utils__WEBPACK_IMPORTED_MODULE_1__.document.body.style.paddingRight = `${this.originalBodyPadding}px`;
  }
  // thx d.walsh
  getScrollbarWidth() {
    const scrollDiv = this._renderer.createElement('div');
    this._renderer.addClass(scrollDiv, CLASS_NAME.SCROLLBAR_MEASURER);
    this._renderer.appendChild(ngx_bootstrap_utils__WEBPACK_IMPORTED_MODULE_1__.document.body, scrollDiv);
    const scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;
    this._renderer.removeChild(ngx_bootstrap_utils__WEBPACK_IMPORTED_MODULE_1__.document.body, scrollDiv);
    return scrollbarWidth;
  }
}
ModalDirective.ɵfac = function ModalDirective_Factory(t) {
  return new (t || ModalDirective)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.ViewContainerRef), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.Renderer2), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](ngx_bootstrap_component_loader__WEBPACK_IMPORTED_MODULE_3__.ComponentLoaderFactory), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](MODAL_CONFIG_DEFAULT_OVERRIDE, 8));
};
ModalDirective.ɵdir = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineDirective"]({
  type: ModalDirective,
  selectors: [["", "bsModal", ""]],
  hostBindings: function ModalDirective_HostBindings(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("mousedown", function ModalDirective_mousedown_HostBindingHandler($event) {
        return ctx.onClickStarted($event);
      })("mouseup", function ModalDirective_mouseup_HostBindingHandler($event) {
        return ctx.onClickStop($event);
      })("keydown.esc", function ModalDirective_keydown_esc_HostBindingHandler($event) {
        return ctx.onEsc($event);
      });
    }
  },
  inputs: {
    config: "config",
    closeInterceptor: "closeInterceptor"
  },
  outputs: {
    onShow: "onShow",
    onShown: "onShown",
    onHide: "onHide",
    onHidden: "onHidden"
  },
  exportAs: ["bs-modal"]
});
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](ModalDirective, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Directive,
    args: [{
      selector: '[bsModal]',
      exportAs: 'bs-modal'
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ViewContainerRef
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Renderer2
    }, {
      type: ngx_bootstrap_component_loader__WEBPACK_IMPORTED_MODULE_3__.ComponentLoaderFactory
    }, {
      type: ModalOptions,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Optional
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Inject,
        args: [MODAL_CONFIG_DEFAULT_OVERRIDE]
      }]
    }];
  }, {
    config: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    closeInterceptor: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    onShow: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
    }],
    onShown: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
    }],
    onHide: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
    }],
    onHidden: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
    }],
    onClickStarted: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.HostListener,
      args: ['mousedown', ['$event']]
    }],
    onClickStop: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.HostListener,
      args: ['mouseup', ['$event']]
    }],
    onEsc: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.HostListener,
      args: ['keydown.esc', ['$event']]
    }]
  });
})();
let currentId = 1;
class BsModalService {
  constructor(rendererFactory, clf, modalDefaultOption) {
    this.clf = clf;
    this.modalDefaultOption = modalDefaultOption;
    this.onShow = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
    this.onShown = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
    this.onHide = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
    this.onHidden = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
    this.isBodyOverflowing = false;
    this.originalBodyPadding = 0;
    this.scrollbarWidth = 0;
    this.modalsCount = 0;
    this.loaders = [];
    this._focusEl = null;
    this._backdropLoader = this.clf.createLoader();
    this._renderer = rendererFactory.createRenderer(null, null);
    this.config = modalDefaultOption ? Object.assign({}, modalConfigDefaults, modalDefaultOption) : modalConfigDefaults;
  }
  /** Shows a modal */
  show(
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  content, config) {
    this._focusEl = ngx_bootstrap_utils__WEBPACK_IMPORTED_MODULE_1__.document.activeElement;
    this.modalsCount++;
    this._createLoaders();
    // must be different per every show() call
    const id = config?.id || currentId++;
    this.config = this.modalDefaultOption ? Object.assign({}, modalConfigDefaults, this.modalDefaultOption, config) : Object.assign({}, modalConfigDefaults, config);
    this.config.id = id;
    this._showBackdrop();
    this.lastDismissReason = void 0;
    return this._showModal(content);
  }
  hide(id) {
    if (this.modalsCount === 1 || id == null) {
      this._hideBackdrop();
      this.resetScrollbar();
    }
    this.modalsCount = this.modalsCount >= 1 && id != null ? this.modalsCount - 1 : 0;
    setTimeout(() => {
      this._hideModal(id);
      this.removeLoaders(id);
    }, this.config.animated ? TRANSITION_DURATIONS.BACKDROP : 0);
    if (this._focusEl) {
      this._focusEl.focus();
    }
  }
  _showBackdrop() {
    const isBackdropEnabled = this.config.backdrop === true || this.config.backdrop === 'static';
    const isBackdropInDOM = !this.backdropRef || !this.backdropRef.instance.isShown;
    if (this.modalsCount === 1) {
      this.removeBackdrop();
      if (isBackdropEnabled && isBackdropInDOM) {
        this._backdropLoader.attach(ModalBackdropComponent).to('body').show({
          isAnimated: this.config.animated
        });
        this.backdropRef = this._backdropLoader._componentRef;
      }
    }
  }
  _hideBackdrop() {
    if (!this.backdropRef) {
      return;
    }
    this.backdropRef.instance.isShown = false;
    const duration = this.config.animated ? TRANSITION_DURATIONS.BACKDROP : 0;
    setTimeout(() => this.removeBackdrop(), duration);
  }
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  _showModal(content) {
    const modalLoader = this.loaders[this.loaders.length - 1];
    if (this.config && this.config.providers) {
      for (const provider of this.config.providers) {
        modalLoader.provide(provider);
      }
    }
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    const bsModalRef = new BsModalRef();
    const modalContainerRef = modalLoader.provide({
      provide: ModalOptions,
      useValue: this.config
    }).provide({
      provide: BsModalRef,
      useValue: bsModalRef
    }).attach(ModalContainerComponent).to('body');
    bsModalRef.hide = () => this.hide(bsModalRef.id);
    bsModalRef.setClass = newClass => {
      if (modalContainerRef.instance) {
        modalContainerRef.instance.config.class = newClass;
      }
    };
    bsModalRef.onHidden = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
    bsModalRef.onHide = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
    this.copyEvent(modalLoader.onBeforeHide, bsModalRef.onHide);
    this.copyEvent(modalLoader.onHidden, bsModalRef.onHidden);
    // call 'show' method after assign setClass in bsModalRef.
    // it makes modal component's bsModalRef available to call setClass method
    modalContainerRef.show({
      content,
      isAnimated: this.config.animated,
      initialState: this.config.initialState,
      bsModalService: this,
      id: this.config.id
    });
    if (modalContainerRef.instance) {
      modalContainerRef.instance.level = this.getModalsCount();
      bsModalRef.content = modalLoader.getInnerComponent();
      bsModalRef.id = modalContainerRef.instance.config?.id;
    }
    return bsModalRef;
  }
  _hideModal(id) {
    if (id != null) {
      const indexToRemove = this.loaders.findIndex(loader => loader.instance?.config.id === id);
      const modalLoader = this.loaders[indexToRemove];
      if (modalLoader) {
        modalLoader.hide(id);
      }
    } else {
      this.loaders.forEach(loader => {
        if (loader.instance) {
          loader.hide(loader.instance.config.id);
        }
      });
    }
  }
  getModalsCount() {
    return this.modalsCount;
  }
  setDismissReason(reason) {
    this.lastDismissReason = reason;
  }
  removeBackdrop() {
    this._renderer.removeClass(ngx_bootstrap_utils__WEBPACK_IMPORTED_MODULE_1__.document.body, CLASS_NAME.OPEN);
    this._renderer.setStyle(ngx_bootstrap_utils__WEBPACK_IMPORTED_MODULE_1__.document.body, 'overflow-y', '');
    this._backdropLoader.hide();
    this.backdropRef = void 0;
  }
  /** Checks if the body is overflowing and sets scrollbar width */
  /** @internal */
  checkScrollbar() {
    this.isBodyOverflowing = ngx_bootstrap_utils__WEBPACK_IMPORTED_MODULE_1__.document.body.clientWidth < window.innerWidth;
    this.scrollbarWidth = this.getScrollbarWidth();
  }
  setScrollbar() {
    if (!ngx_bootstrap_utils__WEBPACK_IMPORTED_MODULE_1__.document) {
      return;
    }
    this.originalBodyPadding = parseInt(window.getComputedStyle(ngx_bootstrap_utils__WEBPACK_IMPORTED_MODULE_1__.document.body).getPropertyValue('padding-right') || '0', 10);
    if (this.isBodyOverflowing) {
      ngx_bootstrap_utils__WEBPACK_IMPORTED_MODULE_1__.document.body.style.paddingRight = `${this.originalBodyPadding + this.scrollbarWidth}px`;
    }
  }
  resetScrollbar() {
    ngx_bootstrap_utils__WEBPACK_IMPORTED_MODULE_1__.document.body.style.paddingRight = `${this.originalBodyPadding}px`;
  }
  // thx d.walsh
  getScrollbarWidth() {
    const scrollDiv = this._renderer.createElement('div');
    this._renderer.addClass(scrollDiv, CLASS_NAME.SCROLLBAR_MEASURER);
    this._renderer.appendChild(ngx_bootstrap_utils__WEBPACK_IMPORTED_MODULE_1__.document.body, scrollDiv);
    const scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;
    this._renderer.removeChild(ngx_bootstrap_utils__WEBPACK_IMPORTED_MODULE_1__.document.body, scrollDiv);
    return scrollbarWidth;
  }
  _createLoaders() {
    const loader = this.clf.createLoader();
    this.copyEvent(loader.onBeforeShow, this.onShow);
    this.copyEvent(loader.onShown, this.onShown);
    this.copyEvent(loader.onBeforeHide, this.onHide);
    this.copyEvent(loader.onHidden, this.onHidden);
    this.loaders.push(loader);
  }
  removeLoaders(id) {
    if (id != null) {
      const indexToRemove = this.loaders.findIndex(loader => loader.instance?.config.id === id);
      if (indexToRemove >= 0) {
        this.loaders.splice(indexToRemove, 1);
        this.loaders.forEach((loader, i) => {
          if (loader.instance) {
            loader.instance.level = i + 1;
          }
        });
      }
    } else {
      this.loaders.splice(0, this.loaders.length);
    }
  }
  copyEvent(from, to) {
    from.subscribe(data => {
      to.emit(this.lastDismissReason || data);
    });
  }
}
BsModalService.ɵfac = function BsModalService_Factory(t) {
  return new (t || BsModalService)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.RendererFactory2), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](ngx_bootstrap_component_loader__WEBPACK_IMPORTED_MODULE_3__.ComponentLoaderFactory), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](MODAL_CONFIG_DEFAULT_OVERRIDE, 8));
};
BsModalService.ɵprov = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({
  token: BsModalService,
  factory: BsModalService.ɵfac,
  providedIn: 'platform'
});
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](BsModalService, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Injectable,
    args: [{
      providedIn: 'platform'
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.RendererFactory2
    }, {
      type: ngx_bootstrap_component_loader__WEBPACK_IMPORTED_MODULE_3__.ComponentLoaderFactory
    }, {
      type: ModalOptions,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Optional
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Inject,
        args: [MODAL_CONFIG_DEFAULT_OVERRIDE]
      }]
    }];
  }, null);
})();
const focusTrapModule = ngx_bootstrap_focus_trap__WEBPACK_IMPORTED_MODULE_2__.FocusTrapModule.forRoot();
class ModalModule {
  static forRoot() {
    return {
      ngModule: ModalModule,
      providers: [BsModalService, ngx_bootstrap_component_loader__WEBPACK_IMPORTED_MODULE_3__.ComponentLoaderFactory, ngx_bootstrap_positioning__WEBPACK_IMPORTED_MODULE_4__.PositioningService]
    };
  }
  static forChild() {
    return {
      ngModule: ModalModule,
      providers: [BsModalService, ngx_bootstrap_component_loader__WEBPACK_IMPORTED_MODULE_3__.ComponentLoaderFactory, ngx_bootstrap_positioning__WEBPACK_IMPORTED_MODULE_4__.PositioningService]
    };
  }
}
ModalModule.ɵfac = function ModalModule_Factory(t) {
  return new (t || ModalModule)();
};
ModalModule.ɵmod = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineNgModule"]({
  type: ModalModule
});
ModalModule.ɵinj = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjector"]({
  imports: [ngx_bootstrap_focus_trap__WEBPACK_IMPORTED_MODULE_2__.FocusTrapModule]
});
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](ModalModule, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.NgModule,
    args: [{
      imports: [ngx_bootstrap_focus_trap__WEBPACK_IMPORTED_MODULE_2__.FocusTrapModule],
      declarations: [ModalBackdropComponent, ModalDirective, ModalContainerComponent],
      exports: [ModalBackdropComponent, ModalDirective]
    }]
  }], null, null);
})();

/**
 * Generated bundle index. Do not edit.
 */



/***/ }),

/***/ 1882:
/*!***************************************************************!*\
  !*** ./node_modules/ngx-filesaver/fesm2020/ngx-filesaver.mjs ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   FileSaverDirective: () => (/* binding */ FileSaverDirective),
/* harmony export */   FileSaverModule: () => (/* binding */ FileSaverModule),
/* harmony export */   FileSaverService: () => (/* binding */ FileSaverService)
/* harmony export */ });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ 1699);
/* harmony import */ var file_saver__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! file-saver */ 6778);
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ 4860);





class FileSaverService {
  get isFileSaverSupported() {
    try {
      return !!new Blob();
    } catch (e) {
      return false;
    }
  }
  genType(fileName) {
    if (!fileName || fileName.lastIndexOf('.') === -1) {
      return 'text/plain';
    }
    const type = fileName.substr(fileName.lastIndexOf('.') + 1);
    switch (type) {
      case 'txt':
        return 'text/plain';
      case 'xml':
      case 'html':
        return `text/${type}`;
      case 'json':
        return 'octet/stream';
      default:
        return `application/${type}`;
    }
  }
  save(blob, fileName, filtType, option) {
    if (!blob) {
      throw new Error('Data argument should be a blob instance');
    }
    const file = new Blob([blob], {
      type: filtType || blob.type || this.genType(fileName)
    });
    (0,file_saver__WEBPACK_IMPORTED_MODULE_0__.saveAs)(file, decodeURI(fileName || 'download'), option);
  }
  saveText(txt, fileName, option) {
    const blob = new Blob([txt]);
    this.save(blob, fileName, undefined, option);
  }
}
FileSaverService.ɵfac = function FileSaverService_Factory(t) {
  return new (t || FileSaverService)();
};
FileSaverService.ɵprov = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjectable"]({
  token: FileSaverService,
  factory: FileSaverService.ɵfac,
  providedIn: 'root'
});
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](FileSaverService, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Injectable,
    args: [{
      providedIn: 'root'
    }]
  }], null, null);
})();
class FileSaverDirective {
  constructor(el, fss, httpClient) {
    this.el = el;
    this.fss = fss;
    this.httpClient = httpClient;
    this.method = 'GET';
    this.success = new _angular_core__WEBPACK_IMPORTED_MODULE_1__.EventEmitter();
    this.error = new _angular_core__WEBPACK_IMPORTED_MODULE_1__.EventEmitter();
    if (!fss.isFileSaverSupported) {
      el.nativeElement.classList.add(`filesaver__not-support`);
    }
  }
  getName(res) {
    return decodeURI(this.fileName || res.headers.get('filename') || res.headers.get('x-filename') || '');
  }
  _click() {
    if (!this.fss.isFileSaverSupported) {
      return;
    }
    let req = this.http;
    if (!req) {
      let params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__.HttpParams();
      const query = this.query || {};
      // tslint:disable-next-line:forin
      for (const item in query) {
        params = params.set(item, query[item]);
      }
      req = this.httpClient.request(this.method, this.url, {
        observe: 'response',
        responseType: 'blob',
        headers: this.header,
        params
      });
    }
    this.setDisabled(true);
    req.subscribe(res => {
      if (res.status !== 200 || res.body.size <= 0) {
        this.error.emit(res);
        return;
      }
      this.fss.save(res.body, this.getName(res), undefined, this.fsOptions);
      this.success.emit(res);
    }, err => this.error.emit(err), () => this.setDisabled(false));
  }
  setDisabled(status) {
    const el = this.el.nativeElement;
    el.disabled = status;
    el.classList[status ? 'add' : 'remove'](`filesaver__disabled`);
  }
}
FileSaverDirective.ɵfac = function FileSaverDirective_Factory(t) {
  return new (t || FileSaverDirective)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__.ElementRef), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](FileSaverService), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_2__.HttpClient));
};
FileSaverDirective.ɵdir = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineDirective"]({
  type: FileSaverDirective,
  selectors: [["", "fileSaver", ""]],
  hostBindings: function FileSaverDirective_HostBindings(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("click", function FileSaverDirective_click_HostBindingHandler() {
        return ctx._click();
      });
    }
  },
  inputs: {
    method: "method",
    http: "http",
    query: "query",
    header: "header",
    url: "url",
    fileName: "fileName",
    fsOptions: "fsOptions"
  },
  outputs: {
    success: "success",
    error: "error"
  },
  exportAs: ["fileSaver"],
  standalone: true
});
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](FileSaverDirective, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Directive,
    args: [{
      selector: '[fileSaver]',
      exportAs: 'fileSaver',
      standalone: true
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ElementRef
    }, {
      type: FileSaverService
    }, {
      type: _angular_common_http__WEBPACK_IMPORTED_MODULE_2__.HttpClient
    }];
  }, {
    method: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input
    }],
    http: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input
    }],
    query: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input
    }],
    header: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input
    }],
    url: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input
    }],
    fileName: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input
    }],
    fsOptions: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input
    }],
    success: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Output
    }],
    error: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Output
    }],
    _click: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.HostListener,
      args: ['click']
    }]
  });
})();
class FileSaverModule {}
FileSaverModule.ɵfac = function FileSaverModule_Factory(t) {
  return new (t || FileSaverModule)();
};
FileSaverModule.ɵmod = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineNgModule"]({
  type: FileSaverModule
});
FileSaverModule.ɵinj = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjector"]({});
(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](FileSaverModule, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.NgModule,
    args: [{
      imports: [FileSaverDirective],
      exports: [FileSaverDirective]
    }]
  }], null, null);
})();

/**
 * Generated bundle index. Do not edit.
 */



/***/ })

}]);
//# sourceMappingURL=src_app_pages_pages_module_ts.js.map